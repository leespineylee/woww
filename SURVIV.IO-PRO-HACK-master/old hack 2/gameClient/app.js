webpackJsonp([0], {
    "064c0a93": function(e, t, a) {
        "use strict";
        var i = {
            "@metadata": {
                "last-updated": "2018-04-07",
                locale: "ko"
            },
            "word-order": "sov",
            "index-create-account": "계정 생성",
            "index-set-account-name": "Set your account name",
            "index-enter-name": "닉네임 입력",
            "index-finish": "종료",
            "index-delete-account": "계정 삭제",
            "index-delete-account-desc": "계정 삭제를 위해서는 DELETE를 입력해 주세요 :",
            "index-confirm": "확인",
            "index-customize-avatar": "아바타 커스터마이징",
            "index-done": "완료",
            "index-account": "계정",
            "index-log-in-with": "~~로 로그인",
            "index-facebook": "페이스북",
            "index-google": "구글",
            "index-twitch": "트위치",
            "index-discord": "디스코드",
            "index-my-stats": "나의 전적",
            "index-link-account": "계정 연동",
            "index-log-out": "로그아웃",
            "index-change-avatar": "프로필 변경",
            "index-change-account-name": "닉네임 변경",
            "index-back": "뒤로",
            "index-link-account-to": "으로 계정 연동",
            "index-log-in-desc": "전적을 확인하고 싶다면 로그인하세요!",
            "index-logging-in": "Logging in",
            "index-leaderboards": "리더보드",
            "index-slogan": "2D 배틀 로얄",
            "index-region": "월드",
            "index-north-america": "북아메리카",
            "index-europe": "유럽",
            "index-asia": "아시아",
            "index-players": "플레이어",
            "index-play-solo": "솔로하기",
            "index-play-duo": "듀오하기",
            "index-play-squad": "스쿼드하기",
            "index-create-team": "팀 만들기",
            "index-how-to-play": "초보자 가이드",
            "index-leave-team": "팀에서 나가기",
            "index-joining-team": "팀 조인중",
            "index-creating-team": "팀 만드는중",
            "index-invite-link": "친구 초대",
            "index-solo": "솔로",
            "index-duo": "듀오",
            "index-squad": "스쿼드",
            "index-auto-fill": "Auto Fill",
            "index-no-fill": "No Fill",
            "index-waiting-for-leader": "파티장 준비중",
            "index-play": "시작",
            "index-featured-youtuber": "유튜버",
            "index-settings": "세팅",
            "index-high-resolution": "고화질 (그래픽을 높입니다)",
            "index-screen-shake": "화면 효과",
            "index-master-volume": "전체 사운드",
            "index-sfx-volume": "효과음 사운드",
            "index-music-volume": "음악 사운드",
            "index-mobile-announce": "surviv.io 모바일 버전 출시!",
            "index-mobile-tooltip": "모바일에서 <span>surviv.io</span>에 접속해서 플레이하세요!",
            "index-team-is-full": "팀이 꽉 찼습니다!",
            "index-failed-joining-team": "팀에 들어가지 못했습니다.",
            "index-failed-creating-team": "팀을 만들수 없습니다.",
            "index-failed-finding-game": "게임을 찾지 못하였습니다.",
            "index-failed-joining-game": "게임에 들어가지 못했습니다.",
            "index-lost-connection": "네트워크 연결이 끊어짐.",
            "index-host-closed": "네트워크 연결이 끊어짐.",
            "index-view-more": "더보기",
            "index-back-to-main": "메인 메뉴로",
            "index-most-kills": "최다 킬수",
            "index-total-kills": "전체 킬수",
            "index-total-wins": "승리 횟수",
            "index-top-5-percent": "Top 5",
            "index-kill-death-ratio": "K/D",
            "index-for": "For",
            "index-today": "오늘 점수",
            "index-this-week": "7 일 점수",
            "index-all-time": "All Time 점수",
            "index-top-100": "TOP 100",
            "index-rank": "랭킹",
            "index-player": "플레이어",
            "index-total-games": "전체게임 횟수",
            "index-controls": "게임 조작법",
            "index-movement": "이동",
            "index-movement-ctrl": "W, A, S, D",
            "index-aim": "조준",
            "index-aim-ctrl": "마우스",
            "index-punch": "펀치",
            "index-shoot": "발사",
            "index-shoot-ctrl": "좌클릭",
            "index-change-weapons": "무기바꾸기",
            "index-change-weapons-ctrl": "1-4 or 스크롤",
            "index-stow-weapons": "무기 집어넣기",
            "index-stow-weapons-ctrl": "3 or E",
            "index-swap-weapons": "그전 무기로 바꾸기",
            "index-swap-weapons-ctrl": "Q",
            "index-reload": "리로드",
            "index-reload-ctrl": "R",
            "index-scope-zoom": "줌 인 or 아웃",
            "index-scope-zoom-ctrl": "좌클릭으로 줌",
            "index-pickup": "줍기",
            "index-loot": "줍기",
            "index-revive": "부활",
            "index-pickup-ctrl": "F",
            "index-use-medical": "힐링",
            "index-use-medical-ctrl": "좌클릭, 7-0",
            "index-drop-item": "아이템 버리기",
            "index-drop-item-ctrl": "우클릭",
            "index-cancel-action": "행동취소",
            "index-cancel-action-ctrl": "X",
            "index-view-map": "지도보기",
            "index-view-map-ctrl": "M or G",
            "index-toggle-minimap": "미니 맵 전환",
            "index-toggle-minimap-ctrl": "V",
            "index-use-ping": "듀오/스쿼드 멤버와 소통하기",
            "index-use-ping-ctrl": "C를 누른 상태에서 우클릭을 하고 마우스를 드래그해 이모티콘을 선택하세요!",
            "index-use-emote": "이모티콘 사용하기",
            "index-use-emote-ctrl": "화면에 우클릭을 누른 채 마우스를 드래그해 이모티콘을 선택하세요!",
            "index-tips-1-desc": "surviv.io의 목표는 마지막 1인, 또는 듀오, 또는 스쿼드가 되는 것입니다! 한 게임당 목숨은 한 개 - 죽으면 다시 부활할 수 없어요!",
            "index-tips-2": "2D PUBG",
            "index-tips-2-desc": "PUBG, 포트나이트, 또는 H1Z1와 같은 배틀로얄 장르의 게임을 좋아하신다면, 이미 당신은 surviv.io의 세계에 들어와 있습니다! 이 게임은 2D로 되어 있는 배틀그라운드라고 생각하시면 됩니다(조금 더 안정적인 서버와 먹기 쉬워진 치킨과 함께요.)",
            "index-tips-3": "파밍과 전투",
            "index-tips-3-desc": "당신이 시작할 때에는 작은 공간 외에는 아무것도 주어지지 않습니다. 맵 곳곳을 돌아다니며 무기, 탄약, 조준경, 그리고 의료용 아이템을 찾아다니세요. 다른 플레이어를 사살하면 그 플레이어의 아이템을 차지할 수 있습니다!",
            "index-tips-4": "자기장 = 제 2의 적!",
            "index-tips-4-desc": "다른 플레이어만이 당신에게 데미지를 주는 것은 아닙니다. 시간이 지날 때마다 빨간색 자기장이 점점 좁혀옵니다. 자기장 안에 있다면 경기 후반으로 갈수록 높은 데미지를 받게 되죠. 지도를 보며 안전에 신경쓰세요!",
            "game-alive": "생존",
            "game-reloading": "장전중",
            "game-using": "사용중",
            "game-reviving": "부활중",
            "game-revive-teammate": "팀원부활",
            "game-equip": "착용",
            "game-cancel": "취소",
            "game-You": "You",
            "game-you": "you",
            "game-themselves": "themselves",
            "game-yourself": "yourself",
            "game-you-died": "died",
            "game-player-died": "died",
            "game-with": "with",
            "game-knocked-out": "knocked out",
            "game-killed": "killed",
            "game-finally-killed": "finally killed",
            "game-finally-bled-out": "finally bled out",
            "game-died-outside": "died outside the safe zone",
            "game-the-red-zone": "The red zone",
            "game-waiting-for-players": "플레이어 기다리느중",
            "game-spectating": "Spectating",
            "game-red-zone-advances": "빨간 구역 움직입니다!",
            "game-red-zone-advancing": "빨간 구역이 움직입니다.  안전지대로 대피하십시요.",
            "game-seconds": "s",
            "game-minutes": "m",
            "game-minute": "m",
            "game-m": "m",
            "game-s": "s",
            "game-not-enough-space": "공간이 부족합니다!",
            "game-item-already-owned": "이 물건은 이미 소유 하고 있습니다!",
            "game-item-already-equipped": "이 물건은 이미 착용 하고 있습니다!",
            "game-better-item-equipped": "더 좋은 아이템을 착용 하고 있습니다!",
            "game-gun-cannot-fire": "이 구역에서는 총을 쏠 수 없습니다!",
            "game-play-new-game": "새로 시작하기",
            "game-spectate": "관중모드",
            "game-full-screen": "풀 스크린",
            "game-sound": "사운드",
            "game-quit-game": "나가기",
            "game-return-to-game": "돌아가기",
            "game-hide-match-stats": "게임통계 감추기",
            "game-view-match-stats": "게임통계 보이기",
            "game-previous-teammate": "이전 플레이어",
            "game-next-teammate": "다음 플레이어",
            "game-spectate-previous": "",
            "game-spectate-next": "",
            "game-leave-game": "나가기",
            "game-your-results": "랭킹",
            "game-chicken": "이겼닭! 오늘 저녁은 치킨이닭!",
            "game-won-the-game": "승리.",
            "game-team-eliminated": "그럴 수 있어. 이런 날도 있는 거지 뭐.",
            "game-rank": "랭킹",
            "game-team-rank": "팀 랭킹",
            "game-team-kills": "팀 킬",
            "game-kill": "킬",
            "game-kills": "킬",
            "game-damage-dealt": "가한 피해량",
            "game-damage-taken": "받은 피해량",
            "game-survived": "생존시간",
            "game-backpack00": "주머니",
            "game-backpack01": "작은 가방",
            "game-backpack02": "보통 가방",
            "game-backpack03": "군인 가방",
            "game-bandage": "붕대",
            "game-bandage-tooltip": "레프트 클릭 하시면 15 HP 증가합니다.",
            "game-healing-tooltip": "75 HP 이상 힐할수 없읍니다.",
            "game-healthkit": "구급 상자",
            "game-healthkit-tooltip": "레프트 클릭 하시면 100 HP 증가합니다.",
            "game-soda": "소다",
            "game-soda-tooltip": "레프트 클릭 하시면 아드레날린 25 증가합니다.",
            "game-adrenaline-tooltip": "아드레날린은 HP 지속적으로 회복시킴니다.",
            "game-painkiller": "알약",
            "game-painkiller-tooltip": "레프트 클릭 하시면 아드레날린 50 증가합니다.",
            "game-9mm": "9mm",
            "game-9mm-tooltip": "M9, G18C, MP5, MAC-10, UMP9, Vector 탄약.",
            "game-12gauge": "12 게이지",
            "game-12gauge-tooltip": "M870, SPAS-12, Saiga-12, MP220 탄약.",
            "game-762mm": "7.62mm",
            "game-762mm-tooltip": "AK-47, SCAR-H, M39, Mosin-Nagant, SV-98, M1, OT-38, DP-28 탄약.",
            "game-556mm": "5.56mm",
            "game-556mm-tooltip": "FAMAS, M416, QBB-97, Mk 12, M249 탄약.",
            "game-50AE": ".50 AE",
            "game-50AE-tooltip": "Desert Eagle 탄약.",
            "game-308sub": ".308 Subsonic",
            "game-308sub-tooltip": "AWM-S 탄약.",
            "game-flare": "신호탄",
            "game-flare-tooltip": "플레어 건을 위한 탄약.",
            "game-chest01": "조끼 레벨 1",
            "game-chest02": "조끼 레벨 2",
            "game-chest03": "조끼 레벨 3",
            "game-helmet01": "헬멧 레벨 1",
            "game-helmet02": "헬멧 레벨 2",
            "game-helmet03": "헬멧 레벨 3",
            "game-1xscope": "1x 스코프",
            "game-2xscope": "2x 스코프",
            "game-4xscope": "4x 스코프",
            "game-8xscope": "8x 스코프",
            "game-15xscope": "15x 스코프",
            "game-level-1": "레벨 1",
            "game-level-2": "레벨 2",
            "game-level-3": "레벨 3",
            "game-outfitBase": "Basic Outfit",
            "game-outfitRoyalFortune": "Royal Fortune",
            "game-outfitKeyLime": "Key Lime",
            "game-outfitCobaltShell": "Cobalt Shell",
            "game-outfitCarbonFiber": "Carbon Fiber",
            "game-outfitDarkGloves": "The Professional",
            "game-outfitGhillie": "Ghillie Suit",
            "game-outfitCamo": "Forest Camo",
            "game-outfitRed": "Target Practice",
            "game-outfitWhite": "Arctic Avenger",
            "game-fists": "주먹",
            "game-karambit_rugged": "Karambit Rugged",
            "game-hud-karambit_rugged": "Karambit",
            "game-karambit_prismatic": "Karambit Prismatic",
            "game-hud-karambit_prismatic": "Karambit",
            "game-bayonet_rugged": "Bayonet Rugged",
            "game-hud-bayonet_rugged": "Bayonet",
            "game-bayonet_woodland": "Bayonet Woodland",
            "game-hud-bayonet_woodland": "Bayonet",
            "game-huntsman_rugged": "Huntsman Rugged",
            "game-hud-huntsman_rugged": "Huntsman",
            "game-huntsman_burnished": "Huntsman Burnished",
            "game-hud-huntsman_burnished": "Huntsman",
            "game-woodaxe": "도끼",
            "game-hook": "갈고리",
            "game-pan": "갓라이팬",
            "game-ak47": "AK-47",
            "game-dp28": "DP-28",
            "game-mosin": "Mosin-Nagant",
            "game-m39": "M39 EMR",
            "game-mp5": "MP5",
            "game-mac10": "MAC-10",
            "game-ump9": "UMP9",
            "game-m870": "M870",
            "game-mp220": "MP220",
            "game-saiga": "Saiga-12",
            "game-m9": "M9",
            "game-glock": "G18C",
            "game-ot38": "OT-38",
            "game-flare_gun": "플레어 건",
            "game-frag": "수류탄",
            "game-hud-frag": "수류탄",
            "game-smoke": "연막탄",
            "game-hud-smoke": "연막탄",
            "game-barrel_01": "a barrel",
            "game-silo_01": "a silo",
            "game-oven_01": "an oven",
            "game-control_panel_01": "Control Panel",
            "game-control_panel_02": "Control Panel",
            "game-control_panel_03": "a computer terminal",
            "game-power_box_01": "a power box",
            "game-airdrop_crate_01": "Air Drop",
            "game-airdrop_crate_02": "Air Drop"
        };
        e.exports = i
    },
    "076760a2": function(e, t, a) {
        "use strict";
        function i(e, t, a) {
            var i = n.Texture.fromImage(t, void 0, void 0, 1)
              , r = i.baseTexture;
            return a = a || function(e, t) {}
            ,
            r.hasLoaded ? setTimeout(function() {
                a(null, r)
            }, 0) : (r.on("loaded", function(t) {
                e.plugins.prepare.upload(t),
                a(null, t)
            }),
            r.on("error", function(e) {
                a(!0, e)
            })),
            r
        }
        function r(e, t) {
            var a = i(e, "assets/" + t.meta.image)
              , r = new n.Spritesheet(a,t);
            r.resolution = a.resolution,
            r.parse(function() {})
        }
        function o(e, t) {
            for (var a = s[t] || s.low, i = 0; i < a.spritesheets.length; i++)
                r(e, a.spritesheets[i]);
            e.plugins.prepare.limiter.maxItemsPerFrame = 1
        }
        var n = (a("0e566746"),
        a("80ac57a6"))
          , s = {
            low: a("5ddf718e"),
            high: a("ea7568c5")
        };
        e.exports = {
            loadAllTextures: o
        }
    },
    "0955a76e": function(e, t, a) {
        "use strict";
        function i() {}
        function r() {
            var e = ["part-smoke-02.img", "part-smoke-03.img"];
            this.active = !1,
            this.zIdx = 0,
            this.sprite = n.Sprite.fromImage(e[Math.floor(Math.random() * e.length)]),
            this.sprite.anchor = new n.Point(.5,.5),
            this.sprite.visible = !1
        }
        function o() {
            this.e = new d.Pool(i),
            this.particles = [],
            this.zIdx = 2147483647
        }
        var n = a("80ac57a6")
          , s = a("6b42806d")
          , l = a("10899aea")
          , m = a("1901e2d9")
          , c = a("c2a798c8")
          , d = (a("ce29f17f"),
        a("af8ba00f"),
        a("753d6e4b"));
        i.prototype = {
            a: function() {},
            o: function() {
                this.particle.fadeOut(),
                this.particle = null
            },
            n: function(e, t, a, i) {
                this.type = e.type,
                this.pos = c.copy(e.pos),
                this.rad = e.rad,
                t && (this.layer = e.layer),
                a && (this.particle = i.smokeBarn.allocParticle(),
                this.particle.a(this.pos, this.rad, this.layer)),
                this.particle.posTarget = c.copy(this.pos),
                this.particle.radTarget = this.rad
            }
        },
        r.prototype = {
            a: function(e, t, a) {
                this.pos = c.copy(e),
                this.posTarget = c.copy(this.pos),
                this.rad = t,
                this.radTarget = this.rad,
                this.rot = m.random(0, 2 * Math.PI),
                this.rotVel = Math.PI * m.random(.25, .5) * (Math.random() < .5 ? -1 : 1),
                this.fade = !1,
                this.fadeTicker = 0,
                this.fadeDuration = m.random(.5, .75),
                this.tint = m.rgb2hex(m.hsv2rgb(0, 0, m.random(.9, .95))),
                this.layer = a
            },
            fadeOut: function() {
                this.fade = !0
            }
        },
        o.prototype = {
            allocParticle: function() {
                for (var e = null, t = 0; t < this.particles.length; t++)
                    if (!this.particles[t].active) {
                        e = this.particles[t];
                        break
                    }
                return e || (e = new r,
                this.particles.push(e)),
                e.active = !0,
                e.zIdx = this.zIdx--,
                e
            },
            l: function(e, t, a, i, r) {
                for (var o = this.e.m(), n = 0; n < o.length; n++)
                    o[n].active;
                for (var c = 0; c < this.particles.length; c++) {
                    var d = this.particles[c];
                    if (d.active) {
                        d.rad = l.lerp(3 * e, d.rad, d.radTarget),
                        d.pos = l.v2lerp(3 * e, d.pos, d.posTarget),
                        d.rotVel *= 1 / (1 + .1 * e),
                        d.rot += d.rotVel * e,
                        d.fadeTicker += d.fade ? e : 0,
                        d.active = d.fadeTicker < d.fadeDuration;
                        var p = .9 * l.clamp(1 - d.fadeTicker / d.fadeDuration, 0, 1)
                          , u = d.layer;
                        !(m.sameLayer(d.layer, a.layer) || 2 & a.layer) || 1 != d.layer && 2 & a.layer && i.insideStructureMask(s.createCircle(d.pos, 1)) || (u |= 2),
                        r.addPIXIObj(d.sprite, u, 500, d.zIdx);
                        var h = t.pointToScreen(d.pos)
                          , g = t.pixels(2 * d.rad / t.ppu);
                        d.sprite.position.set(h.x, h.y),
                        d.sprite.scale.set(g, g),
                        d.sprite.rotation = d.rot,
                        d.sprite.tint = d.tint,
                        d.sprite.alpha = p,
                        d.sprite.visible = d.active
                    }
                }
            }
        },
        e.exports = {
            c: o
        }
    },
    "0c8ffd27": function(e, t, a) {
        "use strict";
        function i() {
            this.sprite = new r.Sprite,
            this.sprite.anchor.set(.5, .5)
        }
        var r = a("80ac57a6")
          , o = (a("34e32c48"),
        a("6b42806d"))
          , n = a("ceee80d9")
          , s = a("10899aea")
          , l = a("1901e2d9")
          , m = a("c2a798c8");
        a("ce29f17f"),
        a("af8ba00f"),
        i.prototype = {
            a: function() {
                this.isNew = !1,
                this.smokeEmitter = null,
                this.img = ""
            },
            o: function() {
                this.sprite.visible = !1,
                this.sprite.parent && this.sprite.parent.removeChild(this.sprite),
                this.isDoor && this.door.casingSprite && (this.door.casingSprite.parent && this.door.casingSprite.parent.removeChild(this.door.casingSprite),
                this.door.casingSprite = null),
                this.smokeEmitter && (this.smokeEmitter.stop(),
                this.smokeEmitter = null)
            },
            n: function(e, t, a, i) {
                t && (this.type = e.type,
                this.layer = e.layer,
                this.healthT = e.healthT,
                this.dead = e.dead);
                var s = n.Defs[e.type];
                if (this.pos = m.copy(e.pos),
                this.rot = n.oriToRad(e.ori),
                this.scale = e.scale,
                this.imgScale = s.img.scale,
                this.collider = o.transform(s.collision, this.pos, this.rot, this.scale),
                a) {
                    if (this.isNew = !0,
                    this.exploded = -1 != i.map.deadObstacleIds.indexOf(this.__id),
                    this.explodeParticle = s.explodeParticle,
                    this.collidable = s.collidable,
                    this.destructible = s.destructible,
                    this.height = s.height,
                    this.isWall = !!s.isWall,
                    this.isWindow = !!s.isWindow,
                    this.isBush = !!s.isBush,
                    this.isDoor = void 0 !== s.door,
                    this.isDoor) {
                        this.door = {
                            playErrorFx: s.door.slideToOpen && s.door.openOneWay,
                            closedPos: m.copy(e.pos),
                            autoOpen: s.door.autoOpen,
                            interactionRad: s.door.interactionRad,
                            interpSpeed: s.door.openSpeed,
                            interpPos: m.copy(e.pos),
                            interpRot: n.oriToRad(e.ori),
                            seq: e.door.seq,
                            seqOld: e.door.seq,
                            open: e.door.open,
                            wasOpen: e.door.open
                        };
                        var l = s.door.casingImg;
                        if (void 0 !== l) {
                            var c = l.pos || m.create(0, 0);
                            c = m.rotate(c, this.rot + .5 * Math.PI);
                            var d = new r.Sprite;
                            d.texture = r.Texture.fromImage(l.sprite),
                            d.anchor.set(.5, .5),
                            d.posOffset = c,
                            d.imgScale = l.scale,
                            d.tint = l.tint,
                            d.zIdx = l.zIdx,
                            d.alpha = l.alpha,
                            d.visible = !0,
                            this.door.casingSprite = d
                        }
                    }
                    this.isButton = void 0 !== s.button,
                    this.isButton && (this.button = {
                        interactionRad: s.button.interactionRad,
                        interactionText: s.button.interactionText || "game-use",
                        seq: e.button.seq,
                        seqOld: e.button.seq
                    })
                }
                if (this.isDoor && t) {
                    this.door.canUse = e.door.canUse,
                    this.door.open = e.door.open,
                    this.door.seq = e.door.seq;
                    var p = m.rotate(m.create(s.door.slideOffset, 0), this.rot + .5 * Math.PI);
                    this.door.closedPos = e.door.open ? m.add(e.pos, p) : m.copy(e.pos)
                }
                if (this.isButton && t && (this.button.onOff = e.button.onOff,
                this.button.canUse = e.button.canUse,
                this.button.seq = e.button.seq),
                void 0 !== s.explosion && !this.smokeEmitter && e.healthT < .5 && !e.dead) {
                    var u = m.normalize(m.create(1, 1));
                    this.smokeEmitter = i.particleBarn.addEmitter("smoke_barrel", this.pos, u, 1, this.layer, Number.MAX_VALUE)
                }
                var h = this.dead ? s.img.residue : s.img.sprite;
                if (this.isButton && this.button.onOff && !this.dead && s.button.useImg && (h = s.button.useImg),
                h != this.img) {
                    var g = m.create(.5, .5);
                    this.isDoor && (g = s.door.spriteAnchor);
                    var y = void 0 !== h;
                    !y && this.sprite.parent && this.sprite.parent.removeChild(this.sprite),
                    y && (this.sprite.texture = "none" == h ? r.Texture.EMPTY : r.Texture.fromImage(h),
                    this.sprite.anchor.set(g.x, g.y),
                    this.sprite.tint = s.img.tint,
                    this.sprite.imgAlpha = this.dead ? .75 : s.img.alpha,
                    this.sprite.zIdx = s.img.zIdx,
                    this.sprite.alpha = this.sprite.imgAlpha),
                    this.sprite.visible = y,
                    this.img = h
                }
            },
            getInteraction: function() {
                return this.isButton && this.button.canUse ? {
                    rad: this.button.interactionRad,
                    action: this.button.interactionText,
                    object: "game-" + this.type
                } : this.isDoor && this.door.canUse && !this.door.autoOpen ? {
                    rad: this.door.interactionRad,
                    action: this.door.open ? "game-close-door" : "game-open-door",
                    object: ""
                } : null
            },
            l: function(e, t, a, i, r, c) {
                if (this.isButton) {
                    var d = this.button;
                    if (d.seq != d.seqOld) {
                        var p = n.Defs[this.type];
                        if (p.button.useParticle) {
                            var u = o.toAabb(this.collider)
                              , h = m.mul(m.sub(u.max, u.min), .5)
                              , g = m.add(u.min, h)
                              , y = m.mul(m.randomUnit(), l.random(5, 15));
                            a.addParticle(p.button.useParticle, this.layer, g, y)
                        }
                        p.button.sound && i.playSound(p.button.sound, {
                            channel: "sfx",
                            soundPos: this.pos,
                            layer: this.layer,
                            muffled: !0
                        })
                    }
                    d.seqOld = d.seq
                }
                if (this.isDoor) {
                    var f = this.door
                      , x = f.interpSpeed
                      , w = m.sub(this.pos, f.interpPos)
                      , b = m.length(w)
                      , _ = x * e;
                    b < _ && (_ = b);
                    var v = b > 1e-4 ? m.div(w, b) : m.create(1, 0);
                    f.interpPos = m.add(f.interpPos, m.mul(v, _));
                    var S = Math.PI * f.interpSpeed
                      , k = s.angleDiff(f.interpRot, this.rot)
                      , z = s.sign(k) * S * e;
                    if (Math.abs(k) < Math.abs(z) && (z = k),
                    f.interpRot += z,
                    f.seq != f.seqOld) {
                        var M = n.Defs[this.type]
                          , T = M.door.sound.change || "";
                        "" != T && i.playSound(T, {
                            channel: "sfx",
                            soundPos: this.pos,
                            layer: this.layer,
                            muffled: !0
                        }),
                        f.seqOld = f.seq
                    }
                    if (f.open != f.wasOpen) {
                        var P = n.Defs[this.type]
                          , C = f.open ? P.door.sound.open : P.door.sound.close;
                        i.playSound(C, {
                            channel: "sfx",
                            soundPos: this.pos,
                            layer: this.layer,
                            muffled: !0
                        }),
                        f.wasOpen = f.open
                    }
                }
                if (this.dead && !this.exploded && (t.deadObstacleIds.push(this.__id),
                this.exploded = !0,
                this.smokeEmitter && (this.smokeEmitter.stop(),
                this.smokeEmitter = null),
                !this.isNew)) {
                    for (var A = n.Defs[this.type], I = o.toAabb(this.collider), D = m.mul(m.sub(I.max, I.min), .5), O = m.add(I.min, D), E = Math.floor(l.random(5, 11)), L = 0; L < E; L++) {
                        var B = m.mul(m.randomUnit(), l.random(5, 15))
                          , F = Array.isArray(this.explodeParticle) ? this.explodeParticle[Math.floor(Math.random() * this.explodeParticle.length)] : this.explodeParticle;
                        a.addParticle(F, this.layer, O, B)
                    }
                    i.playSound(A.sound.explode, {
                        channel: "sfx",
                        soundPos: O,
                        layer: this.layer,
                        muffled: !0
                    })
                }
                if (this.smokeEmitter && (this.smokeEmitter.pos = m.copy(this.pos)),
                this.sprite.visible) {
                    var R = this.dead ? 5 : this.sprite.zIdx
                      , j = this.__id
                      , q = this.layer;
                    !this.dead && R >= 50 && 0 == this.layer && 0 == r.layer && (R += 100,
                    q |= 2),
                    c.addPIXIObj(this.sprite, q, R, j),
                    this.isDoor && this.door.casingSprite && c.addPIXIObj(this.door.casingSprite, q, R + this.door.casingSprite.zIdx, j)
                }
                this.isNew = !1
            },
            render: function(e) {
                var t = this.isDoor ? this.door.interpPos : this.pos
                  , a = this.isDoor ? this.door.interpRot : this.rot
                  , i = this.scale
                  , r = e.pointToScreen(t)
                  , o = e.pixels(i * this.imgScale);
                if (this.sprite.position.set(r.x, r.y),
                this.sprite.scale.set(o, o),
                this.sprite.rotation = -a,
                this.sprite.alpha = this.sprite.imgAlpha,
                this.isDoor && this.door.casingSprite) {
                    var n = e.pointToScreen(m.add(this.door.closedPos, this.door.casingSprite.posOffset))
                      , s = e.pixels(i * this.door.casingSprite.imgScale);
                    this.door.casingSprite.position.set(n.x, n.y),
                    this.door.casingSprite.scale.set(s, s),
                    this.door.casingSprite.rotation = -a
                }
            }
        },
        e.exports = i
    },
    "0cc73a5c": function(e, t, a) {
        "use strict";
        var i = {
            "@metadata": {
                "last-updated": "2018-03-03",
                locale: "pl"
            },
            "word-order": "svo",
            "index-slogan": "Battle Royale 2D",
            "index-region": "Region",
            "index-north-america": "Północna Ameryka",
            "index-europe": "Europa",
            "index-asia": "Azja",
            "index-players": "Gracze",
            "index-play-solo": "Graj sam",
            "index-play-duo": "Graj razem",
            "index-play-squad": "Graj oddział",
            "index-create-team": "Stwórz grupę",
            "index-how-to-play": "Jak Grać",
            "index-leave-team": "Wyjdź z grupy",
            "index-joining-team": "Wchodzenie do grupy",
            "index-creating-team": "Tworzenie grupy",
            "index-invite-link": "Link Zapraszający",
            "index-solo": "Solo",
            "index-duo": "Wspólna gra",
            "index-squad": "Drużyna",
            "index-auto-fill": "Automatyczne Uzupełnianie",
            "index-no-fill": "Bez Uzupełniania",
            "index-waiting-for-leader": "Czekanie na przywódce do rozpoczęcia gry...",
            "index-play": "Graj",
            "index-featured-youtuber": "Wyróżniony YouTuber",
            "index-settings": "Ustawienia",
            "index-high-resolution": "Wysoka Rozdzielczość (zaznacz aby poprawić jakość wizualną)",
            "index-screen-shake": "Trzęsienie ekranu",
            "index-master-volume": "Głośność ogólną",
            "index-sfx-volume": "Głośność efektów dźwiękowych",
            "index-music-volume": "Głośność muzyki",
            "index-team-is-full": "Grupa jest pełna!",
            "index-failed-joining-team": "Nie udało się dołączyć do grupy.",
            "index-failed-creating-team": "Nie udało się stworzyć grupy.",
            "index-failed-finding-game": "Nie znaleziono gry.",
            "index-failed-joining-game": "Nie udało się dołączyć do gry.",
            "index-lost-connection": "Utracono połączenie z grupą.",
            "index-host-closed": "Host zamnknął połączenie.",
            "index-invalid-protocol": "Przestarzała wersja klienta.",
            "index-view-more": "Zobacz więcej",
            "index-back-to-main": "Powrót na Stronę Główną",
            "index-most-kills": "Najwięcej Zabić",
            "index-total-kills": "Wszystkie Zabicia",
            "index-total-wins": "Wszystkie Wygrane",
            "index-top-5-percent": "Najlepsze 5 procent",
            "index-kill-death-ratio": "Średnia zabójstw do zgonów",
            "index-for": "Dla",
            "index-today": "Dzisiaj",
            "index-this-week": "Ten Tydzień",
            "index-all-time": "Od początku",
            "index-top-100": "Najlepsze 100",
            "index-rank": "Ranga",
            "index-player": "Gracz",
            "index-total-games": "Wszystkie Gry",
            "index-controls": "Sterowanie",
            "index-movement": "Ruch",
            "index-movement-ctrl": "W, A, S, D",
            "index-aim": "Celowanie",
            "index-aim-ctrl": "Myszka",
            "index-punch": "Uderzenie",
            "index-shoot": "Strzał",
            "index-shoot-ctrl": "Lewy Przycisk Myszy",
            "index-change-weapons": "Zmień Broń",
            "index-change-weapons-ctrl": "1 do 4 albo kółko myszy",
            "index-stow-weapons": "Schowaj Broń (Tryb Pięści)",
            "index-stow-weapons-ctrl": "3 lub E",
            "index-swap-weapons": "Zmień na poprzednią broń",
            "index-swap-weapons-ctrl": "Q",
            "index-reload": "Przeładuj",
            "index-reload-ctrl": "R",
            "index-scope-zoom": "Przybliżenie",
            "index-scope-zoom-ctrl": "Lewy Przycisk Myszy lub Przybliżenie",
            "index-pickup": "Podnieś",
            "index-loot": "Łup",
            "index-revive": "Wskrześ",
            "index-pickup-ctrl": "F",
            "index-use-medical": "Użyj przyboru medycznego",
            "index-use-medical-ctrl": "Lewy Przycisk Myszy na przyborze, lub 7 do 0",
            "index-drop-item": "Upuść",
            "index-drop-item-ctrl": "Prawy Przycisk Myszy na przedmiocie",
            "index-cancel-action": "Przerwij czynność",
            "index-cancel-action-ctrl": "X",
            "index-view-map": "Pokaż Mapę",
            "index-view-map-ctrl": "M albo G",
            "index-toggle-minimap": "Minimapa",
            "index-toggle-minimap-ctrl": "V",
            "index-use-ping": "Użyj menu znaczników drużynowych",
            "index-use-ping-ctrl": "Przytrzymaj C, następnie przytrzymaj Prawy Przycisk Myszy i przesuń myszą po czym puść Prawy Przycisk Myszy",
            "index-use-emote": "Użyj menu emotikon",
            "index-use-emote-ctrl": "Przytrzymaj Prawy Przycisk Myszy i przesuń myszą po czym puść Prawy Przycisk Myszy",
            "index-tips-1-desc": "Celem surviv.io jest pozostanie ostatniom zyjącym graczem. Żyjesz tylko raz na gre - tutaj nie ma odrodzeń!",
            "index-tips-2": "PUBG 2D",
            "index-tips-2-desc": "Jeśli kiedykolwiek grałeś w grę typu Battle Royale jak PUBG, Fortnite czy H1Z1, to już jesteś w połowie drogi! Wyobraź sobie, że surviv.io to taki PUBG 2D.",
            "index-tips-3": "Zbieraj i Zabijaj",
            "index-tips-3-desc": "Rozpoczynasz grę bez żadnych przedmiotów, nie licząc podstawowego plecaka. Poruszaj się po mapie aby znaleźć przedmioty typu: broń, amunicja, lunety i medykamenty. Wyeliminuj pozostałych graczy i zabierz ich przedmioty!",
            "index-tips-4": "Czerwone = Złe!",
            "index-tips-4-desc": "Nie tylko gracze mogą cię zranić. Mordercza czerwona strefa będzie zmniejszać się z różnych stron mapy i będzie zadawać coraz większe obrażenia jeśli będziesz w niej pozostawać. Spoglądaj na mape i pilnuj się.",
            "game-alive": "Żywych",
            "game-reloading": "Przeładowanie",
            "game-using": "Używanie",
            "game-reviving": "Wskrzeszanie",
            "game-revive-teammate": "Wskrześ Przyjaciela",
            "game-equip": "Weź",
            "game-cancel": "Przerwij",
            "game-open-door": "Otwórz Drzwi",
            "game-close-door": "Zamknij Drzwi",
            "game-You": "Ty",
            "game-you": "ty",
            "game-themselves": "oni",
            "game-yourself": "siebie",
            "game-you-died": "umarłeś",
            "game-player-died": "umarł",
            "game-with": "z",
            "game-knocked-out": "powalił",
            "game-killed": "zabił",
            "game-finally-killed": "wresczie zabił",
            "game-finally-bled-out": "w końcu się wykrwawił",
            "game-died-outside": "umarł poza strefą",
            "game-the-red-zone": "Czerwona strefa",
            "game-waiting-for-players": "Oczekiwanie na graczy",
            "game-spectating": "Obserwujesz",
            "game-red-zone-advances": "Czerwona strefa zmniejszy się za",
            "game-red-zone-advancing": "Czerwona strefa zmniejsza się, udaj się do bezpiecznej strefy!",
            "game-seconds": "sekundy",
            "game-minutes": "minuty",
            "game-minute": "minuta",
            "game-m": "m",
            "game-s": "s",
            "game-not-enough-space": "Za mało miejsca!",
            "game-item-already-owned": "Posiadasz już ten przedmiot!",
            "game-item-already-equipped": "Używasz już tego przedmiotu!",
            "game-better-item-equipped": "Posiadasz lepszy przedmiot!",
            "game-play-new-game": "Graj jescze raz",
            "game-spectate": "Obserwuj",
            "game-full-screen": "Pełny Ekran",
            "game-sound": "Dzwięk",
            "game-quit-game": "Wyjdź z gry",
            "game-return-to-game": "Wróć do gry",
            "game-hide-match-stats": "Ukryj statystyki",
            "game-view-match-stats": "Wyświetl statystyki",
            "game-previous-teammate": "Poprzedni przyjaciel",
            "game-next-teammate": "Następny przyjaciel",
            "game-spectate-previous": "",
            "game-spectate-next": "",
            "game-leave-game": "Wyjdź z gry",
            "game-your-results": "Twoje rezultaty",
            "game-chicken": "Mecz wygrany! Kurczak podany!",
            "game-won-the-game": "wygrał grę.",
            "game-team-eliminated": "Twoja grupa została wyeliminowana.",
            "game-rank": "Ranga",
            "game-team-rank": "Ranga Grupy",
            "game-team-kills": "Zabicia Grupy",
            "game-kill": "Zabić",
            "game-kills": "Zabić",
            "game-damage-dealt": "Zadano obrażeń",
            "game-damage-taken": "Otrzymano obrażeń",
            "game-survived": "Przetrwano",
            "game-backpack00": "Kieszonka",
            "game-backpack01": "Mały plecak",
            "game-backpack02": "Plecak",
            "game-backpack03": "Wojskowy plecak",
            "game-bandage": "Bandaż",
            "game-bandage-tooltip": "Kliknij lewym przyciskiem myszy aby przywrócić 15 punktów zdrowia.",
            "game-healing-tooltip": "Nie leczy powyżej 75 punktów zdrowia.",
            "game-healthkit": "Apteczka",
            "game-healthkit-tooltip": "Kliknij lewym przyciskiem myszy aby przywrócić 100 punktów zdrowia.",
            "game-soda": "Soda",
            "game-soda-tooltip": "Kliknij lewym przyciskiem myszy aby zwiększyć adrenalinę o 25.",
            "game-adrenaline-tooltip": "Adrenalina przywraca zdrowie w miare upływu czasu.",
            "game-painkiller": "Pigułki",
            "game-painkiller-tooltip": "Kliknij lewym przyciskiem myszy aby zwiększyć adrenalinę o 50.",
            "game-9mm": "9mm",
            "game-9mm-tooltip": "Amunicja dla M9, G18C, MP5, MAC-10, UMP9 i Vector.",
            "game-12gauge": "Kaliber 12",
            "game-12gauge-tooltip": "Amunicja dla M870, SPAS-12, Saiga-12 i MP220.",
            "game-762mm": "7.62mm",
            "game-762mm-tooltip": "Amunicja dla AK-47, SCAR-H, M39, Mosin-Nagant, SV-98, M1, OT-38 i DP-28.",
            "game-556mm": "5.56mm",
            "game-556mm-tooltip": "Amunicja dla FAMAS, M416, QBB-97, Mk 12 i M249.",
            "game-50AE": ".50 AE",
            "game-50AE-tooltip": "Amunicja dla Desert Eagle.",
            "game-308sub": ".308 Subsonic",
            "game-308sub-tooltip": "Amunicja dla AWM-S.",
            "game-flare": "Flare",
            "game-flare-tooltip": "Amunicja dla Flare Gun.",
            "game-chest01": "Kamizelka Poziom 1",
            "game-chest02": "Kamizelka Poziom 2",
            "game-chest03": "Kamizelka Poziom 3",
            "game-helmet01": "Hełm Poziom 1",
            "game-helmet02": "Hełm Poziom 2",
            "game-helmet03": "Hełm Poziom 3",
            "game-1xscope": "1x Luneta",
            "game-2xscope": "2x Luneta",
            "game-4xscope": "4x Luneta",
            "game-8xscope": "8x Luneta",
            "game-15xscope": "15x Luneta",
            "game-level-1": "P. 1",
            "game-level-2": "P. 2",
            "game-level-3": "P. 3",
            "game-outfitBase": "Strój",
            "game-outfitRoyalFortune": "Powodzenie Króla",
            "game-outfitKeyLime": "Limonka",
            "game-outfitCobaltShell": "Skorupa",
            "game-outfitCarbonFiber": "Włókno Węglowe",
            "game-outfitDarkGloves": "Profesjonalista",
            "game-outfitGhillie": "Kameleon",
            "game-outfitCamo": "Polowanie",
            "game-outfitRed": "Trenowanie",
            "game-outfitWhite": "Arktyka",
            "game-outfitWoodland": "Leśna Walka",
            "game-ak47": "AK-47",
            "game-dp28": "DP-28",
            "game-mosin": "Mosin-Nagant",
            "game-m39": "M39 EMR",
            "game-mp5": "MP5",
            "game-mac10": "MAC-10",
            "game-ump9": "UMP9",
            "game-m870": "M870",
            "game-mp220": "MP220",
            "game-saiga": "Saiga-12",
            "game-m9": "M9",
            "game-glock": "G18C",
            "game-ot38": "OT-38",
            "game-frag": "Granat Odłamkowy",
            "game-hud-frag": "Odłamkowy",
            "game-barrel_01": "beczką",
            "game-silo_01": "silosem",
            "game-oven_01": "piekarnik"
        };
        e.exports = i
    },
    "10899aea": function(e, t, a) {
        "use strict";
        var i = a("0e566746")
          , r = a("c2a798c8")
          , o = {
            clamp: function(e, t, a) {
                return e < a ? e > t ? e : t : a
            },
            min: function(e, t) {
                return e < t ? e : t
            },
            max: function(e, t) {
                return e > t ? e : t
            },
            lerp: function(e, t, a) {
                return t * (1 - e) + a * e
            },
            delerp: function(e, t, a) {
                return o.clamp((e - t) / (a - t), 0, 1)
            },
            v2lerp: function(e, t, a) {
                return r.create(o.lerp(e, t.x, a.x), o.lerp(e, t.y, a.y))
            },
            smoothstep: function(e, t, a) {
                var i = o.clamp((e - t) / (a - t), 0, 1);
                return i * i * (3 - 2 * i)
            },
            easeOutElastic: function(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : .3;
                return Math.pow(2, -10 * e) * Math.sin((e - t / 4) * (2 * Math.PI) / t) + 1
            },
            easeOutExpo: function(e) {
                return 1 === e ? 1 : 1 - Math.pow(2, -10 * e)
            },
            remap: function(e, t, a, i, r) {
                var n = o.clamp((e - t) / (a - t), 0, 1);
                return o.lerp(n, i, r)
            },
            eqAbs: function(e, t, a) {
                var i = a || 1e-6;
                return Math.abs(e - t) < i
            },
            eqRel: function(e, t, a) {
                var i = void 0 !== a ? a : 1e-6;
                return Math.abs(e - t) <= i * Math.max(Math.max(1, Math.abs(e)), Math.abs(t))
            },
            deg2rad: function(e) {
                return e * Math.PI / 180
            },
            rad2deg: function(e) {
                return 180 * e / Math.PI
            },
            fract: function(e) {
                return e - Math.floor(e)
            },
            sign: function(e) {
                return e < 0 ? -1 : 1
            },
            mod: function(e, t) {
                return (e % t + t) % t
            },
            fmod: function(e, t) {
                return e - Math.floor(e / t) * t
            },
            angleDiff: function(e, t) {
                var a = o.fmod(t - e + Math.PI, 2 * Math.PI) - Math.PI;
                return a < -Math.PI ? a + 2 * Math.PI : a
            },
            quantize: function(e, t, a, r) {
                i(e >= t && e <= a);
                var n = (1 << r) - 1
                  , s = o.clamp(e, t, a)
                  , l = (s - t) / (a - t);
                return t + parseInt(l * n + .5) / n * (a - t)
            },
            v2Quantize: function(e, t, a, i, n, s) {
                return r.create(o.quantize(e.x, t, i, s), o.quantize(e.y, a, n, s))
            },
            inside: function(e, t) {
                for (var a = e.x, i = e.y, r = !1, o = 0, n = t.length - 1; o < t.length; n = o++) {
                    var s = t[o].x
                      , l = t[o].y
                      , m = t[n].x
                      , c = t[n].y;
                    l > i != c > i && a < (m - s) * (i - l) / (c - l) + s && (r = !r)
                }
                return r
            },
            rayLineIntersect: function(e, t, a, i) {
                var o = r.sub(i, a)
                  , n = r.create(o.y, -o.x)
                  , s = r.dot(t, n);
                if (!(Math.abs(s) <= 1e-6)) {
                    var l = r.sub(a, e)
                      , m = r.dot(n, l) / s
                      , c = r.dot(r.create(t.y, -t.x), l) / s;
                    return m >= 0 && c >= 0 && c <= 1 ? m : void 0
                }
            },
            rayPolygonIntersect: function(e, t, a) {
                for (var i = Number.MAX_VALUE, r = !1, o = 0, n = a.length - 1; o < a.length; n = o++) {
                    var s = this.rayLineIntersect(e, t, a[n], a[o]);
                    void 0 !== s && s < i && (r = !0,
                    i = s)
                }
                return r ? i : void 0
            },
            sqr: function(e) {
                return e * e
            },
            dist2: function(e, t) {
                return this.sqr(e.x - t.x) + this.sqr(e.y - t.y)
            },
            distToSegmentSquared: function(e, t, a) {
                var i = this.dist2(t, a);
                if (0 == i)
                    return this.dist2(e, t);
                var r = ((e.x - t.x) * (a.x - t.x) + (e.y - t.y) * (a.y - t.y)) / i;
                return r = Math.max(0, Math.min(1, r)),
                this.dist2(e, {
                    x: t.x + r * (a.x - t.x),
                    y: t.y + r * (a.y - t.y)
                })
            },
            distToSegment: function(e, t, a) {
                return Math.sqrt(this.distToSegmentSquared(e, t, a))
            },
            distToPoly: function(e, t) {
                for (var a = Number.MAX_VALUE, i = 0, r = t.length - 1; i < t.length; r = i++) {
                    var o = this.distToSegment(e, t[i], t[r]);
                    o < a && (a = o)
                }
                return a
            },
            isAngleBetween: function(e, t, a) {
                return t <= a ? a - t <= 180 ? t <= e && e <= a : a <= e || e <= t : t - a <= 180 ? a <= e && e <= t : t <= e || e <= a
            }
        };
        e.exports = o
    },
    "119e8c4c": function(e, t, a) {
        "use strict";
        function i(e, t) {
            this.min = e,
            this.max = t
        }
        function r(e) {
            return e instanceof i ? e.getRandom() : e
        }
        function o(e) {
            return e instanceof Function ? e() : e
        }
        function n() {
            this.active = !1,
            this.ticker = 0,
            this.def = {},
            this.sprite = new m.Sprite,
            this.sprite.anchor.set(.5, .5),
            this.sprite.scale.set(1, 1),
            this.sprite.visible = !1,
            this.hasParent = !1
        }
        function s() {
            this.active = !1
        }
        function l(e) {
            this.renderer = e,
            this.particles = [],
            this.emitters = [];
            for (var t = 0; t < 256; t++)
                this.particles[t] = new n(this.display)
        }
        var m = a("80ac57a6")
          , c = a("10899aea")
          , d = a("1901e2d9")
          , p = a("c2a798c8");
        i.prototype = {
            getRandom: function() {
                return d.random(this.min, this.max)
            }
        };
        var u = {
            bloodSplat: {
                image: ["part-splat-01.img", "part-splat-02.img", "part-splat-03.img"],
                life: .5,
                drag: 1,
                rotVel: 0,
                scale: {
                    start: .04,
                    end: new i(.15,.2),
                    lerp: new i(0,1)
                },
                alpha: {
                    start: 1,
                    end: 0,
                    lerp: new i(.75,1)
                },
                color: function() {
                    return d.rgb2hex(d.hsv2rgb(16711680, 1, d.random(.45, .8)))
                }
            },
            barrelPlank: {
                image: ["part-plank-01.img"],
                life: new i(1,1.5),
                drag: new i(3,5),
                rotVel: new i(3 * Math.PI,3 * Math.PI),
                scale: {
                    start: new i(.08,.18),
                    end: new i(.07,.17),
                    lerp: new i(0,1)
                },
                alpha: {
                    start: 1,
                    end: 0,
                    lerp: new i(.9,1)
                },
                color: function() {
                    return d.rgb2hex(d.hsv2rgb(.09, .8, d.random(.66, .68)))
                }
            },
            barrelChip: {
                image: ["part-spark-02.img"],
                life: .5,
                drag: new i(1,10),
                rotVel: 0,
                scale: {
                    start: new i(.04,.08),
                    end: new i(.01,.02),
                    lerp: new i(0,1)
                },
                alpha: {
                    start: 1,
                    end: 0,
                    lerp: new i(.95,1)
                },
                color: function() {
                    return d.rgb2hex(d.hsv2rgb(.01, .02, d.random(.38, .41)))
                }
            },
            barrelFrag: {
                image: ["part-spark-02.img"],
                life: new i(.8,1),
                drag: new i(1,5),
                rotVel: 0,
                scale: {
                    start: new i(.07,.12),
                    end: new i(.05,.1),
                    lerp: new i(0,1)
                },
                alpha: {
                    start: 1,
                    end: 0,
                    lerp: new i(.9,1)
                },
                color: function() {
                    return d.rgb2hex(d.hsv2rgb(.01, .02, d.random(.38, .41)))
                }
            },
            blueChip: {
                image: ["part-spark-02.img"],
                life: .5,
                drag: new i(1,10),
                rotVel: 0,
                scale: {
                    start: new i(.04,.08),
                    end: new i(.01,.02),
                    lerp: new i(0,1)
                },
                alpha: {
                    start: 1,
                    end: 0,
                    lerp: new i(.95,1)
                },
                color: function() {
                    return d.rgb2hex(d.hsv2rgb(.64, 1, d.random(.83, .85)))
                }
            },
            book: {
                image: ["part-book-01.img"],
                life: new i(1,1.5),
                drag: new i(3,5),
                rotVel: new i(3 * Math.PI,3 * Math.PI),
                scale: {
                    start: new i(.09,.19),
                    end: new i(.07,.17),
                    lerp: new i(0,1)
                },
                alpha: {
                    start: 1,
                    end: 0,
                    lerp: new i(.9,1)
                },
                color: function() {
                    return d.rgb2hex(d.hsv2rgb(.08, .42, d.random(.72, .74)))
                }
            },
            brickChip: {
                image: ["part-spark-02.img"],
                life: .5,
                drag: new i(1,10),
                rotVel: 0,
                scale: {
                    start: new i(.04,.08),
                    end: new i(.01,.02),
                    lerp: new i(0,1)
                },
                alpha: {
                    start: 1,
                    end: 0,
                    lerp: new i(.95,1)
                },
                color: function() {
                    return d.rgb2hex(d.hsv2rgb(0, .71, d.random(.32, .34)))
                }
            },
            depositBoxGreyFrag: {
                image: ["part-plate-01.img"],
                life: new i(.5,1),
                drag: new i(7,8),
                rotVel: new i(0,3 * Math.PI),
                scale: {
                    start: new i(.15,.25),
                    end: new i(.12,.2),
                    lerp: new i(0,1)
                },
                alpha: {
                    start: 1,
                    end: 0,
                    lerp: new i(.9,1)
                },
                color: function() {
                    return d.rgb2hex(d.hsv2rgb(0, 0, d.random(.36, .38)))
                }
            },
            depositBoxGoldFrag: {
                image: ["part-plate-01.img"],
                life: new i(.5,1),
                drag: new i(6,8),
                rotVel: new i(0,3 * Math.PI),
                scale: {
                    start: new i(.2,.35),
                    end: new i(.18,.25),
                    lerp: new i(0,1)
                },
                alpha: {
                    start: 1,
                    end: 0,
                    lerp: new i(.9,1)
                },
                color: function() {
                    return d.rgb2hex(d.hsv2rgb(.11, .84, d.random(.64, .66)))
                }
            },
            glassChip: {
                image: ["part-spark-02.img"],
                life: .5,
                drag: new i(1,5),
                rotVel: new i(1 * Math.PI,6 * Math.PI),
                scale: {
                    start: new i(.04,.08),
                    end: new i(.01,.02),
                    lerp: new i(0,1)
                },
                alpha: {
                    start: 1,
                    end: 0,
                    lerp: new i(.95,1)
                },
                color: 8444415
            },
            goldChip: {
                image: ["part-spark-02.img"],
                life: .5,
                drag: new i(1,10),
                rotVel: 0,
                scale: {
                    start: new i(.04,.08),
                    end: new i(.01,.02),
                    lerp: new i(0,1)
                },
                alpha: {
                    start: 1,
                    end: 0,
                    lerp: new i(.95,1)
                },
                color: function() {
                    return d.rgb2hex(d.hsv2rgb(.11, .84, d.random(.88, .9)))
                }
            },
            greenChip: {
                image: ["part-spark-02.img"],
                life: .5,
                drag: new i(1,10),
                rotVel: 0,
                scale: {
                    start: new i(.04,.08),
                    end: new i(.01,.02),
                    lerp: new i(0,1)
                },
                alpha: {
                    start: 1,
                    end: 0,
                    lerp: new i(.95,1)
                },
                color: function() {
                    return d.rgb2hex(d.hsv2rgb(.4, .18, d.random(.5, .62)))
                }
            },
            hutFrag: {
                image: ["part-panel-01.img"],
                life: new i(.5,1.5),
                drag: new i(1,5),
                rotVel: new i(0,3 * Math.PI),
                scale: {
                    start: new i(.25,.55),
                    end: new i(.08,.18),
                    lerp: new i(0,1)
                },
                alpha: {
                    start: 1,
                    end: 0,
                    lerp: new i(.9,1)
                },
                color: function() {
                    return d.rgb2hex(d.hsv2rgb(.1, .81, d.random(.78, .82)))
                }
            },
            leaf: {
                image: ["part-leaf-01.img"],
                life: new i(.5,1),
                drag: new i(1,5),
                rotVel: new i(3 * Math.PI,3 * Math.PI),
                scale: {
                    start: new i(.04,.08),
                    end: new i(.01,.02),
                    lerp: new i(0,1)
                },
                alpha: {
                    start: 1,
                    end: 0,
                    lerp: new i(.9,1)
                },
                color: function() {
                    return d.rgb2hex(d.hsv2rgb(0, 0, d.random(.5, .75)))
                }
            },
            lockerFrag: {
                image: ["part-plate-01.img"],
                life: new i(.5,1),
                drag: new i(7,8),
                rotVel: new i(0,3 * Math.PI),
                scale: {
                    start: new i(.15,.2),
                    end: new i(.12,.15),
                    lerp: new i(0,1)
                },
                alpha: {
                    start: 1,
                    end: 0,
                    lerp: new i(.9,1)
                },
                color: function() {
                    return d.rgb2hex(d.hsv2rgb(.1, .23, d.random(.51, .53)))
                }
            },
            ltgreenChip: {
                image: ["part-woodchip-01.img"],
                life: new i(.5,1),
                drag: new i(1,5),
                rotVel: new i(3 * Math.PI,3 * Math.PI),
                scale: {
                    start: new i(.04,.08),
                    end: new i(.01,.02),
                    lerp: new i(0,1)
                },
                alpha: {
                    start: 1,
                    end: 0,
                    lerp: new i(.9,1)
                },
                color: function() {
                    return d.rgb2hex(d.hsv2rgb(.2, .42, d.random(.38, .42)))
                }
            },
            outhouseChip: {
                image: ["part-woodchip-01.img"],
                life: new i(.5,1),
                drag: new i(1,5),
                rotVel: new i(3 * Math.PI,3 * Math.PI),
                scale: {
                    start: new i(.04,.08),
                    end: new i(.01,.02),
                    lerp: new i(0,1)
                },
                alpha: {
                    start: 1,
                    end: 0,
                    lerp: new i(.9,1)
                },
                color: function() {
                    return d.rgb2hex(d.hsv2rgb(.08, .57, d.random(.4, .46)))
                }
            },
            outhouseFrag: {
                image: ["part-panel-01.img"],
                life: new i(.5,1.5),
                drag: new i(1,5),
                rotVel: new i(0,3 * Math.PI),
                scale: {
                    start: new i(.25,.55),
                    end: new i(.08,.18),
                    lerp: new i(0,1)
                },
                alpha: {
                    start: 1,
                    end: 0,
                    lerp: new i(.9,1)
                },
                color: function() {
                    return d.rgb2hex(d.hsv2rgb(.08, .79, d.random(.52, .54)))
                }
            },
            outhousePlank: {
                image: ["part-plank-01.img"],
                life: new i(1,1.5),
                drag: new i(1,5),
                rotVel: new i(3 * Math.PI,3 * Math.PI),
                scale: {
                    start: new i(.1,.2),
                    end: new i(.08,.18),
                    lerp: new i(0,1)
                },
                alpha: {
                    start: 1,
                    end: 0,
                    lerp: new i(.9,1)
                },
                color: function() {
                    return d.rgb2hex(d.hsv2rgb(.08, .57, d.random(.4, .46)))
                }
            },
            potChip: {
                image: ["part-spark-02.img"],
                life: .5,
                drag: new i(1,10),
                rotVel: 0,
                scale: {
                    start: new i(.04,.08),
                    end: new i(.01,.02),
                    lerp: new i(0,1)
                },
                alpha: {
                    start: 1,
                    end: 0,
                    lerp: new i(.95,1)
                },
                color: function() {
                    return d.rgb2hex(d.hsv2rgb(.06, .84, d.random(.73, .77)))
                }
            },
            potFrag: {
                image: ["part-pot-01.img"],
                life: new i(.8,1),
                drag: new i(1,5),
                rotVel: 0,
                scale: {
                    start: new i(.07,.12),
                    end: new i(.05,.1),
                    lerp: new i(0,1)
                },
                alpha: {
                    start: 1,
                    end: 0,
                    lerp: new i(.9,1)
                },
                color: function() {
                    return d.rgb2hex(d.hsv2rgb(.06, .84, d.random(.73, .77)))
                }
            },
            redChip: {
                image: ["part-spark-02.img"],
                life: .5,
                drag: new i(1,10),
                rotVel: 0,
                scale: {
                    start: new i(.04,.08),
                    end: new i(.01,.02),
                    lerp: new i(0,1)
                },
                alpha: {
                    start: 1,
                    end: 0,
                    lerp: new i(.95,1)
                },
                color: function() {
                    return d.rgb2hex(d.hsv2rgb(.98, 1, d.random(.52, .54)))
                }
            },
            redFrag: {
                image: ["part-spark-02.img"],
                life: new i(.8,1),
                drag: new i(1,5),
                rotVel: 0,
                scale: {
                    start: new i(.07,.12),
                    end: new i(.05,.1),
                    lerp: new i(0,1)
                },
                alpha: {
                    start: 1,
                    end: 0,
                    lerp: new i(.9,1)
                },
                color: function() {
                    return d.rgb2hex(d.hsv2rgb(.98, 1, d.random(.52, .54)))
                }
            },
            redPlank: {
                image: ["part-plank-01.img"],
                life: new i(1,1.5),
                drag: new i(1,5),
                rotVel: new i(3 * Math.PI,3 * Math.PI),
                scale: {
                    start: new i(.1,.2),
                    end: new i(.08,.18),
                    lerp: new i(0,1)
                },
                alpha: {
                    start: 1,
                    end: 0,
                    lerp: new i(.9,1)
                },
                color: function() {
                    return d.rgb2hex(d.hsv2rgb(.02, 1, d.random(.26, .28)))
                }
            },
            rockChip: {
                image: ["map-stone-01.img"],
                life: .5,
                drag: new i(1,10),
                rotVel: 0,
                scale: {
                    start: new i(.04,.08),
                    end: new i(.01,.02),
                    lerp: new i(0,1)
                },
                alpha: {
                    start: 1,
                    end: 0,
                    lerp: new i(.95,1)
                },
                color: function() {
                    return d.rgb2hex(d.hsv2rgb(0, 0, d.random(.5, .75)))
                }
            },
            rockFrag: {
                image: ["map-stone-01.img"],
                life: new i(.8,1),
                drag: new i(1,5),
                rotVel: 0,
                scale: {
                    start: new i(.07,.12),
                    end: new i(.05,.1),
                    lerp: new i(0,1)
                },
                alpha: {
                    start: 1,
                    end: 0,
                    lerp: new i(.9,1)
                },
                color: function() {
                    return d.rgb2hex(d.hsv2rgb(0, 0, d.random(.5, .75)))
                }
            },
            shackFrag: {
                image: ["part-panel-01.img"],
                life: new i(.5,1.5),
                drag: new i(1,5),
                rotVel: new i(0,3 * Math.PI),
                scale: {
                    start: new i(.25,.55),
                    end: new i(.08,.18),
                    lerp: new i(0,1)
                },
                alpha: {
                    start: 1,
                    end: 0,
                    lerp: new i(.9,1)
                },
                color: function() {
                    return d.rgb2hex(d.hsv2rgb(.1, .24, d.random(.38, .41)))
                }
            },
            tanChip: {
                image: ["part-woodchip-01.img"],
                life: new i(.5,1),
                drag: new i(1,5),
                rotVel: new i(3 * Math.PI,3 * Math.PI),
                scale: {
                    start: new i(.04,.08),
                    end: new i(.01,.02),
                    lerp: new i(0,1)
                },
                alpha: {
                    start: 1,
                    end: 0,
                    lerp: new i(.9,1)
                },
                color: function() {
                    return d.rgb2hex(d.hsv2rgb(.1, .35, d.random(.48, .52)))
                }
            },
            toiletFrag: {
                image: ["part-spark-02.img"],
                life: new i(.8,1),
                drag: new i(1,5),
                rotVel: 0,
                scale: {
                    start: new i(.07,.12),
                    end: new i(.05,.1),
                    lerp: new i(0,1)
                },
                alpha: {
                    start: 1,
                    end: 0,
                    lerp: new i(.9,1)
                },
                color: function() {
                    return d.rgb2hex(d.hsv2rgb(.97, 0, d.random(.95, .97)))
                }
            },
            toiletMetalFrag: {
                image: ["part-spark-02.img"],
                life: new i(.8,1),
                drag: new i(4,5),
                rotVel: 0,
                scale: {
                    start: new i(.07,.12),
                    end: new i(.05,.1),
                    lerp: new i(0,1)
                },
                alpha: {
                    start: 1,
                    end: 0,
                    lerp: new i(.9,1)
                },
                color: function() {
                    return d.rgb2hex(d.hsv2rgb(.01, .02, d.random(.38, .41)))
                }
            },
            whiteChip: {
                image: ["part-spark-02.img"],
                life: .5,
                drag: new i(1,10),
                rotVel: 0,
                scale: {
                    start: new i(.04,.08),
                    end: new i(.01,.02),
                    lerp: new i(0,1)
                },
                alpha: {
                    start: 1,
                    end: 0,
                    lerp: new i(.95,1)
                },
                color: function() {
                    return d.rgb2hex(d.hsv2rgb(.97, 0, d.random(.95, .97)))
                }
            },
            whitePlank: {
                image: ["part-plank-01.img"],
                life: new i(1,1.5),
                drag: new i(1,5),
                rotVel: new i(3 * Math.PI,3 * Math.PI),
                scale: {
                    start: new i(.1,.2),
                    end: new i(.08,.18),
                    lerp: new i(0,1)
                },
                alpha: {
                    start: 1,
                    end: 0,
                    lerp: new i(.9,1)
                },
                color: function() {
                    return d.rgb2hex(d.hsv2rgb(.97, 0, d.random(.95, .97)))
                }
            },
            windowFrag: {
                image: ["part-spark-02.img"],
                life: new i(.4,.8),
                drag: new i(1,4),
                rotVel: new i(1 * Math.PI,6 * Math.PI),
                scale: {
                    start: new i(.07,.12),
                    end: new i(.05,.1),
                    lerp: new i(0,1)
                },
                alpha: {
                    start: .8,
                    end: 0,
                    lerp: new i(.75,1)
                },
                color: 8444415
            },
            woodChip: {
                image: ["part-woodchip-01.img"],
                life: new i(.5,1),
                drag: new i(1,5),
                rotVel: new i(3 * Math.PI,3 * Math.PI),
                scale: {
                    start: new i(.04,.08),
                    end: new i(.01,.02),
                    lerp: new i(0,1)
                },
                alpha: {
                    start: 1,
                    end: 0,
                    lerp: new i(.9,1)
                },
                color: function() {
                    return d.rgb2hex(d.hsv2rgb(.05, 1, d.random(.35, .45)))
                }
            },
            woodLog: {
                image: ["part-log-01.img"],
                life: new i(1,1.5),
                drag: new i(1,5),
                rotVel: new i(3 * Math.PI,3 * Math.PI),
                scale: {
                    start: new i(.1,.2),
                    end: new i(.08,.18),
                    lerp: new i(0,1)
                },
                alpha: {
                    start: 1,
                    end: 0,
                    lerp: new i(.9,1)
                },
                color: function() {
                    return d.rgb2hex(d.hsv2rgb(.05, 1, d.random(.35, .45)))
                }
            },
            woodPlank: {
                image: ["part-plank-01.img"],
                life: new i(1,1.5),
                drag: new i(1,5),
                rotVel: new i(3 * Math.PI,3 * Math.PI),
                scale: {
                    start: new i(.1,.2),
                    end: new i(.08,.18),
                    lerp: new i(0,1)
                },
                alpha: {
                    start: 1,
                    end: 0,
                    lerp: new i(.9,1)
                },
                color: function() {
                    return d.rgb2hex(d.hsv2rgb(.05, 1, d.random(.25, .35)))
                }
            },
            woodShard: {
                image: ["part-spark-02.img"],
                life: new i(1,1.5),
                drag: new i(3,5),
                rotVel: new i(3 * Math.PI,3 * Math.PI),
                scale: {
                    start: new i(.06,.15),
                    end: new i(.02,.1),
                    lerp: new i(0,1)
                },
                alpha: {
                    start: 1,
                    end: 0,
                    lerp: new i(.9,1)
                },
                color: function() {
                    return d.rgb2hex(d.hsv2rgb(.05, 1, d.random(.25, .35)))
                }
            },
            "9mm": {
                image: ["part-shell-01.img"],
                life: new i(.5,.75),
                drag: new i(3,4),
                rotVel: new i(3 * Math.PI,3 * Math.PI),
                scale: {
                    start: .0625,
                    end: .0325,
                    lerp: new i(0,1)
                },
                alpha: {
                    start: 1,
                    end: 0,
                    lerp: new i(.95,1)
                },
                color: function() {
                    return d.rgb2hex(d.hsv2rgb(0, 0, d.random(.9, .95)))
                }
            },
            "762mm": {
                image: ["part-shell-02.img"],
                life: new i(.75,1),
                drag: new i(1.5,2.5),
                rotVel: new i(2.5 * Math.PI,2.5 * Math.PI),
                scale: {
                    start: .075,
                    end: .045,
                    lerp: new i(0,1)
                },
                alpha: {
                    start: 1,
                    end: 0,
                    lerp: new i(.925,1)
                },
                color: function() {
                    return d.rgb2hex(d.hsv2rgb(0, 0, d.random(.9, .95)))
                }
            },
            "556mm": {
                image: ["part-shell-04.img"],
                life: new i(.75,1),
                drag: new i(1.5,2.5),
                rotVel: new i(2.5 * Math.PI,2.5 * Math.PI),
                scale: {
                    start: .075,
                    end: .045,
                    lerp: new i(0,1)
                },
                alpha: {
                    start: 1,
                    end: 0,
                    lerp: new i(.925,1)
                },
                color: function() {
                    return d.rgb2hex(d.hsv2rgb(0, 0, d.random(.9, .95)))
                }
            },
            "12gauge": {
                image: ["part-shell-03.img"],
                life: new i(.5,.75),
                drag: new i(1,2),
                rotVel: new i(3 * Math.PI,3 * Math.PI),
                scale: {
                    start: .1,
                    end: .05,
                    lerp: new i(0,1)
                },
                alpha: {
                    start: 1,
                    end: 0,
                    lerp: new i(.95,1)
                },
                color: function() {
                    return d.rgb2hex(d.hsv2rgb(0, 0, d.random(.9, .95)))
                }
            },
            "50AE": {
                image: ["part-shell-01.img"],
                life: new i(.5,.75),
                drag: new i(3,4),
                rotVel: new i(3 * Math.PI,3 * Math.PI),
                scale: {
                    start: .0625,
                    end: .0325,
                    lerp: new i(0,1)
                },
                alpha: {
                    start: 1,
                    end: 0,
                    lerp: new i(.95,1)
                },
                color: function() {
                    return d.rgb2hex(d.hsv2rgb(0, 0, d.random(.9, .95)))
                }
            },
            "308sub": {
                image: ["part-shell-05.img"],
                life: new i(.5,.75),
                drag: new i(3,4),
                rotVel: new i(3 * Math.PI,3 * Math.PI),
                scale: {
                    start: .0625,
                    end: .0325,
                    lerp: new i(0,1)
                },
                alpha: {
                    start: 1,
                    end: 0,
                    lerp: new i(.95,1)
                },
                color: function() {
                    return d.rgb2hex(d.hsv2rgb(0, 0, d.random(.9, .95)))
                }
            },
            flare: {
                image: ["part-shell-03.img"],
                life: new i(.5,.75),
                drag: new i(1,2),
                rotVel: new i(3 * Math.PI,3 * Math.PI),
                scale: {
                    start: .1,
                    end: .05,
                    lerp: new i(0,1)
                },
                alpha: {
                    start: 1,
                    end: 0,
                    lerp: new i(.95,1)
                },
                color: function() {
                    return d.rgb2hex(d.hsv2rgb(0, 0, d.random(.9, .95)))
                }
            },
            fragPin: {
                image: ["part-frag-pin-01.img"],
                life: new i(.5,.5),
                drag: new i(.9,1),
                rotVel: 0,
                scale: {
                    start: .18,
                    end: .14,
                    lerp: new i(0,1)
                },
                alpha: {
                    start: 1,
                    end: 0,
                    lerp: new i(.5,1)
                },
                color: 16777215
            },
            fragLever: {
                image: ["part-frag-lever-01.img"],
                life: new i(.5,.5),
                drag: new i(.9,1),
                rotVel: 9 * Math.PI,
                scale: {
                    start: .18,
                    end: .14,
                    lerp: new i(0,1)
                },
                alpha: {
                    start: 1,
                    end: 0,
                    lerp: new i(.5,1)
                },
                color: 16777215
            },
            explosionBurst: {
                image: ["part-frag-burst-01.img"],
                life: .5,
                drag: 0,
                rotVel: 0,
                scale: {
                    start: 1,
                    end: 4,
                    lerp: new i(0,1)
                },
                alpha: {
                    start: 1,
                    end: 0,
                    lerp: new i(.75,1)
                },
                color: 8487297
            },
            explosionSmoke: {
                image: ["part-smoke-01.img"],
                life: new i(2,3),
                drag: 0,
                rotVel: new i(.25 * Math.PI,.5 * Math.PI),
                scale: {
                    start: new i(.07,.12),
                    end: new i(.05,.1),
                    lerp: new i(0,1)
                },
                alpha: {
                    start: 1,
                    end: 0,
                    lerp: new i(.9,1)
                },
                color: function() {
                    return d.rgb2hex(d.hsv2rgb(0, 0, d.random(.9, .95)))
                }
            },
            airdropSmoke: {
                image: ["part-smoke-02.img", "part-smoke-03.img"],
                zOrd: 499,
                life: new i(1,1.5),
                drag: 0,
                rotVel: new i(.25 * Math.PI,.5 * Math.PI),
                scale: {
                    start: new i(.67,.72),
                    end: new i(.55,.61),
                    lerp: new i(0,1)
                },
                alpha: {
                    start: 1,
                    end: 0,
                    lerp: new i(.9,1)
                },
                color: function() {
                    return d.rgb2hex(d.hsv2rgb(0, 0, d.random(.9, .95)))
                }
            },
            airdropCrate01: {
                image: ["part-airdrop-01.img"],
                life: new i(.85,1.15),
                drag: new i(2,2.25),
                rotVel: new i(1 * Math.PI,2 * Math.PI),
                scale: {
                    start: .5,
                    end: .4,
                    lerp: new i(0,1)
                },
                alpha: {
                    start: 1,
                    end: 0,
                    lerp: new i(.9,1)
                },
                color: 16777215
            },
            airdropCrate02: {
                image: ["part-airdrop-02.img"],
                life: new i(.85,1.15),
                drag: new i(1.85,2.15),
                rotVel: new i(0,2 * Math.PI),
                scale: {
                    start: .5,
                    end: .4,
                    lerp: new i(0,1)
                },
                alpha: {
                    start: 1,
                    end: 0,
                    lerp: new i(.9,1)
                },
                color: 16777215
            }
        }
          , h = {
            smoke_barrel: {
                particle: "explosionSmoke",
                rate: new i(.2,.3),
                radius: 0,
                speed: new i(2,3),
                angle: .1 * Math.PI,
                maxCount: Number.MAX_VALUE
            }
        };
        n.prototype = {
            a: function(e, t, a, i, n, s, l, c) {
                var d = u[t];
                this.active = !0,
                this.ticker = 0,
                c ? (this.hasParent = !0,
                c.addChild(this.sprite)) : (this.hasParent = !1,
                e.addPIXIObj(this.sprite, a, d.zOrd || 20)),
                this.pos = p.copy(i),
                this.vel = p.copy(n),
                this.rot = l,
                this.def = d,
                this.life = r(d.life),
                this.drag = r(d.drag),
                this.rotVel = r(d.rotVel) * (Math.random() < .5 ? -1 : 1),
                this.rotDrag = r(d.drag) / 2,
                this.scaleStart = r(d.scale.start) * s,
                this.scaleEnd = r(d.scale.end) * s,
                this.alphaStart = r(d.alpha.start),
                this.alphaEnd = r(d.alpha.end);
                var h = Array.isArray(d.image) ? d.image[Math.floor(Math.random() * d.image.length)] : d.image;
                this.sprite.texture = m.Texture.fromImage(h),
                this.sprite.tint = o(d.color),
                this.sprite.visible = !0
            },
            o: function() {
                this.active = !1,
                this.sprite.visible = !1
            }
        },
        s.prototype = {
            a: function(e, t, a, i, r, o) {
                this.active = !0,
                this.enabled = !0,
                this.type = e,
                this.pos = p.copy(t),
                this.dir = p.copy(a),
                this.scale = i,
                this.layer = r,
                this.duration = o,
                this.ticker = 0,
                this.nextSpawn = 0,
                this.spawnCount = 0
            },
            o: function() {
                this.active = !1
            },
            stop: function() {
                this.duration = this.ticker
            }
        },
        l.prototype = {
            addParticle: function(e, t, a, i, r, o, s) {
                for (var l = null, m = 0; m < this.particles.length; m++)
                    if (!this.particles[m].active) {
                        l = this.particles[m];
                        break
                    }
                return l || (l = new n,
                this.particles.push(l)),
                r = void 0 !== r ? r : 1,
                o = void 0 !== o ? o : Math.random() * Math.PI * 2,
                l.a(this.renderer, e, t, a, i, r, o, s),
                l
            },
            addEmitter: function(e, t, a, i, r, o) {
                for (var n = null, l = 0; l < this.emitters.length; l++)
                    if (!this.emitters[l].active) {
                        n = this.emitters[l];
                        break
                    }
                return n || (n = new s,
                this.emitters.push(n)),
                n.a(e, t, a, i, r, o),
                n
            },
            l: function(e, t) {
                for (var a = 0; a < this.emitters.length; a++) {
                    var i = this.emitters[a];
                    if (i.active && i.enabled) {
                        i.ticker,
                        i.ticker += e,
                        i.nextSpawn -= e;
                        for (var o = h[i.type]; i.nextSpawn <= 0 && i.spawnCount < o.maxCount; ) {
                            var n = i.scale * o.radius
                              , s = p.add(i.pos, p.mul(p.randomUnit(), Math.random() * n))
                              , l = p.rotate(i.dir, (Math.random() - .5) * o.angle)
                              , m = p.mul(l, r(o.speed))
                              , d = Math.random() * Math.PI * 2;
                            this.addParticle(o.particle, i.layer, s, m, i.scale, d, null),
                            i.nextSpawn += r(o.rate),
                            i.spawnCount++
                        }
                        i.ticker >= i.duration && i.o()
                    }
                }
                for (var u = 0; u < this.particles.length; u++) {
                    var g = this.particles[u];
                    if (g.active) {
                        g.vel = p.mul(g.vel, 1 / (1 + e * g.drag)),
                        g.pos = p.add(g.pos, p.mul(g.vel, e)),
                        g.rotVel *= 1 / (1 + e * g.rotDrag),
                        g.rot += g.rotVel * e,
                        g.ticker += e;
                        var y = Math.min(g.ticker / g.life, 1)
                          , f = g.hasParent ? g.pos : t.pointToScreen(g.pos)
                          , x = c.remap(y, g.def.scale.lerp.min, g.def.scale.lerp.max, g.scaleStart, g.scaleEnd)
                          , w = c.remap(y, g.def.alpha.lerp.min, g.def.alpha.lerp.max, g.alphaStart, g.alphaEnd);
                        g.hasParent || (x = t.pixels(x)),
                        g.sprite.position.set(f.x, f.y),
                        g.sprite.scale.set(x, x),
                        g.sprite.rotation = g.rot,
                        g.sprite.alpha = w,
                        y >= 1 && g.o()
                    }
                }
            }
        },
        e.exports = {
            d: l
        }
    },
    "14a25ec1": function(e, t, a) {
        "use strict";
        (function(t) {
            !function(a) {
                function i(e, t) {
                    return o(e, t, !1)
                }
                function r(e, t) {
                    return o(e, t, !0)
                }
                function o(e, t, a) {
                    if (0 === t)
                        return "";
                    var i = 0
                      , r = []
                      , o = !0
                      , n = !!t;
                    for (t || (t = Math.floor((e._length - e._index) / 8)); i < t; ) {
                        var s = e.readUint8();
                        if (0 === s && (o = !1,
                        !n))
                            break;
                        o && r.push(s),
                        i++
                    }
                    var l = String.fromCharCode.apply(null, r);
                    if (!a)
                        return l;
                    try {
                        return decodeURIComponent(escape(l))
                    } catch (e) {
                        return l
                    }
                }
                function n(e, t, a) {
                    for (var i = a || t.length + 1, r = 0; r < i; r++)
                        e.writeUint8(r < t.length ? t.charCodeAt(r) : 0)
                }
                function s(e, t, a) {
                    for (var i = l(t), r = a || i.length + 1, o = 0; o < r; o++)
                        e.writeUint8(o < i.length ? i[o] : 0)
                }
                function l(e) {
                    var t, a, i = [];
                    for (t = 0; t < e.length; t++)
                        a = e.charCodeAt(t),
                        a <= 127 ? i.push(a) : a <= 2047 ? (i.push(a >> 6 | 192),
                        i.push(63 & a | 128)) : a <= 65535 ? (i.push(a >> 12 | 224),
                        i.push(a >> 6 & 63 | 128),
                        i.push(63 & a | 128)) : (i.push(a >> 18 | 240),
                        i.push(a >> 12 & 63 | 128),
                        i.push(a >> 6 & 63 | 128),
                        i.push(63 & a | 128));
                    return i
                }
                var m = function(e, a, i) {
                    if (!(e instanceof ArrayBuffer || void 0 !== t && e instanceof t))
                        throw new Error("Must specify a valid ArrayBuffer or Buffer.");
                    a = a || 0,
                    i = i || e.byteLength || e.length,
                    this._view = new Uint8Array(e,a,i)
                };
                m._scratch = new DataView(new ArrayBuffer(8)),
                Object.defineProperty(m.prototype, "buffer", {
                    get: function() {
                        return t.from(this._view.buffer)
                    },
                    enumerable: !0,
                    configurable: !1
                }),
                Object.defineProperty(m.prototype, "byteLength", {
                    get: function() {
                        return this._view.length
                    },
                    enumerable: !0,
                    configurable: !1
                }),
                m.prototype._setBit = function(e, t) {
                    t ? this._view[e >> 3] |= 1 << (7 & e) : this._view[e >> 3] &= ~(1 << (7 & e))
                }
                ,
                m.prototype.getBits = function(e, t, a) {
                    var i = 8 * this._view.length - e;
                    if (t > i)
                        throw new Error("Cannot get " + t + " bit(s) from offset " + e + ", " + i + " available");
                    for (var r = 0, o = 0; o < t; ) {
                        var n = t - o
                          , s = 7 & e
                          , l = this._view[e >> 3]
                          , m = Math.min(n, 8 - s);
                        r |= (l >> s & (1 << m) - 1) << o,
                        e += m,
                        o += m
                    }
                    return a ? (32 !== t && r & 1 << t - 1 && (r |= -1 ^ (1 << t) - 1),
                    r) : r >>> 0
                }
                ,
                m.prototype.setBits = function(e, t, a) {
                    var i = 8 * this._view.length - e;
                    if (a > i)
                        throw new Error("Cannot set " + a + " bit(s) from offset " + e + ", " + i + " available");
                    for (var r = 0; r < a; ) {
                        var o;
                        a - r >= 8 && 0 == (7 & e) ? (this._view[e >> 3] = 255 & t,
                        o = 8) : (this._setBit(e, 1 & t),
                        o = 1),
                        t >>= o,
                        e += o,
                        r += o
                    }
                }
                ,
                m.prototype.getBoolean = function(e) {
                    return 0 !== this.getBits(e, 1, !1)
                }
                ,
                m.prototype.getInt8 = function(e) {
                    return this.getBits(e, 8, !0)
                }
                ,
                m.prototype.getUint8 = function(e) {
                    return this.getBits(e, 8, !1)
                }
                ,
                m.prototype.getInt16 = function(e) {
                    return this.getBits(e, 16, !0)
                }
                ,
                m.prototype.getUint16 = function(e) {
                    return this.getBits(e, 16, !1)
                }
                ,
                m.prototype.getInt32 = function(e) {
                    return this.getBits(e, 32, !0)
                }
                ,
                m.prototype.getUint32 = function(e) {
                    return this.getBits(e, 32, !1)
                }
                ,
                m.prototype.getFloat32 = function(e) {
                    return m._scratch.setUint32(0, this.getUint32(e)),
                    m._scratch.getFloat32(0)
                }
                ,
                m.prototype.getFloat64 = function(e) {
                    return m._scratch.setUint32(0, this.getUint32(e)),
                    m._scratch.setUint32(4, this.getUint32(e + 32)),
                    m._scratch.getFloat64(0)
                }
                ,
                m.prototype.setBoolean = function(e, t) {
                    this.setBits(e, t ? 1 : 0, 1)
                }
                ,
                m.prototype.setInt8 = m.prototype.setUint8 = function(e, t) {
                    this.setBits(e, t, 8)
                }
                ,
                m.prototype.setInt16 = m.prototype.setUint16 = function(e, t) {
                    this.setBits(e, t, 16)
                }
                ,
                m.prototype.setInt32 = m.prototype.setUint32 = function(e, t) {
                    this.setBits(e, t, 32)
                }
                ,
                m.prototype.setFloat32 = function(e, t) {
                    m._scratch.setFloat32(0, t),
                    this.setBits(e, m._scratch.getUint32(0), 32)
                }
                ,
                m.prototype.setFloat64 = function(e, t) {
                    m._scratch.setFloat64(0, t),
                    this.setBits(e, m._scratch.getUint32(0), 32),
                    this.setBits(e + 32, m._scratch.getUint32(4), 32)
                }
                ,
                m.prototype.getArrayBuffer = function(e, t) {
                    for (var a = new Uint8Array(t), i = 0; i < t; i++)
                        a[i] = this.getUint8(e + 8 * i);
                    return a
                }
                ;
                var c = function(e, t) {
                    return function() {
                        if (this._index + t > this._length)
                            throw new Error("Trying to read past the end of the stream");
                        var a = this._view[e](this._index);
                        return this._index += t,
                        a
                    }
                }
                  , d = function(e, t) {
                    return function(a) {
                        this._view[e](this._index, a),
                        this._index += t
                    }
                }
                  , p = function(e, a, i) {
                    var r = e instanceof ArrayBuffer || void 0 !== t && e instanceof t;
                    if (!(e instanceof m || r))
                        throw new Error("Must specify a valid BitView, ArrayBuffer or Buffer");
                    this._view = r ? new m(e,a,i) : e,
                    this._index = 0,
                    this._startIndex = 0,
                    this._length = 8 * this._view.byteLength
                };
                Object.defineProperty(p.prototype, "index", {
                    get: function() {
                        return this._index - this._startIndex
                    },
                    set: function(e) {
                        this._index = e + this._startIndex
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(p.prototype, "length", {
                    get: function() {
                        return this._length - this._startIndex
                    },
                    set: function(e) {
                        this._length = e + this._startIndex
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(p.prototype, "bitsLeft", {
                    get: function() {
                        return this._length - this._index
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(p.prototype, "byteIndex", {
                    get: function() {
                        return Math.ceil(this._index / 8)
                    },
                    set: function(e) {
                        this._index = 8 * e
                    },
                    enumerable: !0,
                    configurable: !0
                }),
                Object.defineProperty(p.prototype, "buffer", {
                    get: function() {
                        return this._view.buffer
                    },
                    enumerable: !0,
                    configurable: !1
                }),
                Object.defineProperty(p.prototype, "view", {
                    get: function() {
                        return this._view
                    },
                    enumerable: !0,
                    configurable: !1
                }),
                p.prototype.readBits = function(e, t) {
                    var a = this._view.getBits(this._index, e, t);
                    return this._index += e,
                    a
                }
                ,
                p.prototype.writeBits = function(e, t) {
                    this._view.setBits(this._index, e, t),
                    this._index += t
                }
                ,
                p.prototype.readBoolean = c("getBoolean", 1),
                p.prototype.readInt8 = c("getInt8", 8),
                p.prototype.readUint8 = c("getUint8", 8),
                p.prototype.readInt16 = c("getInt16", 16),
                p.prototype.readUint16 = c("getUint16", 16),
                p.prototype.readInt32 = c("getInt32", 32),
                p.prototype.readUint32 = c("getUint32", 32),
                p.prototype.readFloat32 = c("getFloat32", 32),
                p.prototype.readFloat64 = c("getFloat64", 64),
                p.prototype.writeBoolean = d("setBoolean", 1),
                p.prototype.writeInt8 = d("setInt8", 8),
                p.prototype.writeUint8 = d("setUint8", 8),
                p.prototype.writeInt16 = d("setInt16", 16),
                p.prototype.writeUint16 = d("setUint16", 16),
                p.prototype.writeInt32 = d("setInt32", 32),
                p.prototype.writeUint32 = d("setUint32", 32),
                p.prototype.writeFloat32 = d("setFloat32", 32),
                p.prototype.writeFloat64 = d("setFloat64", 64),
                p.prototype.readASCIIString = function(e) {
                    return i(this, e)
                }
                ,
                p.prototype.readUTF8String = function(e) {
                    return r(this, e)
                }
                ,
                p.prototype.writeASCIIString = function(e, t) {
                    n(this, e, t)
                }
                ,
                p.prototype.writeUTF8String = function(e, t) {
                    s(this, e, t)
                }
                ,
                p.prototype.readBitStream = function(e) {
                    var t = new p(this._view);
                    return t._startIndex = this._index,
                    t._index = this._index,
                    t.length = e,
                    this._index += e,
                    t
                }
                ,
                p.prototype.writeBitStream = function(e, t) {
                    t || (t = e.bitsLeft);
                    for (var a; t > 0; )
                        a = Math.min(t, 32),
                        this.writeBits(e.readBits(a), a),
                        t -= a
                }
                ,
                p.prototype.readArrayBuffer = function(e) {
                    var t = this._view.getArrayBuffer(this._index, e);
                    return this._index += 8 * e,
                    t
                }
                ,
                p.prototype.writeArrayBuffer = function(e, t) {
                    this.writeBitStream(new p(e), 8 * t)
                }
                ,
                e.exports = {
                    BitView: m,
                    BitStream: p
                }
            }()
        }
        ).call(t, a("a5e2faae").Buffer)
    },
    15173389: function(e, t, a) {
        "use strict";
        var i = {
            "@metadata": {
                "last-updated": "2018-08-05",
                locale: "fr"
            },
            "word-order": "svo",
            "index-my-stats": "Mes statistiques",
            "index-leaderboards": "Classements",
            "index-slogan": "2d Battle royale",
            "index-region": "Région",
            "index-north-america": "Amérique du Nord",
            "index-europe": "Europe",
            "index-asia": "Asie",
            "index-players": "joueurs",
            "index-play-solo": "Jouer en solo",
            "index-play-duo": "Jouer en duo",
            "index-play-squad": "Jouer en squad",
            "index-join-team": "Joindre une équipe",
            "index-create-team": "Créer une équipe",
            "index-how-to-play": "Comment jouer",
            "index-leave-team": "Quitter l’équipe",
            "index-joining-team": "Rejoindre l’équipe",
            "index-creating-team": "Création d'une équipe",
            "index-invite-link": "Lien d'invitation",
            "index-solo": "Solo",
            "index-duo": "Duo",
            "index-squad": "Squad",
            "index-auto-fill": "Remplir",
            "index-no-fill": "Ne pas remplir",
            "index-waiting-for-leader": "En attente du chef pour débuter",
            "index-play": "Jouer",
            "index-featured-youtuber": "Youtubeur en vedette",
            "index-streaming-live": "Diffusions en direct!",
            "index-viewer": "spectateur",
            "index-viewers": "spectateurs",
            "index-settings": "Paramètres",
            "index-high-resolution": "Haute résolution (cocher pour une meilleure qualité)",
            "index-screen-shake": "Tremblement d'écran",
            "index-anon-player-names": "Anonymiser les noms des joueurs",
            "index-master-volume": "Volume principal",
            "index-sfx-volume": "Volume des effets",
            "index-music-volume": "Volume de la musique",
            "index-mobile-announce": "Maintenant disponible sur mobile !",
            "index-mobile-tooltip": "Visitez <span>surviv.io</span> depuis votre mobile pour pouvoir jouer partout !",
            "index-team-is-full": "L'équipe est pleine!",
            "index-failed-joining-team": "Impossible de joindre l'équipe.",
            "index-failed-creating-team": "Impossible de créer l'équipe.",
            "index-failed-finding-game": "Impossible de trouver une partie.",
            "index-failed-joining-game": "Impossible de joindre une partie.",
            "index-lost-connection": "Connexion à l'équipe perdue.",
            "index-host-closed": "L'hôte a fermé la connexion.",
            "index-view-more": "Afficher plus",
            "index-back-to-main": "Retour au menu principal",
            "index-most-kills": "Plus de meutres",
            "index-total-kills": "Total des meurtres",
            "index-total-wins": "Total des victoires",
            "index-top-5-percent": "Top 5 pour cent",
            "index-kill-death-ratio": "Ratio E/M",
            "index-for": "pour",
            "index-today": "Aujourd'hui",
            "index-this-week": "Cette semaine",
            "index-all-time": "Tous les temps",
            "index-top-100": "TOP 100",
            "index-rank": "Classement",
            "index-player": "Joueur",
            "index-total-games": "Total des parties",
            "index-controls": "Contrôles",
            "index-movement": "Mouvement",
            "index-movement-ctrl": "W, A, S, D",
            "index-aim": "Viser",
            "index-aim-ctrl": "Souris",
            "index-punch": "Frapper",
            "index-shoot": "Tirer",
            "index-shoot-ctrl": "Clic gauche",
            "index-change-weapons": "Changer d’armes",
            "index-change-weapons-ctrl": "1 à 4 ou molette",
            "index-stow-weapons": "Ranger les armes (Mode frapper)",
            "index-stow-weapons-ctrl": "3 ou E",
            "index-swap-weapons": "Arme précédente",
            "index-swap-weapons-ctrl": "Q",
            "index-reload": "Recharger",
            "index-reload-ctrl": "R",
            "index-scope-zoom": "Zoom du scope",
            "index-scope-zoom-ctrl": "Clique gauche sur le zoom",
            "index-pickup": "Prendre",
            "index-loot": "Ramasser",
            "index-revive": "Réanimer",
            "index-pickup-ctrl": "F",
            "index-use-medical": "Se soigner",
            "index-use-medical-ctrl": "Clique gauche sur l'objet ou 7 à 0",
            "index-drop-item": "Lâcher l'objet",
            "index-drop-item-ctrl": "Clique droit sur l'ojhet",
            "index-cancel-action": "Annuler l'action",
            "index-cancel-action-ctrl": "X",
            "index-view-map": "Voir la carte",
            "index-view-map-ctrl": "M ou G",
            "index-toggle-minimap": "Basculer la carte",
            "index-toggle-minimap-ctrl": "V",
            "index-use-ping": "Utiliser la roue de ping d'équipe",
            "index-use-ping-ctrl": "Tenez C, puis tenez un clic droit et traînez la souris, puis lâchez le clic droit.",
            "index-use-emote": "Utiliser la roue d'émotes",
            "index-use-emote-ctrl": "Tenez un clic droit et traînez la souris, puis lâchez le clic droit.",
            "index-tips-1-desc": "Le but de surviv.io est d'être le dernier joueur vivant. Vouz vivez seulement une fois par match - pas de respawn!",
            "index-tips-2": "2D PUBG",
            "index-tips-2-desc": 'Si vous avez joué d\'autres jeux type "battle royale" comme PUBG, Fortnite ou H1Z1, vous êtes à moitié chemin! Pensez à surviv.io comme PUBG en 2D.',
            "index-tips-3": "Piller et tuer",
            "index-tips-3-desc": "Vous commencerez le jeu avec pas d'objets à part d'un simple sac à dos. Naviguez le terrain pour trouver du butin: des armes, balles, viseurs et objets médicaux. Éliminez les autre joueurs et vous pouver prendre leurs objets!",
            "index-tips-4": "Rouge = Mauvais!",
            "index-tips-4-desc": "Les joueurs ne sont pas les seules choses qui peuvent vous tuer. La zone rouge meutrière va venir vers vous pas les côtés du terrain et inflige des dégâts de plus en plus dangereux. Gardez un oeil sur ca carte et restez saufs. ",
            "game-alive": "En vie",
            "game-reloading": "Rechargement",
            "game-using": "Utilisation :",
            "game-reviving": "Réanimation de",
            "game-revive-teammate": "Réaminez votre coéquipier",
            "game-equip": "Équiper",
            "game-cancel": "Annuler",
            "game-open-door": "Ouvrir la porte",
            "game-close-door": "Fermer la porte",
            "game-unlock": "Déverrouiller",
            "game-You": "Vous",
            "game-you": "vous avez",
            "game-themselves": "lui-même",
            "game-yourself": "toi-même",
            "game-you-died": "êtes mort",
            "game-player-died": "est mort",
            "game-with": "avec",
            "game-knocked-out": "a assommé",
            "game-killed": "a tué",
            "game-finally-killed": "a finalemaent tué",
            "game-finally-bled-out": "est finalement mort",
            "game-died-outside": "est mort hors de la zone sûre",
            "game-the-red-zone": "La zone rouge",
            "game-crushed": "écrasé",
            "game-the-air-drop": "La baisse aérienne",
            "game-waiting-for-players": "En attente de joueurs",
            "game-spectating": "En train de regarder",
            "game-red-zone-advances": "La zone rouge avance dans",
            "game-red-zone-advancing": "La zone rouge avance, allez vers la zone sûre!",
            "game-seconds": "secondes",
            "game-minutes": "minutes",
            "game-minute": "minute",
            "game-m": "m",
            "game-s": "s",
            "game-not-enough-space": "Pas assez d'espace!",
            "game-item-already-owned": "Vous avez déjà cet objet!",
            "game-item-already-equipped": "L'objet est déjà équipé",
            "game-better-item-equipped": "Un meilleur objet est déjà équipé!",
            "game-gun-cannot-fire": "Le fusil ne peut pas être tiré ici!",
            "game-play-new-game": "Nouvelle partie",
            "game-spectate": "Regarder",
            "game-full-screen": "Plein écran",
            "game-sound": "Son",
            "game-quit-game": "Quitter la partie",
            "game-return-to-game": "Retourner au jeu",
            "game-hide-match-stats": "Masquer les statistiques",
            "game-view-match-stats": "Voir les statistiques",
            "game-previous-teammate": "Coéquipier précédent",
            "game-next-teammate": "Coéquipier suivant",
            "game-leave-game": "Quitter la partie",
            "game-your-results": "Votre résultat",
            "game-chicken": "Victoire! Les poulets sont à nous!",
            "game-won-the-game": "a gagné la partie.",
            "game-team-eliminated": "Votre équipe à été éliminée.",
            "game-solo-rank": "Classement solo",
            "game-duo-rank": "Classement duo",
            "game-squad-rank": "Classement d'équipe",
            "game-rank": "Rang",
            "game-team-rank": "Rang d'équipe",
            "game-team-kills": "Meurtres de l'équipe",
            "game-kill": "Meurtre",
            "game-kills": "Meurtres",
            "game-damage-dealt": "Dégâts infligés",
            "game-damage-taken": "Dégâts subis",
            "game-survived": "Temps survécu",
            "game-backpack00": "Poche",
            "game-backpack01": "Petit sac à dos",
            "game-backpack02": "Sac à dos régulier",
            "game-backpack03": "Sac à dos militaire",
            "game-bandage": "Pansements",
            "game-bandage-tooltip": "Clique gauche pour restaurer 15 points de vie.",
            "game-healing-tooltip": "Ne peut restaurer plus de 75 points de vie.",
            "game-healthkit": "Kit médical",
            "game-healthkit-tooltip": "Clique gauche pour restaurer 100 points de vie.",
            "game-soda": "Soda",
            "game-soda-tooltip": "Clique gauche pour augmenter l'adrénaline de 25.",
            "game-adrenaline-tooltip": "L'adrénaline restaure la vie au fil du temps.",
            "game-painkiller": "Pillules",
            "game-painkiller-tooltip": "Clique gauche pour augmenter l'adrénaline de 50.",
            "game-9mm": "9mm",
            "game-9mm-tooltip": "Balles pour M9, G18C, MP5, MAC-10, UMP9 et Vector.",
            "game-12gauge": "Calibre 12",
            "game-12gauge-tooltip": "Balles pour M870, SPAS-12, Saiga-12 et MP220.",
            "game-762mm": "7.62mm",
            "game-762mm-tooltip": "Balles pour AK-47, SCAR-H, M39, Mosin-Nagant, SV-98, M1, OT-38 et DP-28.",
            "game-556mm": "5.56mm",
            "game-556mm-tooltip": "Balles pour FAMAS, M416, QBB-97, Mk 12 et M249.",
            "game-50AE": ".50 AE",
            "game-50AE-tooltip": "Balles pour Desert Eagle.",
            "game-308sub": ".308 Subsonic",
            "game-308sub-tooltip": "Balles pour AWM-S.",
            "game-flare": "Éclat",
            "game-flare-tooltip": "Balles pour Pistolet de détresse",
            "game-chest01": "Veste de niveau 1",
            "game-chest02": "Veste de niveau 2",
            "game-chest03": "Veste de niveau 3",
            "game-helmet01": "Casque de niveau 1",
            "game-helmet02": "Casque de niveau 2",
            "game-helmet03": "Casque de niveau 3",
            "game-1xscope": "Viseur x1",
            "game-2xscope": "Viseur x2",
            "game-4xscope": "Viseur x4",
            "game-8xscope": "Viseur x8",
            "game-15xscope": "Viseur x15",
            "game-level-1": "Niv. 1",
            "game-level-2": "Niv. 2",
            "game-level-3": "Niv. 3",
            "game-outfitBase": "Skin de base",
            "game-outfitRoyalFortune": "Fortune royale",
            "game-outfitKeyLime": "Key Lime",
            "game-outfitCobaltShell": "Coquille de cobalt",
            "game-outfitCarbonFiber": "Fibre de carbone",
            "game-outfitDarkGloves": "Le professionnel",
            "game-outfitGhillie": "Ghillie Suit",
            "game-outfitCamo": "Camouflage forêt",
            "game-outfitRed": "Cible d'entrainement",
            "game-outfitWhite": "Vengeur arctique",
            "game-outfitWoodland": "Combat de forêt",
            "game-fists": "Poings",
            "game-woodaxe": "Hache à bois",
            "game-hook": "Crochet",
            "game-pan": "Poêle",
            "game-ak47": "AK-47",
            "game-dp28": "DP-28",
            "game-mosin": "Mosin-Nagant",
            "game-m39": "M39 EMR",
            "game-mp5": "MP5",
            "game-mac10": "MAC-10",
            "game-ump9": "UMP9",
            "game-m870": "M870",
            "game-mp220": "MP220",
            "game-saiga": "Saiga-12",
            "game-m9": "M9",
            "game-glock": "G18C",
            "game-ot38": "OT-38",
            "game-flare_gun": "Pistolet de détresse",
            "game-famas": "FAMAS",
            "game-hk416": "M416",
            "game-mk12": "Mk 12 SPR",
            "game-m249": "M249",
            "game-frag": "Grenade à fragmentation",
            "game-hud-frag": "Frag.",
            "game-smoke": "Grenade fumigène",
            "game-hud-smoke": "Fumi.",
            "game-incendiary": "Grenade à incendie",
            "game-barrel_01": "un baril",
            "game-silo_01": "un silo",
            "game-oven_01": "un four",
            "game-control_panel_01": "Panneau de contrôle",
            "game-control_panel_02": "Panneau de contrôle",
            "game-control_panel_03": "un terminal d'ordinateur",
            "game-power_box_01": "une boîte électrique",
            "game-airdrop_crate_01": "baisse aérienne",
            "game-airdrop_crate_02": "baisse aérienne"
        };
        e.exports = i
    },
    "153d9481": function(e, t, a) {
        "use strict";
        function i(e, t) {
            if (!(e instanceof t))
                throw new TypeError("Cannot call a class as a function")
        }
        function r(e) {
            return e && e.length > 4 ? "img/emotes/" + e.slice(0, -4) + ".svg" : ""
        }
        var o = function() {
            function e(e, t) {
                for (var a = 0; a < t.length; a++) {
                    var i = t[a];
                    i.enumerable = i.enumerable || !1,
                    i.configurable = !0,
                    "value"in i && (i.writable = !0),
                    Object.defineProperty(e, i.key, i)
                }
            }
            return function(t, a, i) {
                return a && e(t.prototype, a),
                i && e(t, i),
                t
            }
        }()
          , n = a("8ee62bea")
          , s = a("b78cf179")
          , l = s.EmoteType
          , m = s.EmoteData
          , c = a("26be8056")
          , d = a("484b3444")
          , p = function() {
            function e(t) {
                i(this, e),
                this.config = t,
                this.selectedEmote = {
                    prevSlot: "",
                    img: "",
                    id: 0
                },
                this.unlockTypes = {
                    twitter: {
                        locked: "Follow to unlock GG, Question and Tombstone emotes!",
                        unlocked: "GG, Question and Tombstone emotes unlocked!",
                        config: "twitterFollow"
                    },
                    youtube: {
                        locked: "Subscribe to unlock Joy, Sob and Thinking emotes!",
                        unlocked: "Joy, Sob and Thinking emotes unlocked!",
                        config: "youtubeSubscribe"
                    },
                    facebook: {
                        locked: "Like to unlock flag emotes!",
                        unlocked: "Flag emotes unlocked!",
                        config: "facebookLike"
                    },
                    account: {
                        locked: "Create an account to unlock emotes!",
                        unlocked: "Account emotes unlocked!"
                    }
                }
            }
            return o(e, [{
                key: "init",
                value: function(e) {
                    var t = this
                      , a = n("#modal-customize");
                    n("#btn-customize").click(function() {
                        return a.finish(),
                        e.loggedIn && t.unlockEmotes("account"),
                        a.css("display", "block"),
                        n("#start-bottom-right").fadeOut(200),
                        d.addModalCloseListener(),
                        !1
                    }),
                    n(".btn-account-change-avatar, .account-avatar").click(function(a) {
                        e.loggedIn && t.populateAvatar(e.profile.avatar)
                    });
                    var i = this;
                    n("#customize-emote-wheel, #customize-emote-autos").find(".ui-emote-parent").each(function(e, a) {
                        var i = n(a)
                          , o = t.config.get(i.data("slot"))
                          , s = m[o]
                          , l = {
                            img: "",
                            id: 0
                        };
                        void 0 != s && (l = {
                            img: s.texture,
                            id: o
                        }),
                        i.find(".customize-emote-image").data("id", l.id);
                        var c = r(l.img);
                        i.find(".customize-emote-image").css("background-image", "url(" + c + ")")
                    });
                    var o = Object.keys(m);
                    o.sort(function(e, t) {
                        return m[e].category - m[t].category || e - t
                    });
                    for (var s = [], p = 0; p < o.length; p++)
                        for (var u in l)
                            l[u] == o[p] && s.push(l[u]);
                    for (var h = 0; h < s.length; h++) {
                        var g = s[h];
                        if (m.hasOwnProperty(g)) {
                            var y = m[g]
                              , f = y.noCustom || !1;
                            if (!y.teamOnly && !f) {
                                var x = !1
                                  , w = "";
                                y.twitterFollow && (x = !0,
                                w = "twitter"),
                                y.youtubeSubscribe && (x = !0,
                                w = "youtube"),
                                y.facebookLike && (x = !0,
                                w = "facebook"),
                                y.accountLogin && (x = !0,
                                w = "account");
                                var b = "customize-list-item";
                                b += x ? " customize-list-item-locked" : " customize-list-item-unlocked";
                                var _ = n("<div/>", {
                                    class: b,
                                    "data-lock-reason": w
                                });
                                _.append(n("<div/>", {
                                    class: "customize-emote-image",
                                    style: "background-image: url(" + r(y.texture) + ")",
                                    draggable: !x,
                                    "data-id": g
                                })),
                                n("#modal-customize-list").append(_),
                                b = "customize-list-item customize-list-item-unlocked",
                                _ = n("<div/>", {
                                    class: b
                                }),
                                _.append(n("<div/>", {
                                    class: "customize-emote-image",
                                    style: "background-image: url(" + r(y.texture) + ")",
                                    draggable: !x,
                                    "data-id": g
                                })),
                                n("#modal-account-avatar-list").append(_)
                            }
                        }
                    }
                    n(".customize-list-item-locked").hover(function() {
                        n('.tooltiptext[data-lock-reason="' + n(this).data("lock-reason") + '"]').css("visibility", "visible")
                    }, function() {
                        n('.tooltiptext[data-lock-reason="' + n(this).data("lock-reason") + '"]').css("visibility", "hidden")
                    }),
                    this.selectableSlots = n(".customize-col, .customize-list-item"),
                    this.emoteSlots = n(".customize-col"),
                    this.highlightedSlots = this.emoteSlots.siblings(".ui-emote-hl"),
                    this.highlightOpacityMin = .4,
                    this.emoteSelected = !1,
                    n("#btn-account-login-unlock").click(function() {
                        return n(".modal").fadeOut(200),
                        n(".account-details-guest").trigger("click"),
                        !1
                    }),
                    this.selectableSlots.on("mouseup", function() {
                        if (!n(this).hasClass("customize-list-item-locked"))
                            return i.emoteSelected && !n(this).hasClass("customize-list-item") ? void (i.emoteSelected = !1) : void i.selectEmote(n(this))
                    }),
                    this.selectableSlots.on("dragstart", function(e) {
                        if (!n(this).hasClass("customize-list-item-locked") && (i.selectEmote(n(this)),
                        !c.detectIE(!0))) {
                            var t = document.createElement("img");
                            t.src = i.selectedEmote.img.replace("url(", "").replace(")", "").replace(/\"/gi, ""),
                            e.originalEvent.dataTransfer.setDragImage(t, 64, 64)
                        }
                    }),
                    this.emoteSlots.on("drop", function(e) {
                        e.originalEvent.preventDefault();
                        var t = n(this).parent();
                        i.updateSlot(t, i.selectedEmote.img, i.selectedEmote.id),
                        i.emoteSelected = !1
                    }),
                    this.emoteSlots.on("mousedown", function(e) {
                        if (i.emoteSelected) {
                            e.stopPropagation();
                            var t = n(this).parent();
                            i.updateSlot(t, i.selectedEmote.img, i.selectedEmote.id)
                        }
                    }),
                    this.emoteSlots.on("dragover", function(e) {
                        e.originalEvent.preventDefault(),
                        n(this).parent().find(".ui-emote-hl").css("opacity", 1)
                    }),
                    this.emoteSlots.on("dragleave", function(e) {
                        e.originalEvent.preventDefault(),
                        n(this).parent().find(".ui-emote-hl").css("opacity", i.highlightOpacityMin)
                    }),
                    n(document).on("dragend", function(e) {
                        e.originalEvent.preventDefault(),
                        i.highlightedSlots.css({
                            display: "none",
                            opacity: 0
                        })
                    }),
                    n(".ui-emote-auto-trash").click(function() {
                        var e = n(this).parent();
                        i.updateSlot(e, "", 1)
                    });
                    for (var v in this.unlockTypes)
                        if (this.unlockTypes.hasOwnProperty(v) && "account" != v) {
                            var S = this.unlockTypes[v];
                            this.config.get(S.config) && this.unlockEmotes(v)
                        }
                    n("#btn-twitter-follow-unlock, #btn-youtube-subscribe-unlock, #btn-facebook-like-unlock").click(function() {
                        if (n(this).hasClass("btn-social-unlocked"))
                            return !1;
                        var e = n(this).data("lock-reason");
                        i.unlockEmotes(e)
                    })
                }
            }, {
                key: "selectEmote",
                value: function(e) {
                    var t = e.hasClass("customize-list-item");
                    this.emoteSelected = !0;
                    var a = t ? e : e.parent()
                      , i = a.find(".customize-emote-image");
                    this.selectedEmote = {
                        prevSlot: t ? null : a,
                        img: i.css("background-image"),
                        id: i.data("id")
                    },
                    this.highlightedSlots.css({
                        display: "block",
                        opacity: this.highlightOpacityMin
                    }),
                    this.selectableSlots.removeClass("customize-list-item-selected"),
                    t ? e.addClass("customize-list-item-selected") : a.find(".ui-emote-hl").css("opacity", 1)
                }
            }, {
                key: "updateSlot",
                value: function(e, t, a) {
                    var i = this.selectedEmote.prevSlot;
                    if (this.selectedEmote = {},
                    i) {
                        var r = e.find(".customize-emote-image");
                        this.updateSlot(i, r.css("background-image"), r.data("id"))
                    }
                    var o = e.find(".customize-emote-slot");
                    o.data("id", a),
                    o.css("background-image", t),
                    e.find(".ui-emote-hl").css("display", "none"),
                    "customizeAvatar" != e.attr("data-slot") && this.config.set(e.data("slot"), a),
                    this.selectableSlots.removeClass("customize-list-item-selected"),
                    this.highlightedSlots.css({
                        display: "none",
                        opacity: 0
                    })
                }
            }, {
                key: "unlockEmotes",
                value: function(e) {
                    this.unlockTypes[e].unlocked,
                    n('.btn-social-unlock[data-lock-reason="' + e + '"]').addClass("btn-social-unlocked");
                    var t = n('.customize-list-item-locked[data-lock-reason="' + e + '"]');
                    t.addClass("customize-list-item-unlocked").removeClass("customize-list-item-locked"),
                    t.find(".customize-emote-image").attr("draggable", !0),
                    this.config.set(this.unlockTypes[e].config, !0),
                    n(".customize-list-item-unlocked").off("mouseenter"),
                    n(".customize-list-item-unlocked").off("mouseleave"),
                    n(".customize-list-item-locked").on("mouseenter", function() {
                        n('.tooltiptext[data-lock-reason="' + n(this).data("lock-reason") + '"]').css("visibility", "visible")
                    }),
                    n(".customize-list-item-locked").on("mouseleave", function() {
                        n('.tooltiptext[data-lock-reason="' + n(this).data("lock-reason") + '"]').css("visibility", "hidden")
                    })
                }
            }, {
                key: "populateAvatar",
                value: function(e) {
                    var t = ""
                      , a = 0
                      , i = m[e];
                    void 0 != i && (t = i.texture,
                    a = e);
                    var o = n("#customize-account-avatar");
                    o.find(".customize-emote-image").data("id", a);
                    var s = r(t);
                    o.find(".customize-emote-image").css("background-image", "url(" + s + ")")
                }
            }]),
            e
        }();
        e.exports = p
    },
    "172c57dc": function(e, t, a) {
        "use strict";
        function i() {
            this.sprite = new o.Sprite,
            this.sprite.anchor.set(.5, .5),
            this.sprite.visible = !1
        }
        function r() {
            this.p = new m.Pool(i)
        }
        var o = a("80ac57a6")
          , n = a("6b42806d")
          , s = a("ceee80d9")
          , l = a("c2a798c8")
          , m = (a("af8ba00f"),
        a("ce29f17f"),
        a("753d6e4b"));
        i.prototype = {
            a: function() {
                this.imgScale = 1
            },
            o: function() {
                this.sprite.visible = !1
            },
            n: function(e, t, a, i) {
                var r = s.Defs[e.type];
                if (this.type = e.type,
                this.pos = l.copy(e.pos),
                this.rot = s.oriToRad(e.ori),
                this.scale = e.scale,
                this.layer = e.layer,
                this.collider = n.transform(r.collision, this.pos, this.rot, this.scale),
                this.imgScale = r.img.scale,
                a) {
                    var m = r.img;
                    if (this.sprite.texture = o.Texture.fromImage(m.sprite),
                    this.sprite.tint = m.tint,
                    this.sprite.alpha = 1,
                    this.sprite.visible = !0,
                    this.isNew = !0,
                    this.spriteAlpha = m.alpha,
                    this.inWater = !1,
                    r.height < .25) {
                        var c = i.map.getGroundSurface(this.pos, this.layer);
                        this.inWater = "water" == c
                    }
                    i.renderer.addPIXIObj(this.sprite, this.layer, r.img.zIdx, this.__id)
                }
            }
        },
        r.prototype = {
            l: function(e, t, a) {
                for (var i = this.p.m(), r = 0; r < i.length; r++) {
                    var o = i[r];
                    if (o.active) {
                        var n = a.pointToScreen(o.pos)
                          , s = a.pixels(o.scale * o.imgScale);
                        o.sprite.position.set(n.x, n.y),
                        o.sprite.scale.set(s, s),
                        o.sprite.rotation = -o.rot,
                        o.sprite.alpha = o.spriteAlpha * (o.inWater ? .3 : 1)
                    }
                }
            }
        },
        e.exports = {
            u: r
        }
    },
    "1901e2d9": function(e, t, a) {
        "use strict";
        var i = a("10899aea")
          , r = a("c2a798c8")
          , o = {
            sameLayer: function(e, t) {
                return (1 & e) == (1 & t) || 2 & e && 2 & t
            },
            sameAudioLayer: function(e, t) {
                return e == t || 2 & e || 2 & t
            },
            toGroundLayer: function(e) {
                return 1 & e
            },
            toStairsLayer: function(e) {
                return 2 | e
            },
            random: function(e, t) {
                return i.lerp(Math.random(), e, t)
            },
            randomInt: function(e, t) {
                return e = Math.ceil(e),
                t = Math.floor(t),
                Math.floor(Math.random() * (t - e + 1)) + e
            },
            randomPointInCircle: function(e) {
                var t = Math.random()
                  , a = Math.random();
                if (a < t) {
                    var i = t;
                    t = a,
                    a = i
                }
                return r.create(a * e * Math.cos(2 * Math.PI * t / a), a * e * Math.sin(2 * Math.PI * t / a))
            },
            hsv2rgb: function(e, t, a) {
                var i, r, o, n, s, l, m, c;
                switch (1 === arguments.length && (t = e.s,
                a = e.v,
                e = e.h),
                n = Math.floor(6 * e),
                s = 6 * e - n,
                l = a * (1 - t),
                m = a * (1 - s * t),
                c = a * (1 - (1 - s) * t),
                n % 6) {
                case 0:
                    i = a,
                    r = c,
                    o = l;
                    break;
                case 1:
                    i = m,
                    r = a,
                    o = l;
                    break;
                case 2:
                    i = l,
                    r = a,
                    o = c;
                    break;
                case 3:
                    i = l,
                    r = m,
                    o = a;
                    break;
                case 4:
                    i = c,
                    r = l,
                    o = a;
                    break;
                case 5:
                    i = a,
                    r = l,
                    o = m
                }
                return {
                    r: Math.round(255 * i),
                    g: Math.round(255 * r),
                    b: Math.round(255 * o)
                }
            },
            rgb2hex: function(e) {
                return (e.r << 16) + (e.g << 8) + e.b
            },
            hexToRgb: function(e) {
                var t = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);
                return t ? {
                    r: parseInt(t[1], 16),
                    g: parseInt(t[2], 16),
                    b: parseInt(t[3], 16)
                } : null
            },
            componentToHex: function(e) {
                var t = e.toString(16);
                return 1 == t.length ? "0" + t : t
            },
            colorToDOMString: function(e, t) {
                return "rgba(" + (e >> 16 & 255) + ", " + (e >> 8 & 255) + ", " + (255 & e) + ", " + t + ")"
            },
            updateColor: function(e, t) {
                e /= 100;
                var a = this.hexToRgb(t);
                return a.r,
                a.g,
                a.b,
                a.r = Math.round(a.r * e + 0 * (1 - e)),
                a.g = Math.round(a.g * e + 0 * (1 - e)),
                a.b = Math.round(a.b * e + 0 * (1 - e)),
                this.rgb2hex(a)
            }
        };
        e.exports = o
    },
    "1ad3d2a4": function(e, t, a) {
        "use strict";
        function i() {
            this.pos = o.create(0, 0),
            this.ppu = 16,
            this.zoom = 1.5,
            this.f = 1.5,
            this.screenWidth = 1,
            this.screenHeight = 1,
            this.shakeEnabled = !0,
            this.shakeInt = 0
        }
        var r = a("10899aea")
          , o = a("c2a798c8");
        i.prototype = {
            z: function() {
                return this.ppu * this.zoom
            },
            pointToScreen: function(e) {
                return {
                    x: .5 * this.screenWidth + (e.x - this.pos.x) * this.z(),
                    y: .5 * this.screenHeight - (e.y - this.pos.y) * this.z()
                }
            },
            screenToPoint: function(e) {
                return {
                    x: this.pos.x + (e.x - .5 * this.screenWidth) / this.z(),
                    y: this.pos.y + (.5 * this.screenHeight - e.y) / this.z()
                }
            },
            pixels: function(e) {
                return e * this.zoom
            },
            scaleToScreen: function(e) {
                return e * this.z()
            },
            setShakeEnabled: function(e) {
                this.shakeEnabled = e
            },
            addShake: function(e, t) {
                var a = o.length(o.sub(this.pos, e))
                  , i = r.delerp(a, 40, 10) * t;
                this.shakeInt = Math.max(this.shakeInt, i)
            },
            applyShake: function() {
                this.shakeEnabled && (this.pos = o.add(this.pos, o.mul(o.randomUnit(), this.shakeInt))),
                this.shakeInt = 0
            }
        },
        e.exports = {
            _: i
        }
    },
    "26be8056": function(e, t, a) {
        "use strict";
        function i(e) {
            if (Array.isArray(e)) {
                for (var t = 0, a = Array(e.length); t < e.length; t++)
                    a[t] = e[t];
                return a
            }
            return Array.from(e)
        }
        function r() {
            window.appk = 1
        }
        function o(e, t) {
            t || (t = window.location.href),
            e = e.replace(/[\[\]]/g, "\\$&");
            var a = new RegExp("[?&]" + e + "(=([^&#]*)|&|#|$)")
              , i = a.exec(t);
            if (i)
                return i[2] ? decodeURIComponent(i[2].replace(/\+/g, " ")) : ""
        }
        function n(e) {
            for (var t = e + "=", a = decodeURIComponent(document.cookie), i = a.split(";"), r = 0; r < i.length; r++) {
                for (var o = i[r]; " " == o.charAt(0); )
                    o = o.substring(1);
                if (0 == o.indexOf(t))
                    return o.substring(t.length, o.length)
            }
            return ""
        }
        function s(e) {
            var t = e.trim();
            return t.length > T.kNameMaxLen && (t = t.substring(0, T.kNameMaxLen)),
            t
        }
        function l(e) {
            return e = e || "",
            e.replace(/&/g, "&amp;").replace(/"/g, "&quot;").replace(/'/g, "&#39;").replace(/</g, "&lt;").replace(/>/g, "&gt;")
        }
        function m(e, t, a) {
            var i = A.getContext("2d");
            i.font = t;
            for (var r = e.length, o = e; r > 0 && !(i.measureText(o).width <= a); )
                o = e.substring(0, --r) + "…";
            return o
        }
        function c(e) {
            return void 0 === e ? "undefined" : null === e ? "null" : JSON.stringify(e)
        }
        function d() {
            for (var e = ["localhost", "surviv.io", "surviv2.io", "2dbattleroyale.com", "2dbattleroyale.org"], t = window.location.hostname, a = !1, i = 0; i < e.length; i++)
                if (-1 != t.indexOf(e[i])) {
                    a = !0;
                    break
                }
            return P.dev || a
        }
        function p() {
            var e = navigator.language || navigator.userLanguage;
            e = e.toLowerCase();
            for (var t = ["pt", "de", "es", "fr", "ko", "ru", "en"], a = 0; a < t.length; a++)
                if (-1 != e.indexOf(t[a])) {
                    e = t[a];
                    break
                }
            for (var i = ["da", "de", "en", "es", "fr", "it", "jp", "ko", "nl", "pl", "pt", "ru", "sv", "th", "tr", "vn", "zh-cn", "zh-tw"], r = 0; r < i.length; r++)
                if (-1 != e.indexOf(i[r]))
                    return e = i[r];
            return ""
        }
        function u() {
            return !!navigator.userAgent.match(/Version\/[\d\.]+.*Safari/) && this.detectiOS()
        }
        function h() {
            return /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream
        }
        function g() {
            return h() && 375 == screen.width && 812 == screen.height
        }
        function y() {
            var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0]
              , t = window.navigator.userAgent
              , a = t.indexOf("MSIE ")
              , i = t.indexOf("Trident/")
              , r = t.indexOf("Edge/");
            return a > 0 || i > 0 || e && r > 0
        }
        function f(e, t) {
            var a = document.body
              , r = !1;
            if (e) {
                for (var o = [[99, 104, 101, 97, 116], [104, 97, 99, 107], [109, 101, 103, 97, 109, 111, 100]], n = [], s = 0; s < o.length; s++)
                    n.push(String.fromCharCode.apply(String, i(o[s])));
                for (var l = Object.keys(localStorage), m = 0; m < l.length; m++)
                    for (var c = 0; c < n.length; c++)
                        -1 !== l[m].toLowerCase().indexOf(n[c]) && (delete localStorage[l[m]],
                        r = !0)
            }
            r && (t && t.close(),
            a && a.parentNode && a.parentNode.removeChild(a),
            C.storeGeneric("error", "err"),
            C.enabled = !1)
        }
        function x() {
            return window.innerWidth > window.innerHeight || 90 == window.orientation || -90 == window.orientation
        }
        function w() {
            return x() ? "landscape" : "portrait"
        }
        function b() {
            var e = window.innerWidth
              , t = window.innerHeight;
            if (h()) {
                if (e = screen.width,
                t = screen.height,
                x()) {
                    var a = t;
                    t = e,
                    e = a
                }
                g() && (x() ? e -= 88 : t -= 88)
            }
            return {
                width: e,
                height: t
            }
        }
        function _(e) {
            var t = document.documentElement;
            document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement || document.msFullscreenElement || e ? document.exitFullscreen ? document.exitFullscreen() : document.msExitFullscreen ? document.msExitFullscreen() : document.mozCancelFullScreen ? document.mozCancelFullScreen() : document.webkitExitFullscreen && document.webkitExitFullscreen() : t.requestFullscreen ? t.requestFullscreen() : t.msRequestFullscreen ? (t = document.body,
            t.msRequestFullscreen()) : t.mozRequestFullScreen ? t.mozRequestFullScreen() : t.webkitRequestFullscreen && t.webkitRequestFullscreen()
        }
        function v() {
            return void 0 !== o("debug") || !1
        }
        function S(e, t) {
            !function a(i, r) {
                if (i >= r)
                    return void t("full");
                var o = function() {
                    setTimeout(function() {
                        a(i + 1, r)
                    }, 250)
                };
                M.ajax({
                    type: "POST",
                    url: "/api/find_game",
                    data: JSON.stringify(e),
                    contentType: "application/json; charset=utf-8",
                    timeout: 1e4,
                    success: function(e, a) {
                        if ("full" != e.err && e.res)
                            if (e.err)
                                t(e.err);
                            else {
                                var i = e.res[0];
                                void 0 === i.hosts || void 0 === i.addrs ? o() : t(null, i)
                            }
                        else
                            o()
                    },
                    error: function(e) {
                        o()
                    }
                })
            }(0, 3)
        }
        function k(e, t, a) {
            var i = "https:" == window.location.protocol
              , r = i ? "wss:" : "ws:"
              , o = i ? t.hosts : t.addrs;
            o = o || [];
            for (var n = [], s = 0; s < o.length; s++)
                n.push(r + "//" + o[s] + "/play?gameId=" + t.gameId);
            !function i(r) {
                var o = function() {
                    i(r)
                };
                if (r.length > 0) {
                    var n = r.shift();
                    v() && console.log("Joining game", n, t.zone),
                    e.k(t.data, n, o)
                } else
                    a()
            }(n)
        }
        function z() {
            M(".qc-cmp-ui-container").remove(),
            M(".qc-cmp-ui-showing").removeClass("qc-cmp-ui-showing")
        }
        var M = a("8ee62bea")
          , T = a("300e2704")
          , P = a("ce29f17f")
          , C = a("f398b7c7")
          , A = document.createElement("canvas");
        e.exports = {
            I: r,
            getParameterByName: o,
            getCookie: n,
            sanitizeNameInput: s,
            htmlEscape: l,
            truncateString: m,
            varToString: c,
            authLocation: d,
            detectLanguage: p,
            detectiOS: h,
            detectiPhoneX: g,
            detectMobileSafari: u,
            detectIE: y,
            O: f,
            getOrientation: w,
            isLandscape: x,
            getScreenDimensions: b,
            toggleFullScreen: _,
            logDebug: v,
            findGame: S,
            joinGame: k,
            removeConsent: z
        }
    },
    "2701b048": function(e, t, a) {
        "use strict";
        function i() {
            this.sprite = o.Sprite.fromImage("map-airdrop-01.img"),
            this.sprite.anchor.set(.5, .5),
            this.sprite.visible = !1
        }
        function r() {
            this.B = new d.Pool(i)
        }
        var o = a("80ac57a6")
          , n = a("6b42806d")
          , s = a("989ad62a")
          , l = a("10899aea")
          , m = a("1901e2d9")
          , c = a("c2a798c8")
          , d = (a("af8ba00f"),
        a("753d6e4b"));
        i.prototype = {
            a: function() {
                this.playedLandFx = !1,
                this.landed = !1,
                this.fallInstance = null,
                this.chuteDeployed = !1,
                this.soundUpdateThrottle = 0,
                this.pos = c.create(0, 0),
                this.isNew = !1,
                this.fallTicker = 0
            },
            o: function() {
                this.fallInstance && this.fallInstance.stop(),
                this.fallInstance = null,
                this.sprite.visible = !1
            },
            n: function(e, t, a, i) {
                a && (this.isNew = !0,
                this.fallTicker = e.fallT * s.airdrop.fallTime),
                t && (this.pos = c.copy(e.pos)),
                this.landed = e.landed
            }
        },
        r.prototype = {
            o: function() {
                for (var e = this.B.m(), t = 0; t < e.length; t++)
                    e[t].o()
            },
            l: function(e, t, a, i, r, o, d) {
                for (var p = this.B.m(), u = 0; u < p.length; u++) {
                    var h = p[u];
                    if (h.active) {
                        h.fallTicker += e;
                        var g = l.clamp(h.fallTicker / s.airdrop.fallTime, 0, 1)
                          , y = 0;
                        if (!(m.sameLayer(y, t.layer) || 2 & t.layer) || 2 & t.layer && i.insideStructureMask(n.createCircle(h.pos, 1)) || (y |= 2),
                        h.landed && !h.playedLandFx && (h.playedLandFx = !0,
                        !h.isNew)) {
                            for (var f = 0; f < 10; f++) {
                                var x = c.randomUnit();
                                r.addParticle("airdropSmoke", y, h.pos, x)
                            }
                            var w = "airdrop_crash_01";
                            if ("water" == i.getGroundSurface(h.pos, y)) {
                                w = "airdrop_crash_02";
                                for (var b = 0; b < 12; b++) {
                                    var _ = c.add(h.pos, c.mul(c.randomUnit(), m.random(4.5, 6)));
                                    i.addRipple(_, y, .075 * b)
                                }
                            }
                            d.playSound(w, {
                                channel: "sfx",
                                soundPos: h.pos,
                                layer: y,
                                muffled: !0
                            }),
                            d.stopSound(h.fallInstance),
                            h.fallInstance = null
                        }
                        !h.chuteDeployed && g <= .1 && (d.playSound("airdrop_chute_01", {
                            channel: "sfx",
                            soundPos: h.pos,
                            layer: y,
                            rangeMult: 1.75,
                            muffled: !1
                        }),
                        h.chuteDeployed = !0),
                        h.landed || h.fallInstance || (h.fallInstance = d.playSound("airdrop_fall_01", {
                            channel: "sfx",
                            soundPos: h.pos,
                            layer: y,
                            rangeMult: 1.75,
                            muffled: !1,
                            ignoreMinAllowable: !0,
                            offset: h.fallTicker
                        })),
                        h.fallInstance && h.soundUpdateThrottle < 0 ? (h.soundUpdateThrottle = .1,
                        d.updateSound(h.fallInstance, "sfx", h.pos, {
                            layer: y,
                            rangeMult: 1.75,
                            muffled: !1,
                            ignoreMinAllowable: !0
                        })) : h.soundUpdateThrottle -= e,
                        h.rad = l.lerp(Math.pow(1 - g, 1.1), 5, 12),
                        o.addPIXIObj(h.sprite, y, 1500, h.__id);
                        var v = a.pointToScreen(h.pos)
                          , S = a.pixels(2 * h.rad / a.ppu);
                        h.sprite.position.set(v.x, v.y),
                        h.sprite.scale.set(S, S),
                        h.sprite.tint = 16776960,
                        h.sprite.alpha = 1,
                        h.sprite.visible = !h.landed,
                        h.isNew = !1
                    }
                }
            }
        },
        e.exports = {
            j: r
        }
    },
    "29d4cdc4": function(e, t, a) {
        "use strict";
        var i = {
            "@metadata": {
                "last-updated": "2018-01-28",
                locale: "de"
            },
            "word-order": "sov",
            "index-slogan": "2d Battle Royale",
            "index-region": "Region",
            "index-north-america": "Nordamerika",
            "index-europe": "Europa",
            "index-asia": "Asien",
            "index-players": "Spieler",
            "index-play-solo": "Solo spielen",
            "index-play-duo": "Duo spielen",
            "index-play-squad": "Squad spielen",
            "index-create-team": "Team erstellen",
            "index-how-to-play": "Wie man spielt",
            "index-leave-team": "Team verlassen",
            "index-joining-team": "Beitritt zum Team",
            "index-creating-team": "Team erstellen",
            "index-invite-link": "Einladungslink",
            "index-solo": "Solo",
            "index-duo": "Duo",
            "index-squad": "Squad",
            "index-auto-fill": "Auffüllen",
            "index-no-fill": "Kein Füllen",
            "index-waiting-for-leader": "Warten auf den Anführer, um das Spiel zu starten",
            "index-play": "Spielen",
            "index-featured-youtuber": "Vorgestellter YouTuber",
            "index-settings": "Einstellungen",
            "index-high-resolution": "Hohe Auflösung (Aktivieren zur Steigerung der visuellen Qualität)",
            "index-screen-shake": "Bildschirmschütteln",
            "index-master-volume": "Gesamtlautstärke",
            "index-sfx-volume": "Effektlautstärke",
            "index-music-volume": "Musiklautstärke",
            "index-mobile-announce": "Nun mobil verfügbar!",
            "index-team-is-full": "Das Team ist voll!",
            "index-failed-joining-team": "Fehlgeschlagener Eintritt ins Team.",
            "index-failed-creating-team": "Das Erstellen eines Teams ist fehlgeschlagen.",
            "index-failed-finding-game": "Die Spielsuche ist fehlgeschlagen.",
            "index-failed-joining-game": "Fehlgeschlagener Beitritt zum Spiel.",
            "index-lost-connection": "Verbindung zum Team verloren.",
            "index-host-closed": "Serververbindung geschlossen.",
            "index-view-more": "Mehr anzeigen",
            "index-back-to-main": "Zurück zum Hauptmenü",
            "index-most-kills": "Meiste Tötungen",
            "index-total-kills": "Gesamt Tötungen",
            "index-total-wins": "Gesamtgewinne",
            "index-top-5-percent": "Top 5 Prozent",
            "index-kill-death-ratio": "Kill-Tod-Verhältnis",
            "index-for": "für",
            "index-today": "Heute",
            "index-this-week": "Diese Woche",
            "index-all-time": "Aller Zeiten",
            "index-top-100": "TOP 100",
            "index-rank": "Rang",
            "index-player": "Spieler",
            "index-total-games": "Gesamtanzahl Spiele",
            "index-controls": "Steuerung",
            "index-movement": "Bewegung",
            "index-movement-ctrl": "W, A, S, D",
            "index-aim": "Zielen",
            "index-aim-ctrl": "Maus",
            "index-punch": "Schlagen",
            "index-shoot": "Schießen",
            "index-shoot-ctrl": "Links-Klick",
            "index-change-weapons": "Waffen wechseln",
            "index-change-weapons-ctrl": "1 bis 4 oder Mausrad",
            "index-stow-weapons": "Waffen verstauen (Schlag-Modus)",
            "index-stow-weapons-ctrl": "3 oder E",
            "index-swap-weapons": "Wechsel zu vorherigen Waffe",
            "index-swap-weapons-ctrl": "Q",
            "index-reload": "Nachladen",
            "index-reload-ctrl": "R",
            "index-scope-zoom": "Zielfernrohr Zoom",
            "index-scope-zoom-ctrl": "Linksklick auf Zoom",
            "index-pickup": "aufnehmen",
            "index-loot": "Beute",
            "index-revive": "wiederbeleben",
            "index-pickup-ctrl": "F",
            "index-use-medical": "Medizinisches Item verwenden",
            "index-use-medical-ctrl": "Linksklick auf Item oder 7 bis 0",
            "index-drop-item": "Item ablegen",
            "index-drop-item-ctrl": "Rechtsklick auf Item",
            "index-cancel-action": "Aktion abbrechen",
            "index-cancel-action-ctrl": "X",
            "index-view-map": "Karte anzeigen",
            "index-view-map-ctrl": "M oder G",
            "index-toggle-minimap": "Minimap umschalten",
            "index-toggle-minimap-ctrl": "V",
            "game-alive": "Am Leben",
            "game-reloading": "Nachladen",
            "game-using": "Benutzen",
            "game-reviving": "Wiederbelebung",
            "game-revive-teammate": "Spieler wiederbeleben",
            "game-equip": "Equip",
            "game-cancel": "Beenden",
            "game-You": "You",
            "game-you": "you",
            "game-themselves": "themselves",
            "game-yourself": "yourself",
            "game-you-died": "died",
            "game-player-died": "died",
            "game-with": "with",
            "game-knocked-out": "knocked out",
            "game-killed": "killed",
            "game-finally-killed": "finally killed",
            "game-finally-bled-out": "finally bled out",
            "game-died-outside": "died outside the safe zone",
            "game-the-red-zone": "The red zone",
            "game-waiting-for-players": "Warten auf Spieler",
            "game-spectating": "Zuschauen",
            "game-red-zone-advances": "Rote Zone schreitet voran in",
            "game-red-zone-advancing": "Rote Zone rückt vor, in die sichere Zone!",
            "game-seconds": "Sekunden",
            "game-minutes": "Minuten",
            "game-minute": "Minute",
            "game-m": "m",
            "game-s": "s",
            "game-not-enough-space": "Nicht genügend Platz!",
            "game-item-already-owned": "Item bereits in Besitz!",
            "game-item-already-equipped": "Item bereits ausgerüstet!",
            "game-better-item-equipped": "Besseres Item ausgestattet!",
            "game-play-new-game": "Neues Spiel starten",
            "game-spectate": "Zuschauen",
            "game-full-screen": "Vollbild",
            "game-sound": "Ton",
            "game-quit-game": "Spiel beenden",
            "game-return-to-game": "Zurück zum Spiel",
            "game-hide-match-stats": "Match-Statistiken ausblenden",
            "game-view-match-stats": "Match-Statistiken anzeigen",
            "game-previous-teammate": "Vorheriger Teamkollege",
            "game-next-teammate": "Nächster Teamkollege",
            "game-spectate-previous": "Vorheriger",
            "game-spectate-next": "Nächster",
            "game-leave-game": "Spiel verlassen",
            "game-your-results": "Ihre Ergebnisse",
            "game-chicken": "Gewinner Gewinner Hühnchen-Dinner!",
            "game-won-the-game": "gewonnen.",
            "game-team-eliminated": "Ihr Team wurde besiegt.",
            "game-rank": "Rang",
            "game-team-rank": "Team Rang",
            "game-team-kills": "Team Tötungen",
            "game-kill": "Tötung",
            "game-kills": "Tötungen",
            "game-damage-dealt": "Verursachter Schaden",
            "game-damage-taken": "Erhaltener Schaden",
            "game-survived": "Überlebt",
            "game-backpack00": "Beutel",
            "game-backpack01": "Kleiner Rucksack",
            "game-backpack02": "Normaler Rucksack",
            "game-backpack03": "Militärrucksack",
            "game-bandage": "Bandage",
            "game-bandage-tooltip": "Klicken Sie mit der linken Maustaste, um 15 Lebenspunkte wiederherzustellen.",
            "game-healing-tooltip": "Kann nicht mehr als 75 Lebenspunkte heilen.",
            "game-healthkit": "Erste Hilfe Tasche",
            "game-healthkit-tooltip": "Klicken Sie mit der linken Maustaste, um 100 Lebenspunkte wiederherzustellen.",
            "game-soda": "Soda",
            "game-soda-tooltip": "Klicke mit der linken Maustaste, um den Adrenalinspiegel um 25 zu erhöhen.",
            "game-adrenaline-tooltip": "Adrenalin stellt die Gesundheit im Laufe der Zeit wieder her.",
            "game-painkiller": "Schmerzmittel",
            "game-painkiller-tooltip": "Klicken Sie mit der linken Maustaste, um den Adrenalinspiegel um 50 zu erhöhen.",
            "game-9mm": "9mm",
            "game-9mm-tooltip": "Munition für M9, G18C, MP5, MAC-10, UMP9 und Vector.",
            "game-12gauge": "12er Kaliber",
            "game-12gauge-tooltip": "Munition für M870, SPAS-12, Saiga-12 und MP220.",
            "game-762mm": "7.62mm",
            "game-762mm-tooltip": "Munition für AK-47, SCAR-H, M39, Mosin-Nagant, SV-98, M1, OT-38 und DP-28.",
            "game-556mm": "5.56mm",
            "game-556mm-tooltip": "Munition für FAMAS, M416, QBB-97, Mk 12 und M249.",
            "game-50AE": ".50 AE",
            "game-50AE-tooltip": "Munition für Desert Eagle.",
            "game-308sub": ".308 Subsonic",
            "game-308sub-tooltip": "Munition für AWM-S.",
            "game-flare": "Flare",
            "game-flare-tooltip": "Munition für Flare Gun.",
            "game-chest01": "Level 1 Weste",
            "game-chest02": "Level 2 Weste",
            "game-chest03": "Level 3 Weste",
            "game-helmet01": "Level 1 Helm",
            "game-helmet02": "Level 2 Helm",
            "game-helmet03": "Level 3 Helm",
            "game-1xscope": "1x Visier",
            "game-2xscope": "2x Visier",
            "game-4xscope": "4x Visier",
            "game-8xscope": "8x Visier",
            "game-15xscope": "15x Visier",
            "game-level-1": "Lvl. 1",
            "game-level-2": "Lvl. 2",
            "game-level-3": "Lvl. 3",
            "game-outfitBase": "Basic Outfit",
            "game-outfitRoyalFortune": "Royal Fortune",
            "game-outfitKeyLime": "Key Lime",
            "game-outfitCobaltShell": "Cobalt Shell",
            "game-outfitCarbonFiber": "Carbon Fiber",
            "game-outfitDarkGloves": "The Professional",
            "game-outfitGhillie": "Ghillie Suit",
            "game-outfitCamo": "Forest Camo",
            "game-outfitRed": "Target Practice",
            "game-outfitWhite": "Arctic Avenger",
            "game-ak47": "AK-47",
            "game-dp28": "DP-28",
            "game-mosin": "Mosin-Nagant",
            "game-m39": "M39 EMR",
            "game-mp5": "MP5",
            "game-mac10": "MAC-10",
            "game-ump9": "UMP9",
            "game-m870": "M870",
            "game-mp220": "MP220",
            "game-saiga": "Saiga-12",
            "game-m9": "M9",
            "game-glock": "G18C",
            "game-ot38": "OT-38",
            "game-barrel_01": "a barrel",
            "game-silo_01": "a silo"
        };
        e.exports = i
    },
    "2bb110d0": function(e, t, a) {
        "use strict";
        e.exports = {
            background: 2118510,
            water: 3310251,
            beach: 13480795,
            grass: 8433481,
            underground: 1772803
        }
    },
    "300e2704": function(e, t, a) {
        "use strict";
        function i(e, t) {
            if (!(e instanceof t))
                throw new TypeError("Cannot call a class as a function")
        }
        function r(e, t, a, i, r) {
            P[e] = {
                serializePart: t,
                serializeFull: a,
                deserializePart: i,
                deserializeFull: r
            }
        }
        function o(e, t) {
            if (t.scopedIn = e.readBoolean(),
            t.health = e.readFloat(0, 100, 8),
            t.boostDirty = e.readBoolean(),
            t.boostDirty && (t.boost = e.readFloat(0, 100, 8)),
            t.hasAction = e.readBoolean(),
            t.hasAction && (t.action = {},
            t.action.time = e.readFloat(0, 10, 12),
            t.action.duration = e.readFloat(0, 10, 12),
            t.action.item = e.readItemType(),
            t.action.targetId = e.readUint16()),
            t.inventoryDirty = e.readBoolean(),
            t.inventoryDirty) {
                t.curScope = e.readItemType(),
                t.inventory = {};
                for (var a in x.bagSizes)
                    t.inventory[a] = e.readUint16()
            }
            if (t.weapsDirty = e.readBoolean(),
            t.weapsDirty) {
                t.curWeapIdx = e.readBits(2),
                e.readBits(6),
                t.weapons = [];
                for (var i = 0; i < x.WeaponSlot.Count; i++) {
                    var r = {};
                    r.name = e.readItemType(),
                    r.ammo = e.readUint8(),
                    t.weapons.push(r)
                }
            }
            t.spectatorCountDirty = e.readBoolean(),
            t.spectatorCountDirty && (t.spectatorCount = e.readUint8()),
            e.readBits(2)
        }
        function n(e, t) {
            t.pos = e.readVec(0, 0, 1024, 1024, 16),
            t.health = e.readFloat(0, 100, 5),
            t.disconnected = e.readBoolean(),
            t.dead = e.readBoolean(),
            t.downed = e.readBoolean()
        }
        function s(e, t) {
            t.teamId = e.readUint8(),
            t.playerIds = [];
            for (var a = e.readUint8(), i = 0; i < a; i++) {
                var r = e.readUint16();
                t.playerIds.push(r)
            }
        }
        function l(e, t) {
            t.mode = e.readUint8(),
            t.duration = e.readFloat32(),
            t.posOld = e.readVec(0, 0, 1024, 1024, 16),
            t.posNew = e.readVec(0, 0, 1024, 1024, 16),
            t.radOld = e.readFloat(0, 2048, 16),
            t.radNew = e.readFloat(0, 2048, 16)
        }
        function m(e, t) {
            e.writeString(t.name),
            e.writeVec(t.pos, 0, 0, 1024, 1024, 16)
        }
        function c(e, t) {
            t.name = e.readString(),
            t.pos = e.readVec(0, 0, 1024, 1024, 16)
        }
        function d(e, t) {
            e.writeMapType(t.type),
            e.writeVec(t.pos, 0, 0, 1024, 1024, 16),
            e.writeBits(t.ori, 2),
            e.writeFloat(t.scale, b.MinScale, b.MaxScale, 6)
        }
        function p(e, t) {
            t.type = e.readMapType(),
            t.pos = e.readVec(0, 0, 1024, 1024, 16),
            t.ori = e.readBits(2),
            t.scale = e.readFloat(b.MinScale, b.MaxScale, 6)
        }
        var u = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
            return typeof e
        }
        : function(e) {
            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
        }
          , h = function() {
            function e(e, t) {
                for (var a = 0; a < t.length; a++) {
                    var i = t[a];
                    i.enumerable = i.enumerable || !1,
                    i.configurable = !0,
                    "value"in i && (i.writable = !0),
                    Object.defineProperty(e, i.key, i)
                }
            }
            return function(t, a, i) {
                return a && e(t.prototype, a),
                i && e(t, i),
                t
            }
        }()
          , g = a("0e566746")
          , y = (a("34e32c48"),
        a("6b42806d"),
        a("b78cf179"))
          , f = y.EmoteSlot
          , x = a("989ad62a")
          , w = a("8649e148")
          , b = (x.Action,
        a("ceee80d9"))
          , _ = a("10899aea")
          , v = a("c2a798c8")
          , S = function() {
            function e(t) {
                i(this, e),
                this._typeToId = {},
                this._idToType = {},
                this.nextId = 0,
                this.maxId = Math.pow(2, t) - 1,
                this.addType("")
            }
            return h(e, [{
                key: "addType",
                value: function(e) {
                    g(void 0 === this._typeToId[e], "Type " + e + " has already been defined!"),
                    g(this.nextId <= this.maxId),
                    this._typeToId[e] = this.nextId,
                    this._idToType[this.nextId] = e,
                    this.nextId++
                }
            }, {
                key: "typeToId",
                value: function(e) {
                    var t = this._typeToId[e];
                    return g(void 0 !== t),
                    t
                }
            }, {
                key: "idToType",
                value: function(e) {
                    var t = this._idToType[e];
                    return void 0 === t && console.error("Invalid id given to idToType", e, "max", Object.keys(this._idToType).length),
                    t
                }
            }]),
            e
        }()
          , k = new S(8)
          , z = new S(16);
        !function() {
            for (var e = Object.keys(x.items), t = 0; t < e.length; t++)
                k.addType(e[t]);
            for (var a = Object.keys(x.explosions), i = 0; i < a.length; i++)
                k.addType(a[i]);
            for (var r = Object.keys(x.bullets), o = 0; o < r.length; o++)
                k.addType(r[o]);
            for (var n = Object.keys(b.Defs), s = 0; s < n.length; s++)
                z.addType(n[s])
        }();
        var M = a("14a25ec1");
        M.BitStream.prototype.writeBytes = function(e, t, a) {
            g(this._index % 8 == 0);
            var i = new Uint8Array(e._view._view.buffer,t,a);
            this._view._view.set(i, this._index / 8),
            this._index += 8 * a
        }
        ,
        M.BitStream.prototype.writeString = M.BitStream.prototype.writeASCIIString,
        M.BitStream.prototype.readString = M.BitStream.prototype.readASCIIString,
        M.BitStream.prototype.writeFloat = function(e, t, a, i) {
            g(i > 0 && i < 31),
            g(e >= t && e <= a);
            var r = (1 << i) - 1
              , o = _.clamp(e, t, a)
              , n = (o - t) / (a - t)
              , s = n * r + .5;
            this.writeBits(s, i)
        }
        ,
        M.BitStream.prototype.readFloat = function(e, t, a) {
            g(a > 0 && a < 31);
            var i = (1 << a) - 1;
            return e + this.readBits(a) / i * (t - e)
        }
        ,
        M.BitStream.prototype.writeVec = function(e, t, a, i, r, o) {
            this.writeFloat(e.x, t, i, o),
            this.writeFloat(e.y, a, r, o)
        }
        ,
        M.BitStream.prototype.readVec = function(e, t, a, i, r) {
            return v.create(this.readFloat(e, a, r), this.readFloat(t, i, r))
        }
        ,
        M.BitStream.prototype.writeUnitVec = function(e, t) {
            this.writeVec(e, -1.0001, -1.0001, 1.0001, 1.0001, t)
        }
        ,
        M.BitStream.prototype.readUnitVec = function(e) {
            return this.readVec(-1.0001, -1.0001, 1.0001, 1.0001, e)
        }
        ,
        M.BitStream.prototype.writeVec32 = function(e) {
            this.writeFloat32(e.x),
            this.writeFloat32(e.y)
        }
        ,
        M.BitStream.prototype.readVec32 = function() {
            return v.create(this.readFloat32(), this.readFloat32())
        }
        ,
        M.BitStream.prototype.writeItemType = function(e) {
            this.writeUint8(k.typeToId(e))
        }
        ,
        M.BitStream.prototype.readItemType = function() {
            return k.idToType(this.readUint8())
        }
        ,
        M.BitStream.prototype.writeMapType = function(e) {
            this.writeUint16(z.typeToId(e))
        }
        ,
        M.BitStream.prototype.readMapType = function() {
            return z.idToType(this.readUint16())
        }
        ;
        var T = function() {
            function e(t) {
                i(this, e);
                var a = t instanceof ArrayBuffer ? t : null;
                this.valid = null != a,
                this.valid ? (this.arrayBuf = a,
                this.stream = new M.BitStream(a)) : (console.log("Invalid buf type", void 0 === t ? "undefined" : u(t)),
                "string" == typeof t && console.log("String contents: " + t.substring(0, 1024)))
            }
            return h(e, [{
                key: "getBuffer",
                value: function() {
                    return new Uint8Array(this.arrayBuf,0,this.stream.byteIndex)
                }
            }, {
                key: "getStream",
                value: function() {
                    return this.stream
                }
            }, {
                key: "serializeMsg",
                value: function(e, t) {
                    g(this.stream.index % 8 == 0),
                    this.stream.writeUint8(e),
                    t.serialize(this.stream)
                }
            }, {
                key: "serializeMsgStream",
                value: function(e, t) {
                    g(this.stream.index % 8 == 0 && t.index % 8 == 0),
                    this.stream.writeUint8(e),
                    this.stream.writeBytes(t, 0, t.index / 8)
                }
            }, {
                key: "deserializeMsgType",
                value: function() {
                    return this.stream.length - 8 * this.stream.byteIndex >= 1 ? this.stream.readUint8() : C.None
                }
            }]),
            e
        }()
          , P = {};
        r(w.Type.Player, function(e, t) {
            e.writeVec(t.pos, 0, 0, 1024, 1024, 16),
            e.writeUnitVec(t.dir, 8)
        }, function(e, t) {
            e.writeBits(t.netFullState.layer, 2),
            e.writeBoolean(t.netFullState.dead),
            e.writeBoolean(t.netFullState.downed),
            e.writeBits(t.netFullState.animType, 3),
            e.writeBits(t.netFullState.animSeq, 3),
            e.writeBits(t.netFullState.actionType, 2),
            e.writeItemType(t.netFullState.skin),
            e.writeItemType(t.netFullState.backpack),
            e.writeItemType(t.netFullState.helmet),
            e.writeItemType(t.netFullState.chest),
            e.writeItemType(t.netFullState.weapon),
            e.writeBoolean(t.netFullState.wearingPan),
            e.writeBits(0, 3)
        }, function(e, t) {
            t.pos = e.readVec(0, 0, 1024, 1024, 16),
            t.dir = e.readUnitVec(8)
        }, function(e, t) {
            t.layer = e.readBits(2),
            t.dead = e.readBoolean(),
            t.downed = e.readBoolean(),
            t.animType = e.readBits(3),
            t.animSeq = e.readBits(3),
            t.actionType = e.readBits(2),
            t.skin = e.readItemType(),
            t.backpack = e.readItemType(),
            t.helmet = e.readItemType(),
            t.chest = e.readItemType(),
            t.curWeapType = e.readItemType(),
            t.wearingPan = e.readBoolean(),
            e.readBits(3)
        }),
        r(w.Type.Obstacle, function(e, t) {
            e.writeVec(t.pos, 0, 0, 1024, 1024, 16),
            e.writeBits(t.ori, 2),
            e.writeFloat(t.scale, b.MinScale, b.MaxScale, 8),
            e.writeBits(0, 6)
        }, function(e, t) {
            e.writeMapType(t.type),
            e.writeFloat(t.healthT, 0, 1, 8),
            e.writeBits(t.layer, 2),
            e.writeBoolean(t.dead),
            e.writeBoolean(t.isDoor),
            t.isDoor && (e.writeBoolean(t.door.open),
            e.writeBoolean(t.door.canUse),
            e.writeBits(t.door.seq, 6)),
            e.writeBoolean(t.isButton),
            t.isButton && (e.writeBoolean(t.button.onOff),
            e.writeBoolean(t.button.canUse),
            e.writeBits(t.button.seq, 6)),
            e.writeBits(0, 3)
        }, function(e, t) {
            t.pos = e.readVec(0, 0, 1024, 1024, 16),
            t.ori = e.readBits(2),
            t.scale = e.readFloat(b.MinScale, b.MaxScale, 8),
            e.readBits(6)
        }, function(e, t) {
            t.type = e.readMapType(),
            t.healthT = e.readFloat(0, 1, 8),
            t.layer = e.readBits(2),
            t.dead = e.readBoolean(),
            t.isDoor = e.readBoolean(),
            t.isDoor && (t.door = {},
            t.door.open = e.readBoolean(),
            t.door.canUse = e.readBoolean(),
            t.door.seq = e.readBits(6)),
            t.isButton = e.readBoolean(),
            t.isButton && (t.button = {},
            t.button.onOff = e.readBoolean(),
            t.button.canUse = e.readBoolean(),
            t.button.seq = e.readBits(6)),
            e.readBits(3)
        }),
        r(w.Type.Building, function(e, t) {
            e.writeMapType(t.type),
            e.writeVec(t.pos, 0, 0, 1024, 1024, 16),
            e.writeBits(t.ori, 2),
            e.writeBits(t.layer, 2),
            e.writeBoolean(t.ceilingDead),
            e.writeBits(0, 3)
        }, function(e, t) {}, function(e, t) {
            t.type = e.readMapType(),
            t.pos = e.readVec(0, 0, 1024, 1024, 16),
            t.ori = e.readBits(2),
            t.layer = e.readBits(2),
            t.ceilingDead = e.readBoolean(),
            e.readBits(3)
        }, function(e, t) {}),
        r(w.Type.Structure, function(e, t) {
            e.writeMapType(t.type),
            e.writeVec(t.pos, 0, 0, 1024, 1024, 16),
            e.writeBits(t.ori, 2),
            e.writeBits(0, 6)
        }, function(e, t) {}, function(e, t) {
            t.type = e.readMapType(),
            t.pos = e.readVec(0, 0, 1024, 1024, 16),
            t.ori = e.readBits(2),
            e.readBits(6)
        }, function(e, t) {}),
        r(w.Type.LootSpawner, function(e, t) {
            e.writeMapType(t.type),
            e.writeVec(t.pos, 0, 0, 1024, 1024, 16),
            e.writeBits(t.layer, 2),
            e.writeBits(0, 6)
        }, function(e, t) {}, function(e, t) {
            t.type = e.readMapType(),
            t.pos = e.readVec(0, 0, 1024, 1024, 16),
            t.layer = e.readBits(2),
            e.readBits(6)
        }, function(e, t) {}),
        r(w.Type.Loot, function(e, t) {
            e.writeVec(t.pos, 0, 0, 1024, 1024, 16)
        }, function(e, t) {
            e.writeItemType(t.name),
            e.writeUint8(t.count),
            e.writeBits(t.layer, 2),
            e.writeBits(t.isOld, 6)
        }, function(e, t) {
            t.pos = e.readVec(0, 0, 1024, 1024, 16)
        }, function(e, t) {
            t.name = e.readItemType(),
            t.count = e.readUint8(),
            t.layer = e.readBits(2),
            t.isOld = e.readBits(6)
        }),
        r(w.Type.DeadBody, function(e, t) {
            e.writeVec(t.pos, 0, 0, 1024, 1024, 16)
        }, function(e, t) {
            e.writeUint8(t.layer),
            e.writeUint16(t.playerId)
        }, function(e, t) {
            t.pos = e.readVec(0, 0, 1024, 1024, 16)
        }, function(e, t) {
            t.layer = e.readUint8(),
            t.playerId = e.readUint16()
        }),
        r(w.Type.Decal, function(e, t) {
            e.writeMapType(t.type),
            e.writeVec(t.pos, 0, 0, 1024, 1024, 16),
            e.writeBits(t.ori, 2),
            e.writeFloat(t.scale, b.MinScale, b.MaxScale, 8),
            e.writeBits(t.layer, 2),
            e.writeBits(0, 4)
        }, function(e, t) {}, function(e, t) {
            t.type = e.readMapType(),
            t.pos = e.readVec(0, 0, 1024, 1024, 16),
            t.ori = e.readBits(2),
            t.scale = e.readFloat(b.MinScale, b.MaxScale, 8),
            t.layer = e.readBits(2),
            e.readBits(4)
        }, function(e, t) {}),
        r(w.Type.Projectile, function(e, t) {
            e.writeVec(t.pos, 0, 0, 1024, 1024, 16),
            e.writeFloat(t.posZ, 0, x.projectile.maxHeight, 8)
        }, function(e, t) {
            e.writeItemType(t.type),
            e.writeUint8(t.layer)
        }, function(e, t) {
            t.pos = e.readVec(0, 0, 1024, 1024, 16),
            t.posZ = e.readFloat(0, x.projectile.maxHeight, 8)
        }, function(e, t) {
            t.type = e.readItemType(),
            t.layer = e.readUint8()
        }),
        r(w.Type.Smoke, function(e, t) {
            e.writeVec(t.pos, 0, 0, 1024, 1024, 16),
            e.writeFloat(t.rad, 0, 10, 8)
        }, function(e, t) {
            e.writeUint8(t.layer)
        }, function(e, t) {
            t.pos = e.readVec(0, 0, 1024, 1024, 16),
            t.rad = e.readFloat(0, 10, 8)
        }, function(e, t) {
            t.layer = e.readUint8()
        }),
        r(w.Type.Airdrop, function(e, t) {
            e.writeFloat(t.fallT, 0, 1, 7),
            e.writeBoolean(t.landed)
        }, function(e, t) {
            e.writeVec(t.pos, 0, 0, 1024, 1024, 16)
        }, function(e, t) {
            t.fallT = e.readFloat(0, 1, 7),
            t.landed = e.readBoolean()
        }, function(e, t) {
            t.pos = e.readVec(0, 0, 1024, 1024, 16)
        });
        var C = {
            None: 0,
            Join: 1,
            Disconnect: 2,
            Move: 3,
            Edit: 4,
            Joined: 5,
            PlayerInfo: 6,
            Update: 7,
            Kill: 8,
            GameOver: 9,
            Pickup: 10,
            Map: 11,
            Spectate: 12,
            DropItem: 13,
            Emote: 14,
            PlayerStats: 15
        }
          , A = function() {
            function e() {
                i(this, e),
                this.protocol = 0,
                this.privData = "",
                this.name = "",
                this.emotes = [],
                this.useTouch = !1,
                this.bot = !1
            }
            return h(e, [{
                key: "serialize",
                value: function(e) {
                    e.writeUint32(this.protocol),
                    e.writeString(this.privData),
                    e.writeString(this.name, 16);
                    for (var t = 0; t < f.Count; t++)
                        e.writeUint8(this.emotes[t]);
                    e.writeUint8(this.useTouch),
                    e.writeUint8(this.bot)
                }
            }, {
                key: "deserialize",
                value: function(e) {
                    this.protocol = e.readUint32(),
                    this.privData = e.readString(),
                    this.name = e.readString(16);
                    for (var t = 0; t < f.Count; t++) {
                        var a = e.readUint8();
                        this.emotes.push(a)
                    }
                    this.useTouch = e.readUint8(),
                    this.bot = e.readUint8()
                }
            }]),
            e
        }()
          , I = function() {
            function e() {
                i(this, e),
                this.reason = ""
            }
            return h(e, [{
                key: "serialize",
                value: function(e) {
                    e.writeString(this.reason)
                }
            }, {
                key: "deserialize",
                value: function(e) {
                    this.reason = e.readString()
                }
            }]),
            e
        }()
          , D = function() {
            function e() {
                i(this, e),
                this.seq = 0,
                this.moveLeft = !1,
                this.moveRight = !1,
                this.moveUp = !1,
                this.moveDown = !1,
                this.shootStart = !1,
                this.shootHold = !1,
                this.reload = !1,
                this.interaction = !1,
                this.equipPrimary = !1,
                this.equipSecondary = !1,
                this.equipThrowable = !1,
                this.equipMelee = !1,
                this.equipLast = !1,
                this.swapWeapSlots = !1,
                this.cancelAction = !1,
                this.scrollDown = !1,
                this.scrollUp = !1,
                this.useItem = "",
                this.useScope = "",
                this.toMouseDir = v.create(1, 0),
                this.toMouseLen = 0,
                this.portrait = !1,
                this.editMode = !1,
                this.moveLen = 255
            }
            return h(e, [{
                key: "serialize",
                value: function(e) {
                    e.writeUint8(this.seq),
                    e.writeBoolean(this.moveLeft),
                    e.writeBoolean(this.moveRight),
                    e.writeBoolean(this.moveUp),
                    e.writeBoolean(this.moveDown),
                    e.writeBoolean(this.shootStart),
                    e.writeBoolean(this.shootHold),
                    e.writeBoolean(this.reload),
                    e.writeBoolean(this.interaction),
                    e.writeBoolean(this.equipPrimary),
                    e.writeBoolean(this.equipSecondary),
                    e.writeBoolean(this.equipThrowable),
                    e.writeBoolean(this.equipMelee),
                    e.writeBoolean(this.equipLast),
                    e.writeBoolean(this.swapWeapSlots),
                    e.writeBoolean(this.cancelAction),
                    e.writeBoolean(this.editMode),
                    e.writeBoolean(this.scrollDown),
                    e.writeBoolean(this.scrollUp),
                    e.writeBoolean(this.portrait),
                    e.writeUnitVec(this.toMouseDir, 9),
                    e.writeFloat(this.toMouseLen, 0, 64, 12),
                    e.writeItemType(this.useItem),
                    e.writeItemType(this.useScope),
                    e.writeUint8(this.moveLen),
                    e.writeBits(0, 5)
                }
            }, {
                key: "deserialize",
                value: function(e) {
                    this.seq = e.readUint8(),
                    this.moveLeft = e.readBoolean(),
                    this.moveRight = e.readBoolean(),
                    this.moveUp = e.readBoolean(),
                    this.moveDown = e.readBoolean(),
                    this.shootStart = e.readBoolean(),
                    this.shootHold = e.readBoolean(),
                    this.reload = e.readBoolean(),
                    this.interaction = e.readBoolean(),
                    this.equipPrimary = e.readBoolean(),
                    this.equipSecondary = e.readBoolean(),
                    this.equipThrowable = e.readBoolean(),
                    this.equipMelee = e.readBoolean(),
                    this.equipLast = e.readBoolean(),
                    this.swapWeapSlots = e.readBoolean(),
                    this.cancelAction = e.readBoolean(),
                    this.editMode = e.readBoolean(),
                    this.scrollDown = e.readBoolean(),
                    this.scrollUp = e.readBoolean(),
                    this.portrait = e.readBoolean(),
                    this.toMouseDir = e.readUnitVec(9),
                    this.toMouseLen = e.readFloat(0, 64, 12),
                    this.useItem = e.readItemType(),
                    this.useScope = e.readItemType(),
                    this.moveLen = e.readUint8(),
                    e.readBits(5)
                }
            }]),
            e
        }()
          , O = function() {
            function e() {
                i(this, e),
                this.zoom = 1,
                this.cull = !1
            }
            return h(e, [{
                key: "serialize",
                value: function(e) {
                    e.writeBoolean(this.cull),
                    e.writeFloat32(this.zoom)
                }
            }, {
                key: "deserialize",
                value: function(e) {
                    this.cull = e.readBoolean(),
                    this.zoom = e.readFloat32()
                }
            }]),
            e
        }()
          , E = function() {
            function e() {
                i(this, e),
                this.item = "",
                this.weapIdx = 0
            }
            return h(e, [{
                key: "serialize",
                value: function(e) {
                    e.writeItemType(this.item),
                    e.writeUint8(this.weapIdx)
                }
            }, {
                key: "deserialize",
                value: function(e) {
                    this.item = e.readItemType(),
                    this.weapIdx = e.readUint8()
                }
            }]),
            e
        }()
          , L = function() {
            function e() {
                i(this, e),
                this.type = 0,
                this.pos = v.create(0, 0),
                this.useLoadout = !1,
                this.teamOnly = !1,
                this.isPing = !1
            }
            return h(e, [{
                key: "serialize",
                value: function(e) {
                    e.writeUint8(this.type),
                    e.writeVec(this.pos, 0, 0, 1024, 1024, 16),
                    e.writeBoolean(this.useLoadout),
                    e.writeBoolean(this.teamOnly),
                    e.writeBoolean(this.isPing),
                    e.writeBits(0, 5)
                }
            }, {
                key: "deserialize",
                value: function(e) {
                    this.type = e.readUint8(),
                    this.pos = e.readVec(0, 0, 1024, 1024, 16),
                    this.useLoadout = e.readBoolean(),
                    this.teamOnly = e.readBoolean(),
                    this.isPing = e.readBoolean(),
                    e.readBits(5)
                }
            }]),
            e
        }()
          , B = function() {
            function e() {
                i(this, e),
                this.id = 0,
                this.teamId = 0,
                this.name = ""
            }
            return h(e, [{
                key: "serialize",
                value: function(e) {
                    e.writeUint16(this.id),
                    e.writeUint8(this.teamId),
                    e.writeString(this.name)
                }
            }, {
                key: "deserialize",
                value: function(e) {
                    this.id = e.readUint16(),
                    this.teamId = e.readUint8(),
                    this.name = e.readString()
                }
            }]),
            e
        }()
          , F = function() {
            function e() {
                i(this, e),
                this.teamMode = 0,
                this.playerId = 0,
                this.started = !1,
                this.gameOpts = 0,
                this.playerInfoMsgs = []
            }
            return h(e, [{
                key: "serialize",
                value: function(e) {
                    e.writeUint8(this.teamMode),
                    e.writeUint16(this.playerId),
                    e.writeUint8(this.started),
                    e.writeUint8(this.gameOpts),
                    e.writeUint16(this.playerInfoMsgs.length);
                    for (var t = 0; t < this.playerInfoMsgs.length; t++)
                        this.playerInfoMsgs[t].serialize(e)
                }
            }, {
                key: "deserialize",
                value: function(e) {
                    this.teamMode = e.readUint8(),
                    this.playerId = e.readUint16(),
                    this.started = e.readUint8(),
                    this.gameOpts = e.readUint8();
                    for (var t = e.readUint16(), a = 0; a < t; a++) {
                        var i = new B;
                        i.deserialize(e),
                        this.playerInfoMsgs.push(i)
                    }
                }
            }]),
            e
        }()
          , R = function() {
            function e() {
                i(this, e),
                this.width = 0,
                this.height = 0,
                this.seed = 0,
                this.places = [],
                this.objects = []
            }
            return h(e, [{
                key: "serialize",
                value: function(e) {
                    e.writeUint16(this.width),
                    e.writeUint16(this.height),
                    e.writeUint32(this.seed),
                    e.writeUint16(this.places.length);
                    for (var t = 0; t < this.places.length; t++)
                        m(e, this.places[t]);
                    e.writeUint16(this.objects.length);
                    for (var a = 0; a < this.objects.length; a++)
                        d(e, this.objects[a])
                }
            }, {
                key: "deserialize",
                value: function(e) {
                    this.width = e.readUint16(),
                    this.height = e.readUint16(),
                    this.seed = e.readUint32();
                    for (var t = e.readUint16(), a = 0; a < t; a++) {
                        var i = {};
                        c(e, i),
                        this.places.push(i)
                    }
                    for (var r = e.readUint16(), o = 0; o < r; o++) {
                        var n = {};
                        p(e, n),
                        this.objects.push(n)
                    }
                }
            }]),
            e
        }()
          , j = {
            DeletedObjects: 1,
            FullObjects: 2,
            ActivePlayerId: 4,
            AliveCount: 8,
            Gas: 16,
            TeamData: 32,
            TeamInfos: 64,
            Bullets: 128,
            Explosions: 256,
            Emotes: 512,
            Planes: 1024
        }
          , q = function() {
            function e() {
                i(this, e),
                this.delObjIds = [],
                this.fullObjects = [],
                this.partObjects = [],
                this.activePlayerId = 0,
                this.activePlayerIdDirty = !1,
                this.activePlayerData = {},
                this.aliveCount = 0,
                this.aliveDirty = !1,
                this.gasT = 0,
                this.gasData = {},
                this.gasDirty = !1,
                this.teams = [],
                this.teamData = [],
                this.bullets = [],
                this.explosions = [],
                this.emotes = [],
                this.planes = [],
                this.ack = 0
            }
            return h(e, [{
                key: "deserialize",
                value: function(e, t) {
                    var a = e.readUint16()
                      , i = 0;
                    if (0 != (a & j.DeletedObjects)) {
                        i = e.readUint16();
                        for (var r = 0; r < i; r++)
                            this.delObjIds.push(e.readUint16())
                    }
                    var m = 0;
                    if (0 != (a & j.FullObjects)) {
                        m = e.readUint16();
                        for (var c = 0; c < m; c++) {
                            var d = {};
                            d.__type = e.readUint8(),
                            d.__id = e.readUint16(),
                            P[d.__type].deserializePart(e, d),
                            P[d.__type].deserializeFull(e, d),
                            this.fullObjects.push(d)
                        }
                    }
                    for (var p = e.readUint16(), u = 0; u < p; u++) {
                        var h = {};
                        h.__id = e.readUint16();
                        var g = t.getTypeById(h.__id, e);
                        P[g].deserializePart(e, h),
                        this.partObjects.push(h)
                    }
                    0 != (a & j.ActivePlayerId) && (this.activePlayerId = e.readUint16(),
                    this.activePlayerIdDirty = !0);
                    var y = {};
                    if (o(e, y),
                    this.activePlayerData = y,
                    0 != (a & j.AliveCount) && (this.aliveCount = e.readUint8(),
                    this.aliveDirty = !0),
                    this.gasT = e.readFloat(0, 1, 16),
                    0 != (a & j.Gas)) {
                        var f = {};
                        l(e, f),
                        this.gasData = f,
                        this.gasDirty = !0
                    }
                    if (0 != (a & j.TeamInfos))
                        for (var x = e.readUint8(), w = 0; w < x; w++) {
                            var b = {};
                            s(e, b),
                            this.teams.push(b)
                        }
                    if (0 != (a & j.TeamData))
                        for (var _ = e.readUint8(), S = 0; S < _; S++) {
                            var k = {};
                            k.playerIdx = e.readUint8(),
                            n(e, k),
                            this.teamData.push(k)
                        }
                    if (0 != (a & j.Bullets))
                        for (var z = e.readUint8(), M = 0; M < z; M++) {
                            var T = {};
                            T.playerId = e.readUint16(),
                            T.bulletType = e.readItemType(),
                            T.pos = e.readVec(0, 0, 1024, 1024, 16),
                            T.dir = e.readUnitVec(8),
                            T.layer = e.readBits(2),
                            T.varianceT = e.readFloat(0, 1, 5),
                            T.distAdjIdx = e.readBits(5),
                            T.shotFx = e.readBoolean(),
                            T.shotFx && (T.shotSourceType = e.readItemType(),
                            T.shotOffhand = e.readBits(7),
                            T.lastShot = e.readBoolean()),
                            T.reflectCount = e.readBits(2),
                            T.reflectObjId = 0;
                            var C = e.readBoolean();
                            C && (T.reflectObjId = e.readUint16()),
                            this.bullets.push(T)
                        }
                    if (0 != (a & j.Explosions))
                        for (var A = e.readUint8(), I = 0; I < A; I++) {
                            var D = {};
                            D.pos = e.readVec(0, 0, 1024, 1024, 16),
                            D.type = e.readItemType(),
                            D.layer = e.readUint8(),
                            this.explosions.push(D)
                        }
                    if (0 != (a & j.Emotes))
                        for (var O = e.readUint8(), E = 0; E < O; E++) {
                            var L = {};
                            L.type = e.readUint8(),
                            L.isPing = e.readUint8(),
                            L.playerId = e.readUint16(),
                            L.pos = e.readVec(0, 0, 1024, 1024, 16),
                            this.emotes.push(L)
                        }
                    if (0 != (a & j.Planes))
                        for (var B = e.readUint8(), F = 0; F < B; F++) {
                            var R = {};
                            R.id = e.readUint8();
                            var q = e.readVec(0, 0, 2048, 2048, 8);
                            R.pos = v.create(q.x - 512, q.y - 512),
                            R.planeDir = e.readUnitVec(8),
                            R.dropDeployed = e.readBoolean(),
                            e.readBits(7),
                            this.planes.push(R)
                        }
                    this.ack = e.readUint8()
                }
            }]),
            e
        }()
          , N = function() {
            function e() {
                i(this, e),
                this.itemSourceType = "",
                this.mapSourceType = "",
                this.damageType = 0,
                this.targetId = 0,
                this.killerId = 0,
                this.killCreditId = 0,
                this.killerKills = 0,
                this.downed = !1,
                this.killed = !1
            }
            return h(e, [{
                key: "serialize",
                value: function(e) {
                    e.writeUint8(this.damageType),
                    e.writeItemType(this.itemSourceType),
                    e.writeMapType(this.mapSourceType),
                    e.writeUint16(this.targetId),
                    e.writeUint16(this.killerId),
                    e.writeUint16(this.killCreditId),
                    e.writeUint8(this.killerKills),
                    e.writeUint8(this.downed),
                    e.writeUint8(this.killed)
                }
            }, {
                key: "deserialize",
                value: function(e) {
                    this.damageType = e.readUint8(),
                    this.itemSourceType = e.readItemType(),
                    this.mapSourceType = e.readMapType(),
                    this.targetId = e.readUint16(),
                    this.killerId = e.readUint16(),
                    this.killCreditId = e.readUint16(),
                    this.killerKills = e.readUint8(),
                    this.downed = e.readUint8(),
                    this.killed = e.readUint8()
                }
            }]),
            e
        }()
          , G = function() {
            function e() {
                i(this, e),
                this.playerId = 0,
                this.playerStats = {}
            }
            return h(e, [{
                key: "serialize",
                value: function(e) {
                    var t = this.playerStats;
                    e.writeUint16(t.playerId),
                    e.writeUint16(t.timeAlive),
                    e.writeUint8(t.kills),
                    e.writeUint8(t.dead),
                    e.writeUint16(t.damageDealt),
                    e.writeUint16(t.damageTaken)
                }
            }, {
                key: "deserialize",
                value: function(e) {
                    var t = {};
                    t.playerId = e.readUint16(),
                    t.timeAlive = e.readUint16(),
                    t.kills = e.readUint8(),
                    t.dead = e.readUint8(),
                    t.damageDealt = e.readUint16(),
                    t.damageTaken = e.readUint16(),
                    this.playerStats = t
                }
            }]),
            e
        }()
          , U = function() {
            function e() {
                i(this, e),
                this.teamId = 0,
                this.teamRank = 0,
                this.gameOver = !1,
                this.victory = !1,
                this.playerStats = []
            }
            return h(e, [{
                key: "serialize",
                value: function(e) {
                    e.writeUint8(this.teamId),
                    e.writeUint8(this.teamRank),
                    e.writeUint8(this.gameOver),
                    e.writeUint8(this.victory),
                    e.writeUint8(this.playerStats.length);
                    for (var t = 0; t < this.playerStats.length; t++) {
                        var a = new G;
                        a.playerStats = this.playerStats[t],
                        a.serialize(e)
                    }
                }
            }, {
                key: "deserialize",
                value: function(e) {
                    this.teamId = e.readUint8(),
                    this.teamRank = e.readUint8(),
                    this.gameOver = e.readUint8(),
                    this.victory = e.readUint8();
                    for (var t = e.readUint8(), a = 0; a < t; a++) {
                        var i = new G;
                        i.deserialize(e),
                        this.playerStats.push(i.playerStats)
                    }
                }
            }]),
            e
        }()
          , V = {
            Full: 0,
            AlreadyOwned: 1,
            AlreadyEquipped: 2,
            BetterItemEquipped: 3,
            Success: 4,
            GunCannotFire: 5
        }
          , H = function() {
            function e() {
                i(this, e),
                this.type = 0,
                this.item = "",
                this.count = 0
            }
            return h(e, [{
                key: "serialize",
                value: function(e) {
                    e.writeUint8(this.type),
                    e.writeItemType(this.item),
                    e.writeUint8(this.count)
                }
            }, {
                key: "deserialize",
                value: function(e) {
                    this.type = e.readUint8(),
                    this.item = e.readItemType(),
                    this.count = e.readUint8()
                }
            }]),
            e
        }()
          , W = function() {
            function e() {
                i(this, e),
                this.specNext = !1,
                this.specPrev = !1
            }
            return h(e, [{
                key: "serialize",
                value: function(e) {
                    e.writeUint8(this.specNext),
                    e.writeUint8(this.specPrev)
                }
            }, {
                key: "deserialize",
                value: function(e) {
                    this.specNext = e.readUint8(),
                    this.specPrev = e.readUint8()
                }
            }]),
            e
        }();
        e.exports = {
            kNameMaxLen: 16,
            kMouseMaxLen: 64,
            kTeamUpdateRate: .25,
            kSmokeMaxRad: 10,
            MsgStream: T,
            Msg: C,
            JoinMsg: A,
            PlayerInfoMsg: B,
            DisconnectMsg: I,
            MoveMsg: D,
            EditMsg: O,
            DropItemMsg: E,
            JoinedMsg: F,
            UpdateMsg: q,
            MapMsg: R,
            KillMsg: N,
            PlayerStatsMsg: G,
            GameOverMsg: U,
            PickupMsgType: V,
            PickupMsg: H,
            SpectateMsg: W,
            EmoteMsg: L
        }
    },
    "3160ea28": function(e, t, a) {
        "use strict";
        function i(e, t, a) {
            return t in e ? Object.defineProperty(e, t, {
                value: a,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = a,
            e
        }
        function r(e) {
            var t = Math.floor(e / 3600)
              , a = Math.floor(e / 60) % 60
              , i = Math.floor(e) % 60
              , r = "";
            return t > 0 && (r += t + "h "),
            (t > 0 || a > 0) && (r += a + "m "),
            r += i + "s"
        }
        function o(e, t, a, r, o, n, c) {
            var p = this;
            this.game = e,
            this.particleBarn = r,
            this.localization = o,
            this.touch = c,
            this.gameElem = l("#ui-game"),
            this.statsMain = l("#ui-stats"),
            this.statsElem = l("#ui-stats-bg"),
            this.statsContents = l("#ui-stats-contents-inner"),
            this.statsHeader = l("#ui-stats-header"),
            this.statsInfoBox = l("#ui-stats-info-box"),
            this.statsOptions = l("#ui-stats-options"),
            this.statsAds = l(".ui-stats-ad-container"),
            this.mainMedRectAd = l("#ad-block-main-med-rect"),
            this.mainLeaderBotAd = l("#ad-block-main-leader-bot"),
            this.killElem = l("#ui-kills"),
            this.killText = l("#ui-kill-text"),
            this.killCount = l("#ui-kill-count"),
            this.killTimeout = null,
            this.escMenuElem = l("#ui-game-menu"),
            this.escMenuDisplayed = !1,
            this.topLeft = l("#ui-top-left"),
            this.topCenter = l("#ui-top-center-scopes"),
            this.waitingForPlayers = !0,
            this.waitingText = l("#ui-waiting-text"),
            this.spectating = !1,
            this.prevSpectatorCount = 0,
            this.spectatorCount = 0,
            this.spectatorCounterDisplayed = !1,
            this.spectatorCounterContainer = l("#ui-spec-counter"),
            this.spectatorCounter = l("#ui-spec-counter-number"),
            this.spectateMode = l(".ui-spectate-mode"),
            this.spectatedPlayerText = l("#ui-spectate-text"),
            this.spectatedPlayerName = "",
            this.spectatedPlayerId = null,
            this.spectateModeStats = l("#ui-spectate-stats"),
            this.spectateModeStatsData = l("#ui-spectate-stats-data"),
            this.spectateOptionsWrapper = l("#ui-spectate-options-wrapper"),
            this.rightCenter = l("#ui-right-center"),
            this.playersAlive = l(".js-ui-players-alive"),
            this.playerKills = l(".js-ui-player-kills"),
            this.announcement = l("#ui-announcement"),
            this.mapContainer = l("#ui-map-container"),
            this.mapContainerBottom = 52,
            this.mapInfo = l("#ui-map-info"),
            this.mapInfoBottom = 218,
            this.gasState = {},
            this.gasIcon = l("#ui-gas-icon"),
            this.gasTimer = l("#ui-gas-timer"),
            this.mapMinimizeButton = l("#ui-map-minimize"),
            this.menuDisplayButton = l("#ui-menu-display"),
            this.bottomCenterRight = l("#ui-bottom-center-right"),
            l("#ui-map-wrapper").css("display", "block"),
            l("#ui-team").css("display", "block"),
            this.curAction = {
                type: g.None
            },
            this.displayMapDirty = !1,
            this.displayMapClear = !1,
            l(".ui-map-expand").on("mousedown", function(e) {
                e.stopPropagation()
            }),
            l(".ui-map-expand").on("click", function(e) {
                w.touch ? p.bigmapDisplayed || p.displayMapLarge() : w.layout == w.Layout.Lg && p.displayMapLarge(p.bigmapDisplayed)
            }),
            l("#ui-map-minimize").on("mousedown", function(e) {
                e.stopPropagation()
            }),
            l("#ui-map-minimize").on("click", function(e) {
                e.stopPropagation(),
                p.toggleMiniMap()
            }),
            l("#ui-menu-display").on("click", function(e) {
                e.stopPropagation(),
                p.toggleEscMenu()
            }),
            this.bigmap = l("#big-map"),
            this.bigmapCollision = l("#big-map-collision"),
            this.moveStyleButton = l("#btn-game-move-style"),
            this.moveStyleButton.on("touchstart", function() {
                c.toggleMoveStyle()
            }),
            this.aimStyleButton = l("#btn-game-aim-style"),
            this.aimStyleButton.on("touchstart", function() {
                c.toggleAimStyle()
            }),
            l(document).on("keyup", function(e) {
                76 != e.which || p.game.gameOver || k.toggleFullScreen()
            }),
            this.onTouchScreen = function(e) {
                "cvs" == e.target.id && p.toggleEscMenu(!0)
            }
            ,
            l(document).on("touchstart", this.onTouchScreen),
            this.bigmapClose = l("#big-map-close"),
            this.bigmapClose.on("touchend", function(e) {
                e.stopPropagation(),
                p.displayMapLarge(!0)
            }),
            this.bigmapClose.on("mousedown", function(e) {
                e.stopPropagation()
            }),
            this.bigmapClose.on("click", function(e) {
                e.stopPropagation(),
                p.displayMapLarge(!0)
            }),
            this.fullScreenButton = l("#btn-game-fullscreen"),
            this.fullScreenButton.on("mousedown", function(e) {
                e.stopPropagation()
            }),
            this.fullScreenButton.on("click", function() {
                k.toggleFullScreen(),
                p.toggleEscMenu()
            }),
            this.resumeButton = l("#btn-game-resume"),
            this.resumeButton.on("mousedown", function(e) {
                e.stopPropagation()
            }),
            this.resumeButton.on("click", function() {
                p.toggleEscMenu()
            }),
            l("#btn-spectate-quit").on("click", function() {
                p.doQuitGame(!0)
            }),
            l("#btn-game-quit").on("mousedown", function(e) {
                e.stopPropagation()
            }),
            l("#btn-game-quit").on("click", function() {
                p.doQuitGame(!0)
            }),
            this.specStatsButton = l("#btn-spectate-view-stats"),
            this.specStatsButton.on("click", function() {
                p.toggleLocalStats()
            }),
            this.beginSpectating = !1,
            this.specNext = !1,
            this.specPrev = !1,
            this.specNextButton = l("#btn-spectate-next-player"),
            this.specNextButton.on("click", function() {
                p.specNext = !0
            }),
            this.specPrevButton = l("#btn-spectate-prev-player"),
            this.specPrevButton.on("click", function() {
                p.specPrev = !0
            }),
            this.interactionElems = l("#ui-interaction-press, #ui-interaction"),
            this.interactionTouched = !1,
            this.interactionElems.css("pointer-events", "auto"),
            this.interactionElems.on("touchstart", function(e) {
                e.stopPropagation(),
                p.interactionTouched = !0
            }),
            this.reloadElems = l("#ui-current-clip, #ui-remaining-ammo, #ui-reload-button"),
            this.reloadTouched = !1,
            this.reloadElems.css("pointer-events", "auto"),
            this.reloadElems.on("touchstart", function(e) {
                e.stopPropagation(),
                p.reloadTouched = !0
            }),
            this.healthRed = new s(255,0,0),
            this.healthDarkpink = new s(255,45,45),
            this.healthLightpink = new s(255,112,112),
            this.healthWhite = new s(255,255,255),
            this.healthGrey = new s(179,179,179),
            this.minimapDisplayed = !0,
            this.visibilityMode = 0,
            this.gasRenderer = new v(n,0),
            this.gasSafeZoneRenderer = new S;
            var y = this;
            this.weapsDirty = !1,
            this.weapSwitches = l("#ui-weapon-id-1, #ui-weapon-id-2"),
            this.weapNoSwitches = l("#ui-weapon-id-3, #ui-weapon-id-4"),
            this.weapDraggedId = 0,
            this.swapWeapSlots = !1,
            this.weapDraggedDiv = null,
            this.weapDragging = !1,
            this.weapDropped = !1,
            this.resetWeapSlotStyling = function() {
                y.weapDraggedDiv && (y.weapSwitches.css({
                    left: "",
                    top: ""
                }),
                l("#ui-game").css({
                    "pointer-events": ""
                })),
                y.weapDraggedDiv = null,
                y.weapDragging = !1,
                y.weapDropped = !1,
                y.weapSwitches.hasClass("ui-weapon-dragged") && y.weapSwitches.removeClass("ui-weapon-dragged"),
                y.weapNoSwitches.hasClass("ui-outline-hover") || y.weapNoSwitches.addClass("ui-outline-hover")
            }
            ,
            w.touch || (this.weapSwitches.on("mousedown", function(e) {
                0 == e.button && (y.weapDraggedDiv = l(this),
                y.weapDraggedId = l(this).data("slot"))
            }),
            l("#ui-game").on("mousemove", function(e) {
                y.weapDraggedDiv && !y.weapDropped && (y.weapDragging ? (y.weapDraggedDiv.css({
                    left: e.pageX - 80,
                    top: e.pageY - 30
                }),
                y.weapDraggedDiv.addClass("ui-weapon-dragged")) : (l("#ui-game").css({
                    "pointer-events": "initial"
                }),
                y.weapNoSwitches.removeClass("ui-outline-hover"),
                y.weapDragging = !0))
            }),
            l("#ui-game, #ui-weapon-id-1, #ui-weapon-id-2").on("mouseup", function(e) {
                0 == e.button && null != y.weapDraggedDiv && (y.weapSwitches.each(function() {
                    var e = l(this).data("slot");
                    l(this).is(":hover") && y.weapDraggedId != e && (y.swapWeapSlots = !0,
                    y.weapDropped = !0)
                }),
                y.swapWeapSlots || y.resetWeapSlotStyling())
            })),
            this.container = new m.Container,
            this.container.mask = new m.Graphics,
            this.display = {
                gas: this.gasRenderer.display,
                gasSafeZone: this.gasSafeZoneRenderer.display,
                teammates: new m.Container,
                player: new m.Container,
                border: new m.Graphics
            },
            this.mapSprite = new m.Sprite(m.Texture.EMPTY),
            this.mapSprite.anchor = new m.Point(.5,.5),
            this.container.addChild(this.mapSprite),
            this.container.addChild(this.display.gas),
            this.container.addChild(this.display.gasSafeZone),
            this.container.addChild(this.display.teammates),
            this.container.addChild(this.display.player),
            this.container.addChild(this.display.border),
            this.mapHeight = 0,
            this.mapWidth = 0,
            this.bigmapDisplayed = !1,
            this.screenScaleFactor = 1;
            var x = (k.getScreenDimensions().width,
            this.getMinimapMargin())
              , b = this.getMinimapSize();
            this.minimapPos = f.create(x + b / 2, e.q.screenHeight - b / 2 - x),
            this.playerOuter = m.Sprite.fromImage("player-map-outer.img"),
            this.playerOuter.anchor = new m.Point(.5,.5),
            this.playerOuterBaseScale = new m.Point(w.layout == w.Layout.Sm ? .25 : .3,w.layout == w.Layout.Sm ? .25 : .3),
            this.playerOuter.scale = this.playerOuterBaseScale,
            this.playerOuter.tint = 16777215,
            this.player = m.Sprite.fromImage("player-map-inner.img"),
            this.player.anchor = new m.Point(.5,.5),
            this.playerBaseScale = new m.Point(w.layout == w.Layout.Sm ? .15 : .2,w.layout == w.Layout.Sm ? .15 : .2),
            this.player.scale = this.playerBaseScale,
            this.player.tint = 16777215,
            this.dead = !1,
            this.audioManager = t,
            this.actionSoundInstance = !1,
            this.muteButton = l("#ui-mute-ingame"),
            this.muteButtonImage = this.muteButton.find("img"),
            this.muteOffImg = "audio-off.img",
            this.muteOnImg = "audio-on.img";
            var _ = this.audioManager.mute;
            this.muteButtonImage.attr("src", _ ? this.muteOffImg : this.muteOnImg),
            this.muteButton.on("mousedown", function(e) {
                e.stopPropagation()
            }),
            this.muteButton.on("click", function(e) {
                var t = p.audioManager.muteToggle();
                p.muteButtonImage.attr("src", t ? p.muteOffImg : p.muteOnImg),
                t = null
            }),
            this.pieTimer = a,
            this.displayingStats = !1,
            this.teamMemberHealthBarWidth = parseInt(l(".ui-team-member-health").find(".ui-bar-inner").css("width")),
            this.teamMemberHeight = 48,
            this.teamPlayerCount = 0,
            this.teamSelectors = [];
            for (var z = 0; z < 4; z++) {
                var T, P = this.topLeft, C = z, A = m.Sprite.fromImage("ping-map-pulse.img");
                A.anchor = this.playerOuter.anchor,
                A.scale = new m.Point(0,0),
                A.tint = d.teamColors[z],
                A.visible = !1,
                this.display.teammates.addChild(A);
                var I = m.Sprite.fromImage("ping-map-coming.img");
                I.anchor = this.player.anchor,
                I.scale = this.playerBaseScale,
                I.tint = d.teamColors[z],
                I.visible = !1,
                this.display.teammates.addChild(I);
                var D = m.Sprite.fromImage("ping-map-danger.img");
                D.anchor = this.player.anchor,
                D.scale = this.playerBaseScale,
                D.tint = d.teamColors[z],
                D.visible = !1,
                this.display.teammates.addChild(D);
                var O = m.Sprite.fromImage("ping-map-help.img");
                O.anchor = this.player.anchor,
                O.scale = this.playerBaseScale,
                O.tint = d.teamColors[z],
                O.visible = !1,
                this.display.teammates.addChild(O);
                var E = m.Sprite.fromImage("player-map-outer.img");
                E.anchor = this.playerOuter.anchor,
                E.scale = this.playerOuterBaseScale,
                E.tint = this.playerOuter.tint,
                E.visible = !1,
                this.display.teammates.addChild(E);
                var L = m.Sprite.fromImage("player-map-inner.img");
                L.anchor = this.player.anchor,
                L.scale = this.playerBaseScale,
                L.tint = d.teamColors[z],
                L.visible = !1,
                this.display.teammates.addChild(L),
                this.teamSelectors.push({
                    teamNameHtml: "",
                    teamId: l(P).find("[data-id=" + C + "]"),
                    teamIdDisplayed: !1,
                    teamName: l(P).find("[data-id=" + C + "]").find(".ui-team-member-name"),
                    teamIcon: l(P).find("[data-id=" + C + "]").find(".ui-team-member-icon"),
                    teamStatus: l(P).find("[data-id=" + C + "]").find(".ui-team-member-status"),
                    teamHealthInner: l(P).find("[data-id=" + C + "]").find(".ui-health-actual"),
                    teamHealthDepleted: l(P).find("[data-id=" + C + "]").find(".ui-health-depleted"),
                    prevHealth: 0,
                    prevStatus: {
                        disconnected: !1,
                        dead: !1,
                        downed: !1
                    },
                    indicators: {
                        main: {
                            elem: l("#ui-team-indicators").find(".ui-indicator-main[data-id=" + C + "]"),
                            displayed: !1
                        }
                    },
                    mapSprites: (T = {
                        outer: {
                            sprite: E,
                            position: f.create(0, 0),
                            usePlayerPosition: !0,
                            showOnDeath: !1,
                            displayed: !0
                        },
                        inner: {
                            sprite: L,
                            position: f.create(0, 0),
                            usePlayerPosition: !0,
                            showOnDeath: !0,
                            displayed: !0
                        },
                        pingPulseWave: {
                            sprite: A,
                            position: f.create(0, 0),
                            usePlayerPosition: !1,
                            showOnDeath: !0,
                            displayed: !1,
                            pulse: !0,
                            scale: 0,
                            baseScale: 0,
                            life: 0,
                            maxLife: 0
                        }
                    },
                    i(T, u.Coming, {
                        sprite: I,
                        position: f.create(0, 0),
                        usePlayerPosition: !1,
                        showOnDeath: !0,
                        displayed: !1,
                        life: 0,
                        maxLife: 0
                    }),
                    i(T, u.Danger, {
                        sprite: D,
                        position: f.create(0, 0),
                        usePlayerPosition: !1,
                        showOnDeath: !0,
                        displayed: !1,
                        life: 0,
                        maxLife: 0
                    }),
                    i(T, u.Help, {
                        sprite: O,
                        position: f.create(0, 0),
                        usePlayerPosition: !1,
                        showOnDeath: !0,
                        displayed: !1,
                        life: 0,
                        maxLife: 0
                    }),
                    T),
                    mapSpritesLocal: !1
                })
            }
            this.airdropSprites = [],
            this.airdropSpriteIdx = 0;
            for (var B = 0; B < M; B++) {
                var F = m.Sprite.fromImage("ping-map-airdrop.img");
                F.anchor = this.player.anchor,
                F.scale = this.playerBaseScale,
                F.tint = h[u.Airdrop].tint,
                F.alpha = 0,
                F.visible = !1,
                this.display.teammates.addChild(F);
                var R = m.Sprite.fromImage("ping-map-pulse.img");
                R.anchor = this.playerOuter.anchor,
                R.scale = new m.Point(0,0),
                R.tint = h[u.Airdrop].tint,
                R.alpha = 0,
                R.visible = !1,
                this.display.teammates.addChild(R);
                var j = {
                    sprite: F,
                    position: f.create(0, 0),
                    usePlayerPosition: !1,
                    showOnDeath: !0,
                    displayed: !1,
                    life: 0,
                    maxLife: 0
                }
                  , q = {
                    sprite: R,
                    position: f.create(0, 0),
                    usePlayerPosition: !1,
                    showOnDeath: !0,
                    displayed: !1,
                    pulse: !0,
                    scale: 0,
                    baseScale: 0,
                    life: 0,
                    maxLife: 0
                };
                this.airdropSprites.push({
                    mapSprite: j,
                    pingPulseWave: q
                })
            }
            this.a()
        }
        function n(e, t, a, i) {
            var r = e
              , o = t
              , n = r + (o - r) / a * i;
            return Math.floor(n)
        }
        function s(e, t, a) {
            var i, r, o;
            !function(e, t, a) {
                i = e,
                r = t,
                o = a
            }(e, t, a),
            this.getColors = function() {
                return {
                    r: i,
                    g: r,
                    b: o
                }
            }
        }
        var l = a("8ee62bea")
          , m = a("80ac57a6")
          , c = a("34e32c48")
          , d = (a("6b42806d"),
        a("989ad62a"))
          , p = a("b198b546")
          , u = p.PingType
          , h = p.PingData
          , g = d.Action
          , y = d.GasMode
          , f = (a("300e2704"),
        a("c2a798c8"))
          , x = a("10899aea")
          , w = (a("1901e2d9"),
        a("2bb110d0"),
        a("ce29f17f"))
          , b = a("f398b7c7")
          , _ = a("a7f094a3")
          , v = _.GasRenderer
          , S = _.GasSafeZoneRenderer
          , k = a("26be8056")
          , z = (a("119e8c4c"),
        a("6e43d1d7"))
          , M = 20;
        o.prototype = {
            o: function() {
                this.gasRenderer.free(),
                this.clearUI(),
                l(document).off("keyup"),
                l(".ui-map-expand").off("mousedown"),
                l(".ui-map-expand").off("click"),
                l("#ui-map-minimize").off("mousedown"),
                l("#ui-map-minimize").off("click"),
                l("#ui-menu-display").off("click"),
                this.muteButton.off("mousedown"),
                this.muteButton.off("click"),
                this.fullScreenButton.off("mousedown"),
                this.fullScreenButton.off("click"),
                this.resumeButton.off("mousedown"),
                this.resumeButton.off("click"),
                l("#btn-spectate-quit").off("click"),
                l("#btn-game-quit").off("mousedown"),
                l("#btn-game-quit").off("click"),
                this.specStatsButton.off("click"),
                this.specPrevButton.off("click"),
                this.specNextButton.off("click"),
                this.bigmapClose.off("mousedown"),
                this.bigmapClose.off("click"),
                this.weapSwitches.off("mousedown"),
                l("#ui-game").off("mousemove"),
                l("#ui-game").off("mouseup"),
                l("#ui-weapon-id-1").off("mouseup"),
                l("#ui-weapon-id-2").off("mouseup"),
                this.moveStyleButton.off("touchstart"),
                this.interactionElems.off("touchstart"),
                this.reloadElems.off("touchstart"),
                this.bigmapClose.off("touchend"),
                l(document).off("touchstart", this.onTouchScreen),
                l(".ui-team-member-health").find(".ui-bar-inner").css("width", this.teamMemberHealthBarWidth),
                this.a()
            },
            a: function() {
                l(".js-ui-map-hidden").css("display", "block"),
                this.clearStatsElems(),
                this.setSpectating(!1),
                this.updateSpectatorCountDisplay(!0),
                this.resetWeapSlotStyling(),
                this.dead = !1
            },
            doQuitGame: function(e) {
                e && this.refreshMainPageAds(),
                this.game.gameOver = !0,
                this.game.onQuit()
            },
            l: function(e, t, a, i, r, o, n, s, l, p) {
                var u = this
                  , h = t.N
                  , _ = t.U
                  , v = t;
                this.mapWidth = i.width,
                this.mapHeight = i.height,
                this.weapsDirty && this.resetWeapSlotStyling(),
                this.weapsDirty = !1,
                this.mapSprite.texture == m.Texture.EMPTY && null != i.getMapTexture() && (this.mapSprite.texture = i.getMapTexture(),
                this.redraw(s));
                var S = Math.max(Math.floor(r.duration * (1 - r.circleT)), 0)
                  , M = {
                    mode: r.mode,
                    time: S
                };
                if (this.gasState.mode != M.mode || this.gasState.time != M.time) {
                    this.gasState = M;
                    var T = this.gasState.mode == y.Moving;
                    this.mapInfo.removeClass("icon-pulse"),
                    this.gasIcon.removeClass("gas-icon"),
                    this.gasIcon.removeClass("danger-icon"),
                    T && this.mapInfo.addClass("icon-pulse"),
                    this.gasIcon.addClass(T ? "danger-icon" : "gas-icon");
                    var P = Math.floor(this.gasState.time / 60)
                      , C = this.gasState.time % 60
                      , A = ("0" + C).slice(-2);
                    this.gasTimer.html(P + ":" + A)
                }
                this.spectatorCount = _.spectatorCount,
                this.updateSpectatorCountDisplay(!1),
                h.dead && !this.dead && (this.dead = !0,
                this.pieTimer.o(!0)),
                (v.downed || this.dead) && this.resetWeapSlotStyling();
                var I = _.action
                  , D = x.eqAbs(x.clamp(I.time, 0, I.duration), I.duration, .2);
                if (!(this.curAction.type == I.type && this.curAction.item == I.item && this.curAction.duration == I.duration || D || this.displayingStats)) {
                    this.curAction = {
                        type: I.type,
                        item: I.item,
                        time: I.time,
                        duration: I.duration
                    };
                    var O = I.type != g.Reload;
                    if (this.pieTimer.o(O),
                    this.actionSoundInstance && (this.audioManager.stopSound(this.actionSoundInstance),
                    this.actionSoundInstance = !1),
                    I.type != g.None) {
                        var E = ""
                          , L = ""
                          , B = ""
                          , F = null
                          , R = !1;
                        switch (I.type) {
                        case g.Reload:
                            if ("" != I.item) {
                                var j = d.items[I.item];
                                L = this.localization.translate("game-reloading"),
                                F = j.sound.reload,
                                R = "reload" == j.caseTiming
                            }
                            break;
                        case g.UseItem:
                            if ("" != I.item) {
                                var q = d.items[I.item];
                                L = this.localization.translate("game-using"),
                                B = this.localization.translate("game-" + I.item),
                                F = q.sound.use
                            }
                            break;
                        case g.Revive:
                            var N = n.H(I.targetId).name;
                            L = this.localization.translate("game-reviving"),
                            B = v.downed ? "" : N
                        }
                        if ("" == L && "" == B || ("svo" == this.localization.translate("word-order") ? (E += L || "",
                        E += B ? " " + B : "") : "sov" == this.localization.translate("word-order") && (E += B ? B + " " : "",
                        E += L ? " " + L : ""),
                        this.pieTimer.a(function() {
                            u.curAction.type = g.None
                        }, this.curAction.duration - this.curAction.time, E, !1)),
                        F && (this.actionSoundInstance = this.audioManager.playSound(F),
                        this.audioManager.stopLocalActionSound()),
                        R && "" != I.item)
                            for (var G = d.items[I.item], U = 0; U < G.maxClip; U++) {
                                var V = U % 2 == 0 ? -1 : 1
                                  , H = Math.PI + Math.PI / 4 * V;
                                z.createCasingParticle(I.item, H, t.pos, t.dir, t.N.layer, this.particleBarn)
                            }
                    }
                }
                this.bigmapDisplayed || (this.mapSprite.x = this.minimapPos.x + this.mapSprite.width / 2 - t.pos.x / i.width * this.mapSprite.width,
                this.mapSprite.y = this.minimapPos.y - this.mapSprite.height / 2 + t.pos.y / i.height * this.mapSprite.height);
                var W = f.create(.5 * s.screenWidth / s.z(), .5 * s.screenHeight / s.z())
                  , K = {
                    min: f.sub(s.pos, W),
                    max: f.add(s.pos, W)
                }
                  , X = n.H(t.__id).teamId
                  , Y = n.getTeamInfo(X);
                if (!Y) {
                    var Z = {
                        playerId: t.__id,
                        teamId: X,
                        spectating: this.spectating,
                        playing: this.game.playingTicker,
                        teamInfo: n.teamInfo
                    };
                    b.logError("badTeamInfo_1: " + JSON.stringify(Z))
                }
                for (var Q = w.layout == w.Layout.Sm, J = 0; J < this.airdropSprites.length; J++) {
                    var $ = this.airdropSprites[J].mapSprite;
                    if ($.displayed) {
                        var ee = $.sprite
                          , te = $.position;
                        this.updateMapPosition(ee, te, !0, i),
                        this.updateMapSprite($, ee, e),
                        $ = this.airdropSprites[J].pingPulseWave,
                        ee = $.sprite,
                        te = $.position,
                        this.updateMapPosition(ee, te, !0, i),
                        this.updateMapSprite($, ee, e)
                    }
                }
                for (var ae = Y.playerIds.length, ie = 0; ie < ae; ie++) {
                    var re = this.teamSelectors[ie]
                      , oe = Y.playerIds[ie]
                      , ne = n.H(oe)
                      , se = oe == v.__id
                      , le = n.getTeammateData(oe);
                    if (le) {
                        for (var me in re.mapSprites)
                            if (re.mapSprites.hasOwnProperty(me)) {
                                var ce = re.mapSprites[me]
                                  , de = ce.sprite
                                  , pe = ce.usePlayerPosition ? le.pos : ce.position
                                  , ue = ce.displayed && (!le.dead || ce.showOnDeath);
                                "outer" != me || se || (ue = !1),
                                this.updateMapPosition(de, pe, ue, i),
                                this.updateMapSprite(ce, de, e)
                            }
                        if (se && !re.mapSpritesLocal ? (this.display.player.addChild(re.mapSprites.outer.sprite, re.mapSprites.inner.sprite),
                        re.mapSpritesLocal = !0) : !se && re.mapSpritesLocal && (this.display.teammates.addChild(re.mapSprites.outer.sprite, re.mapSprites.inner.sprite),
                        re.mapSpritesLocal = !1),
                        l > 1) {
                            re.teamIdDisplayed || (re.teamId.css("display", "block"),
                            re.teamIdDisplayed = !0),
                            this.updateTeam(ie, k.htmlEscape(ne.name), le.health, {
                                disconnected: le.disconnected,
                                dead: le.dead,
                                downed: le.downed
                            }, !1);
                            for (var he in re.indicators)
                                if (re.indicators.hasOwnProperty(he)) {
                                    var ge = re.indicators[he]
                                      , ye = ge.elem
                                      , fe = !0;
                                    if (!se || ge.displayAll) {
                                        var xe = le.pos
                                          , we = f.normalizeSafe(f.sub(xe, s.pos), f.create(1, 0))
                                          , be = c.intersectRayAabb(s.pos, we, K.min, K.max)
                                          , _e = Math.atan2(we.y, -we.x) + .5 * Math.PI
                                          , ve = s.pointToScreen(be)
                                          , Se = c.testCircleAabb(xe, d.player.radius, K.min, K.max);
                                        if (!le.dead && !Se) {
                                            var ke = 32
                                              , ze = "translate(-50%, -50%) rotate(" + _e + "rad)";
                                            Q && (ke = 16,
                                            ze += " scale(0.5)"),
                                            fe = !1,
                                            ye.css({
                                                left: x.clamp(ve.x, ke, s.screenWidth - ke),
                                                top: x.clamp(ve.y, ke, s.screenHeight - ke),
                                                transform: ze
                                            }),
                                            ge.displayed || (ye.css("display", "block"),
                                            ge.displayed = !0)
                                        }
                                    }
                                    fe && ge.displayed && (ye.css("display", "none"),
                                    ge.displayed = !1)
                                }
                        }
                    }
                }
                for (var Me = ae; Me < this.teamSelectors.length; Me++) {
                    var Te = this.teamSelectors[Me];
                    for (var Pe in Te.mapSprites)
                        if (Te.mapSprites.hasOwnProperty(Pe)) {
                            var Ce = Te.mapSprites[Pe];
                            Ce.visible = !1
                        }
                    for (var Ae in Te.indicators)
                        if (Te.indicators.hasOwnProperty(Ae)) {
                            var Ie = Te.indicators[Ae];
                            Ie.displayed && (Ie.elem.css("display", "none"),
                            Ie.displayed = !1)
                        }
                    if (Te.teamIdDisplayed) {
                        for (var De in Te.mapSprites)
                            if (Te.mapSprites.hasOwnProperty(De)) {
                                var Oe = Te.mapSprites[De]
                                  , Ee = Oe.sprite;
                                Ee.visible = !1
                            }
                        Te.teamId.css("display", "none"),
                        Te.teamIdDisplayed = !1
                    }
                }
                l > 1 && this.teamPlayerCount != ae && w.layout == w.Layout.Lg && (this.teamPlayerCount = ae,
                this.spectateOptionsWrapper.css({
                    top: this.teamPlayerCount * this.teamMemberHeight + 12
                }))
            },
            getMinimapMargin: function() {
                return w.layout == w.Layout.Sm ? 4 : 16
            },
            getMinimapSize: function() {
                return w.layout == w.Layout.Sm ? 192 : 256
            },
            getMinimapBorderWidth: function() {
                return w.layout == w.Layout.Sm ? 1 : 4
            },
            setPlayerPing: function(e, t, a, i) {
                var r = this.teamSelectors[t];
                if (r) {
                    var o = void 0
                      , n = void 0;
                    if (e == u.Airdrop) {
                        var s = this.airdropSpriteIdx;
                        o = this.airdropSprites[s].mapSprite,
                        n = this.airdropSprites[s].pingPulseWave,
                        this.airdropSpriteIdx++,
                        this.airdropSpriteIdx = this.airdropSpriteIdx == M ? 0 : this.airdropSpriteIdx
                    } else
                        o = r.mapSprites[e],
                        n = r.mapSprites.pingPulseWave;
                    o && (o.position = a,
                    o.displayed = !0,
                    o.life = i,
                    o.maxLife = i,
                    n.position = a,
                    n.displayed = !0,
                    n.life = 4,
                    n.maxLife = 4,
                    n.scale = n.baseScale,
                    n.sprite.tint = o.sprite.tint)
                }
            },
            updateMapPosition: function(e, t, a, i) {
                var r = this.getMapPosFromWorldPos(t, i);
                e.position = r,
                e.visible = a
            },
            updateMapSprite: function(e, t, a) {
                e.displayed && (void 0 != e.life && (e.life -= a,
                e.displayed = e.life > 0,
                e.maxLife - e.life < .1 ? t.alpha = (e.maxLife - e.life) / .1 : e.life < .5 ? t.alpha = Math.max(e.life / .5, 0) : t.alpha = 1),
                e.pulse && e.displayed && (e.scale = e.scale + a / 2.5,
                t.scale.set(e.scale, e.scale)),
                t.visible = t.alpha > 0)
            },
            getMapPosFromWorldPos: function(e, t) {
                var a = this.mapSprite.x - this.mapSprite.width / 2 + e.x / t.width * this.mapSprite.width
                  , i = this.mapSprite.y + this.mapSprite.height / 2 - e.y / t.height * this.mapSprite.height;
                return f.create(a, i)
            },
            getWorldPosFromMapPos: function(e, t, a) {
                var i = !1;
                if (k.getScreenDimensions().width,
                this.bigmapDisplayed) {
                    var r = (a.screenWidth - this.mapSprite.width) / 2
                      , o = (a.screenHeight - this.mapSprite.height) / 2;
                    w.layout != w.Layout.Sm || k.isLandscape() || (o = 0),
                    i = e.x > r && e.x < a.screenWidth - r && e.y > o && e.y < a.screenHeight - o
                } else if (this.minimapDisplayed) {
                    var n = this.getMinimapSize()
                      , s = this.getMinimapMargin()
                      , l = n * this.screenScaleFactor
                      , m = .5 * (l + s);
                    i = e.x > this.minimapPos.x - m && e.x < this.minimapPos.x + m && e.y > this.minimapPos.y - m && e.y < this.minimapPos.y + m
                }
                if (i) {
                    var c = f.create(this.mapSprite.x - this.mapSprite.width / 2, this.mapSprite.y + this.mapSprite.height / 2)
                      , d = (e.x - c.x) / this.mapSprite.width * this.mapWidth
                      , p = (c.y - e.y) / this.mapSprite.height * this.mapHeight;
                    return f.create(d, p)
                }
                return !1
            },
            hideAll: function() {
                this.gameElem.css("display", "none")
            },
            showAll: function() {
                this.gameElem.css("display", "block")
            },
            removeAds: function() {
                void 0 !== window.freestar.deleteAdSlots && (window.freestar.deleteAdSlots(),
                setTimeout(function() {
                    window.freestar.deleteAdSlots()
                }, 2500))
            },
            refreshMainPageAds: function() {
                void 0 !== window.freestar.newAdSlots && (window.freestar.newAdSlots([{
                    placementName: "survivio_300x250_main",
                    slotId: "ad-block-main-med-rect"
                }]),
                w.mobile || window.freestar.newAdSlots([{
                    placementName: "survivio_728x90_main",
                    slotId: "ad-block-main-leader-bot"
                }]))
            },
            showKill: function(e, t, a, i) {
                var r = this
                  , o = i ? e.name : this.localization.translate("game-you").toUpperCase()
                  , n = e.completeKill ? this.localization.translate("game-killed") : this.localization.translate("game-finally-killed")
                  , s = t.downed && !t.killed;
                s && (n = this.localization.translate("game-knocked-out"));
                var l = t.suicide ? i ? this.localization.translate("game-themselves") : this.localization.translate("game-yourself").toUpperCase() : t.name;
                this.killText.text(o + " " + n + " " + l),
                (e.completeKill || s) && a && this.killText.append(" " + this.localization.translate("game-with") + " " + a),
                s || t.suicide || t.teamKill ? this.killCount.text("") : this.killCount.text(e.kills + (1 != e.kills ? " " + this.localization.translate("game-kills") : " " + this.localization.translate("game-kill"))),
                this.killTimeout && clearTimeout(this.killTimeout),
                this.killElem.stop(!0),
                this.killElem.fadeIn(0),
                this.killTimeout = setTimeout(function() {
                    r.killElem.fadeOut(1e3)
                }, 6e3),
                i || s || this.updatePlayerKills(e.kills)
            },
            showDowned: function(e, t, a, i) {
                var r = this
                  , o = i ? t.name : this.localization.translate("game-you").toUpperCase()
                  , n = e.name;
                e.damageType == d.DamageType.Gas ? n = this.localization.translate("game-the-red-zone") : e.damageType == d.DamageType.Airdrop && (n = this.localization.translate("game-the-air-drop")),
                this.killText.text(n + " knocked " + o + " out"),
                a && e.damageType == d.DamageType.Player && this.killText.append(" " + this.localization.translate("game-with") + " " + a),
                this.killCount.text(""),
                this.killTimeout && clearTimeout(this.killTimeout),
                this.killElem.stop(!0),
                this.killElem.fadeIn(0),
                this.killTimeout = setTimeout(function() {
                    r.killElem.fadeOut(1e3)
                }, 6e3)
            },
            clearUI: function() {
                this.pieTimer.o(!0),
                this.curAction = {
                    type: g.None
                },
                this.displayMapLarge(!0),
                this.displayMiniMap(),
                this.clearStatsElems(),
                this.killElem.hide(),
                this.clearTeamUI(),
                this.toggleEscMenu(!0),
                this.toggleLocalStats(!0),
                this.visibilityMode = 0,
                this.spectatorCount = 0,
                this.updatePlayerKills(0)
            },
            hideStats: function() {
                this.displayingStats = !1,
                this.statsMain.css("display", "none"),
                this.statsElem.stop().css({
                    display: "none",
                    opacity: 0
                }),
                this.statsContents.stop().hide()
            },
            showStats: function(e, t) {
                var a = this;
                if (e.teamMode = e.teamMode || 1,
                e.spectating = e.spectating || !1,
                e.gameOver = e.gameOver || !1,
                e.stats = e.stats || {
                    timeAlive: 0,
                    kills: 0,
                    rank: 0
                },
                1 != e.teamMode || !e.spectating || e.gameOver) {
                    this.toggleEscMenu(!0),
                    this.displayMapLarge(!0),
                    this.clearStatsElems(),
                    this.statsMain.css("display", "block");
                    var i = 2500
                      , o = "";
                    switch (e.teamMode) {
                    case 1:
                        o = this.localization.translate("game-solo-rank");
                        break;
                    case 2:
                        o = this.localization.translate("game-duo-rank");
                        break;
                    case 4:
                        o = this.localization.translate("game-squad-rank");
                        break;
                    default:
                        o = this.localization.translate("game-rank")
                    }
                    var n = null;
                    e.victory && (n = e.spectating && 1 == e.teamMode ? this.spectatedPlayerName + " " + this.localization.translate("game-won-the-game") : this.localization.translate("game-chicken"),
                    i = 1750),
                    1 != e.teamMode ? this.statsHeader.html(function() {
                        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null
                          , i = t || a.localization.translate("game-team-eliminated")
                          , r = '<div class="ui-stats-header-right"><span class="ui-stats-header-stat">' + o + " </span>";
                        r += '<span class="ui-stats-header-value">#' + e.teamRank + "</span></div>";
                        for (var n = 0, s = 0; s < e.stats.length; s++)
                            n += e.stats[s].kills;
                        return r += '<div class="ui-stats-header-left"><span class="ui-stats-header-stat">' + a.localization.translate("game-team-kills") + " </span>",
                        r += '<span class="ui-stats-header-value">' + n + "</span></div>",
                        l("<div/>", {
                            class: ""
                        }).append(l("<div/>", {
                            class: "ui-stats-header-title",
                            html: t || i
                        })).append(l("<div/>", {
                            class: "ui-stats-header-overview",
                            html: r
                        }))
                    }(n)) : this.statsHeader.html(function() {
                        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null
                          , i = (e.stats[0],
                        e.spectating && 1 == e.teamMode ? a.spectatedPlayerName : a.localization.translate("game-You"));
                        i += " ",
                        i += e.spectating && 1 == e.teamMode ? a.localization.translate("game-player-died") : a.localization.translate("game-you-died"),
                        i += ".";
                        var r = '<div><span class="ui-stats-header-stat">' + o + " </span>";
                        return r += '<span class="ui-stats-header-value">#' + e.teamRank + "</span></div>",
                        l("<div/>", {
                            class: ""
                        }).append(l("<div/>", {
                            class: "ui-stats-header-title",
                            html: t || i
                        })).append(l("<div/>", {
                            class: "ui-stats-header-overview",
                            html: r
                        }))
                    }(n)),
                    this.pieTimer.o(!0),
                    this.displayingStats = !0;
                    var s = function(e, t) {
                        return l("<div/>", {
                            class: "ui-stats-info"
                        }).append(l("<div/>", {
                            html: e
                        })).append(l("<div/>", {
                            html: t
                        }))
                    }
                      , m = w.layout == w.Layout.Sm ? 125 : 250
                      , c = 0;
                    c -= (e.stats.length - 1) * m / 2,
                    c -= 10 * (e.stats.length - 1);
                    for (var d = 0; d < e.stats.length; d++) {
                        var p = e.stats[d]
                          , u = t.H(p.playerId)
                          , h = r(p.timeAlive)
                          , g = "ui-stats-info-player";
                        g += p.dead ? " ui-stats-info-status" : "";
                        var y = function(e) {
                            return l("<div/>", {
                                class: e
                            })
                        }(g);
                        y.css("left", c),
                        y.append(l("<div/>", {
                            class: "ui-stats-info-player-name",
                            html: k.htmlEscape(u.name)
                        })),
                        y.append(s(this.localization.translate("game-kills"), "" + p.kills)).append(s(this.localization.translate("game-damage-dealt"), p.damageDealt)).append(s(this.localization.translate("game-damage-taken"), p.damageTaken)).append(s(this.localization.translate("game-survived"), h)),
                        this.statsInfoBox.append(y),
                        c += 10
                    }
                    var f = l("<a/>", {
                        class: "ui-stats-restart btn-green btn-darken menu-option",
                        html: this.localization.translate("game-play-new-game")
                    });
                    if (f.on("click", function() {
                        a.doQuitGame(!1)
                    }),
                    this.statsOptions.append(f),
                    e.gameOver || this.waitingForPlayers)
                        f.css({
                            width: w.layout != w.Layout.Sm || w.tablet ? 225 : 130
                        });
                    else {
                        f.css({
                            left: w.layout != w.Layout.Sm || w.tablet ? -72 : -46
                        });
                        var x = l("<a/>", {
                            class: "btn-green btn-darken menu-option",
                            id: "ui-stats-spectate",
                            html: this.localization.translate("game-spectate")
                        });
                        x.on("click", function() {
                            a.beginSpectating = !0,
                            a.hideStats()
                        }),
                        this.statsOptions.append(x)
                    }
                    if (!e.victory && void 0 !== window.freestar.newAdSlots) {
                        var b = i - 150;
                        setTimeout(function() {
                            a.refreshMainPageAds(),
                            a.killElem.stop(),
                            a.killElem.hide(),
                            l(w.mobile ? "#ui-stats-ad-container-mobile" : "#ui-stats-ad-container-desktop").css("display", "inline-block");
                            var e = w.mobile ? "surviv-io_300x250_mobile_2" : "surviv-io_300x250_2";
                            window.freestar.newAdSlots([{
                                placementName: "survivio_300x250_respawn",
                                slotId: e
                            }])
                        }, b)
                    }
                    var _ = 0
                      , v = 250 / Math.max(1, e.stats.length)
                      , S = 750 / Math.max(1, e.stats.length);
                    this.statsInfoBox.children().each(function(e, t) {
                        var a = l(t);
                        a.css("opacity", 0),
                        a.delay(i + S + (_ + e) * v).animate({
                            opacity: 1
                        }, 500, function() {
                            a.children().each(function(e, t) {
                                l(t).delay(e * v).animate({
                                    opacity: 1
                                }, 500)
                            })
                        }),
                        a.children().each(function(e, t) {
                            l(t).css("opacity", 0),
                            _++
                        }),
                        _++
                    }),
                    this.statsOptions.children().each(function(e, t) {
                        var a = l(t);
                        a.hide(),
                        a.delay(i + S + (_ + e) * v).fadeIn(500),
                        _++
                    }),
                    this.statsElem.stop(),
                    this.statsElem.css("display", "block"),
                    this.statsElem.delay(i).animate({
                        opacity: 1
                    }, 1e3),
                    this.statsContents.stop(),
                    this.statsContents.css("display", "block"),
                    this.statsContents.delay(i).animate({
                        opacity: 1
                    }, 1e3)
                }
            },
            clearStatsElems: function() {
                this.statsHeader.empty(),
                this.statsInfoBox.empty(),
                this.statsOptions.empty(),
                this.statsAds.css("display", "none"),
                this.statsContents.stop(),
                this.statsContents.css({
                    display: "none",
                    opacity: 0
                }),
                this.statsElem.stop(),
                this.statsElem.css({
                    display: "none",
                    opacity: 0
                }),
                this.statsMain.css("display", "none")
            },
            setSpectating: function(e) {
                if (this.spectating != e)
                    if (this.spectating = e,
                    this.spectatedPlayerName = "",
                    e) {
                        this.spectateMode.css("display", "block");
                        var t = this.game.teamMode <= 2;
                        this.specPrevButton.css("display", t ? "none" : "block"),
                        this.specNextButton.css("display", t ? "none" : "block"),
                        l(".ui-zoom").removeClass("ui-zoom-hover")
                    } else
                        this.spectateMode.css("display", "none")
            },
            setSpectatedPlayer: function(e, t) {
                t = k.htmlEscape(t),
                this.spectatedPlayerId != e && (this.spectatedPlayerText.find("#spectate-player").html(t),
                this.spectatedPlayerName = t,
                this.spectatedPlayerId = e,
                this.curAction = {
                    type: g.None
                })
            },
            setLocalStats: function(e) {
                var t = {
                    kills: this.localization.translate("game-kills"),
                    damageDealt: this.localization.translate("game-damage-dealt"),
                    damageTaken: this.localization.translate("game-damage-taken"),
                    timeAlive: this.localization.translate("game-survived")
                };
                this.spectateModeStatsData.empty();
                for (var a in t)
                    if (t.hasOwnProperty(a)) {
                        var i = t[a]
                          , o = "timeAlive" == a ? r(e[a]) : e[a]
                          , n = '<tr><td class="ui-spectate-stats-category">' + i + '</td><td class="ui-spectate-stats-value">' + o + "</td></tr>";
                        this.spectateModeStatsData.append(n)
                    }
            },
            toggleLocalStats: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0]
                  , t = "none" == this.spectateModeStats.css("display") && !e;
                this.spectateModeStats.css("display", t ? "inline-block" : "none"),
                this.specStatsButton.html(t ? this.localization.translate("game-hide-match-stats") : this.localization.translate("game-view-match-stats"))
            },
            updatePlayersAlive: function(e) {
                this.playersAlive.html(e)
            },
            updatePlayerKills: function(e) {
                this.playerKills.html(e)
            },
            displayMapLarge: function(e) {
                this.bigmapDisplayed = !e && !this.bigmapDisplayed,
                this.bigmapDisplayed ? this.container.alpha = 1 : this.container.alpha = this.minimapDisplayed ? 1 : 0;
                var t = w.layout == w.Layout.Sm ? ".js-ui-mobile-map-hidden" : "js-ui-desktop-map-hidden";
                t += ", .js-ui-map-hidden",
                l(2 == this.visibilityMode ? ".js-ui-hud-show" : t).css("display", this.bigmapDisplayed ? "none" : "block"),
                l(".js-ui-map-show").css("display", this.bigmapDisplayed ? "block" : "none"),
                this.updateSpectatorCountDisplay(!0),
                this.redraw(this.game.q)
            },
            updateSpectatorCountDisplay: function(e) {
                var t = !this.bigmapDisplayed && this.spectatorCount > 0;
                e = e || this.spectatorCount > 0 && !this.spectatorCounterDisplayed || 0 == this.spectatorCount && this.spectatorCounterDisplayed,
                this.spectatorCount != this.prevSpectatorCount && (this.spectatorCounter.html(this.spectatorCount),
                this.prevSpectatorCount = this.spectatorCount),
                e && (this.spectatorCounterContainer.css("display", t ? "block" : "none"),
                this.spectatorCounterDisplayed = t)
            },
            toggleMiniMap: function() {
                this.minimapDisplayed ? this.hideMiniMap() : this.displayMiniMap()
            },
            cycleVisibilityMode: function() {
                if (!this.bigmapDisplayed)
                    switch (this.visibilityMode) {
                    case 0:
                        this.hideMiniMap(),
                        this.visibilityMode = 1;
                        break;
                    case 1:
                        this.displayMiniMap(),
                        this.visibilityMode = 0
                    }
            },
            cycleHud: function() {
                "none" == this.gameElem.css("display") ? (this.gameElem.css("display", "block"),
                this.displayMiniMap()) : (this.gameElem.css("display", "none"),
                this.hideMiniMap())
            },
            hideMiniMap: function() {
                this.bigmapDisplayed || (this.minimapDisplayed = !1,
                this.container.alpha = 0,
                this.mapInfo.css("bottom", "auto"),
                this.spectatorCounterContainer.css({
                    bottom: 6,
                    left: 98
                }))
            },
            displayMiniMap: function() {
                if (!this.bigmapDisplayed) {
                    var e = w.layout == w.Layout.Sm;
                    this.minimapDisplayed = !0,
                    this.container.alpha = 1,
                    this.mapInfo.css("bottom", this.mapInfoBottom),
                    this.spectatorCounterContainer.css({
                        bottom: e ? 0 : 218,
                        left: e ? 0 : 6
                    })
                }
            },
            displayAnnouncement: function(e, t) {
                var a = "";
                switch (e) {
                case y.Waiting:
                    a = this.localization.translate("game-red-zone-advances");
                    var i = Math.floor(t / 60)
                      , r = t - 60 * i;
                    a += i > 1 ? " " + i + " " + this.localization.translate("game-minutes") : "",
                    a += 1 == i ? " " + i + " " + this.localization.translate("game-minute") : "",
                    a += r > 0 ? " " + Math.floor(r) + " " + this.localization.translate("game-seconds") : "";
                    break;
                case y.Moving:
                    a = this.localization.translate("game-red-zone-advancing")
                }
                a.length > 0 && (this.announcement.html(a),
                this.announcement.fadeIn(400, function() {
                    setTimeout(function() {
                        l("#ui-announcement").fadeOut(800)
                    }, 3e3)
                }))
            },
            setWaitingForPlayers: function(e) {
                this.waitingForPlayers = e,
                this.waitingText.css("display", e ? "block" : "none")
            },
            render: function(e, t, a, i) {
                var r = t.getCircle()
                  , o = this.getMapPosFromWorldPos(r.pos, i)
                  , n = this.getMapPosFromWorldPos(f.add(r.pos, f.create(r.rad, 0)), i)
                  , s = f.length(f.sub(n, o));
                this.gasRenderer.render(o, s, t.isActive());
                var l = t.circleNew
                  , m = this.getMapPosFromWorldPos(l.pos, i)
                  , c = this.getMapPosFromWorldPos(f.add(l.pos, f.create(l.rad, 0)), i)
                  , d = f.length(f.sub(c, m))
                  , p = this.getMapPosFromWorldPos(e, i)
                  , u = t.isActive()
                  , h = t.isActive() && !this.bigmapDisplayed;
                this.gasSafeZoneRenderer.render(m, d, p, u, h)
            },
            updateHealthBar: function(e, t, a, i) {
                var r = e
                  , o = .01 * i.health * r;
                o = i.dead ? 0 : Math.max(o, 1),
                t.css("width", o),
                o > 0 ? a.css("width", o) : a.css("display", "none");
                var s = i.health
                  , l = this.healthRed
                  , m = this.healthDarkpink;
                if (s > 25) {
                    if (i.downed)
                        t.css({
                            backgroundColor: "red"
                        });
                    else {
                        x.eqAbs(s, 100, .2) ? (l = this.healthGrey,
                        m = this.healthGrey) : x.eqAbs(s, 75, .2) || s >= 75 ? (l = this.healthWhite,
                        m = this.healthWhite) : (l = this.healthDarkpink,
                        m = this.healthLightpink);
                        var c = l.getColors()
                          , d = m.getColors()
                          , p = n(c.r, d.r, 45, s)
                          , u = n(c.g, d.g, 45, s)
                          , h = n(c.b, d.b, 45, s);
                        t.css({
                            backgroundColor: "rgba(" + p + "," + u + "," + h + ",1)"
                        })
                    }
                    t.removeClass("ui-bar-danger")
                } else
                    t.addClass("ui-bar-danger")
            },
            updateTeam: function(e, t, a, i) {
                var r = this.teamSelectors[e].teamId
                  , o = this.teamSelectors[e].teamName
                  , n = this.teamSelectors[e].prevHealth
                  , s = this.teamSelectors[e].prevStatus
                  , l = i.dead != s.dead || i.disconnected != s.disconnected || i.downed != s.downed;
                if (this.teamSelectors[e].teamNameHtml != t || a != n || l) {
                    var c = (this.teamSelectors[e].teamIcon,
                    this.teamSelectors[e].teamStatus)
                      , d = this.teamSelectors[e].teamHealthInner
                      , p = this.teamSelectors[e].teamHealthDepleted;
                    this.teamSelectors[e].teamNameHtml = t,
                    o.html(t),
                    this.updateHealthBar(this.teamMemberHealthBarWidth, d, p, {
                        health: a,
                        dead: i.dead,
                        downed: i.downed
                    }),
                    l && (c.attr("class", "ui-team-member-status"),
                    i.disconnected ? c.addClass("ui-team-member-status-disconnected") : i.dead ? c.addClass("ui-team-member-status-dead") : i.downed && c.addClass("ui-team-member-status-downed").addClass("icon-pulse"),
                    i.dead && (this.teamSelectors[e].mapSprites.inner.sprite.texture = m.Texture.fromImage("skull-team-outlined.img"),
                    this.teamSelectors[e].mapSprites.inner.sprite.scale = f.mul(this.playerBaseScale, 1.5)),
                    (i.disconnected || i.dead) && o.css("opacity", .3)),
                    r.css("display", "block"),
                    this.teamSelectors[e].prevStatus = i,
                    this.teamSelectors[e].prevHealth = a
                }
            },
            clearTeamUI: function() {
                l(".ui-team-member").css("display", "none"),
                l(".ui-team-indicator").css("display", "none"),
                l(".ui-team-member-name").removeAttr("style"),
                l(".ui-team-member-status").removeAttr("style"),
                l(".ui-team-member-status").removeClass("ui-team-member-status-downed ui-team-member-status-dead ui-team-member-status-disconnected icon-pulse"),
                this.teamSelectors = []
            },
            resize: function(e) {
                this.screenScaleFactor = w.layout == w.Layout.Sm ? .5626 : Math.min(1, x.clamp(e.screenWidth / 1280, .75, 1) * x.clamp(e.screenHeight / 1024, .75, 1)),
                this.pieTimer.resize(this.touch, this.screenScaleFactor),
                this.gasRenderer.resize(),
                this.redraw(e)
            },
            redraw: function(e) {
                var t = e.screenWidth
                  , a = e.screenHeight
                  , i = this.getMinimapMargin()
                  , r = this.getMinimapSize()
                  , o = this.getMinimapBorderWidth()
                  , n = w.layout == w.Layout.Sm;
                if (this.display.border.clear(),
                this.container.mask.clear(),
                this.bigmapDisplayed) {
                    var s = x.min(t, a);
                    this.mapSprite.width = s,
                    this.mapSprite.height = s,
                    this.mapSprite.x = t / 2,
                    this.mapSprite.y = a / 2,
                    this.mapSprite.alpha = 1,
                    this.container.mask.beginFill(16777215, 1),
                    this.container.mask.drawRect(this.mapSprite.x - this.mapSprite.width / 2, this.mapSprite.y - this.mapSprite.height / 2, this.mapSprite.width, this.mapSprite.height),
                    this.container.mask.endFill(),
                    w.touch && this.bigmapCollision.css({
                        width: a,
                        height: t
                    })
                } else {
                    var l = 1600 * this.screenScaleFactor / 1.2
                      , c = r * this.screenScaleFactor;
                    this.mapSprite.width = l,
                    this.mapSprite.height = l,
                    this.mapSprite.alpha = .8;
                    var d = {
                        zoom: this.screenScaleFactor
                    };
                    document.body && ("WebkitTransform"in document.body.style ? d = {
                        "-webkit-transform": "scale(" + this.screenScaleFactor + ")"
                    } : "transform"in document.body.style && (d = {
                        transform: "scale(" + this.screenScaleFactor + ")"
                    })),
                    this.mapContainer.css(d),
                    this.mapContainer.css("bottom", this.mapContainerBottom * this.screenScaleFactor);
                    var p = n ? c / 2 + i : a - c / 2 - i;
                    this.minimapPos.x = i + c / 2,
                    this.minimapPos.y = p,
                    this.player.position = new m.Point(this.minimapPos.x,this.minimapPos.y),
                    this.display.border.lineStyle(o, 0),
                    this.display.border.beginFill(0, 0);
                    var u = n ? i + o / 2 : a - c - i + o / 2;
                    this.display.border.drawRect(i + o / 2, u, c - o, c - o),
                    this.display.border.endFill();
                    var h = n ? i : a - c - i;
                    this.container.mask.beginFill(16777215, 1),
                    this.container.mask.drawRect(i, h - .5, c, c),
                    this.container.mask.endFill()
                }
            },
            toggleEscMenu: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                if (!this.displayingStats) {
                    if (this.escMenuDisplayed || e)
                        return this.escMenuDisplayed = !1,
                        void this.escMenuElem.css("display", "none");
                    if (this.bigmapDisplayed)
                        return void this.displayMapLarge(!0);
                    2 == this.visibilityMode && this.cycleVisibilityMode(),
                    this.escMenuDisplayed = !0,
                    this.escMenuElem.css("display", "block")
                }
            }
        },
        e.exports = {
            K: o
        }
    },
    "33375c30": function(e, t, a) {
        "use strict";
        function i(e, t, a) {
            var i = t - e
              , r = i * a;
            return Math.abs(r) < .001 ? i : r
        }
        function r() {
            this.sprites = []
        }
        var o = (a("0e566746"),
        a("80ac57a6"))
          , n = a("6b42806d")
          , s = (a("10899aea"),
        a("ceee80d9"))
          , l = a("1901e2d9")
          , m = a("c2a798c8")
          , c = (a("ce29f17f"),
        a("b58076b1"));
        a("c347b8dd"),
        a("af8ba00f"),
        r.prototype = {
            a: function() {
                this.isNew = !1,
                this.residue = null,
                this.ceilingDead = !1,
                this.playedCeilingDeadFx = !1
            },
            o: function() {
                for (var e = 0; e < this.sprites.length; e++) {
                    var t = this.sprites[e];
                    t.active = !1,
                    t.sprite.visible = !1,
                    t.sprite.parent && t.sprite.parent.removeChild(t.sprite)
                }
            },
            allocSprite: function() {
                for (var e = 0; e < this.sprites.length; e++) {
                    var t = this.sprites[e];
                    if (!t.active)
                        return t.active = !0,
                        t.sprite
                }
                var a = new o.Sprite;
                return a.anchor.set(.5, .5),
                this.sprites.push({
                    active: !0,
                    sprite: a
                }),
                a
            },
            n: function(e, t, a, i) {
                var r = this;
                if (this.type = e.type,
                this.pos = m.copy(e.pos),
                this.rot = s.oriToRad(e.ori),
                this.scale = 1,
                this.layer = e.layer,
                this.ceilingDead = e.ceilingDead,
                a) {
                    var l = s.Defs[e.type];
                    this.isNew = !0,
                    this.playedCeilingDeadFx = -1 != i.map.deadCeilingIds.indexOf(this.__id);
                    var c = function(e) {
                        var t = e.pos || m.create(0, 0)
                          , a = s.oriToRad(e.rot || 0)
                          , i = r.allocSprite();
                        return i.texture = o.Texture.fromImage(e.sprite),
                        i.tint = e.tint,
                        i.posOffset = m.rotate(t, r.rot),
                        i.rotOffset = a,
                        i.imgAlpha = e.alpha,
                        i.alpha = i.imgAlpha,
                        i.defScale = e.scale,
                        i.visible = !0,
                        i
                    };
                    this.bounds = n.transform(s.getBoundingCollider(this.type), this.pos, this.rot, this.scale),
                    this.zIdx = l.zIdx || 0,
                    this.surfaces = [];
                    for (var d = 0; d < l.floor.surfaces.length; d++) {
                        for (var p = l.floor.surfaces[d], u = {
                            surface: p.type,
                            colliders: []
                        }, h = 0; h < p.collision.length; h++)
                            u.colliders.push(n.transform(p.collision[h], this.pos, this.rot, this.scale));
                        this.surfaces.push(u)
                    }
                    var g = Object.assign({}, {
                        dist: 5.5,
                        width: 2.75,
                        linger: 0,
                        fadeRate: 12
                    }, l.ceiling.vision);
                    this.ceiling = {
                        scopeIn: [],
                        scopeOut: [],
                        vision: g,
                        visionTicker: 0,
                        fadeAlpha: 1
                    };
                    for (var y = 0; y < l.ceiling.scopeIn.length; y++)
                        this.ceiling.scopeIn.push(n.transform(l.ceiling.scopeIn[y], this.pos, this.rot, this.scale));
                    for (var f = 0; f < l.ceiling.scopeOut.length; f++)
                        this.ceiling.scopeOut.push(n.transform(l.ceiling.scopeOut[f], this.pos, this.rot, this.scale));
                    this.imgs = [];
                    for (var x = 0; x < l.floor.imgs.length; x++)
                        this.imgs.push({
                            sprite: c(l.floor.imgs[x]),
                            isCeiling: !1,
                            waterRipples: !!l.floor.imgs[x].waterRipples,
                            zOrd: this.zIdx,
                            zIdx: 100 * this.__id + x
                        });
                    for (var w = 0; w < l.ceiling.imgs.length; w++)
                        this.imgs.push({
                            sprite: c(l.ceiling.imgs[w]),
                            isCeiling: !0,
                            waterRipples: !1,
                            zOrd: 750 - this.zIdx,
                            zIdx: 100 * this.__id + w
                        })
                }
            },
            l: function(e, t, a, r, n, l, m) {
                if (this.ceilingDead && !this.playedCeilingDeadFx && (t.deadCeilingIds.push(this.__id),
                this.playedCeilingDeadFx = !0,
                this.isNew || this.destroyCeilingFx(a, r)),
                this.isNew = !1,
                this.ceilingDead && !this.residue) {
                    var d = s.Defs[this.type];
                    if (void 0 !== d.ceiling.destroy) {
                        var p = this.allocSprite();
                        p.texture = o.Texture.fromImage(d.ceiling.destroy.residue),
                        p.position.set(0, 0),
                        p.scale.set(1, 1),
                        p.rotation = 0,
                        p.visible = !0,
                        this.imgs[0].sprite.addChild(p),
                        this.residue = p
                    }
                }
                var u = this.ceiling;
                u.visionTicker -= e;
                for (var h = !1, g = u.vision, y = 0; y < u.scopeIn.length; y++)
                    if (c.scanCollider(u.scopeIn[y], t.Y.m(), n.pos, n.layer, .5, 2 * g.width, g.dist, 5)) {
                        h = !0;
                        break
                    }
                this.ceilingDead && (h = !0),
                h && (u.visionTicker = g.linger + 1e-4),
                n.noCeilingRevealTicker > 0 && (u.visionTicker = 0);
                var f = u.visionTicker > 0
                  , x = i(u.fadeAlpha, f ? 0 : 1, e * (f ? 12 : g.fadeRate));
                u.fadeAlpha += x;
                for (var w = 0; w < this.imgs.length; w++) {
                    var b = this.imgs[w]
                      , _ = b.isCeiling ? u.fadeAlpha : 1;
                    this.positionSprite(b.sprite, _, m);
                    var v = this.layer;
                    b.isCeiling && (this.layer == n.layer || 2 & n.layer && 1 == this.layer) && (v |= 2),
                    l.addPIXIObj(b.sprite, v, b.zOrd, b.zIdx)
                }
            },
            destroyCeilingFx: function(e, t) {
                for (var a = s.Defs[this.type].ceiling.destroy, i = this.surfaces[0], r = 0; r < i.colliders.length; r++) {
                    for (var o = n.toAabb(i.colliders[r]), c = 0; c < a.particleCount; c++) {
                        var d = m.create(l.random(o.min.x, o.max.x), l.random(o.min.y, o.max.y))
                          , p = m.mul(m.randomUnit(), l.random(0, 15));
                        e.addParticle(a.particle, this.layer, d, p)
                    }
                    break
                }
                t.playSound("ceiling_break_01", {
                    channel: "sfx",
                    soundPos: this.pos
                })
            },
            positionSprite: function(e, t, a) {
                var i = a.pointToScreen(m.add(this.pos, e.posOffset))
                  , r = a.pixels(this.scale * e.defScale);
                e.position.set(i.x, i.y),
                e.scale.set(r, r),
                e.rotation = -this.rot + e.rotOffset,
                e.alpha = e.imgAlpha * t
            },
            render: function(e) {}
        },
        e.exports = r
    },
    "34e32c48": function(e, t, a) {
        "use strict";
        var i = (a("0e566746"),
        a("10899aea"))
          , r = a("c2a798c8")
          , o = {
            circleToAabb: function(e, t) {
                var a = r.create(t);
                return {
                    min: r.sub(e, a),
                    max: r.add(e, a)
                }
            },
            aabbToCircle: function(e, t) {
                var a = r.mul(r.sub(t, e), .5);
                return {
                    pos: r.add(e, a),
                    rad: r.length(a)
                }
            },
            lineSegmentToAabb: function(e, t) {
                return {
                    min: r.create(e.x < t.x ? e.x : t.x, e.y < t.y ? e.y : t.y),
                    max: r.create(e.x > t.x ? e.x : t.x, e.y > t.y ? e.y : t.y)
                }
            },
            boundingAabb: function(e) {
                for (var t = r.create(Number.MAX_VALUE, Number.MAX_VALUE), a = r.create(-Number.MAX_VALUE, -Number.MAX_VALUE), i = 0; i < e.length; i++) {
                    var o = e[i];
                    t.x = Math.min(t.x, o.min.x),
                    t.y = Math.min(t.y, o.min.y),
                    a.x = Math.max(a.x, o.max.x),
                    a.y = Math.max(a.y, o.max.y)
                }
                return {
                    min: t,
                    max: a
                }
            },
            splitAabb: function(e, t) {
                var a = r.mul(r.sub(e.max, e.min), .5)
                  , i = r.add(e.min, a)
                  , o = {
                    min: r.copy(e.min),
                    max: r.copy(e.max)
                }
                  , n = {
                    min: r.copy(e.min),
                    max: r.copy(e.max)
                };
                Math.abs(t.y) > Math.abs(t.x) ? (o.max = r.create(e.max.x, i.y),
                n.min = r.create(e.min.x, i.y)) : (o.max = r.create(i.x, e.max.y),
                n.min = r.create(i.x, e.min.y));
                var s = r.sub(e.max, e.min);
                return r.dot(s, t) > 0 ? [n, o] : [o, n]
            },
            clampPosToAabb: function(e, t) {
                return r.minElems(r.maxElems(t, e.min), e.max)
            },
            testCircleAabb: function(e, t, a, o) {
                var n = r.create(i.clamp(e.x, a.x, o.x), i.clamp(e.y, a.y, o.y));
                return r.lengthSqr(r.sub(e, n)) < t * t || e.x >= a.x && e.x <= o.x && e.y >= a.y && e.y <= o.y
            },
            testCircleCircle: function(e, t, a, i) {
                var o = t + i;
                return r.lengthSqr(r.sub(a, e)) < o * o
            },
            testAabbAabb: function(e, t, a, i) {
                return e.x < i.x && e.y < i.y && a.x < t.x && a.y < t.y
            },
            signedAreaTri: function(e, t, a) {
                return (e.x - a.x) * (t.y - a.y) - (e.y - a.y) * (t.x - a.x)
            },
            intersectSegmentSegment: function(e, t, a, i) {
                var n = o.signedAreaTri(e, t, i)
                  , s = o.signedAreaTri(e, t, a);
                if (0 != n && 0 != s && n * s < 0) {
                    var l = o.signedAreaTri(a, i, e)
                      , m = l + s - n;
                    if (l * m < 0) {
                        var c = l / (l - m);
                        return {
                            point: r.add(e, r.mul(r.sub(t, e), c))
                        }
                    }
                }
                return null
            },
            intersectSegmentCircle: function(e, t, a, i) {
                var o = r.sub(t, e)
                  , n = Math.max(r.length(o), 1e-6);
                o = r.div(o, n);
                var s = r.sub(e, a)
                  , l = r.dot(s, o)
                  , m = r.dot(s, s) - i * i;
                if (m > 0 && l > 0)
                    return null;
                var c = l * l - m;
                if (c < 0)
                    return null;
                var d = Math.sqrt(c)
                  , p = -l - d;
                if (p < 0 && (p = -l + d),
                p <= n) {
                    var u = r.add(e, r.mul(o, p));
                    return {
                        point: u,
                        normal: r.normalize(r.sub(u, a))
                    }
                }
                return null
            },
            intersectSegmentAabb: function(e, t, a, i) {
                var o = 0
                  , n = Number.MAX_VALUE
                  , s = e
                  , l = r.sub(t, e)
                  , m = r.length(l);
                if (l = m > 1e-5 ? r.div(l, m) : r.create(1, 0),
                Math.abs(l.x) < 1e-5 && (l.x = 2e-5),
                Math.abs(l.y) < 1e-5 && (l.y = 2e-5),
                Math.abs(l.x) > 1e-5) {
                    var c = (a.x - s.x) / l.x
                      , d = (i.x - s.x) / l.x;
                    if (o = Math.max(o, Math.min(c, d)),
                    n = Math.min(n, Math.max(c, d)),
                    o > n)
                        return null
                }
                if (Math.abs(l.y) > 1e-5) {
                    var p = (a.y - s.y) / l.y
                      , u = (i.y - s.y) / l.y;
                    if (o = Math.max(o, Math.min(p, u)),
                    n = Math.min(n, Math.max(p, u)),
                    o > n)
                        return null
                }
                if (o > m)
                    return null;
                var h = r.add(e, r.mul(l, o))
                  , g = r.add(a, r.mul(r.sub(i, a), .5))
                  , y = r.sub(h, g)
                  , f = r.mul(r.sub(a, i), .5);
                return {
                    point: h,
                    normal: r.normalizeSafe(r.create(parseInt(y.x / Math.abs(f.x) * 1.001), parseInt(y.y / Math.abs(f.y) * 1.001)), r.create(1, 0))
                }
            },
            intersectRayAabb: function(e, t, a, i) {
                Math.abs(t.x) < 1e-5 && (t.x = 2e-5),
                Math.abs(t.y) < 1e-5 && (t.y = 2e-5);
                var o = r.divElems(r.sub(a, e), t)
                  , n = r.divElems(r.sub(i, e), t)
                  , s = r.minElems(o, n)
                  , l = r.maxElems(o, n)
                  , m = Math.min(l.x, l.y);
                return m >= Math.max(s.x, s.y) ? r.add(e, r.mul(t, m)) : null
            },
            intersectCircleCircle: function(e, t, a, i) {
                var o = t + i
                  , n = r.sub(a, e)
                  , s = r.lengthSqr(n);
                if (s < o * o) {
                    var l = Math.sqrt(s);
                    return {
                        dir: l > 1e-5 ? r.div(n, l) : r.create(1, 0),
                        pen: o - l
                    }
                }
                return null
            },
            intersectAabbCircle: function(e, t, a, o) {
                if (a.x >= e.x && a.x <= t.x && a.y >= e.y && a.y <= t.y) {
                    var n = r.mul(r.sub(t, e), .5)
                      , s = r.add(e, n)
                      , l = r.sub(a, s)
                      , m = Math.abs(l.x) - n.x - o
                      , c = Math.abs(l.y) - n.y - o;
                    return m > c ? {
                        dir: r.create(l.x > 0 ? 1 : -1, 0),
                        pen: -m
                    } : {
                        dir: r.create(0, l.y > 0 ? 1 : -1),
                        pen: -c
                    }
                }
                var d = r.create(i.clamp(a.x, e.x, t.x), i.clamp(a.y, e.y, t.y))
                  , p = r.sub(a, d)
                  , u = r.lengthSqr(p);
                if (u < o * o) {
                    var h = Math.sqrt(u);
                    return {
                        dir: h > 1e-4 ? r.div(p, h) : r.create(1, 0),
                        pen: o - h
                    }
                }
                return null
            },
            intersectAabbAabb: function(e, t, a, i) {
                var o = r.mul(r.sub(t, e), .5)
                  , n = r.add(e, o)
                  , s = r.mul(r.sub(i, a), .5)
                  , l = r.add(a, s)
                  , m = r.sub(l, n)
                  , c = o.x + s.x - Math.abs(m.x);
                if (c > 0) {
                    var d = o.y + s.y - Math.abs(m.y);
                    if (d > 0)
                        return c > d ? {
                            dir: m.x < 0 ? r.create(-1, 0) : r.create(1, 0),
                            pen: c
                        } : {
                            dir: m.y < 0 ? r.create(0, -1) : r.create(0, 1),
                            pen: d
                        }
                }
                return null
            }
        };
        e.exports = o
    },
    "3bff36cf": function(e, t, a) {
        "use strict";
        var i = {
            "@metadata": {
                "last-updated": "2018-02-20",
                locale: "it"
            },
            "word-order": "svo",
            "index-slogan": "2d Battle Royale",
            "index-region": "Nazione",
            "index-north-america": "America del Nord",
            "index-europe": "Europa",
            "index-asia": "Asia",
            "index-players": "giocatori",
            "index-play-solo": "Gioca da Solo",
            "index-play-duo": "Gioca Coppia",
            "index-play-squad": "Gioca Squadra",
            "index-create-team": "Crea un Team",
            "index-how-to-play": "Come Giocare",
            "index-leave-team": "Abbandona Team",
            "index-joining-team": "Partecipando al Team",
            "index-creating-team": "Creando il Team",
            "index-invite-link": "Link d'invito",
            "index-solo": "Solo",
            "index-duo": "Coppia",
            "index-squad": "Squadra",
            "index-auto-fill": "Auto Fill",
            "index-no-fill": "No Fill",
            "index-waiting-for-leader": "Aspettando che il leader avvii la partita",
            "index-play": "Gioca",
            "index-featured-youtuber": "Youtuber in Evidenza",
            "index-settings": "Impostazioni",
            "index-high-resolution": "Alta risoluzione (Clicca per aumentare la qualità)",
            "index-screen-shake": "Vibrazione dello schermo",
            "index-master-volume": "Volume principale",
            "index-sfx-volume": "Volume effetti",
            "index-music-volume": "Volume musica",
            "index-team-is-full": "Il team è pieno!",
            "index-failed-joining-team": "Tentativo di partecipare al team fallito.",
            "index-failed-creating-team": "Tentativo di creare il team fallito.",
            "index-failed-finding-game": "Tentativo di trovare una partita fallito.",
            "index-failed-joining-game": "Tentativo di partecipare al team fallito.",
            "index-lost-connection": "Tentativo di connettersi al team fallito.",
            "index-host-closed": "L'host ha terminato la connessione.",
            "index-view-more": "Guarda di più",
            "index-back-to-main": "Ritorna al Menù principale",
            "index-most-kills": "Più Uccisioni",
            "index-total-kills": "Uccisioni Totali",
            "index-total-wins": "Vittorie Totali",
            "index-top-5-percent": "Top 5%",
            "index-kill-death-ratio": "Rapporto Uccisioni-Morti",
            "index-for": "Di",
            "index-today": "Oggi",
            "index-this-week": "Questa Settimana",
            "index-all-time": "Di Sempre",
            "index-top-100": "TOP 100",
            "index-rank": "Classifica",
            "index-player": "Giocatore",
            "index-total-games": "Partite totali",
            "index-controls": "Controlli",
            "index-movement": "Movimento",
            "index-movement-ctrl": "W, A, S, D",
            "index-aim": "Mira",
            "index-aim-ctrl": "Mouse",
            "index-punch": "Pugno",
            "index-shoot": "Spara",
            "index-shoot-ctrl": "Click Sinistro",
            "index-change-weapons": "Cambia Armi",
            "index-change-weapons-ctrl": "1-4 oppure scorri la rotella",
            "index-stow-weapons": "Vai in modalità pugni",
            "index-stow-weapons-ctrl": "3 oppure E",
            "index-swap-weapons": "Ritorna all'arma precedente",
            "index-swap-weapons-ctrl": "Q",
            "index-reload": "Ricarica",
            "index-reload-ctrl": "R",
            "index-scope-zoom": "Zoom mirino",
            "index-scope-zoom-ctrl": "Click Sinistro sullo Zoom",
            "index-pickup": "Raccogli",
            "index-loot": "Saccheggia",
            "index-revive": "Rianima",
            "index-pickup-ctrl": "F",
            "index-use-medical": "Usa oggetto medico",
            "index-use-medical-ctrl": "Click sinistro sull'oggetto oppure 7-0",
            "index-drop-item": "Lascia cadere oggetto",
            "index-drop-item-ctrl": "Click destro sull'oggetto",
            "index-cancel-action": "Cancella azione",
            "index-cancel-action-ctrl": "X",
            "index-view-map": "Apri la mappa",
            "index-view-map-ctrl": "M oppure G",
            "index-toggle-minimap": "Abilita/Disabilita HUD",
            "index-toggle-minimap-ctrl": "V",
            "index-use-ping": "Use Team Ping Wheel",
            "index-use-ping-ctrl": "Tieni premuto C, dopodichè tieni premuto il tasto destro e trascina il mouse, infine rilascia il tasto destro",
            "index-use-emote": "Come Giocare",
            "index-use-emote-ctrl": "Tieni premuto il tasto destro e trascina il mouse, dopodichè rilascia il tasto destro",
            "index-tips-1-desc": "L'obiettivo di surviv.io è di rimanere l'ultimo giocatore sopravvissuto. Hai solo una vita a partita - Non puoi rinascere!",
            "index-tips-2": "PUBG in 2D",
            "index-tips-2-desc": "Se hai già giocato ad altri giochi battle royale come PUBG, Fortnite o H1Z1, allora sei già a buon punto! Immagina Surviv.io come PUBG ma in 2D.",
            "index-tips-3": "Saccheggia e Uccidi",
            "index-tips-3-desc": "Comincerai la partita con nient'altro che un semplice marsupio. Gira per la mappa per trovare: armi, munizioni, mirini e oggetti medici. Elimina gli altri giocatori in modo da rubare il loro bottino!",
            "index-tips-4": "Rosso = Dannoso!",
            "index-tips-4-desc": "I giocatori non sono l'unica cosa che può recarti del danno. La zona rossa è letale e si restringe col passare del tempo, più tempo trascorrerai all'infuori della zona, maggiore sarà il danno recato. Assicurati di dare spesso un'occhiata alla mappa per rimanere al sicuro.",
            "game-alive": "In Vita",
            "game-reloading": "Ricaricando",
            "game-using": "Usando",
            "game-reviving": "Rianimando",
            "game-revive-teammate": "Rianima compagno",
            "game-equip": "Equipaggia",
            "game-cancel": "Cancella",
            "game-You": "Tu",
            "game-you": "tu",
            "game-themselves": "se stesso",
            "game-yourself": "te stesso",
            "game-you-died": "morto",
            "game-player-died": "morto",
            "game-with": "con",
            "game-knocked-out": "messo KO",
            "game-killed": "ucciso",
            "game-finally-killed": "finalmente ucciso",
            "game-finally-bled-out": "finally bled out",
            "game-died-outside": "morto all'infuori della zona protetta",
            "game-the-red-zone": "La zona rossa",
            "game-waiting-for-players": "Aspettando altri giocatori",
            "game-spectating": "Osservando",
            "game-red-zone-advances": "La zona rossa avanzerà tra",
            "game-red-zone-advancing": "La zona rossa sta avanzando, raggiungi la zona sicura!",
            "game-seconds": "secondi",
            "game-minutes": "minuti",
            "game-minute": "minuto",
            "game-m": "m",
            "game-s": "s",
            "game-not-enough-space": "Non hai abbastanza spazio!",
            "game-item-already-owned": "Possiedi già questo oggetto!",
            "game-item-already-equipped": "Oggetto già equipaggiato!",
            "game-better-item-equipped": "Hai un miglior oggetto equipaggiato!",
            "game-play-new-game": "Gioca una Nuova Partita",
            "game-spectate": "Osserva",
            "game-full-screen": "Schermo intero",
            "game-sound": "Suono",
            "game-quit-game": "Abbandona Gioco",
            "game-return-to-game": "Ritorna al Gioco",
            "game-hide-match-stats": "Nascondi le Statistiche",
            "game-view-match-stats": "Guarda le Statistiche",
            "game-previous-teammate": "Compagno Precedente",
            "game-next-teammate": "Prossimo Compagno",
            "game-spectate-previous": "",
            "game-spectate-next": "",
            "game-leave-game": "Abbandona Gioco",
            "game-your-results": "I tuoi Risultati",
            "game-chicken": "Vittoria! Stasera si mangia pollo!",
            "game-won-the-game": "vinto la partita.",
            "game-team-eliminated": "La tua squadra è stata eliminata.",
            "game-rank": "Rank",
            "game-team-rank": "Classifica Squadra",
            "game-team-kills": "Uccisioni di Squadra",
            "game-kill": "Uccisione",
            "game-kills": "Uccisioni",
            "game-damage-dealt": "Danno provocato",
            "game-damage-taken": "Danno subito",
            "game-survived": "Resistito per",
            "game-backpack00": "Marsupio",
            "game-backpack01": "Zaino piccolo",
            "game-backpack02": "Zaino normale",
            "game-backpack03": "Zaino militaresco",
            "game-bandage": "Bende",
            "game-bandage-tooltip": "Click sinistro per rigenerare il 15% di salute.",
            "game-healing-tooltip": "Non puoi superare il 75% di salute.",
            "game-healthkit": "Kit Medico",
            "game-healthkit-tooltip": "Click sinistro per rigenerare il 100% di energia.",
            "game-soda": "Soda",
            "game-soda-tooltip": "Click sinistro per incrementare l'adrenalina del 25%.",
            "game-adrenaline-tooltip": "L'adrenalina restituisce la salute col passare del tempo.",
            "game-painkiller": "Pillole",
            "game-painkiller-tooltip": "Click sinistro per incrementare l'adrenalina del 50%.",
            "game-9mm": "9mm",
            "game-9mm-tooltip": "Munizioni per M9, G18C, MP5, MAC-10, UMP9 e Vector.",
            "game-12gauge": "Calibro 12",
            "game-12gauge-tooltip": "Munizioni per M870, SPAS-12, Saiga-12 e MP220.",
            "game-762mm": "7,62mm",
            "game-762mm-tooltip": "Munizioni per AK-47, SCAR-H, M39, Mosin-Nagant, SV-98, M1, OT-38 e DP-28.",
            "game-556mm": "5,56mm",
            "game-556mm-tooltip": "Munizioni per FAMAS, M416, QBB-97, Mk 12 e M249.",
            "game-50AE": ".50 AE",
            "game-50AE-tooltip": "Munizioni per Desert Eagle.",
            "game-308sub": ".308 Subsonic",
            "game-308sub-tooltip": "Munizioni per AWM-S.",
            "game-flare": "Flare",
            "game-flare-tooltip": "Munizioni per Flare Gun.",
            "game-chest01": "Armatura Livello 1",
            "game-chest02": "Armatura Livello 2",
            "game-chest03": "Armatura Livello 3",
            "game-helmet01": "Casco Livello 1",
            "game-helmet02": "Casco Livello 2",
            "game-helmet03": "Casco Livello 3",
            "game-1xscope": "1x Mirino",
            "game-2xscope": "2x Mirino",
            "game-4xscope": "4x Mirino",
            "game-8xscope": "8x Mirino",
            "game-15xscope": "15x Mirino",
            "game-level-1": "Lvl. 1",
            "game-level-2": "Lvl. 2",
            "game-level-3": "Lvl. 3",
            "game-outfitBase": "Outfit di Base",
            "game-outfitRoyalFortune": "Fortuna Reale",
            "game-outfitKeyLime": "Key Lime",
            "game-outfitCobaltShell": "Guscio di Cobalto",
            "game-outfitCarbonFiber": "Fibra di Carbonio",
            "game-outfitDarkGloves": "Il Professionista",
            "game-outfitGhillie": "Tuta Mimetica",
            "game-outfitCamo": "Foresta Mimetica",
            "game-outfitRed": "Bersaglio Facile",
            "game-outfitWhite": "Vendicatore Artico",
            "game-fists": "Pugno",
            "game-ak47": "AK-47",
            "game-dp28": "DP-28",
            "game-mosin": "Mosin-Nagant",
            "game-m39": "M39 EMR",
            "game-mp5": "MP5",
            "game-mac10": "MAC-10",
            "game-ump9": "UMP9",
            "game-m870": "M870",
            "game-mp220": "MP220",
            "game-saiga": "Saiga-12",
            "game-m9": "M9",
            "game-glock": "G18C",
            "game-ot38": "OT-38",
            "game-famas": "FAMAS",
            "game-hk416": "M416",
            "game-mk12": "Mk 12 SPR",
            "game-m249": "M249",
            "game-frag": "Granata",
            "game-hud-frag": "Granata",
            "game-smoke": "Granata Fumogena",
            "game-hud-smoke": "Fumogena",
            "game-barrel_01": "un barile",
            "game-silo_01": "un silo"
        };
        e.exports = i
    },
    "4426a45f": function(e, t, a) {
        "use strict";
        var i = {
            "@metadata": {
                "last-updated": "2018-02-21",
                locale: "sv"
            },
            "word-order": "svo",
            "index-slogan": "2d Battle Royale",
            "index-region": "Region",
            "index-north-america": "Nordamerika",
            "index-europe": "Europa",
            "index-asia": "Asien",
            "index-players": "spelare",
            "index-play-solo": "Spela Solo",
            "index-play-duo": "Spela Dubbel",
            "index-play-squad": "Spela Trupp",
            "index-create-team": "Skapa Lag",
            "index-how-to-play": "Lär dig spela",
            "index-leave-team": "Lämna lag",
            "index-joining-team": "Går med i lag",
            "index-creating-team": "Skapar lag",
            "index-invite-link": "Inbjudningslänk",
            "index-solo": "Solo",
            "index-duo": "Dubbel",
            "index-squad": "Trupp",
            "index-auto-fill": "Autofyll",
            "index-no-fill": "Ingen fyllnad",
            "index-waiting-for-leader": "Väntar på att lagledaren ska starta matchen",
            "index-play": "Spela",
            "index-featured-youtuber": "Framhävd YouTuber",
            "index-settings": "Inställningar",
            "index-high-resolution": "Hög upplösning (bocka i för att höja visuell kvalitet)",
            "index-screen-shake": "Skärmskakningar",
            "index-mobile-announce": "Nu tillgänglig på mobilen!",
            "index-mobile-tooltip": "Besök <span>surviv.io</span> på mobilen för att spela på språng!",
            "index-team-is-full": "Laget är fullt!",
            "index-failed-joining-team": "Kunde inte gå med i laget.",
            "index-failed-creating-team": "Kunde inte skapa lag.",
            "index-failed-finding-game": "Kunde inte hitta match.",
            "index-failed-joining-game": "Kunde inte gå med i match.",
            "index-lost-connection": "Tappade anslutning till laget.",
            "index-host-closed": "Värden stängde anslutningen.",
            "index-view-more": "Visa mer",
            "index-back-to-main": "Tillbaka till huvudmenyn",
            "index-most-kills": "Mest dödade",
            "index-total-kills": "Totalt dödade",
            "index-total-wins": "Totala vinster",
            "index-top-5-percent": "Topp 5 procent",
            "index-kill-death-ratio": "Kill-death ratio",
            "index-for": "",
            "index-today": "idag",
            "index-this-week": "denna vecka",
            "index-all-time": "någonsin",
            "index-top-100": "Topp 100",
            "index-rank": "Rank",
            "index-player": "Spelare",
            "index-total-games": "Antal matcher",
            "index-controls": "Kontroller",
            "index-movement": "Förflyttning",
            "index-movement-ctrl": "W, A, S, D",
            "index-aim": "Sikta",
            "index-aim-ctrl": "Mus",
            "index-punch": "Slå",
            "index-shoot": "Skjut",
            "index-shoot-ctrl": "Vänsterklick",
            "index-change-weapons": "Byta vapen",
            "index-change-weapons-ctrl": "1 - 4 eller skrollhjulet",
            "index-stow-weapons": "Lägg undan vapen",
            "index-stow-weapons-ctrl": "3 eller E",
            "index-swap-weapons": "Byta tillbaka till föregående vapen",
            "index-swap-weapons-ctrl": "Q",
            "index-reload": "Ladda om",
            "index-reload-ctrl": "R",
            "index-scope-zoom": "Sikteszoom",
            "index-scope-zoom-ctrl": "Vänsterklicka på zoomikonen",
            "index-pickup": "Ta upp",
            "index-loot": "Ta",
            "index-revive": "Återuppliva",
            "index-pickup-ctrl": "F",
            "index-use-medical": "Använda medicinsk utrustning",
            "index-use-medical-ctrl": "Vänsterklicka på föremål eller 7 - 0",
            "index-drop-item": "Släpp föremål",
            "index-drop-item-ctrl": "Högerklicka på föremål",
            "index-cancel-action": "Avbryt aktion",
            "index-cancel-action-ctrl": "X",
            "index-view-map": "Visa mapp",
            "index-view-map-ctrl": "M eller G",
            "index-toggle-minimap": "Initiera HUD",
            "index-toggle-minimap-ctrl": "V",
            "index-use-ping": "Använd lagets pinghjul",
            "index-use-ping-ctrl": "Håll C, håll sedan högerklick och dra musen, släpp sedan högerklick",
            "index-use-emote": "Använd känslohjul",
            "index-use-emote-ctrl": "Håll högerklick och dra musen, släpp sedan högerklick",
            "index-tips-1-desc": "Målet med surviv.io är att bli den sista spelaren kvar. Du lever bara en gång per match - det finns bara en chans!",
            "index-tips-2": "2D PUBG",
            "index-tips-2-desc": 'Om du någonsin spelat andra "Herre på Täppan"-spel som PUBG, Fortnite eller H1Z1 är du redan halvvägs där! Tänk dig surviv.io som 2D PUBG.',
            "index-tips-3": "Plundra och döda",
            "index-tips-3-desc": "Du börjar matchen utan några andra föremål än en simpel ryggsäck. Rör dig runt kartan för att hitta föremål: vapen, ammunition, sikten och medicinska föremål. Eliminera andra spelare och ta deras föremål!",
            "index-tips-4": "Rött = Dåligt!",
            "index-tips-4-desc": "Spelare är inte det enda som kan skada dig. Den dödliga röda zonen kommer röra sig inåt från kartans sidor och dela ut ökande skada om du står i den. Håll ett öga på kartan och håll dig trygg.",
            "game-alive": "kvar",
            "game-reloading": "Laddar om",
            "game-using": "Använder",
            "game-reviving": "Återupplivar",
            "game-revive-teammate": "Återuppliva lagkamrat",
            "game-equip": "Ta upp",
            "game-cancel": "Avbryt",
            "game-You": "Du",
            "game-you": "du",
            "game-themselves": "sig själv",
            "game-yourself": "dig själv",
            "game-you-died": "dog",
            "game-player-died": "dog",
            "game-with": "med",
            "game-knocked-out": "knocked out",
            "game-killed": "dödade",
            "game-finally-killed": "dödade till slut",
            "game-finally-bled-out": "blödde ut till slut",
            "game-died-outside": "dog utanför den trygga zonen",
            "game-the-red-zone": "Den röda zonen",
            "game-waiting-for-players": "Väntar på spelare",
            "game-spectating": "Åskådar",
            "game-red-zone-advances": "Den röda zonen advancerar om",
            "game-red-zone-advancing": "Den röda zonen advancerar, ta dig till den säkra zonen!",
            "game-seconds": "sekunder",
            "game-minutes": "minuter",
            "game-minute": "minuter",
            "game-m": "m",
            "game-s": "s",
            "game-not-enough-space": "Inte tillräckligt utrymme!",
            "game-item-already-owned": "Du har redan föremålet!",
            "game-item-already-equipped": "Du är redan uttrustad med föremålet!",
            "game-better-item-equipped": "Du har redan ett bättre föremål!",
            "game-play-new-game": "Spela ny match",
            "game-spectate": "Åskåda",
            "game-full-screen": "Fullskärm",
            "game-sound": "Ljud",
            "game-quit-game": "Avsluta spel",
            "game-return-to-game": "Återvänd till spel",
            "game-hide-match-stats": "Dölj matchstatistik",
            "game-view-match-stats": "Visa matchstatistik",
            "game-previous-teammate": "Föregående lagkamrat",
            "game-next-teammate": "Nästa lagkamrat",
            "game-spectate-previous": "",
            "game-spectate-next": "",
            "game-leave-game": "Lämna match",
            "game-your-results": "Dina resultat",
            "game-chicken": "Vinst! Ikväll blir det kycklingmiddag!",
            "game-won-the-game": "vann matchen.",
            "game-team-eliminated": "Ditt lag blev eliminerat.",
            "game-rank": "Rank",
            "game-team-rank": "Lagrank",
            "game-team-kills": "Lagets antal dödade",
            "game-kill": "Dödad",
            "game-kills": "Dödade",
            "game-damage-dealt": "Skada utdelad",
            "game-damage-taken": "Skada mottagen",
            "game-survived": "Överlevde",
            "game-backpack00": "Påse",
            "game-backpack01": "Liten ryggsäck",
            "game-backpack02": "Vanlig ryggsäck.",
            "game-backpack03": "Militärryggsäck",
            "game-bandage": "Bandage",
            "game-bandage-tooltip": "Vänsterklicka för att återfå 15 hälsa.",
            "game-healing-tooltip": "Kan inte återge över 75% liv.",
            "game-healthkit": "Med Kit",
            "game-healthkit-tooltip": "Vänsterklicka för att återfå 100 hälsa.",
            "game-soda": "Läsk",
            "game-soda-tooltip": "Vänsterklicka för att boosta adrenalin med 25.",
            "game-adrenaline-tooltip": "Adrenalin återger liv över tid.",
            "game-painkiller": "Piller",
            "game-painkiller-tooltip": "Vänsterklicka för att boosta adrenalin med 50.",
            "game-9mm": "9mm",
            "game-9mm-tooltip": "Ammo för M9, G18C, MP5, MAC-10, UMP9 och Vector.",
            "game-12gauge": "12 gauge",
            "game-12gauge-tooltip": "Ammo för M870, SPAS-12, Saiga-12 och MP220.",
            "game-762mm": "7.62mm",
            "game-762mm-tooltip": "Ammo för AK-47, SCAR-H, M39, Mosin-Nagant, SV-98, M1, OT-38 och DP-28.",
            "game-556mm": "5.56mm",
            "game-556mm-tooltip": "Ammo för FAMAS, M416, QBB-97, Mk 12 och M249.",
            "game-50AE": ".50 AE",
            "game-50AE-tooltip": "Ammo för Desert Eagle.",
            "game-308sub": ".308 Subsonic",
            "game-308sub-tooltip": "Ammo för AWM-S.",
            "game-flare": "Flare",
            "game-flare-tooltip": "Ammo för Flare Gun.",
            "game-chest01": "Level 1 Väst",
            "game-chest02": "Level 2 Väst",
            "game-chest03": "Level 3 Väst",
            "game-helmet01": "Level 1 Hjälm",
            "game-helmet02": "Level 2 Hjälm",
            "game-helmet03": "Level 3 Hjälm",
            "game-1xscope": "1x Sikte",
            "game-2xscope": "2x Sikte",
            "game-4xscope": "4x Sikte",
            "game-8xscope": "8x Sikte",
            "game-15xscope": "15x Sikte",
            "game-level-1": "Lvl. 1",
            "game-level-2": "Lvl. 2",
            "game-level-3": "Lvl. 3",
            "game-outfitBase": "Vanligt Outfit",
            "game-outfitRoyalFortune": "Kunlig Lycka",
            "game-outfitKeyLime": "Key Lime",
            "game-outfitCobaltShell": "Koboltskal",
            "game-outfitCarbonFiber": "Kolfiber",
            "game-outfitDarkGloves": "Proffset",
            "game-outfitGhillie": "Ghilliedräkt",
            "game-outfitCamo": "Skogskamouflage",
            "game-outfitRed": "Måltavla",
            "game-outfitWhite": "Arktisk Hämnare",
            "game-outfitWoodland": "Woodland Combat",
            "game-fists": "Slag",
            "game-ak47": "AK-47",
            "game-dp28": "DP-28",
            "game-mosin": "Mosin-Nagant",
            "game-m39": "M39 EMR",
            "game-mp5": "MP5",
            "game-mac10": "MAC-10",
            "game-ump9": "UMP9",
            "game-m870": "M870",
            "game-mp220": "MP220",
            "game-saiga": "Saiga-12",
            "game-m9": "M9",
            "game-glock": "G18C",
            "game-ot38": "OT-38",
            "game-famas": "FAMAS",
            "game-hk416": "M416",
            "game-mk12": "Mk 12 SPR",
            "game-m249": "M249",
            "game-frag": "Handgranat",
            "game-hud-frag": "Handgranat",
            "game-smoke": "Rökgranat",
            "game-hud-smoke": "Rökgranat",
            "game-barrel_01": "en tunna",
            "game-silo_01": "en silo"
        };
        e.exports = i
    },
    "4780d986": function(e, t, a) {
        "use strict";
        var i = {
            "@metadata": {
                "last-updated": "2018-01-28",
                locale: "th"
            },
            "word-order": "svo",
            "index-slogan": "ศึกรอยัลรอบที่ 2",
            "index-region": "ภูมิภาค",
            "index-north-america": "อเมริกาเหนือ",
            "index-europe": "ยุโรป",
            "index-asia": "เอเชีย",
            "index-players": "ผู้เล่น",
            "index-play-solo": "เล่นเดี่ยว",
            "index-play-duo": "เล่นคู่",
            "index-play-squad": "เล่นทีม",
            "index-create-team": "สร้างทีม",
            "index-how-to-play": "วิธีการเล่น",
            "index-leave-team": "ออกจากทีม",
            "index-joining-team": "กำลังเข้าร่วมทีม",
            "index-creating-team": "กำลังสร้างทีม",
            "index-invite-link": "ลิงก์เชิญ",
            "index-solo": "เดียว",
            "index-duo": "คู่",
            "index-squad": "ทีม",
            "index-auto-fill": "เติมอัตโนมัติ",
            "index-no-fill": "ไม่เติม",
            "index-waiting-for-leader": "กำลังรอให้ผู้นำเริ่มเกม",
            "index-play": "เล่น",
            "index-featured-youtuber": "YouTuber ที่มีชื่อเสียง",
            "index-settings": "ตั้งค่า",
            "index-high-resolution": "ความละเอียดสูง (ตรวจสอบเพื่อเพิ่มคุณภาพการมองเห็น)",
            "index-screen-shake": "สั่นหน้าจอ",
            "index-team-is-full": "ทีมเต็มแล้ว!",
            "index-failed-joining-team": "เข้าร่วมทีมล้มเหลว",
            "index-failed-creating-team": "สร้างทีมล้มเหลว",
            "index-failed-finding-game": "ค้นหาเกมล้มเหลว",
            "index-failed-joining-game": "เข้าร่วมทีมล้มเหลว",
            "index-lost-connection": "ขาดการเชื่อมต่อกับทีม",
            "index-host-closed": "เซิร์ฟเวอร์ปิดการเชื่อมต่อ",
            "index-view-more": "ดูเพิ่มเติม",
            "index-back-to-main": "กลับไปที่เมนูหลัก",
            "index-most-kills": "ฆ่ามากที่สุด",
            "index-total-kills": "ฆ่าทั้งหมด",
            "index-total-wins": "ชนะทั้งหมด",
            "index-top-5-percent": "5 เปอร์เซ็นต์แรก",
            "index-kill-death-ratio": "อัตราส่วนฆ่าตาย",
            "index-for": "For",
            "index-today": "วันนี้",
            "index-this-week": "อาทิตย์นี้",
            "index-all-time": "ตลอดเวลา",
            "index-top-100": "100 อันดับแรก",
            "index-rank": "อันดับ",
            "index-player": "ผู้เล่น",
            "index-total-games": "เกมทั้งหมด",
            "index-controls": "ควบคุม",
            "index-movement": "เคลื่อนไหว",
            "index-movement-ctrl": "W, A, S, D",
            "index-aim": "เล็ง",
            "index-aim-ctrl": "เม้าส์",
            "index-punch": "ชกต่อย",
            "index-shoot": "ยิง",
            "index-shoot-ctrl": "คลิกซ้าย",
            "index-change-weapons": "เปลี่ยนอาวุธ",
            "index-change-weapons-ctrl": "1 ตลอด 4 หรือล้อเลื่อน",
            "index-stow-weapons": "เก็บรักษาอาวุธ (โหมดชกต่อย)",
            "index-stow-weapons-ctrl": "3 หรือ E",
            "index-swap-weapons": "สลับไปใช้อาวุธก่อนหน้า",
            "index-swap-weapons-ctrl": "Q",
            "index-reload": "โหลดใหม่",
            "index-reload-ctrl": "R",
            "index-scope-zoom": "ขอบเขตการซูม",
            "index-scope-zoom-ctrl": "คลิกซ้ายเพื่อซูม",
            "index-pickup": "เก็บ",
            "index-loot": "ปล้น",
            "index-revive": "ฟื้น",
            "index-pickup-ctrl": "F",
            "index-use-medical": "ใช้ไอเทมรักษา",
            "index-use-medical-ctrl": "คลิกซ้ายที่ไอเทมหรือกด 7 ตลอด 0",
            "index-drop-item": "ทิ้งไอเทม",
            "index-drop-item-ctrl": "คลิกขวาที่ไอเทม",
            "index-cancel-action": "ยกเลิกการดำเนินการ",
            "index-cancel-action-ctrl": "X",
            "index-view-map": "ดูแผนที่",
            "index-view-map-ctrl": "M หรือ G",
            "index-toggle-minimap": "สลับไปแผนที่เล็ก",
            "index-toggle-minimap-ctrl": "V",
            "game-alive": "มีชีวิต",
            "game-reloading": "กำลังโหลดใหม่",
            "game-using": "กำลังใช้",
            "game-reviving": "กำลังฟื้นฟู",
            "game-revive-teammate": "ฟื้น",
            "game-equip": "ติดตั้ง",
            "game-cancel": "ยกเลิก",
            "game-You": "คุณ",
            "game-you": "คุณ",
            "game-themselves": "พวกเขาเอง",
            "game-yourself": "ตัวคุณเอง",
            "game-you-died": "เสียชีวิต",
            "game-player-died": "เสียชีวิต",
            "game-with": "ด้วย",
            "game-knocked-out": "ล้ม",
            "game-killed": "ฆ่า",
            "game-finally-killed": "ฆ่าตายในที่สุด",
            "game-finally-bled-out": "เลือดออกในที่สุด",
            "game-died-outside": "ตายนอกเขตปลอดภัย",
            "game-the-red-zone": "เขตอันตราย",
            "game-waiting-for-players": "กำลังรอผู้เล่น",
            "game-spectating": "กำลังชม",
            "game-red-zone-advances": "เขตอันตรายเริ่มใน",
            "game-red-zone-advancing": "กำลังเริ่มเขตอันตราย โปรดเข้าไปในเขตปลอดภัย!",
            "game-seconds": "วินาที",
            "game-minutes": "นาที",
            "game-minute": "นาที",
            "game-m": "น.",
            "game-s": "ว.",
            "game-not-enough-space": "พื้นที่ไม่เพียงพอ!",
            "game-item-already-owned": "มีไอเทมแล้ว!",
            "game-item-already-equipped": "ติดตั้งไอเทมแล้ว!",
            "game-better-item-equipped": "ติดตั้งไอเทมที่ดีกว่าแล้ว!",
            "game-play-new-game": "เล่นเกมใหม่",
            "game-spectate": "ชม",
            "game-full-screen": "เต็มหน้าจอ",
            "game-sound": "เสียง",
            "game-quit-game": "ออกเกม",
            "game-return-to-game": "กลับไปที่เกม",
            "game-hide-match-stats": "ซ่อนสถิติการจับคู่",
            "game-view-match-stats": "ดูสถิติการจับคู่",
            "game-previous-teammate": "เพื่อนร่วมทีมก่อนหน้านี้",
            "game-next-teammate": "เพื่อนร่วมทีมต่อไป",
            "game-spectate-previous": "",
            "game-spectate-next": "",
            "game-leave-game": "ออกจากเกม",
            "game-your-results": "ผลลัพธ์ของคุณ",
            "game-chicken": "อาหารเย็นวันนี้คือไก่ทอด!",
            "game-won-the-game": "ชนะเกมแล้ว",
            "game-team-eliminated": "ทีมของคุณแพ้แล้ว",
            "game-rank": "อันดับ",
            "game-team-rank": "อันดับของทีม",
            "game-team-kills": "ทีมฆ่า",
            "game-kill": "ฆ่า",
            "game-kills": "ฆ่า",
            "game-damage-dealt": "จัดการความเสียหาย",
            "game-damage-taken": "ความเสียหายที่เกิดขึ้น",
            "game-survived": "รอดชีวิต",
            "game-backpack00": "กระเป๋า",
            "game-backpack01": "แพ็คเล็ก",
            "game-backpack02": "แพ็คทั่วไป",
            "game-backpack03": "แพ็คกองทัพ",
            "game-bandage": "ผ้าพันแผล",
            "game-bandage-tooltip": "คลิกซ้ายเพื่อฟื้นฟูสุขภาพ 15",
            "game-healing-tooltip": "ไม่สามารถรักษาสุขภาพได้ถึง 75",
            "game-healthkit": "ชุดเครื่องมือปฐมพยาบาล",
            "game-healthkit-tooltip": "คลิกซ้ายเพื่อฟื้นฟูสุขภาพ 100",
            "game-soda": "โซดา",
            "game-soda-tooltip": "คลิกซ้ายเพื่อเพิ่มอะดรีนาลีนภาย 25",
            "game-adrenaline-tooltip": "อะดรีนาลีนช่วยฟื้นฟูสุขภาพเมื่อเวลาผ่านไป",
            "game-painkiller": "ยาเม็ด",
            "game-painkiller-tooltip": "คลิกซ้ายเพื่อเพิ่มอะดรีนาลีนภาย 50",
            "game-9mm": "9 มม.",
            "game-9mm-tooltip": "กระสุนสำหรับ M9, G18C, MP5, MAC-10, UMP9 และ Vector",
            "game-12gauge": "12 เกจ์",
            "game-12gauge-tooltip": "กระสุนสำหรับ M870, SPAS-12, Saiga-12 และ MP220",
            "game-762mm": "7.62 มม.",
            "game-762mm-tooltip": "กระสุนสำหรับ AK-47, SCAR-H, M39, Mosin-Nagant, SV-98, M1, OT-38 และ DP-28",
            "game-556mm": "5.56mm",
            "game-556mm-tooltip": "กระสุนสำหรับ FAMAS, M416, QBB-97, Mk 12 และ M249.",
            "game-50AE": ".50 AE",
            "game-50AE-tooltip": "กระสุนสำหรับ Desert Eagle.",
            "game-308sub": ".308 Subsonic",
            "game-308sub-tooltip": "กระสุนสำหรับ AWM-S.",
            "game-flare": "Flare",
            "game-flare-tooltip": "กระสุนสำหรับ Flare Gun.",
            "game-chest01": "เลเวล 1 เสื้อกั๊ก",
            "game-chest02": "เลเวล 2 เสื้อกั๊ก",
            "game-chest03": "เลเวล 3 เสื้อกั๊ก",
            "game-helmet01": "เลเวล 1 หมวกกันน็อก",
            "game-helmet02": "เลเวล 2 หมวกกันน็อก",
            "game-helmet03": "เลเวล 3 หมวกกันน็อก",
            "game-1xscope": "1x ขอตเขต",
            "game-2xscope": "2x ขอตเขต",
            "game-4xscope": "4x ขอตเขต",
            "game-8xscope": "8x ขอตเขต",
            "game-15xscope": "15x ขอตเขต",
            "game-level-1": "เลเวล 1",
            "game-level-2": "เลเวล 2",
            "game-level-3": "เลเวล 3",
            "game-outfitBase": "Basic Outfit",
            "game-outfitRoyalFortune": "Royal Fortune",
            "game-outfitKeyLime": "Key Lime",
            "game-outfitCobaltShell": "Cobalt Shell",
            "game-outfitCarbonFiber": "Carbon Fiber",
            "game-outfitDarkGloves": "The Professional",
            "game-outfitGhillie": "Ghillie Suit",
            "game-outfitCamo": "Forest Camo",
            "game-outfitRed": "Target Practice",
            "game-outfitWhite": "Arctic Avenger",
            "game-ak47": "AK-47",
            "game-dp28": "DP-28",
            "game-mosin": "Mosin-Nagant",
            "game-m39": "M39 EMR",
            "game-mp5": "MP5",
            "game-mac10": "MAC-10",
            "game-ump9": "UMP9",
            "game-m870": "M870",
            "game-mp220": "MP220",
            "game-saiga": "Saiga-12",
            "game-m9": "M9",
            "game-glock": "G18C",
            "game-ot38": "OT-38",
            "game-barrel_01": "a barrel",
            "game-silo_01": "a silo"
        };
        e.exports = i
    },
    "484b3444": function(e, t, a) {
        "use strict";
        function i(e) {
            d.push(e)
        }
        function r(e, t) {
            l(".modal").fadeOut(200),
            l("#start-bottom-right").fadeIn(200),
            l("#start-top-left").fadeIn(200),
            l("#start-top-right").fadeIn(200);
            for (var a = 0; a < d.length; a++)
                d[a](e, t)
        }
        function o(e) {
            l(e.target).closest(".modal-content").length || (l(".modal").each(function() {
                "block" == l(this).css("display") && r(e, l(this))
            }),
            l(document).off("click touchend", o))
        }
        function n() {
            l(document).on("click touchend", o)
        }
        function s() {
            l(document).off("click touchend", o)
        }
        var l = a("8ee62bea")
          , m = a("ce29f17f")
          , c = a("26be8056");
        l(document).ready(function() {
            var e = l("#start-menu");
            l("#btn-help").click(function() {
                var t = l("#start-help");
                e.addClass("display-help");
                var a = (t.position().top,
                e.css("height"));
                return t.css("display", "block"),
                e.animate({
                    scrollTop: a
                }, 1e3),
                !1
            });
            var t = l("#team-mobile-link")
              , a = l("#team-mobile-link-desc")
              , i = l("#team-mobile-link-warning")
              , o = l("#team-link-input")
              , s = l("#social-share-block")
              , d = l("#news-block");
            l("#btn-join-team").click(function() {
                return l("#server-warning").css("display", "none"),
                o.val(""),
                t.css("display", "block"),
                a.css("display", "block"),
                i.css("display", "none"),
                e.css("display", "none"),
                d.css("display", "none"),
                s.css("display", "none"),
                !1
            }),
            l("#btn-team-mobile-link-leave").click(function() {
                return t.css("display", "none"),
                o.val(""),
                e.css("display", "block"),
                d.css("display", "block"),
                s.css("display", "block"),
                !1
            }),
            l("#team-link-input").on("keypress", function(e) {
                13 === (e.which || e.keyCode) && (l("#btn-team-mobile-link-join").trigger("click"),
                l(this).blur())
            }),
            l("#player-name-input-solo").on("keypress", function(e) {
                13 === (e.which || e.keyCode) && l(this).blur()
            }),
            m.mobile && !c.detectMobileSafari() && (l("#player-name-input-solo").on("focus", function() {
                if (c.isLandscape()) {
                    var e = c.getScreenDimensions().height
                      , t = e <= 282 ? 18 : 36;
                    document.body.scrollTop = l(this).offset().top - t
                }
            }),
            l("#player-name-input-solo").on("blur", function() {
                document.body.scrollTop = 0
            }));
            var p = l(".modal")
              , u = (l(".modal-content"),
            l("#start-bottom-right"))
              , h = l("#start-top-left")
              , g = l("#start-top-right")
              , y = l("#modal-settings");
            l(".btn-settings").click(function() {
                return y.finish(),
                y.css("display", "block"),
                u.fadeOut(200),
                g.fadeOut(200),
                n(),
                !1
            });
            var f = l("#modal-hamburger");
            l("#btn-hamburger").click(function() {
                return f.finish(),
                f.css("display", "block"),
                h.fadeOut(200),
                n(),
                !1
            }),
            l(".account-details-guest, .account-details-user").click(function() {
                if (m.mobile) {
                    var e = l("#modal-mobile-account");
                    return e.finish(),
                    e.css("display", "block"),
                    l("#start-top-right").fadeOut(200),
                    n(),
                    !1
                }
            }),
            p.find(".close").click(function(e) {
                r(e, l(this))
            }),
            l(".modal-settings-text").click(function() {
                var e = l(this).siblings("input:checkbox");
                e.prop("checked", !e.is(":checked")),
                e.trigger("change")
            }),
            l("#force-refresh").click(function() {
                window.location.reload(!0)
            })
        });
        var d = [];
        e.exports = {
            addModalCloseListener: n,
            addModalCloseCallback: i,
            removeModalCloseListener: s
        }
    },
    "48eca919": function(e, t, a) {
        "use strict";
        function i(e) {
            m(e >= 0);
            var t = [];
            do {
                t.push(c[e % d]),
                e = Math.floor(e / d)
            } while (e > 0);return t.reverse().join("")
        }
        function r(e) {
            for (var t = 0, a = 0; a < e.length; a++)
                t = t * d + c.indexOf(e.charAt(a));
            return t
        }
        function o(e, t) {
            return m(e >= 0 && e < 16),
            m(t >= 0 && t < 134217728),
            i(t << 4 | 15 & e)
        }
        function n(e) {
            var t = r(e);
            return {
                appId: 15 & t,
                roomId: t >> 4
            }
        }
        function s(e) {
            return ("00" + e).slice(-2)
        }
        function l(e) {
            return Math.min((Math.pow(d, e) >> 4) - 1, 134217727)
        }
        var m = a("0e566746")
          , c = "abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNOPQRSTUVWXYZ0123456789".split("")
          , d = c.length;
        e.exports = {
            encodeUrl: o,
            decodeUrl: n,
            appIdToString: s,
            maxRoomId: l
        }
    },
    "4b528868": function(e, t, a) {
        "use strict";
        function i(e) {
            this.mute = !1,
            this.masterVolume = 1,
            this.soundVolume = 1,
            this.musicVolume = 1,
            this.baseVolume = .5,
            this.audioChannels = s.Channels,
            this.reverbs = s.Reverbs,
            this.totalSounds = 0,
            this.totalSoundsLoaded = 0,
            this.loadComplete = !1,
            this.cameraPos = o.create(0, 0),
            this.activeLayer = 0,
            this.fadeInSounds = [],
            this.queuedSounds = [],
            this.queuedInstances = [],
            this.localActionSoundInstance = null,
            this.soundInstances = [],
            this.musicInstances = [],
            r.Sound.initializeDefaultPlugins(),
            r.Sound.defaultInterruptBehavior = r.Sound.INTERRUPT_LATE,
            r.Sound.volume = .5,
            r.Sound.on("fileload", this.loadHandler, this)
        }
        var r = a("f4ccd911")
          , o = a("c2a798c8")
          , n = a("10899aea")
          , s = a("946c898d")
          , l = a("1901e2d9");
        i.prototype = {
            preloadSounds: function() {
                for (var e in this.audioChannels)
                    if (this.audioChannels.hasOwnProperty(e)) {
                        var t = this.audioChannels[e]
                          , a = this.loadSounds(t.list);
                        for (var i in a)
                            a.hasOwnProperty(i) && a[i] && (this.totalSounds += 1)
                    }
                for (var o in this.reverbs)
                    this.reverbs.hasOwnProperty(o) && this.reverbs[o] && (this.totalSounds += 1);
                for (var n in this.audioChannels)
                    if (this.audioChannels.hasOwnProperty(n)) {
                        var s = this.audioChannels[n]
                          , l = this.loadSounds(s.list);
                        for (var m in l)
                            if (l.hasOwnProperty(m) && l[m]) {
                                var c = l[m]
                                  , d = {};
                                d.canCoalesce = c.canCoalesce,
                                d.channels = c.maxInstances,
                                r.Sound.registerSound(c.name, m + n, d)
                            }
                    }
                for (var p in this.reverbs)
                    if (this.reverbs.hasOwnProperty(p) && this.reverbs[p]) {
                        var u = this.reverbs[p];
                        r.Sound.registerReverb(u.name, p, u)
                    }
            },
            loadHandler: function(e) {
                this.totalSoundsLoaded += 1,
                this.totalSoundsLoaded == this.totalSounds && (this.loadComplete = !0)
            },
            l: function(e) {
                if (this.loadComplete) {
                    for (var t = 0; t < this.queuedSounds.length; t++) {
                        var a = this.queuedSounds[t]
                          , i = this.playSound(a.sound, a.options);
                        this.queuedInstances.push(i)
                    }
                    this.queuedSounds = []
                }
                for (var o = this.fadeInSounds.length - 1; o >= 0; o--) {
                    var n = this.fadeInSounds[o].instance;
                    if (n) {
                        var s = 1 * this.getTypeVolume(this.fadeInSounds[o].type);
                        n.volume = Math.min(s, n.volume + e),
                        n.volume == s && this.fadeInSounds.splice(o, 1)
                    }
                }
                for (var l = this.soundInstances.length - 1; l >= 0; l--) {
                    var m = this.soundInstances[l];
                    "playFinished" != m.playState && "playInterrupted" != m.playState && "playFailed" != m.playState || this.soundInstances.splice(l, 1)
                }
                for (var c = this.musicInstances.length - 1; c >= 0; c--) {
                    var d = this.musicInstances[c];
                    "playFinished" != d.playState && "playInterrupted" != d.playState && "playFailed" != d.playState || this.musicInstances.splice(c, 1)
                }
                var p = [0, 1, 1 / 3, 2 / 3]
                  , u = p[this.activeLayer];
                r.Sound.setReverbs({
                    cathedral: u
                }),
                r.Sound.update(e)
            },
            queueSound: function(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                return this.queuedSounds.push({
                    sound: e,
                    options: t
                }),
                this.queuedSounds.length - 1
            },
            getQueuedInstance: function(e) {
                return this.queuedInstances[e]
            },
            playSound: function(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                if ("none" == e)
                    return !1;
                t.channel = t.channel || "activePlayer",
                t.fadeIn = t.fadeIn || !1,
                t.startSilent = t.startSilent || !1,
                t.forceStart = t.forceStart || !1,
                t.loop = t.loop || !1,
                t.soundPos = t.soundPos || !1,
                t.fallOff = t.fallOff || 0,
                t.muffled = t.muffled || !1,
                t.delay = t.delay || 0,
                t.ignoreMinAllowable = t.ignoreMinAllowable || !1,
                t.rangeMult = t.rangeMult || 1,
                t.offset = t.offset || 0;
                var a = this.audioChannels[t.channel];
                if (a && (!this.mute || t.forceStart)) {
                    var i = !1
                      , s = 1 * this.baseVolume * this.getTypeVolume(a.type)
                      , m = void 0 !== t.layer && !l.sameAudioLayer(t.layer, this.activeLayer)
                      , c = t.muffled ? m ? "muffled" : "reverb" : "none";
                    if ("activePlayer" != t.channel && t.soundPos) {
                        var d = o.sub(this.cameraPos, t.soundPos)
                          , p = o.length(d)
                          , u = a.maxRange * t.rangeMult;
                        n.eqAbs(u, 0) && (u = 1);
                        var h = n.clamp(Math.abs(p / u), 0, 1)
                          , g = Math.pow(1 - h, 1 + 2 * t.fallOff)
                          , y = a.volume * g * s;
                        if ((y = m ? .5 * y : y) > .003 || t.ignoreMinAllowable) {
                            var f = n.clamp(d.x / u * -1, -1, 1);
                            i = r.Sound.play(e + t.channel, {
                                filter: c,
                                loop: t.loop ? -1 : 0,
                                volume: t.fadeIn || t.startSilent ? 0 : y,
                                pan: f,
                                delay: t.delay,
                                interrupt: r.Sound.INTERRUPT_LATE,
                                offset: t.offset
                            })
                        }
                    } else {
                        var x = a.volume * s;
                        x = m ? .5 * x : x,
                        i = r.Sound.play(e + t.channel, {
                            filter: c,
                            loop: t.loop ? -1 : 0,
                            volume: t.fadeIn || t.startSilent ? 0 : x,
                            delay: t.delay,
                            offset: t.offset
                        })
                    }
                    if (i)
                        return t.fadeIn && this.fadeInSounds.push({
                            instance: i,
                            type: a.type
                        }),
                        t.loop && "music" != t.channel ? this.soundInstances.push(i) : "music" == t.channel && this.musicInstances.push(i),
                        i
                }
                return !1
            },
            playGroup: function(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}
                  , a = s.Groups[e];
                if (a) {
                    var i = a.sounds
                      , r = Math.floor(l.random(0, i.length));
                    return t.channel = a.channel,
                    this.playSound(i[r], t)
                }
            },
            updateSound: function(e, t, a) {
                var i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {};
                i.fallOff = i.fallOff || 0,
                i.rangeMult = i.rangeMult || 1,
                i.ignoreMinAllowable = i.ignoreMinAllowable || !1;
                var r = this.audioChannels[t];
                if (e && r) {
                    var s = 1 * this.baseVolume * this.getTypeVolume(r.type)
                      , m = o.sub(this.cameraPos, a)
                      , c = o.length(m)
                      , d = r.maxRange * i.rangeMult;
                    n.eqAbs(d, 0) && (d = 1);
                    var p = n.clamp(Math.abs(c / d), 0, 1)
                      , u = Math.pow(1 - p, 1 + 2 * i.fallOff)
                      , h = r.volume * u * s;
                    if ((h = void 0 === i.layer || l.sameAudioLayer(i.layer, this.activeLayer) ? h : .5 * h) > .003 || i.ignoreMinAllowable) {
                        var g = n.clamp(m.x / d * -1, -1, 1);
                        return e.volume = h,
                        e.pan = g,
                        e
                    }
                    return !1
                }
            },
            setMasterVolume: function(e) {
                e = n.clamp(e, 0, 1),
                r.Sound.volume = e
            },
            setSoundVolume: function(e) {
                e = n.clamp(e, 0, 1);
                for (var t = this.soundVolume > 1e-4 ? e / this.soundVolume : 0, a = 0; a < this.soundInstances.length; a++)
                    this.soundInstances[a].volume *= t;
                this.soundVolume = e
            },
            setMusicVolume: function(e) {
                e = n.clamp(e, 0, 1);
                for (var t = this.musicVolume > 1e-4 ? e / this.musicVolume : 0, a = 0; a < this.musicInstances.length; a++)
                    this.musicInstances[a].volume *= t;
                this.musicVolume = e
            },
            setVolume: function(e, t, a) {
                if (!e)
                    return !1;
                a = a || "sound";
                var i = this.getTypeVolume(a);
                e.volume = t * i
            },
            setMute: function(e) {
                return this.mute = e,
                r.Sound._setMute(this.mute),
                this.mute
            },
            setDelay: function(e, t) {
                if (!e)
                    return !1;
                e.delay = t
            },
            muteToggle: function() {
                return this.mute = !this.mute,
                r.Sound._setMute(this.mute),
                this.mute
            },
            stopSound: function(e) {
                return !!e && e.stop()
            },
            stopLocalActionSound: function() {
                return !!this.localActionSoundInstance && (this.localActionSoundInstance.playState == r.Sound.PLAY_SUCCEEDED ? this.localActionSoundInstance.stop() : void 0)
            },
            stopAll: function() {
                r.Sound.stop()
            },
            registerSound: function(e) {
                for (var t in this.audioChannels)
                    if (this.audioChannels.hasOwnProperty(t)) {
                        var a = this.audioChannels[t]
                          , i = this.loadSounds(a.list);
                        for (var o in i)
                            if (i.hasOwnProperty(o) && o == e) {
                                var n = i[o];
                                r.Sound.registerSound(n.name, o + t)
                            }
                    }
            },
            loadSounds: function(e) {
                return s.Sounds[e]
            },
            isSoundPlaying: function(e) {
                return !!e && e.playState == r.Sound.PLAY_SUCCEEDED
            },
            getTypeVolume: function(e) {
                switch (e) {
                case "sound":
                    return this.soundVolume;
                case "music":
                    return this.musicVolume
                }
                return 0
            }
        },
        e.exports = i
    },
    "4b8d140f": function(e, t, a) {
        "use strict";
        function i() {
            this.id = 0,
            this.pos = {
                x: 0,
                y: 0
            },
            this.posOld = {
                x: 0,
                y: 0
            },
            this.posDown = {
                x: 0,
                y: 0
            },
            this.startTime = 0,
            this.lastUpdateTime = 0,
            this.isNew = !0,
            this.isDead = !1,
            this.osId = 0
        }
        function r(e) {
            var t = this;
            this.keys = {},
            this.keysOld = {},
            this.shiftKey = !1,
            this.mousePos = {
                x: 0,
                y: 0
            },
            this.mousePosOld = {
                x: 0,
                y: 0
            },
            this.mouseButton = !1,
            this.mouseButtonOld = !1,
            this.rightMouseButton = !1,
            this.rightMouseButtonOld = !1,
            this.mouseWheelState = 0,
            this.touches = [],
            this.touchIdCounter = 0,
            this.leftTouch = null,
            this.rightTouch = null,
            this.elem = e,
            this.bOnWindowFocus = function(e) {
                t.onWindowFocus(e)
            }
            ,
            this.bOnKeyDown = function(e) {
                t.onKeyDown(e)
            }
            ,
            this.bOnKeyUp = function(e) {
                t.onKeyUp(e)
            }
            ,
            this.bOnMouseMove = function(e) {
                t.onMouseMove(e)
            }
            ,
            this.bOnMouseDown = function(e) {
                t.onMouseDown(e)
            }
            ,
            this.bOnMouseUp = function(e) {
                t.onMouseUp(e)
            }
            ,
            this.bOnMouseWheel = function(e) {
                t.onMouseWheel(e)
            }
            ,
            this.bOnTouchMove = function(e) {
                t.onTouchMove(e)
            }
            ,
            this.bOnTouchStart = function(e) {
                t.onTouchStart(e)
            }
            ,
            this.bOnTouchEnd = function(e) {
                t.onTouchEnd(e)
            }
            ,
            this.bOnTouchCancel = function(e) {
                t.onTouchCancel(e)
            }
            ,
            window.addEventListener("focus", this.bOnWindowFocus, !1),
            window.addEventListener("keydown", this.bOnKeyDown, !1),
            window.addEventListener("keyup", this.bOnKeyUp, !1),
            window.addEventListener("mousemove", this.bOnMouseMove, !1),
            window.addEventListener("mousedown", this.bOnMouseDown, !1),
            window.addEventListener("mouseup", this.bOnMouseUp, !1),
            window.addEventListener("wheel", this.bOnMouseWheel, {
                capture: !1,
                passive: !0
            }),
            this.elem.addEventListener("touchmove", this.bOnTouchMove, !1),
            this.elem.addEventListener("touchstart", this.bOnTouchStart, !1),
            this.elem.addEventListener("touchend", this.bOnTouchEnd, !1),
            this.elem.addEventListener("touchcancel", this.bOnTouchCancel, !1)
        }
        var o = (a("c2a798c8"),
        Object.freeze({
            Enter: 13,
            Escape: 27,
            Space: 32,
            Left: 37,
            Up: 38,
            Right: 39,
            Down: 40,
            A: 65,
            D: 68,
            S: 83,
            W: 87,
            R: 82,
            F: 70,
            X: 88,
            M: 77,
            G: 71,
            Q: 81,
            E: 69,
            P: 80,
            V: 86,
            L: 76,
            One: 49,
            Two: 50,
            Three: 51,
            Four: 52,
            Five: 53,
            Six: 54,
            Seven: 55,
            Eight: 56,
            Nine: 57,
            Zero: 48,
            Plus: 187,
            Minus: 189,
            FwdSlash: 191,
            Tilde: 192,
            C: 16,
            LeftShift: 67,
            T: 84
        }))
          , n = Object.freeze({
            Move: 0,
            Start: 1,
            End: 2,
            Cancel: 3
        });
        r.prototype = {
            o: function() {
                window.removeEventListener("focus", this.bOnWindowFocus),
                window.removeEventListener("keydown", this.bOnKeyDown),
                window.removeEventListener("keyup", this.bOnKeyUp),
                window.removeEventListener("mousemove", this.bOnMouseMove),
                window.removeEventListener("mousedown", this.bOnMouseDown),
                window.removeEventListener("mouseup", this.bOnMouseUp),
                window.removeEventListener("wheel", this.bOnMouseWheel),
                this.elem.removeEventListener("touchmove", this.bOnTouchMove),
                this.elem.removeEventListener("touchstart", this.bOnTouchStart),
                this.elem.removeEventListener("touchend", this.bOnTouchEnd),
                this.elem.removeEventListener("touchcancel", this.bOnTouchCancel)
            },
            onWindowFocus: function() {
                this.keys = {},
                this.keysOld = {},
                this.mouseButton = !1,
                this.shiftKey = !1,
                this.touches.length = 0
            },
            flush: function() {
                this.keysOld = Object.assign({}, this.keys),
                this.mouseButtonOld = this.mouseButton,
                this.rightMouseButtonOld = this.rightMouseButton,
                this.mouseWheelState = 0,
                this.shiftKey = !1;
                for (var e = 0; e < this.touches.length; e++)
                    this.touches[e].posOld.x = this.touches[e].pos.x,
                    this.touches[e].posOld.y = this.touches[e].pos.y,
                    this.touches[e].isNew = !1,
                    this.touches[e].isDead && (this.touches.splice(e, 1),
                    --e)
            },
            onKeyDown: function(e) {
                this.keys[e.keyCode] = !0,
                this.shiftKey |= e.shiftKey
            },
            onKeyUp: function(e) {
                delete this.keys[e.keyCode]
            },
            Z: function(e) {
                return void 0 !== this.keys[e]
            },
            J: function(e) {
                return void 0 === this.keysOld[e] && this.Z(e)
            },
            $: function(e) {
                return this.keysOld[e] && !this.Z(e)
            },
            onMouseMove: function(e) {
                this.mousePosOld = Object.assign({}, this.mousePos),
                this.mousePos.x = e.clientX,
                this.mousePos.y = e.clientY
            },
            onMouseDown: function(e) {
                this.mouseButton = this.mouseButton || 0 === e.button,
                this.rightMouseButton = this.rightMouseButton || 2 === e.button
            },
            onMouseUp: function(e) {
                this.mouseButton = 0 !== e.button && this.mouseButton,
                this.rightMouseButton = 2 !== e.button && this.rightMouseButton
            },
            onMouseWheel: function(e) {
                this.mouseWheelState = e.deltaY < 0 ? -1 : 1
            },
            ee: function() {
                return this.mouseButton
            },
            te: function() {
                return !this.mouseButtonOld && this.mouseButton
            },
            ae: function() {
                return this.mouseButtonOld && !this.mouseButton
            },
            ie: function() {
                return !this.rightMouseButtonOld && this.rightMouseButton
            },
            re: function() {
                return this.mouseWheelState
            },
            resetMouseWheel: function() {
                this.mouseWheelState = 0
            },
            onTouchShared: function(e, t) {
                t != n.Cancel && e.preventDefault();
                for (var a = e.timeStamp || performance.now(), r = 0; r < e.changedTouches.length; r++) {
                    for (var o = e.changedTouches[r], s = o.identifier, l = o.clientX, m = o.clientY, c = null, d = 0; d < this.touches.length; d++)
                        if (this.touches[d].osId == s && !this.touches[d].isDead) {
                            c = this.touches[d];
                            break
                        }
                    t != n.Start || c || (c = new i,
                    this.touches.push(c),
                    ++this.touchIdCounter,
                    c.id = this.touchIdCounter,
                    c.osId = s,
                    c.posOld.x = l,
                    c.posOld.y = m,
                    c.posDown.x = l,
                    c.posDown.y = m,
                    c.startTime = a,
                    c.isNew = !0,
                    c.isDead = !1),
                    t != n.End && t != n.Cancel || !c || (c.isDead = !0),
                    c && (c.pos.x = l,
                    c.pos.y = m,
                    c.lastUpdateTime = a)
                }
            },
            onTouchMove: function(e) {
                this.onTouchShared(e, n.Move)
            },
            onTouchStart: function(e) {
                this.onTouchShared(e, n.Start)
            },
            onTouchEnd: function(e) {
                this.onTouchShared(e, n.End)
            },
            onTouchCancel: function(e) {
                this.onTouchShared(e, n.Cancel)
            },
            getTouchById: function(e) {
                for (var t = 0; t < this.touches.length; t++)
                    if (this.touches[t].id == e)
                        return this.touches[t];
                return null
            }
        },
        e.exports = {
            oe: r,
            Key: o,
            Touch: i
        }
    },
    51683873: function(e, t, a) {
        "use strict";
        var i = {
            "@metadata": {
                "last-updated": "2018-01-28",
                locale: "zh-cn"
            },
            "word-order": "sov",
            "index-slogan": "2d混战",
            "index-region": "地区",
            "index-north-america": "北美",
            "index-europe": "欧洲",
            "index-asia": "亚洲",
            "index-players": "玩家",
            "index-play-solo": "玩单挑",
            "index-play-duo": "玩双人联队",
            "index-play-squad": "玩四人联队",
            "index-create-team": "创建联队",
            "index-how-to-play": "如何玩",
            "index-leave-team": "离开联队",
            "index-joining-team": "加入联队",
            "index-creating-team": "建立联队中",
            "index-invite-link": "邀请链接",
            "index-solo": "单人",
            "index-duo": "双人联队",
            "index-squad": "四人联队",
            "index-auto-fill": "自动填充",
            "index-no-fill": "不填充",
            "index-waiting-for-leader": "等待领队开始游戏。",
            "index-play": "开始",
            "index-featured-youtuber": "精选Youtube博主",
            "index-settings": "设置",
            "index-high-resolution": "高分辨率(提高视觉质量)",
            "index-screen-shake": "屏幕抖动",
            "index-team-is-full": "联队已满!",
            "index-failed-joining-team": "加入联队失败。",
            "index-failed-creating-team": "创建联队失败。",
            "index-failed-finding-game": "查找联队失败。",
            "index-failed-joining-game": "加入游戏失败。",
            "index-lost-connection": "联队连接丢失。",
            "index-host-closed": "团队主持人失去连接。",
            "index-view-more": "查看更多",
            "index-back-to-main": "回到主界面",
            "index-most-kills": "杀敌最多",
            "index-total-kills": "总杀敌",
            "index-total-wins": "总赢数",
            "index-top-5-percent": "前5%",
            "index-kill-death-ratio": "杀敌和生还比例",
            "index-for": "For",
            "index-today": "今日",
            "index-this-week": "本周",
            "index-all-time": "所有时间",
            "index-top-100": "前一百",
            "index-rank": "排名",
            "index-player": "玩家",
            "index-total-games": "总游戏数",
            "index-controls": "控制",
            "index-movement": "动作",
            "index-movement-ctrl": "W, A, S, D键",
            "index-aim": "瞄准",
            "index-aim-ctrl": "鼠标",
            "index-punch": "拳",
            "index-shoot": "射击",
            "index-shoot-ctrl": "左击",
            "index-change-weapons": "更换武器",
            "index-change-weapons-ctrl": "1-4或滚轮。",
            "index-stow-weapons": "收起武器(拳击模式)",
            "index-stow-weapons-ctrl": "3或E键",
            "index-swap-weapons": "换到之前的武器",
            "index-swap-weapons-ctrl": "Q键",
            "index-reload": "重装",
            "index-reload-ctrl": "R键",
            "index-scope-zoom": "变焦范围",
            "index-scope-zoom-ctrl": "左键单击放大",
            "index-pickup": "拾起",
            "index-loot": "掠夺",
            "index-revive": "复活",
            "index-pickup-ctrl": "F键",
            "index-use-medical": "使用医疗物品",
            "index-use-medical-ctrl": "左键单击物品或7-0",
            "index-drop-item": "丢弃物品",
            "index-drop-item-ctrl": "右键单击物品",
            "index-cancel-action": "取消动作",
            "index-cancel-action-ctrl": "X键",
            "index-view-map": "查看地图",
            "index-view-map-ctrl": "M或G键",
            "index-toggle-minimap": "切换小地图",
            "index-toggle-minimap-ctrl": "V键",
            "index-use-ping": "使用联队平轮",
            "index-use-ping-ctrl": "按住C键，同时按住右键然后移动鼠标，接着松开右键",
            "index-use-emote": "使用表情轮",
            "index-use-emote-ctrl": "按住右键然后移动鼠标，接着松开右键",
            "game-alive": "存活玩家",
            "game-reloading": "装弹",
            "game-using": "使用",
            "game-reviving": "复活中",
            "game-revive-teammate": "复活队友",
            "game-equip": "装备",
            "game-cancel": "撤销",
            "game-You": "You",
            "game-you": "you",
            "game-themselves": "themselves",
            "game-yourself": "yourself",
            "game-you-died": "died",
            "game-player-died": "died",
            "game-with": "with",
            "game-knocked-out": "knocked out",
            "game-killed": "killed",
            "game-finally-killed": "finally killed",
            "game-finally-bled-out": "finally bled out",
            "game-died-outside": "died outside the safe zone",
            "game-the-red-zone": "The red zone",
            "game-waiting-for-players": "等待其他玩家",
            "game-spectating": "观看中",
            "game-red-zone-advances": "红色区域扩大于",
            "game-red-zone-advancing": "红色区域扩大中，快到安全区域去!",
            "game-seconds": "秒",
            "game-minutes": "分",
            "game-minute": "分",
            "game-m": "分",
            "game-s": "秒",
            "game-not-enough-space": "空间不足!",
            "game-item-already-owned": "物品已拥有!",
            "game-item-already-equipped": "物品已装备!",
            "game-better-item-equipped": "已装备更好物品!",
            "game-play-new-game": "开始新游戏",
            "game-spectate": "观看",
            "game-full-screen": "全屏",
            "game-sound": "声音",
            "game-quit-game": "离开游戏",
            "game-return-to-game": "返回游戏",
            "game-hide-match-stats": "隐藏比赛数据",
            "game-view-match-stats": "查看比赛数据",
            "game-previous-teammate": "上个队友",
            "game-next-teammate": "下个队友",
            "game-spectate-previous": "",
            "game-spectate-next": "",
            "game-leave-game": "离开游戏",
            "game-your-results": "你的战绩",
            "game-chicken": "大吉大利，今晚吃鸡！",
            "game-won-the-game": "游戏赢了。",
            "game-team-eliminated": "你的队伍被击败了。",
            "game-rank": "排名",
            "game-team-rank": "联队排名",
            "game-team-kills": "联队杀敌数",
            "game-kill": "杀",
            "game-kills": "杀",
            "game-damage-dealt": "伤害输出",
            "game-damage-taken": "受到伤害",
            "game-survived": "生还",
            "game-backpack00": "袋子",
            "game-backpack01": "小包",
            "game-backpack02": "常规包",
            "game-backpack03": "军用包",
            "game-bandage": "绷带",
            "game-bandage-tooltip": "左键点击回复15点生命值。",
            "game-healing-tooltip": "无法治疗75点以上的生命值。",
            "game-healthkit": "医药包",
            "game-healthkit-tooltip": "左键点击恢复100点生命值。",
            "game-soda": "汽水",
            "game-soda-tooltip": "左键点击可以增加25点的肾上腺素。",
            "game-adrenaline-tooltip": "肾上腺素会随着时间的推移恢复血量值。",
            "game-painkiller": "药片",
            "game-painkiller-tooltip": "左键点击可以增加50点的肾上腺素。",
            "game-9mm": "9毫米",
            "game-9mm-tooltip": "给M9,MP5,G18C,Mac-10, Vector 和 UMP9的弹药。",
            "game-12gauge": "12口径",
            "game-12gauge-tooltip": "给M870, SPAS-12, Saiga-12 和 MP220的弹药。",
            "game-762mm": "7.62毫米",
            "game-762mm-tooltip": "给AK-47, SCAR-H, M39, 莫辛-纳甘步枪, M39， SV-98, M1, OT-38 和 DP-28的弹药。",
            "game-556mm": "5.56毫米",
            "game-556mm-tooltip": "给FAMAS, M416, QBB-97, Mk 12 和 M249弹药。",
            "game-50AE": ".50 AE",
            "game-50AE-tooltip": "给Desert Eagle弹药。",
            "game-308sub": ".308 Subsonic",
            "game-308sub-tooltip": "给AWM-S弹药。",
            "game-flare": "Flare",
            "game-flare-tooltip": "给Flare Gun弹药。",
            "game-chest01": "一级防弹衣",
            "game-chest02": "二级防弹衣",
            "game-chest03": "三级防弹衣",
            "game-helmet01": "一级头盔",
            "game-helmet02": "二级头盔",
            "game-helmet03": "三级头盔",
            "game-1xscope": "1x 瞄准镜",
            "game-2xscope": "2x 瞄准镜",
            "game-4xscope": "4x 瞄准镜",
            "game-8xscope": "8x 瞄准镜",
            "game-15xscope": "15x 瞄准镜",
            "game-level-1": "一级",
            "game-level-2": "二级",
            "game-level-3": "三级",
            "game-outfitBase": "基本服装",
            "game-outfitRoyalFortune": "皇家财富",
            "game-outfitKeyLime": "青柠",
            "game-outfitCobaltShell": "钴壳",
            "game-outfitCarbonFiber": "碳纤维",
            "game-outfitDarkGloves": "专业",
            "game-outfitGhillie": "吉利服",
            "game-outfitCamo": "森林迷彩",
            "game-outfitRed": "目标练习",
            "game-outfitWhite": "北极复仇者",
            "game-ak47": "AK-47",
            "game-dp28": "DP-28",
            "game-mosin": "Mosin-Nagant",
            "game-m39": "M39 EMR",
            "game-mp5": "MP5",
            "game-mac10": "MAC-10",
            "game-ump9": "UMP9",
            "game-m870": "M870",
            "game-mp220": "MP220",
            "game-saiga": "Saiga-12",
            "game-m9": "M9",
            "game-glock": "G18C",
            "game-ot38": "OT-38",
            "game-barrel_01": "a barrel",
            "game-silo_01": "a silo"
        };
        e.exports = i
    },
    "5bedf25d": function(e, t, a) {
        "use strict";
        var i = {
            "@metadata": {
                "last-updated": "2018-03-31",
                locale: "en"
            },
            "word-order": "svo",
            "index-create-account": "Create Account",
            "index-set-account-name": "Set your account name",
            "index-enter-name": "Enter name",
            "index-finish": "Finish",
            "index-delete-account": "Delete Account",
            "index-delete-account-desc": 'Enter "DELETE" to delete your account:',
            "index-confirm": "Confirm",
            "index-customize-avatar": "Customize Avatar",
            "index-done": "Done",
            "index-account": "Account",
            "index-log-in-with": "Log in with",
            "index-facebook": "Facebook",
            "index-google": "Google",
            "index-twitch": "Twitch",
            "index-discord": "Discord",
            "index-my-stats": "My Stats",
            "index-link-account": "Link Account",
            "index-log-out": "Log Out",
            "index-change-avatar": "Change Avatar",
            "index-change-account-name": "Change Account Name",
            "index-back": "Back",
            "index-link-account-to": "Link account to",
            "index-log-in-desc": "Log in to track your stats!",
            "index-logging-in": "Logging in",
            "index-leaderboards": "Leaderboards",
            "index-slogan": "2d Battle Royale",
            "index-region": "Region",
            "index-north-america": "North America",
            "index-europe": "Europe",
            "index-asia": "Asia",
            "index-players": "players",
            "index-play-solo": "Play Solo",
            "index-play-duo": "Play Duo",
            "index-play-squad": "Play Squad",
            "index-join-team": "Join Team",
            "index-create-team": "Create Team",
            "index-leave-team": "Leave Team",
            "index-joining-team": "Joining Team",
            "index-creating-team": "Creating Team",
            "index-invite-link": "Invite link",
            "index-invite-code": "Invite code",
            "index-join-team-help": "Got a team link or code? Paste it here:",
            "index-solo": "Solo",
            "index-duo": "Duo",
            "index-squad": "Squad",
            "index-auto-fill": "Auto Fill",
            "index-no-fill": "No Fill",
            "index-waiting-for-leader": "Waiting for leader to start game",
            "index-joining-game": "Joining game",
            "index-game-in-progress": "Game in progress",
            "index-play": "Play",
            "index-customize-loadout": "Customize Emotes",
            "index-twitter-follow": "Twitter Follow",
            "index-youtube-subscribe": "YouTube Subscribe",
            "index-facebook-like": "Facebook Like",
            "index-featured-youtuber": "Featured YouTuber",
            "index-streaming-live": "Streaming Live!",
            "index-viewer": "viewer",
            "index-viewers": "viewers",
            "index-settings": "Settings",
            "index-high-resolution": "High resolution (check to increase visual quality)",
            "index-screen-shake": "Screen shake",
            "index-anon-player-names": "Anonymize player names",
            "index-master-volume": "Master Volume",
            "index-sfx-volume": "SFX Volume",
            "index-music-volume": "Music Volume",
            "index-mobile-announce": "Now available on mobile!",
            "index-mobile-tooltip": "Visit <span>surviv.io</span> on your mobile device to play on the go!",
            "index-version": "ver",
            "index-privacy": "privacy",
            "index-attributions": "attributions",
            "index-proxy-sites": "proxy sites",
            "index-team-is-full": "Team is full!",
            "index-team-kicked": "You were kicked from the team!",
            "index-failed-joining-team": "Failed joining team.",
            "index-failed-creating-team": "Failed creating team.",
            "index-failed-finding-game": "Failed finding game.",
            "index-failed-joining-game": "Failed joining game.",
            "index-lost-connection": "Lost connection to team.",
            "index-host-closed": "Host closed the connection.",
            "index-invalid-protocol": "Old client version.",
            "index-view-more": "View More",
            "index-back-to-main": "Back to Main Menu",
            "index-most-kills": "Most kills",
            "index-total-kills": "Total kills",
            "index-total-wins": "Total wins",
            "index-top-5-percent": "Top 5 percent",
            "index-kill-death-ratio": "Kill-death ratio",
            "index-mode": "Mode",
            "index-for": "For",
            "index-today": "Today",
            "index-this-week": "This week",
            "index-all-time": "All time",
            "index-top-100": "TOP 100",
            "index-rank": "Rank",
            "index-player": "Player",
            "index-total-games": "Total Games",
            "index-controls": "Controls",
            "index-movement": "Movement",
            "index-movement-ctrl": "W, A, S, D",
            "index-aim": "Aim",
            "index-aim-ctrl": "Mouse",
            "index-punch": "Melee",
            "index-shoot": "Shoot",
            "index-shoot-ctrl": "Left-Click",
            "index-change-weapons": "Change Weapons",
            "index-change-weapons-ctrl": "1 through 4 or Scroll Wheel",
            "index-stow-weapons": "Stow Weapons (Melee Mode)",
            "index-stow-weapons-ctrl": "3 or E",
            "index-swap-weapons": "Swap to Previous Weapon",
            "index-swap-weapons-ctrl": "Q",
            "index-swap-weapon-slots": "Switch Gun Slots",
            "index-swap-weapon-slots-ctrl": "T or drag gun to other slot",
            "index-reload": "Reload",
            "index-reload-ctrl": "R",
            "index-scope-zoom": "Scope Zoom",
            "index-scope-zoom-ctrl": "Left-Click on Zoom",
            "index-pickup": "Pickup",
            "index-loot": "Loot",
            "index-revive": "Revive",
            "index-pickup-ctrl": "F",
            "index-use-medical": "Use Medical Item",
            "index-use-medical-ctrl": "Left-Click on Item or 7 through 0",
            "index-drop-item": "Drop Item",
            "index-drop-item-ctrl": "Right-Click on Item",
            "index-cancel-action": "Cancel Action",
            "index-cancel-action-ctrl": "X",
            "index-view-map": "View Map",
            "index-view-map-ctrl": "M or G",
            "index-toggle-minimap": "Toggle Minimap",
            "index-toggle-minimap-ctrl": "V",
            "index-use-ping": "Use Team Ping Wheel",
            "index-use-ping-ctrl": "Hold C, then hold Right-Click and drag mouse, then release Right-Click",
            "index-use-emote": "Use Emote Wheel",
            "index-use-emote-ctrl": "Hold Right-Click and drag mouse, then release Right-Click",
            "index-how-to-play": "How to Play",
            "index-tips-1-desc": "The goal of surviv.io is to be the last player standing. You only live once per game - there is no respawn!",
            "index-tips-2": "2D PUBG",
            "index-tips-2-desc": "If you've played other battle royale games like PUBG, Fortnite or H1Z1, then you're already halfway there! Think of surviv.io as 2D PUBG (with slightly less desync and more chicken).",
            "index-tips-3": "Loot and Kill",
            "index-tips-3-desc": "You'll begin the game with no items other than a simple backpack. Move around the map to find loot: weapons, ammo, scopes, and medical items. Eliminate other players and you can take their loot!",
            "index-tips-4": "Red = Bad!",
            "index-tips-4-desc": "Players aren't the only thing that can hurt you. The deadly red zone will move in from the sides of the map and deal increasingly greater damage if you stand in it. Keep an eye on the map and stay safe.",
            "index-movement-ctrl-touch": "Left stick",
            "index-aim-ctrl-touch": "Right stick",
            "index-shoot-ctrl-touch": "Drag right stick outside stick border",
            "index-change-weapons-ctrl-touch": "Tap weapon slot",
            "index-reload-ctrl-touch": "Tap equipped ammo counter",
            "index-scope-zoom-ctrl-touch": "Tap zoom item",
            "index-pickup-ctrl-touch": "Tap interaction button or loot name",
            "index-use-medical-ctrl-touch": "Tap medical item",
            "index-drop-item-ctrl-touch": "Touch and hold item",
            "index-cancel-action-ctrl-touch": "Tap interaction button",
            "index-view-map-ctrl-touch": "Tap minimap",
            "index-use-ping-ctrl-touch": "View map and tap anywhere on map",
            "index-use-emote-ctrl-touch": "Tap surviv icon",
            "game-alive": "Alive",
            "game-reloading": "Reloading",
            "game-use": "Use",
            "game-using": "Using",
            "game-reviving": "Reviving",
            "game-revive-teammate": "Revive Teammate",
            "game-equip": "Equip",
            "game-cancel": "Cancel",
            "game-open-door": "Open Door",
            "game-close-door": "Close Door",
            "game-unlock": "Unlock",
            "game-You": "You",
            "game-you": "you",
            "game-themselves": "themselves",
            "game-yourself": "yourself",
            "game-you-died": "died",
            "game-player-died": "died",
            "game-with": "with",
            "game-knocked-out": "knocked out",
            "game-killed": "killed",
            "game-finally-killed": "finally killed",
            "game-finally-bled-out": "finally bled out",
            "game-died-outside": "died outside the safe zone",
            "game-the-red-zone": "The red zone",
            "game-crushed": "crushed",
            "game-the-air-drop": "The air drop",
            "game-waiting-for-players": "Waiting for players",
            "game-spectating": "Spectating",
            "game-red-zone-advances": "Red zone advances in",
            "game-red-zone-advancing": "Red zone advancing! Move to the safe zone",
            "game-seconds": "seconds",
            "game-minutes": "minutes",
            "game-minute": "minute",
            "game-m": "m",
            "game-s": "s",
            "game-not-enough-space": "Not enough space!",
            "game-item-already-owned": "Item already owned!",
            "game-item-already-equipped": "Item already equipped!",
            "game-better-item-equipped": "Better item equipped!",
            "game-gun-cannot-fire": "Gun cannot be fired here!",
            "game-play-new-game": "Play New Game",
            "game-spectate": "Spectate",
            "game-full-screen": "Full Screen",
            "game-sound": "Sound",
            "game-quit-game": "Quit Game",
            "game-return-to-game": "Return to Game",
            "game-hide-match-stats": "Hide Match Stats",
            "game-view-match-stats": "View Match Stats",
            "game-previous-teammate": "Previous Teammate",
            "game-next-teammate": "Next Teammate",
            "game-spectate-previous": "Previous Player",
            "game-spectate-next": "Next Player",
            "game-leave-game": "Leave Game",
            "game-your-results": "Your Results",
            "game-chicken": "Winner winner chicken dinner!",
            "game-won-the-game": "won the game.",
            "game-team-eliminated": "Your team was eliminated.",
            "game-solo-rank": "Solo Rank",
            "game-duo-rank": "Duo Rank",
            "game-squad-rank": "Squad Rank",
            "game-rank": "Rank",
            "game-team-rank": "Team Rank",
            "game-team-kills": "Team Kills",
            "game-kill": "Kill",
            "game-kills": "Kills",
            "game-damage-dealt": "Damage Dealt",
            "game-damage-taken": "Damage Taken",
            "game-survived": "Survived",
            "game-backpack00": "Pouch",
            "game-backpack01": "Small Pack",
            "game-backpack02": "Regular Pack",
            "game-backpack03": "Military Pack",
            "game-bandage": "Bandage",
            "game-bandage-tooltip": "Left-click to restore 15 health.",
            "game-healing-tooltip": "Cannot heal past 75 health.",
            "game-healthkit": "Med Kit",
            "game-healthkit-tooltip": "Left-click to restore 100 health.",
            "game-soda": "Soda",
            "game-soda-tooltip": "Left-click to boost adrenaline by 25.",
            "game-adrenaline-tooltip": "Adrenaline restores health over time.",
            "game-painkiller": "Pills",
            "game-painkiller-tooltip": "Left-click to boost adrenaline by 50.",
            "game-9mm": "9mm",
            "game-9mm-tooltip": "Ammo for M9, G18C, MP5, MAC-10, UMP9 and Vector.",
            "game-12gauge": "12 gauge",
            "game-12gauge-tooltip": "Ammo for M870, SPAS-12, Saiga-12 and MP220.",
            "game-762mm": "7.62mm",
            "game-762mm-tooltip": "Ammo for AK-47, SCAR-H, M39, Mosin-Nagant, SV-98, M1, OT-38 and DP-28.",
            "game-556mm": "5.56mm",
            "game-556mm-tooltip": "Ammo for FAMAS, M416, QBB-97, Mk 12 and M249.",
            "game-50AE": ".50 AE",
            "game-50AE-tooltip": "Ammo for Desert Eagle.",
            "game-308sub": ".308 Subsonic",
            "game-308sub-tooltip": "Ammo for AWM-S.",
            "game-flare": "Flare",
            "game-flare-tooltip": "Ammo for Flare Gun.",
            "game-chest01": "Level 1 Vest",
            "game-chest02": "Level 2 Vest",
            "game-chest03": "Level 3 Vest",
            "game-helmet01": "Level 1 Helmet",
            "game-helmet02": "Level 2 Helmet",
            "game-helmet03": "Level 3 Helmet",
            "game-1xscope": "1x Scope",
            "game-2xscope": "2x Scope",
            "game-4xscope": "4x Scope",
            "game-8xscope": "8x Scope",
            "game-15xscope": "15x Scope",
            "game-level-1": "Lvl. 1",
            "game-level-2": "Lvl. 2",
            "game-level-3": "Lvl. 3",
            "game-outfitBase": "Basic Outfit",
            "game-outfitRoyalFortune": "Royal Fortune",
            "game-outfitKeyLime": "Key Lime",
            "game-outfitCobaltShell": "Cobalt Shell",
            "game-outfitCarbonFiber": "Carbon Fiber",
            "game-outfitDarkGloves": "The Professional",
            "game-outfitGhillie": "Ghillie Suit",
            "game-outfitCamo": "Forest Camo",
            "game-outfitRed": "Target Practice",
            "game-outfitWhite": "Arctic Avenger",
            "game-outfitWoodland": "Woodland Combat",
            "game-outfitJester": "Jester's Folly",
            "game-outfitPrisoner": "The New Black",
            "game-outfitCasanova": "Casanova Silks",
            "game-outfitKhaki": "The Initiative",
            "game-outfitCoral": "Coral Guise",
            "game-outfitAqua": "Aquatic Avenger",
            "game-outfitIslander": "Island Time",
            "game-outfitMeteor": "Falling Star",
            "game-outfitHeaven": "Celestial Garb",
            "game-fists": "Fists",
            "game-karambit_rugged": "Karambit Rugged",
            "game-hud-karambit_rugged": "Karambit",
            "game-karambit_prismatic": "Karambit Prismatic",
            "game-hud-karambit_prismatic": "Karambit",
            "game-bayonet_rugged": "Bayonet Rugged",
            "game-hud-bayonet_rugged": "Bayonet",
            "game-bayonet_woodland": "Bayonet Woodland",
            "game-hud-bayonet_woodland": "Bayonet",
            "game-huntsman_rugged": "Huntsman Rugged",
            "game-hud-huntsman_rugged": "Huntsman",
            "game-huntsman_burnished": "Huntsman Burnished",
            "game-hud-huntsman_burnished": "Huntsman",
            "game-woodaxe": "Wood Axe",
            "game-hook": "Hook",
            "game-pan": "Pan",
            "game-ak47": "AK-47",
            "game-scar": "SCAR-H",
            "game-dp28": "DP-28",
            "game-mosin": "Mosin-Nagant",
            "game-sv98": "SV-98",
            "game-m39": "M39 EMR",
            "game-garand": "M1 Garand",
            "game-mp5": "MP5",
            "game-mac10": "MAC-10",
            "game-ump9": "UMP9",
            "game-vector": "Vector",
            "game-m870": "M870",
            "game-mp220": "MP220",
            "game-saiga": "Saiga-12",
            "game-spas12": "SPAS-12",
            "game-m9": "M9",
            "game-m9_dual": "Dual M9",
            "game-hud-m9_dual": "M9",
            "game-glock": "G18C",
            "game-glock_dual": "Dual G18C",
            "game-hud-glock_dual": "G18C",
            "game-ot38": "OT-38",
            "game-ot38_dual": "Dual OT-38",
            "game-hud-ot38_dual": "OT-38",
            "game-deagle": "Desert Eagle",
            "game-deagle_dual": "Dual Desert Eagle",
            "game-hud-deagle_dual": "Desert Eagle",
            "game-flare_gun": "Flare Gun",
            "game-famas": "FAMAS",
            "game-hk416": "M416",
            "game-mk12": "Mk 12 SPR",
            "game-m249": "M249",
            "game-qbb97": "QBB-97",
            "game-awc": "AWM-S",
            "game-frag": "Frag Grenade",
            "game-hud-frag": "Frag",
            "game-smoke": "Smoke Grenade",
            "game-hud-smoke": "Smoke",
            "game-barrel_01": "a barrel",
            "game-silo_01": "a silo",
            "game-oven_01": "an oven",
            "game-control_panel_01": "Control Panel",
            "game-control_panel_02": "Control Panel",
            "game-control_panel_03": "a computer terminal",
            "game-power_box_01": "a power box",
            "game-airdrop_crate_01": "Air Drop",
            "game-airdrop_crate_02": "Air Drop"
        };
        e.exports = i
    },
    "5ddf718e": function(e, t) {
        e.exports = {
            spritesheets: [{
                meta: {
                    image: "imgs-2884f8a2.png",
                    size: {
                        w: 2048,
                        h: 2048
                    },
                    scale: .5
                },
                frames: {
                    "map-complex-warehouse-floor.img": {
                        frame: {
                            x: 2,
                            y: 790,
                            w: 1200,
                            h: 944
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 1200,
                            h: 944
                        },
                        sourceSize: {
                            w: 1200,
                            h: 944
                        }
                    },
                    "map-building-police-floor.img": {
                        frame: {
                            x: 2,
                            y: 2,
                            w: 1360,
                            h: 784
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 1360,
                            h: 784
                        },
                        sourceSize: {
                            w: 1360,
                            h: 784
                        }
                    },
                    "map-bunker-conch-chamber-floor-01.img": {
                        frame: {
                            x: 2,
                            y: 1738,
                            w: 698,
                            h: 192
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 21,
                            y: 21,
                            w: 698,
                            h: 192
                        },
                        sourceSize: {
                            w: 760,
                            h: 216
                        }
                    },
                    "map-building-police-ceiling-01.img": {
                        frame: {
                            x: 1366,
                            y: 2,
                            w: 672,
                            h: 320
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 672,
                            h: 320
                        },
                        sourceSize: {
                            w: 672,
                            h: 320
                        }
                    },
                    "map-bunker-storm-chamber-floor-01.img": {
                        frame: {
                            x: 1366,
                            y: 326,
                            w: 636,
                            h: 438
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 1,
                            y: 23,
                            w: 636,
                            h: 438
                        },
                        sourceSize: {
                            w: 640,
                            h: 464
                        }
                    },
                    "map-bunker-conch-chamber-floor-02.img": {
                        frame: {
                            x: 1366,
                            y: 768,
                            w: 619,
                            h: 206
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 0,
                            y: 13,
                            w: 619,
                            h: 206
                        },
                        sourceSize: {
                            w: 652,
                            h: 232
                        }
                    },
                    "map-bunker-conch-compartment-floor-01.img": {
                        frame: {
                            x: 1366,
                            y: 978,
                            w: 528,
                            h: 592
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 24,
                            y: 0,
                            w: 528,
                            h: 592
                        },
                        sourceSize: {
                            w: 552,
                            h: 616
                        }
                    },
                    "map-bunker-storm-chamber-ceiling-01.img": {
                        frame: {
                            x: 1366,
                            y: 1574,
                            w: 592,
                            h: 305
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 0,
                            y: 111,
                            w: 592,
                            h: 305
                        },
                        sourceSize: {
                            w: 592,
                            h: 416
                        }
                    },
                    "map-bunker-conch-chamber-ceiling-01.img": {
                        frame: {
                            x: 704,
                            y: 1738,
                            w: 496,
                            h: 192
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 496,
                            h: 192
                        },
                        sourceSize: {
                            w: 496,
                            h: 192
                        }
                    },
                    "map-building-hut-floor-02.img": {
                        frame: {
                            x: 1898,
                            y: 978,
                            w: 66,
                            h: 384
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 1,
                            y: 0,
                            w: 66,
                            h: 384
                        },
                        sourceSize: {
                            w: 68,
                            h: 384
                        }
                    },
                    "map-building-container-open-floor.img": {
                        frame: {
                            x: 1206,
                            y: 790,
                            w: 90,
                            h: 343
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 0,
                            y: 1,
                            w: 90,
                            h: 343
                        },
                        sourceSize: {
                            w: 90,
                            h: 346
                        }
                    },
                    "map-building-container-floor-01.img": {
                        frame: {
                            x: 1206,
                            y: 1137,
                            w: 90,
                            h: 266
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 90,
                            h: 266
                        },
                        sourceSize: {
                            w: 90,
                            h: 268
                        }
                    },
                    "map-wall-14-rounded.img": {
                        frame: {
                            x: 2006,
                            y: 326,
                            w: 16,
                            h: 224
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 16,
                            h: 224
                        },
                        sourceSize: {
                            w: 16,
                            h: 224
                        }
                    },
                    "map-wall-14.img": {
                        frame: {
                            x: 1968,
                            y: 978,
                            w: 16,
                            h: 224
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 16,
                            h: 224
                        },
                        sourceSize: {
                            w: 16,
                            h: 224
                        }
                    },
                    "map-wall-13-rounded.img": {
                        frame: {
                            x: 2006,
                            y: 554,
                            w: 16,
                            h: 208
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 16,
                            h: 208
                        },
                        sourceSize: {
                            w: 16,
                            h: 208
                        }
                    },
                    "map-building-panicroom-floor.img": {
                        frame: {
                            x: 1206,
                            y: 1407,
                            w: 144,
                            h: 192
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 144,
                            h: 192
                        },
                        sourceSize: {
                            w: 144,
                            h: 192
                        }
                    },
                    "map-building-panicroom-ceiling.img": {
                        frame: {
                            x: 1204,
                            y: 1738,
                            w: 144,
                            h: 192
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 144,
                            h: 192
                        },
                        sourceSize: {
                            w: 144,
                            h: 192
                        }
                    },
                    "map-building-container-open-ceiling-01.img": {
                        frame: {
                            x: 1898,
                            y: 1366,
                            w: 90,
                            h: 192
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 0,
                            y: 77,
                            w: 90,
                            h: 192
                        },
                        sourceSize: {
                            w: 90,
                            h: 346
                        }
                    },
                    "map-wall-12-rounded.img": {
                        frame: {
                            x: 1989,
                            y: 768,
                            w: 16,
                            h: 192
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 16,
                            h: 192
                        },
                        sourceSize: {
                            w: 16,
                            h: 192
                        }
                    },
                    "map-wall-12.img": {
                        frame: {
                            x: 2009,
                            y: 768,
                            w: 16,
                            h: 192
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 16,
                            h: 192
                        },
                        sourceSize: {
                            w: 16,
                            h: 192
                        }
                    },
                    "map-wall-glass-12.img": {
                        frame: {
                            x: 1988,
                            y: 978,
                            w: 16,
                            h: 192
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 16,
                            h: 192
                        },
                        sourceSize: {
                            w: 16,
                            h: 192
                        }
                    },
                    "map-bunker-conch-ceiling-01.img": {
                        frame: {
                            x: 2,
                            y: 1934,
                            w: 190,
                            h: 90
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 190,
                            h: 90
                        },
                        sourceSize: {
                            w: 190,
                            h: 90
                        }
                    },
                    "map-wall-shack-top.img": {
                        frame: {
                            x: 1366,
                            y: 1883,
                            w: 180,
                            h: 12
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 180,
                            h: 12
                        },
                        sourceSize: {
                            w: 180,
                            h: 12
                        }
                    },
                    "map-pipes-04.img": {
                        frame: {
                            x: 1992,
                            y: 1366,
                            w: 44,
                            h: 176
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 44,
                            h: 176
                        },
                        sourceSize: {
                            w: 44,
                            h: 176
                        }
                    },
                    "map-wall-11-rounded.img": {
                        frame: {
                            x: 2008,
                            y: 978,
                            w: 16,
                            h: 176
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 16,
                            h: 176
                        },
                        sourceSize: {
                            w: 16,
                            h: 176
                        }
                    },
                    "map-building-house-wall-05.img": {
                        frame: {
                            x: 1962,
                            y: 1574,
                            w: 16,
                            h: 176
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 16,
                            h: 176
                        },
                        sourceSize: {
                            w: 16,
                            h: 176
                        }
                    },
                    "map-wall-glass-10.img": {
                        frame: {
                            x: 1982,
                            y: 1574,
                            w: 16,
                            h: 160
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 16,
                            h: 160
                        },
                        sourceSize: {
                            w: 16,
                            h: 160
                        }
                    },
                    "map-wall-10-rounded.img": {
                        frame: {
                            x: 2002,
                            y: 1574,
                            w: 16,
                            h: 160
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 16,
                            h: 160
                        },
                        sourceSize: {
                            w: 16,
                            h: 160
                        }
                    },
                    "map-shack-res-01.img": {
                        frame: {
                            x: 1206,
                            y: 1603,
                            w: 154,
                            h: 92
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 29,
                            y: 24,
                            w: 154,
                            h: 92
                        },
                        sourceSize: {
                            w: 210,
                            h: 170
                        }
                    },
                    "map-table-02.img": {
                        frame: {
                            x: 196,
                            y: 1934,
                            w: 144,
                            h: 80
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 144,
                            h: 80
                        },
                        sourceSize: {
                            w: 144,
                            h: 80
                        }
                    },
                    "map-pipes-01.img": {
                        frame: {
                            x: 1968,
                            y: 1206,
                            w: 45,
                            h: 144
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 45,
                            h: 144
                        },
                        sourceSize: {
                            w: 45,
                            h: 144
                        }
                    },
                    "map-building-house-wall-04.img": {
                        frame: {
                            x: 2017,
                            y: 1206,
                            w: 16,
                            h: 144
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 16,
                            h: 144
                        },
                        sourceSize: {
                            w: 16,
                            h: 144
                        }
                    },
                    "map-wall-09-rounded.img": {
                        frame: {
                            x: 2022,
                            y: 1574,
                            w: 16,
                            h: 144
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 16,
                            h: 144
                        },
                        sourceSize: {
                            w: 16,
                            h: 144
                        }
                    },
                    "part-shell-05.img": {
                        frame: {
                            x: 1300,
                            y: 790,
                            w: 32,
                            h: 130
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 32,
                            h: 130
                        },
                        sourceSize: {
                            w: 32,
                            h: 130
                        }
                    },
                    "map-sandbags-01.img": {
                        frame: {
                            x: 344,
                            y: 1934,
                            w: 128,
                            h: 74
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 74
                        },
                        sourceSize: {
                            w: 128,
                            h: 74
                        }
                    },
                    "map-building-house-wall-03.img": {
                        frame: {
                            x: 1336,
                            y: 790,
                            w: 16,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 16,
                            h: 128
                        },
                        sourceSize: {
                            w: 16,
                            h: 128
                        }
                    },
                    "map-wall-08-rounded.img": {
                        frame: {
                            x: 1300,
                            y: 924,
                            w: 16,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 16,
                            h: 128
                        },
                        sourceSize: {
                            w: 16,
                            h: 128
                        }
                    },
                    "map-wall-shack-right.img": {
                        frame: {
                            x: 2026,
                            y: 326,
                            w: 12,
                            h: 121
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 12,
                            h: 121
                        },
                        sourceSize: {
                            w: 12,
                            h: 121
                        }
                    },
                    "map-wall-shack-bot.img": {
                        frame: {
                            x: 1550,
                            y: 1883,
                            w: 121,
                            h: 12
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 121,
                            h: 12
                        },
                        sourceSize: {
                            w: 121,
                            h: 12
                        }
                    },
                    "map-door-02.img": {
                        frame: {
                            x: 1962,
                            y: 1754,
                            w: 40,
                            h: 112
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 40,
                            h: 112
                        },
                        sourceSize: {
                            w: 40,
                            h: 112
                        }
                    },
                    "map-bookshelf-01.img": {
                        frame: {
                            x: 1206,
                            y: 1699,
                            w: 112,
                            h: 32
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 112,
                            h: 32
                        },
                        sourceSize: {
                            w: 112,
                            h: 32
                        }
                    },
                    "map-bookshelf-02.img": {
                        frame: {
                            x: 476,
                            y: 1934,
                            w: 112,
                            h: 32
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 112,
                            h: 32
                        },
                        sourceSize: {
                            w: 112,
                            h: 32
                        }
                    },
                    "map-wall-07-rounded.img": {
                        frame: {
                            x: 2006,
                            y: 1754,
                            w: 16,
                            h: 112
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 16,
                            h: 112
                        },
                        sourceSize: {
                            w: 16,
                            h: 112
                        }
                    },
                    "map-wall-shack-left.img": {
                        frame: {
                            x: 2026,
                            y: 554,
                            w: 12,
                            h: 111
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 12,
                            h: 111
                        },
                        sourceSize: {
                            w: 12,
                            h: 111
                        }
                    },
                    "map-wall-outhouse-top.img": {
                        frame: {
                            x: 1675,
                            y: 1883,
                            w: 102,
                            h: 12
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 102,
                            h: 12
                        },
                        sourceSize: {
                            w: 102,
                            h: 12
                        }
                    },
                    "map-wall-outhouse-side.img": {
                        frame: {
                            x: 2026,
                            y: 451,
                            w: 12,
                            h: 99
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 12,
                            h: 99
                        },
                        sourceSize: {
                            w: 12,
                            h: 99
                        }
                    },
                    "map-wall-06.img": {
                        frame: {
                            x: 1320,
                            y: 924,
                            w: 16,
                            h: 96
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 16,
                            h: 96
                        },
                        sourceSize: {
                            w: 16,
                            h: 96
                        }
                    },
                    "map-wall-06-rounded.img": {
                        frame: {
                            x: 1340,
                            y: 924,
                            w: 16,
                            h: 96
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 16,
                            h: 96
                        },
                        sourceSize: {
                            w: 16,
                            h: 96
                        }
                    },
                    "part-shell-02.img": {
                        frame: {
                            x: 1300,
                            y: 1137,
                            w: 32,
                            h: 95
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 32,
                            h: 95
                        },
                        sourceSize: {
                            w: 32,
                            h: 95
                        }
                    },
                    "gun-long-01.img": {
                        frame: {
                            x: 1336,
                            y: 1137,
                            w: 16,
                            h: 94
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 16,
                            h: 94
                        },
                        sourceSize: {
                            w: 16,
                            h: 94
                        }
                    },
                    "part-shell-03.img": {
                        frame: {
                            x: 1300,
                            y: 1236,
                            w: 32,
                            h: 90
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 32,
                            h: 90
                        },
                        sourceSize: {
                            w: 32,
                            h: 90
                        }
                    },
                    "map-deposit-box-02.img": {
                        frame: {
                            x: 476,
                            y: 1970,
                            w: 80,
                            h: 37
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 80,
                            h: 37
                        },
                        sourceSize: {
                            w: 80,
                            h: 37
                        }
                    },
                    "map-deposit-box-01.img": {
                        frame: {
                            x: 560,
                            y: 1970,
                            w: 80,
                            h: 37
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 80,
                            h: 37
                        },
                        sourceSize: {
                            w: 80,
                            h: 37
                        }
                    },
                    "part-airdrop-02.img": {
                        frame: {
                            x: 1336,
                            y: 1236,
                            w: 19,
                            h: 80
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 19,
                            h: 80
                        },
                        sourceSize: {
                            w: 19,
                            h: 80
                        }
                    },
                    "proj-smoke-nopin-nolever.img": {
                        frame: {
                            x: 1300,
                            y: 1056,
                            w: 40,
                            h: 74
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 20,
                            y: 3,
                            w: 40,
                            h: 74
                        },
                        sourceSize: {
                            w: 80,
                            h: 80
                        }
                    },
                    "ping-part-circle-auto.img": {
                        frame: {
                            x: 1833,
                            y: 1899,
                            w: 14,
                            h: 14
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 14,
                            h: 14
                        },
                        sourceSize: {
                            w: 14,
                            h: 14
                        }
                    },
                    "map-wall-04.img": {
                        frame: {
                            x: 1344,
                            y: 1056,
                            w: 16,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 16,
                            h: 64
                        },
                        sourceSize: {
                            w: 16,
                            h: 64
                        }
                    },
                    "map-door-01.img": {
                        frame: {
                            x: 2026,
                            y: 669,
                            w: 12,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 12,
                            h: 64
                        },
                        sourceSize: {
                            w: 12,
                            h: 64
                        }
                    },
                    "keyboard.img": {
                        frame: {
                            x: 592,
                            y: 1934,
                            w: 54,
                            h: 32
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 5,
                            y: 16,
                            w: 54,
                            h: 32
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "melee-battleaxe.img": {
                        frame: {
                            x: 1366,
                            y: 1899,
                            w: 54,
                            h: 29
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 54,
                            h: 29
                        },
                        sourceSize: {
                            w: 54,
                            h: 36
                        }
                    },
                    "map-locker-02.img": {
                        frame: {
                            x: 1988,
                            y: 1174,
                            w: 48,
                            h: 25
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 48,
                            h: 25
                        },
                        sourceSize: {
                            w: 48,
                            h: 25
                        }
                    },
                    "map-locker-01.img": {
                        frame: {
                            x: 1424,
                            y: 1899,
                            w: 48,
                            h: 25
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 48,
                            h: 25
                        },
                        sourceSize: {
                            w: 48,
                            h: 25
                        }
                    },
                    "map-drawers-res.img": {
                        frame: {
                            x: 650,
                            y: 1934,
                            w: 47,
                            h: 30
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 1,
                            y: 2,
                            w: 47,
                            h: 30
                        },
                        sourceSize: {
                            w: 48,
                            h: 32
                        }
                    },
                    "melee-huntsman-burnished.img": {
                        frame: {
                            x: 2028,
                            y: 978,
                            w: 10,
                            h: 47
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 27,
                            y: 8,
                            w: 10,
                            h: 47
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "melee-huntsman-blackwater.img": {
                        frame: {
                            x: 2028,
                            y: 1029,
                            w: 10,
                            h: 47
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 27,
                            y: 8,
                            w: 10,
                            h: 47
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "ping-indicator.img": {
                        frame: {
                            x: 644,
                            y: 1970,
                            w: 46,
                            h: 35
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 9,
                            y: 29,
                            w: 46,
                            h: 35
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "map-barrel-03.img": {
                        frame: {
                            x: 1476,
                            y: 1899,
                            w: 45,
                            h: 18
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 45,
                            h: 18
                        },
                        sourceSize: {
                            w: 45,
                            h: 18
                        }
                    },
                    "map-barrel-04.img": {
                        frame: {
                            x: 1525,
                            y: 1899,
                            w: 45,
                            h: 18
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 45,
                            h: 18
                        },
                        sourceSize: {
                            w: 45,
                            h: 18
                        }
                    },
                    "ping-part-quarter.img": {
                        frame: {
                            x: 701,
                            y: 1934,
                            w: 44,
                            h: 27
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 10,
                            y: 0,
                            w: 44,
                            h: 27
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "ping-part-quarter-highlight.img": {
                        frame: {
                            x: 749,
                            y: 1934,
                            w: 44,
                            h: 27
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 10,
                            y: 0,
                            w: 44,
                            h: 27
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "map-fire-ext-01.img": {
                        frame: {
                            x: 694,
                            y: 1970,
                            w: 42,
                            h: 34
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 42,
                            h: 34
                        },
                        sourceSize: {
                            w: 42,
                            h: 35
                        }
                    },
                    "map-barrel-res-03.img": {
                        frame: {
                            x: 1320,
                            y: 1024,
                            w: 39,
                            h: 28
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 17,
                            y: 42,
                            w: 39,
                            h: 28
                        },
                        sourceSize: {
                            w: 72,
                            h: 72
                        }
                    },
                    "gun-m249-bot-01.img": {
                        frame: {
                            x: 1322,
                            y: 1699,
                            w: 38,
                            h: 22
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 38,
                            h: 22
                        },
                        sourceSize: {
                            w: 38,
                            h: 22
                        }
                    },
                    "melee-karambit-woodland.img": {
                        frame: {
                            x: 1574,
                            y: 1899,
                            w: 38,
                            h: 16
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 13,
                            y: 24,
                            w: 38,
                            h: 16
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "melee-karambit-rust.img": {
                        frame: {
                            x: 1616,
                            y: 1899,
                            w: 38,
                            h: 16
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 13,
                            y: 24,
                            w: 38,
                            h: 16
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "melee-karambit-prismatic.img": {
                        frame: {
                            x: 1658,
                            y: 1899,
                            w: 38,
                            h: 16
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 13,
                            y: 24,
                            w: 38,
                            h: 16
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "map-wall-outhouse-bot.img": {
                        frame: {
                            x: 1992,
                            y: 1546,
                            w: 36,
                            h: 12
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 36,
                            h: 12
                        },
                        sourceSize: {
                            w: 36,
                            h: 12
                        }
                    },
                    "checked.img": {
                        frame: {
                            x: 740,
                            y: 1970,
                            w: 34,
                            h: 34
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 1,
                            y: 1,
                            w: 34,
                            h: 34
                        },
                        sourceSize: {
                            w: 36,
                            h: 36
                        }
                    },
                    "resume.img": {
                        frame: {
                            x: 778,
                            y: 1970,
                            w: 34,
                            h: 34
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 17,
                            y: 15,
                            w: 34,
                            h: 34
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "part-smoke-01.img": {
                        frame: {
                            x: 816,
                            y: 1970,
                            w: 34,
                            h: 34
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 1,
                            y: 1,
                            w: 34,
                            h: 34
                        },
                        sourceSize: {
                            w: 36,
                            h: 36
                        }
                    },
                    "globe.img": {
                        frame: {
                            x: 854,
                            y: 1970,
                            w: 32,
                            h: 32
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 32,
                            h: 32
                        },
                        sourceSize: {
                            w: 32,
                            h: 32
                        }
                    },
                    "map-column-01.img": {
                        frame: {
                            x: 890,
                            y: 1970,
                            w: 32,
                            h: 32
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 32,
                            h: 32
                        },
                        sourceSize: {
                            w: 32,
                            h: 32
                        }
                    },
                    "skull-team-outlined.img": {
                        frame: {
                            x: 926,
                            y: 1970,
                            w: 28,
                            h: 32
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 2,
                            y: 0,
                            w: 28,
                            h: 32
                        },
                        sourceSize: {
                            w: 32,
                            h: 32
                        }
                    },
                    "unlock.img": {
                        frame: {
                            x: 958,
                            y: 1970,
                            w: 26,
                            h: 32
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 3,
                            y: 0,
                            w: 26,
                            h: 32
                        },
                        sourceSize: {
                            w: 32,
                            h: 32
                        }
                    },
                    "lock.img": {
                        frame: {
                            x: 988,
                            y: 1970,
                            w: 26,
                            h: 32
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 3,
                            y: 0,
                            w: 26,
                            h: 32
                        },
                        sourceSize: {
                            w: 32,
                            h: 32
                        }
                    },
                    "melee-hook-silver.img": {
                        frame: {
                            x: 1018,
                            y: 1970,
                            w: 20,
                            h: 32
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 22,
                            y: 16,
                            w: 20,
                            h: 32
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "map-wall-02-rounded.img": {
                        frame: {
                            x: 1042,
                            y: 1970,
                            w: 16,
                            h: 32
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 16,
                            h: 32
                        },
                        sourceSize: {
                            w: 16,
                            h: 32
                        }
                    },
                    "gun-qbb97-bot-01.img": {
                        frame: {
                            x: 1700,
                            y: 1899,
                            w: 32,
                            h: 16
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 32,
                            h: 16
                        },
                        sourceSize: {
                            w: 32,
                            h: 16
                        }
                    },
                    "map-bush-res-02.img": {
                        frame: {
                            x: 1062,
                            y: 1970,
                            w: 30,
                            h: 31
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 21,
                            y: 22,
                            w: 30,
                            h: 31
                        },
                        sourceSize: {
                            w: 72,
                            h: 72
                        }
                    },
                    "part-frag-pin-01.img": {
                        frame: {
                            x: 1096,
                            y: 1970,
                            w: 30,
                            h: 30
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 17,
                            y: 17,
                            w: 30,
                            h: 30
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "proj-frag-pin-part.img": {
                        frame: {
                            x: 1130,
                            y: 1970,
                            w: 30,
                            h: 30
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 17,
                            y: 17,
                            w: 30,
                            h: 30
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "skull-team.img": {
                        frame: {
                            x: 1164,
                            y: 1970,
                            w: 26,
                            h: 30
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 3,
                            y: 1,
                            w: 26,
                            h: 30
                        },
                        sourceSize: {
                            w: 32,
                            h: 32
                        }
                    },
                    "map-fire-ext-res.img": {
                        frame: {
                            x: 1194,
                            y: 1970,
                            w: 25,
                            h: 30
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 17,
                            y: 3,
                            w: 25,
                            h: 30
                        },
                        sourceSize: {
                            w: 42,
                            h: 35
                        }
                    },
                    "down.img": {
                        frame: {
                            x: 1223,
                            y: 1970,
                            w: 28,
                            h: 28
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 2,
                            y: 2,
                            w: 28,
                            h: 28
                        },
                        sourceSize: {
                            w: 32,
                            h: 32
                        }
                    },
                    "dc.img": {
                        frame: {
                            x: 1255,
                            y: 1970,
                            w: 28,
                            h: 28
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 2,
                            y: 2,
                            w: 28,
                            h: 28
                        },
                        sourceSize: {
                            w: 32,
                            h: 32
                        }
                    },
                    "map-bush-res-01.img": {
                        frame: {
                            x: 797,
                            y: 1934,
                            w: 28,
                            h: 26
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 22,
                            y: 23,
                            w: 28,
                            h: 26
                        },
                        sourceSize: {
                            w: 72,
                            h: 72
                        }
                    },
                    "crown.img": {
                        frame: {
                            x: 829,
                            y: 1934,
                            w: 28,
                            h: 24
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 2,
                            y: 4,
                            w: 28,
                            h: 24
                        },
                        sourceSize: {
                            w: 32,
                            h: 32
                        }
                    },
                    "ping-part-eighth-highlight.img": {
                        frame: {
                            x: 861,
                            y: 1934,
                            w: 27,
                            h: 23
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 0,
                            y: 9,
                            w: 27,
                            h: 23
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "ping-part-eighth.img": {
                        frame: {
                            x: 892,
                            y: 1934,
                            w: 27,
                            h: 23
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 0,
                            y: 9,
                            w: 27,
                            h: 23
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "part-frag-lever-01.img": {
                        frame: {
                            x: 923,
                            y: 1934,
                            w: 26,
                            h: 22
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 19,
                            y: 21,
                            w: 26,
                            h: 22
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "map-tree-res.img": {
                        frame: {
                            x: 1287,
                            y: 1970,
                            w: 24,
                            h: 24
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 24,
                            h: 24
                        },
                        sourceSize: {
                            w: 24,
                            h: 24
                        }
                    },
                    "map-building-bank-window-res-01.img": {
                        frame: {
                            x: 1315,
                            y: 1970,
                            w: 24,
                            h: 23
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 22,
                            y: 27,
                            w: 24,
                            h: 23
                        },
                        sourceSize: {
                            w: 72,
                            h: 72
                        }
                    },
                    "player-hands-01.img": {
                        frame: {
                            x: 953,
                            y: 1934,
                            w: 19,
                            h: 19
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 19,
                            h: 19
                        },
                        sourceSize: {
                            w: 19,
                            h: 19
                        }
                    },
                    "player-feet-02.img": {
                        frame: {
                            x: 976,
                            y: 1934,
                            w: 13,
                            h: 19
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 3,
                            y: 0,
                            w: 13,
                            h: 19
                        },
                        sourceSize: {
                            w: 19,
                            h: 19
                        }
                    },
                    "player-feet-01.img": {
                        frame: {
                            x: 993,
                            y: 1934,
                            w: 13,
                            h: 19
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 3,
                            y: 0,
                            w: 13,
                            h: 19
                        },
                        sourceSize: {
                            w: 19,
                            h: 19
                        }
                    },
                    "ping-part-circle.img": {
                        frame: {
                            x: 1736,
                            y: 1899,
                            w: 16,
                            h: 16
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 24,
                            y: 24,
                            w: 16,
                            h: 16
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "map-wall-01-rounded.img": {
                        frame: {
                            x: 1756,
                            y: 1899,
                            w: 16,
                            h: 16
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 16,
                            h: 16
                        },
                        sourceSize: {
                            w: 16,
                            h: 16
                        }
                    },
                    "ping-part-circle-highlight.img": {
                        frame: {
                            x: 1776,
                            y: 1899,
                            w: 16,
                            h: 16
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 24,
                            y: 24,
                            w: 16,
                            h: 16
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "ping-part-circle-auto-highlight.img": {
                        frame: {
                            x: 1796,
                            y: 1899,
                            w: 15,
                            h: 15
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 15,
                            h: 15
                        },
                        sourceSize: {
                            w: 15,
                            h: 15
                        }
                    },
                    "ping-part-circle-auto-outer.img": {
                        frame: {
                            x: 1815,
                            y: 1899,
                            w: 14,
                            h: 14
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 14,
                            h: 14
                        },
                        sourceSize: {
                            w: 14,
                            h: 14
                        }
                    },
                    "part-book-01.img": {
                        frame: {
                            x: 1300,
                            y: 1330,
                            w: 54,
                            h: 70
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 9,
                            y: 1,
                            w: 54,
                            h: 70
                        },
                        sourceSize: {
                            w: 72,
                            h: 72
                        }
                    }
                }
            }, {
                meta: {
                    image: "imgs-e35740ac.png",
                    size: {
                        w: 2048,
                        h: 2048
                    },
                    scale: .5
                },
                frames: {
                    "map-building-warehouse-floor-01.img": {
                        frame: {
                            x: 1030,
                            y: 2,
                            w: 1e3,
                            h: 400
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 1e3,
                            h: 400
                        },
                        sourceSize: {
                            w: 1e3,
                            h: 400
                        }
                    },
                    "map-building-mansion-floor.img": {
                        frame: {
                            x: 2,
                            y: 2,
                            w: 1024,
                            h: 860
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 0,
                            y: 1,
                            w: 1024,
                            h: 860
                        },
                        sourceSize: {
                            w: 1024,
                            h: 864
                        }
                    },
                    "map-building-warehouse-floor-02.img": {
                        frame: {
                            x: 1030,
                            y: 406,
                            w: 880,
                            h: 400
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 880,
                            h: 400
                        },
                        sourceSize: {
                            w: 880,
                            h: 400
                        }
                    },
                    "map-bunker-hydra-compartment-floor-02.img": {
                        frame: {
                            x: 2,
                            y: 866,
                            w: 848,
                            h: 724
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 4,
                            y: 0,
                            w: 848,
                            h: 724
                        },
                        sourceSize: {
                            w: 852,
                            h: 724
                        }
                    },
                    "map-building-bank-floor.img": {
                        frame: {
                            x: 854,
                            y: 866,
                            w: 848,
                            h: 624
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 848,
                            h: 624
                        },
                        sourceSize: {
                            w: 848,
                            h: 624
                        }
                    },
                    "map-bunker-conch-chamber-ceiling-02.img": {
                        frame: {
                            x: 2,
                            y: 1594,
                            w: 488,
                            h: 176
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 488,
                            h: 176
                        },
                        sourceSize: {
                            w: 488,
                            h: 176
                        }
                    },
                    "map-building-warehouse-ceiling-01.img": {
                        frame: {
                            x: 2,
                            y: 1774,
                            w: 416,
                            h: 216
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 416,
                            h: 216
                        },
                        sourceSize: {
                            w: 416,
                            h: 216
                        }
                    },
                    "map-bunker-hydra-chamber-floor-02.img": {
                        frame: {
                            x: 1706,
                            y: 866,
                            w: 170,
                            h: 371
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 21,
                            y: 0,
                            w: 170,
                            h: 371
                        },
                        sourceSize: {
                            w: 196,
                            h: 372
                        }
                    },
                    "map-building-warehouse-ceiling-02.img": {
                        frame: {
                            x: 422,
                            y: 1774,
                            w: 360,
                            h: 216
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 360,
                            h: 216
                        },
                        sourceSize: {
                            w: 360,
                            h: 216
                        }
                    },
                    "map-pipes-03.img": {
                        frame: {
                            x: 494,
                            y: 1594,
                            w: 342,
                            h: 118
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 342,
                            h: 118
                        },
                        sourceSize: {
                            w: 342,
                            h: 118
                        }
                    },
                    "map-bunker-conch-floor-01.img": {
                        frame: {
                            x: 1706,
                            y: 1241,
                            w: 292,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 4,
                            y: 0,
                            w: 292,
                            h: 128
                        },
                        sourceSize: {
                            w: 300,
                            h: 128
                        }
                    },
                    "map-building-shack-ceiling-01.img": {
                        frame: {
                            x: 786,
                            y: 1774,
                            w: 210,
                            h: 139
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 210,
                            h: 139
                        },
                        sourceSize: {
                            w: 210,
                            h: 170
                        }
                    },
                    "map-building-container-ceiling-01.img": {
                        frame: {
                            x: 1914,
                            y: 406,
                            w: 90,
                            h: 191
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 90,
                            h: 191
                        },
                        sourceSize: {
                            w: 90,
                            h: 268
                        }
                    },
                    "map-building-container-ceiling-02.img": {
                        frame: {
                            x: 1914,
                            y: 601,
                            w: 90,
                            h: 191
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 90,
                            h: 191
                        },
                        sourceSize: {
                            w: 90,
                            h: 268
                        }
                    },
                    "map-building-container-ceiling-05.img": {
                        frame: {
                            x: 1880,
                            y: 866,
                            w: 90,
                            h: 191
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 90,
                            h: 191
                        },
                        sourceSize: {
                            w: 90,
                            h: 268
                        }
                    },
                    "map-building-saferoom-ceiling.img": {
                        frame: {
                            x: 1706,
                            y: 1373,
                            w: 176,
                            h: 112
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 176,
                            h: 112
                        },
                        sourceSize: {
                            w: 176,
                            h: 112
                        }
                    },
                    "map-building-saferoom-floor.img": {
                        frame: {
                            x: 840,
                            y: 1594,
                            w: 176,
                            h: 112
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 176,
                            h: 112
                        },
                        sourceSize: {
                            w: 176,
                            h: 112
                        }
                    },
                    "map-building-shack-ceiling-02.img": {
                        frame: {
                            x: 1e3,
                            y: 1774,
                            w: 160,
                            h: 129
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 160,
                            h: 129
                        },
                        sourceSize: {
                            w: 160,
                            h: 160
                        }
                    },
                    "map-building-outhouse-floor.img": {
                        frame: {
                            x: 1880,
                            y: 1061,
                            w: 122,
                            h: 155
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 39,
                            y: 1,
                            w: 122,
                            h: 155
                        },
                        sourceSize: {
                            w: 200,
                            h: 158
                        }
                    },
                    "map-building-outhouse-ceiling.img": {
                        frame: {
                            x: 1164,
                            y: 1774,
                            w: 138,
                            h: 113
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 31,
                            y: 0,
                            w: 138,
                            h: 113
                        },
                        sourceSize: {
                            w: 200,
                            h: 158
                        }
                    },
                    "map-pipes-02.img": {
                        frame: {
                            x: 1886,
                            y: 1373,
                            w: 119,
                            h: 86
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 119,
                            h: 86
                        },
                        sourceSize: {
                            w: 119,
                            h: 86
                        }
                    },
                    "map-barrel-res-01.img": {
                        frame: {
                            x: 1020,
                            y: 1594,
                            w: 114,
                            h: 109
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 7,
                            y: 10,
                            w: 114,
                            h: 109
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "map-shack-res-02.img": {
                        frame: {
                            x: 854,
                            y: 1494,
                            w: 112,
                            h: 89
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 49,
                            y: 34,
                            w: 112,
                            h: 89
                        },
                        sourceSize: {
                            w: 210,
                            h: 170
                        }
                    },
                    "map-crate-res-03.img": {
                        frame: {
                            x: 970,
                            y: 1494,
                            w: 108,
                            h: 78
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 108,
                            h: 78
                        },
                        sourceSize: {
                            w: 108,
                            h: 78
                        }
                    },
                    "pad.img": {
                        frame: {
                            x: 1138,
                            y: 1594,
                            w: 104,
                            h: 104
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 104,
                            h: 104
                        },
                        sourceSize: {
                            w: 104,
                            h: 104
                        }
                    },
                    "map-bunker-hydra-floor-04.img": {
                        frame: {
                            x: 1246,
                            y: 1594,
                            w: 100,
                            h: 100
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 100,
                            h: 100
                        },
                        sourceSize: {
                            w: 100,
                            h: 100
                        }
                    },
                    "map-vat-02.img": {
                        frame: {
                            x: 1350,
                            y: 1594,
                            w: 100,
                            h: 100
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 100,
                            h: 100
                        },
                        sourceSize: {
                            w: 100,
                            h: 100
                        }
                    },
                    "map-hedgehog-01.img": {
                        frame: {
                            x: 1454,
                            y: 1594,
                            w: 96,
                            h: 96
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 96,
                            h: 96
                        },
                        sourceSize: {
                            w: 96,
                            h: 96
                        }
                    },
                    "map-smoke-res.img": {
                        frame: {
                            x: 1554,
                            y: 1594,
                            w: 86,
                            h: 90
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 23,
                            y: 19,
                            w: 86,
                            h: 90
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "player-wading-01.img": {
                        frame: {
                            x: 1644,
                            y: 1594,
                            w: 86,
                            h: 86
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 86,
                            h: 86
                        },
                        sourceSize: {
                            w: 86,
                            h: 86
                        }
                    },
                    "map-crate-14.img": {
                        frame: {
                            x: 1030,
                            y: 810,
                            w: 86,
                            h: 45
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 86,
                            h: 45
                        },
                        sourceSize: {
                            w: 86,
                            h: 45
                        }
                    },
                    "map-crate-04.img": {
                        frame: {
                            x: 1734,
                            y: 1594,
                            w: 82,
                            h: 82
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 82,
                            h: 82
                        },
                        sourceSize: {
                            w: 82,
                            h: 82
                        }
                    },
                    "map-crate-06.img": {
                        frame: {
                            x: 1082,
                            y: 1494,
                            w: 82,
                            h: 50
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 82,
                            h: 50
                        },
                        sourceSize: {
                            w: 82,
                            h: 50
                        }
                    },
                    "part-shell-04.img": {
                        frame: {
                            x: 1974,
                            y: 866,
                            w: 28,
                            h: 82
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 28,
                            h: 82
                        },
                        sourceSize: {
                            w: 28,
                            h: 82
                        }
                    },
                    "map-crate-12.img": {
                        frame: {
                            x: 1820,
                            y: 1594,
                            w: 80,
                            h: 80
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 80,
                            h: 80
                        },
                        sourceSize: {
                            w: 80,
                            h: 80
                        }
                    },
                    "map-crate-13.img": {
                        frame: {
                            x: 1904,
                            y: 1594,
                            w: 80,
                            h: 80
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 80,
                            h: 80
                        },
                        sourceSize: {
                            w: 80,
                            h: 80
                        }
                    },
                    "map-table-01.img": {
                        frame: {
                            x: 1306,
                            y: 1774,
                            w: 80,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 80,
                            h: 64
                        },
                        sourceSize: {
                            w: 80,
                            h: 64
                        }
                    },
                    "map-stairs-broken-01.img": {
                        frame: {
                            x: 1390,
                            y: 1774,
                            w: 80,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 80,
                            h: 64
                        },
                        sourceSize: {
                            w: 80,
                            h: 64
                        }
                    },
                    "map-drawers-02.img": {
                        frame: {
                            x: 1120,
                            y: 810,
                            w: 80,
                            h: 45
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 80,
                            h: 45
                        },
                        sourceSize: {
                            w: 80,
                            h: 45
                        }
                    },
                    "map-drawers-01.img": {
                        frame: {
                            x: 1204,
                            y: 810,
                            w: 80,
                            h: 45
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 80,
                            h: 45
                        },
                        sourceSize: {
                            w: 80,
                            h: 45
                        }
                    },
                    "map-wall-05.img": {
                        frame: {
                            x: 2008,
                            y: 406,
                            w: 16,
                            h: 80
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 16,
                            h: 80
                        },
                        sourceSize: {
                            w: 16,
                            h: 80
                        }
                    },
                    "map-wall-05-rounded.img": {
                        frame: {
                            x: 2008,
                            y: 490,
                            w: 16,
                            h: 80
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 16,
                            h: 80
                        },
                        sourceSize: {
                            w: 16,
                            h: 80
                        }
                    },
                    "map-outhouse-res.img": {
                        frame: {
                            x: 786,
                            y: 1917,
                            w: 76,
                            h: 68
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 62,
                            y: 20,
                            w: 76,
                            h: 68
                        },
                        sourceSize: {
                            w: 200,
                            h: 156
                        }
                    },
                    "map-control-panel-02.img": {
                        frame: {
                            x: 1474,
                            y: 1774,
                            w: 72,
                            h: 55
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 72,
                            h: 55
                        },
                        sourceSize: {
                            w: 72,
                            h: 55
                        }
                    },
                    "map-control-panel-01.img": {
                        frame: {
                            x: 1550,
                            y: 1774,
                            w: 72,
                            h: 55
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 72,
                            h: 55
                        },
                        sourceSize: {
                            w: 72,
                            h: 55
                        }
                    },
                    "map-case-deagle-02.img": {
                        frame: {
                            x: 494,
                            y: 1716,
                            w: 72,
                            h: 54
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 72,
                            h: 54
                        },
                        sourceSize: {
                            w: 72,
                            h: 54
                        }
                    },
                    "map-case-deagle-01.img": {
                        frame: {
                            x: 570,
                            y: 1716,
                            w: 72,
                            h: 54
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 72,
                            h: 54
                        },
                        sourceSize: {
                            w: 72,
                            h: 54
                        }
                    },
                    "dab-face.img": {
                        frame: {
                            x: 1168,
                            y: 1494,
                            w: 72,
                            h: 50
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 0,
                            y: 11,
                            w: 72,
                            h: 50
                        },
                        sourceSize: {
                            w: 72,
                            h: 72
                        }
                    },
                    "part-plate-01.img": {
                        frame: {
                            x: 866,
                            y: 1917,
                            w: 70,
                            h: 68
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 1,
                            y: 2,
                            w: 70,
                            h: 68
                        },
                        sourceSize: {
                            w: 72,
                            h: 72
                        }
                    },
                    "map-crate-res-01.img": {
                        frame: {
                            x: 940,
                            y: 1917,
                            w: 70,
                            h: 66
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 1,
                            y: 4,
                            w: 70,
                            h: 66
                        },
                        sourceSize: {
                            w: 72,
                            h: 72
                        }
                    },
                    "map-chest-02.img": {
                        frame: {
                            x: 646,
                            y: 1716,
                            w: 70,
                            h: 51
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 70,
                            h: 51
                        },
                        sourceSize: {
                            w: 70,
                            h: 51
                        }
                    },
                    "map-chest-01.img": {
                        frame: {
                            x: 720,
                            y: 1716,
                            w: 70,
                            h: 51
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 70,
                            h: 51
                        },
                        sourceSize: {
                            w: 70,
                            h: 51
                        }
                    },
                    "map-case-hatchet-01.img": {
                        frame: {
                            x: 794,
                            y: 1716,
                            w: 70,
                            h: 51
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 70,
                            h: 51
                        },
                        sourceSize: {
                            w: 70,
                            h: 51
                        }
                    },
                    "part-pot-01.img": {
                        frame: {
                            x: 1974,
                            y: 952,
                            w: 48,
                            h: 69
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 12,
                            y: 2,
                            w: 48,
                            h: 69
                        },
                        sourceSize: {
                            w: 72,
                            h: 72
                        }
                    },
                    "part-shell-01.img": {
                        frame: {
                            x: 2002,
                            y: 1241,
                            w: 28,
                            h: 67
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 28,
                            h: 67
                        },
                        sourceSize: {
                            w: 28,
                            h: 67
                        }
                    },
                    "map-door-slot-01.img": {
                        frame: {
                            x: 2008,
                            y: 601,
                            w: 19,
                            h: 67
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 19,
                            h: 67
                        },
                        sourceSize: {
                            w: 19,
                            h: 67
                        }
                    },
                    "map-vat-01.img": {
                        frame: {
                            x: 1014,
                            y: 1917,
                            w: 66,
                            h: 66
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 3,
                            y: 3,
                            w: 66,
                            h: 66
                        },
                        sourceSize: {
                            w: 72,
                            h: 72
                        }
                    },
                    "map-barrel-res-02.img": {
                        frame: {
                            x: 1084,
                            y: 1917,
                            w: 66,
                            h: 65
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 3,
                            y: 2,
                            w: 66,
                            h: 65
                        },
                        sourceSize: {
                            w: 72,
                            h: 72
                        }
                    },
                    "part-snow-01.img": {
                        frame: {
                            x: 1902,
                            y: 810,
                            w: 35,
                            h: 36
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 1,
                            y: 0,
                            w: 35,
                            h: 36
                        },
                        sourceSize: {
                            w: 36,
                            h: 36
                        }
                    },
                    "sleepy.img": {
                        frame: {
                            x: 1223,
                            y: 1917,
                            w: 64,
                            h: 58
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 0,
                            y: 3,
                            w: 64,
                            h: 58
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "logo-egg.img": {
                        frame: {
                            x: 1291,
                            y: 1917,
                            w: 64,
                            h: 56
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 0,
                            y: 4,
                            w: 64,
                            h: 56
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "logo-surviv.img": {
                        frame: {
                            x: 1359,
                            y: 1917,
                            w: 64,
                            h: 56
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 0,
                            y: 4,
                            w: 64,
                            h: 56
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "logo-meteor.img": {
                        frame: {
                            x: 1427,
                            y: 1917,
                            w: 64,
                            h: 56
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 0,
                            y: 4,
                            w: 64,
                            h: 56
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "logo-hydra.img": {
                        frame: {
                            x: 1495,
                            y: 1917,
                            w: 64,
                            h: 56
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 0,
                            y: 4,
                            w: 64,
                            h: 56
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "logo-swine.img": {
                        frame: {
                            x: 1563,
                            y: 1917,
                            w: 64,
                            h: 56
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 0,
                            y: 4,
                            w: 64,
                            h: 56
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "logo-conch.img": {
                        frame: {
                            x: 1631,
                            y: 1917,
                            w: 64,
                            h: 56
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 0,
                            y: 4,
                            w: 64,
                            h: 56
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "logo-caduceus.img": {
                        frame: {
                            x: 1699,
                            y: 1917,
                            w: 64,
                            h: 56
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 0,
                            y: 4,
                            w: 64,
                            h: 56
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "link.img": {
                        frame: {
                            x: 1767,
                            y: 1917,
                            w: 64,
                            h: 56
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 0,
                            y: 4,
                            w: 64,
                            h: 56
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "logo-storm.img": {
                        frame: {
                            x: 1835,
                            y: 1917,
                            w: 64,
                            h: 56
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 0,
                            y: 4,
                            w: 64,
                            h: 56
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "hamburger.img": {
                        frame: {
                            x: 1626,
                            y: 1774,
                            w: 64,
                            h: 54
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 0,
                            y: 5,
                            w: 64,
                            h: 54
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "return-arrow.img": {
                        frame: {
                            x: 1694,
                            y: 1774,
                            w: 64,
                            h: 52
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 0,
                            y: 6,
                            w: 64,
                            h: 52
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "headshot-face.img": {
                        frame: {
                            x: 1244,
                            y: 1494,
                            w: 64,
                            h: 46
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 0,
                            y: 11,
                            w: 64,
                            h: 46
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "eye.img": {
                        frame: {
                            x: 1288,
                            y: 810,
                            w: 64,
                            h: 42
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 0,
                            y: 11,
                            w: 64,
                            h: 42
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "ping-map-danger.img": {
                        frame: {
                            x: 2008,
                            y: 672,
                            w: 22,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 21,
                            y: 0,
                            w: 22,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "map-building-house-wall-02.img": {
                        frame: {
                            x: 2006,
                            y: 866,
                            w: 16,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 16,
                            h: 64
                        },
                        sourceSize: {
                            w: 16,
                            h: 64
                        }
                    },
                    "map-wall-04-rounded.img": {
                        frame: {
                            x: 2006,
                            y: 1061,
                            w: 16,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 16,
                            h: 64
                        },
                        sourceSize: {
                            w: 16,
                            h: 64
                        }
                    },
                    "gun-med-01.img": {
                        frame: {
                            x: 2006,
                            y: 1129,
                            w: 16,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 16,
                            h: 64
                        },
                        sourceSize: {
                            w: 16,
                            h: 64
                        }
                    },
                    "loot-weapon-glock-dual.img": {
                        frame: {
                            x: 1903,
                            y: 1917,
                            w: 62,
                            h: 56
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 1,
                            y: 4,
                            w: 62,
                            h: 56
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "loot-chest-02.img": {
                        frame: {
                            x: 1988,
                            y: 1594,
                            w: 40,
                            h: 62
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 12,
                            y: 1,
                            w: 40,
                            h: 62
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "danger.img": {
                        frame: {
                            x: 1969,
                            y: 1917,
                            w: 60,
                            h: 56
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 2,
                            y: 4,
                            w: 60,
                            h: 56
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "whale.img": {
                        frame: {
                            x: 868,
                            y: 1716,
                            w: 60,
                            h: 48
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 2,
                            y: 8,
                            w: 60,
                            h: 48
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "loot-medical-pill.img": {
                        frame: {
                            x: 1312,
                            y: 1494,
                            w: 60,
                            h: 46
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 2,
                            y: 9,
                            w: 60,
                            h: 46
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "loot-helmet-02.img": {
                        frame: {
                            x: 1356,
                            y: 810,
                            w: 60,
                            h: 40
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 2,
                            y: 12,
                            w: 60,
                            h: 40
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "loot-helmet-01.img": {
                        frame: {
                            x: 1762,
                            y: 1774,
                            w: 58,
                            h: 52
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 3,
                            y: 6,
                            w: 58,
                            h: 52
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "loot-helmet-03.img": {
                        frame: {
                            x: 1376,
                            y: 1494,
                            w: 58,
                            h: 44
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 3,
                            y: 10,
                            w: 58,
                            h: 44
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "gg.img": {
                        frame: {
                            x: 1420,
                            y: 810,
                            w: 58,
                            h: 38
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 3,
                            y: 13,
                            w: 58,
                            h: 38
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "coconut.img": {
                        frame: {
                            x: 932,
                            y: 1716,
                            w: 56,
                            h: 46
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 4,
                            y: 9,
                            w: 56,
                            h: 46
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "melee-pickaxe.img": {
                        frame: {
                            x: 1482,
                            y: 810,
                            w: 56,
                            h: 38
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 4,
                            y: 13,
                            w: 56,
                            h: 38
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "map-door-03.img": {
                        frame: {
                            x: 2002,
                            y: 1312,
                            w: 16,
                            h: 56
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 16,
                            h: 56
                        },
                        sourceSize: {
                            w: 16,
                            h: 56
                        }
                    },
                    "teabag.img": {
                        frame: {
                            x: 1824,
                            y: 1774,
                            w: 55,
                            h: 47
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 9,
                            y: 9,
                            w: 55,
                            h: 47
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "eggplant.img": {
                        frame: {
                            x: 2,
                            y: 1994,
                            w: 54,
                            h: 52
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 5,
                            y: 6,
                            w: 54,
                            h: 52
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "map-refrigerator-01.img": {
                        frame: {
                            x: 1883,
                            y: 1774,
                            w: 54,
                            h: 47
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 54,
                            h: 47
                        },
                        sourceSize: {
                            w: 54,
                            h: 47
                        }
                    },
                    "map-oven-01.img": {
                        frame: {
                            x: 1941,
                            y: 1774,
                            w: 54,
                            h: 47
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 54,
                            h: 47
                        },
                        sourceSize: {
                            w: 54,
                            h: 47
                        }
                    },
                    "map-vending-soda-01.img": {
                        frame: {
                            x: 60,
                            y: 1994,
                            w: 54,
                            h: 47
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 54,
                            h: 47
                        },
                        sourceSize: {
                            w: 54,
                            h: 47
                        }
                    },
                    "chicken.img": {
                        frame: {
                            x: 1438,
                            y: 1494,
                            w: 54,
                            h: 42
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 5,
                            y: 11,
                            w: 54,
                            h: 42
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "map-building-house-window-01.img": {
                        frame: {
                            x: 2008,
                            y: 740,
                            w: 16,
                            h: 52
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 16,
                            h: 52
                        },
                        sourceSize: {
                            w: 16,
                            h: 52
                        }
                    },
                    "map-building-house-window-res-01.img": {
                        frame: {
                            x: 2009,
                            y: 1373,
                            w: 16,
                            h: 52
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 16,
                            h: 52
                        },
                        sourceSize: {
                            w: 16,
                            h: 52
                        }
                    },
                    "map-control-panel-03.img": {
                        frame: {
                            x: 118,
                            y: 1994,
                            w: 48,
                            h: 47
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 48,
                            h: 47
                        },
                        sourceSize: {
                            w: 48,
                            h: 47
                        }
                    },
                    "map-vending-res.img": {
                        frame: {
                            x: 1496,
                            y: 1494,
                            w: 48,
                            h: 42
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 3,
                            y: 2,
                            w: 48,
                            h: 42
                        },
                        sourceSize: {
                            w: 54,
                            h: 47
                        }
                    },
                    "audio-on.img": {
                        frame: {
                            x: 1548,
                            y: 1494,
                            w: 48,
                            h: 42
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 8,
                            y: 11,
                            w: 48,
                            h: 42
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "audio-off.img": {
                        frame: {
                            x: 1600,
                            y: 1494,
                            w: 47,
                            h: 40
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 8,
                            y: 12,
                            w: 47,
                            h: 40
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "melee-bayonet-rugged.img": {
                        frame: {
                            x: 992,
                            y: 1716,
                            w: 16,
                            h: 46
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 24,
                            y: 9,
                            w: 16,
                            h: 46
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "map-stand-01.img": {
                        frame: {
                            x: 1012,
                            y: 1716,
                            w: 40,
                            h: 45
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 40,
                            h: 45
                        },
                        sourceSize: {
                            w: 40,
                            h: 45
                        }
                    },
                    "cog.img": {
                        frame: {
                            x: 1056,
                            y: 1716,
                            w: 42,
                            h: 44
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 11,
                            y: 10,
                            w: 42,
                            h: 44
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "map-bunker-vent-01.img": {
                        frame: {
                            x: 1102,
                            y: 1716,
                            w: 42,
                            h: 42
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 42,
                            h: 42
                        },
                        sourceSize: {
                            w: 42,
                            h: 42
                        }
                    },
                    "map-pot-res-01.img": {
                        frame: {
                            x: 1148,
                            y: 1716,
                            w: 42,
                            h: 42
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 15,
                            y: 15,
                            w: 42,
                            h: 42
                        },
                        sourceSize: {
                            w: 72,
                            h: 72
                        }
                    },
                    "loot-weapon-fists.img": {
                        frame: {
                            x: 1651,
                            y: 1494,
                            w: 38,
                            h: 40
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 13,
                            y: 12,
                            w: 38,
                            h: 40
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "quit.img": {
                        frame: {
                            x: 1542,
                            y: 810,
                            w: 36,
                            h: 38
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 14,
                            y: 13,
                            w: 36,
                            h: 38
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "player-map-inner.img": {
                        frame: {
                            x: 1582,
                            y: 810,
                            w: 36,
                            h: 36
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 36,
                            h: 36
                        },
                        sourceSize: {
                            w: 36,
                            h: 36
                        }
                    },
                    "cursor-01.img": {
                        frame: {
                            x: 1622,
                            y: 810,
                            w: 36,
                            h: 36
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 36,
                            h: 36
                        },
                        sourceSize: {
                            w: 36,
                            h: 36
                        }
                    },
                    "cursor-03.img": {
                        frame: {
                            x: 1662,
                            y: 810,
                            w: 36,
                            h: 36
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 36,
                            h: 36
                        },
                        sourceSize: {
                            w: 36,
                            h: 36
                        }
                    },
                    "player-map-outer.img": {
                        frame: {
                            x: 1702,
                            y: 810,
                            w: 36,
                            h: 36
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 36,
                            h: 36
                        },
                        sourceSize: {
                            w: 36,
                            h: 36
                        }
                    },
                    "gun-dp28-top-01.img": {
                        frame: {
                            x: 1742,
                            y: 810,
                            w: 36,
                            h: 36
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 2,
                            y: 2,
                            w: 36,
                            h: 36
                        },
                        sourceSize: {
                            w: 40,
                            h: 40
                        }
                    },
                    "map-power-box-01.img": {
                        frame: {
                            x: 1782,
                            y: 810,
                            w: 36,
                            h: 36
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 36,
                            h: 36
                        },
                        sourceSize: {
                            w: 36,
                            h: 36
                        }
                    },
                    "close.img": {
                        frame: {
                            x: 1822,
                            y: 810,
                            w: 36,
                            h: 36
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 36,
                            h: 36
                        },
                        sourceSize: {
                            w: 36,
                            h: 36
                        }
                    },
                    "timer-background.img": {
                        frame: {
                            x: 1862,
                            y: 810,
                            w: 36,
                            h: 36
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 36,
                            h: 36
                        },
                        sourceSize: {
                            w: 36,
                            h: 36
                        }
                    },
                    "map-crate-res-02.img": {
                        frame: {
                            x: 1154,
                            y: 1917,
                            w: 65,
                            h: 58
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 6,
                            y: 5,
                            w: 65,
                            h: 58
                        },
                        sourceSize: {
                            w: 72,
                            h: 72
                        }
                    }
                }
            }, {
                meta: {
                    image: "imgs-e80b387e.png",
                    size: {
                        w: 2048,
                        h: 2048
                    },
                    scale: .5
                },
                frames: {
                    "map-bunker-hydra-compartment-ceiling-02.img": {
                        frame: {
                            x: 2,
                            y: 599,
                            w: 801,
                            h: 657
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 801,
                            h: 657
                        },
                        sourceSize: {
                            w: 816,
                            h: 720
                        }
                    },
                    "map-building-bank-ceiling.img": {
                        frame: {
                            x: 2,
                            y: 2,
                            w: 848,
                            h: 593
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 0,
                            y: 31,
                            w: 848,
                            h: 593
                        },
                        sourceSize: {
                            w: 848,
                            h: 624
                        }
                    },
                    "map-building-barn-floor-01.img": {
                        frame: {
                            x: 854,
                            y: 2,
                            w: 800,
                            h: 544
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 800,
                            h: 544
                        },
                        sourceSize: {
                            w: 800,
                            h: 544
                        }
                    },
                    "map-building-barn-ceiling.img": {
                        frame: {
                            x: 854,
                            y: 550,
                            w: 800,
                            h: 490
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 0,
                            y: 39,
                            w: 800,
                            h: 490
                        },
                        sourceSize: {
                            w: 800,
                            h: 576
                        }
                    },
                    "map-building-police-ceiling-02.img": {
                        frame: {
                            x: 2,
                            y: 1260,
                            w: 688,
                            h: 720
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 688,
                            h: 720
                        },
                        sourceSize: {
                            w: 688,
                            h: 720
                        }
                    },
                    "map-bunker-conch-compartment-ceiling-01.img": {
                        frame: {
                            x: 694,
                            y: 1260,
                            w: 488,
                            h: 560
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 488,
                            h: 560
                        },
                        sourceSize: {
                            w: 488,
                            h: 560
                        }
                    },
                    "map-building-mansion-ceiling.img": {
                        frame: {
                            x: 1186,
                            y: 1260,
                            w: 457,
                            h: 402
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 0,
                            y: 15,
                            w: 457,
                            h: 402
                        },
                        sourceSize: {
                            w: 512,
                            h: 432
                        }
                    },
                    "map-bunker-egg-chamber-floor-01.img": {
                        frame: {
                            x: 1658,
                            y: 2,
                            w: 364,
                            h: 440
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 28,
                            y: 80,
                            w: 364,
                            h: 440
                        },
                        sourceSize: {
                            w: 420,
                            h: 546
                        }
                    },
                    "map-bunker-hydra-chamber-floor-03.img": {
                        frame: {
                            x: 1658,
                            y: 446,
                            w: 352,
                            h: 401
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 0,
                            y: 15,
                            w: 352,
                            h: 401
                        },
                        sourceSize: {
                            w: 352,
                            h: 416
                        }
                    },
                    "map-bunker-hydra-compartment-ceiling-01.img": {
                        frame: {
                            x: 1658,
                            y: 851,
                            w: 320,
                            h: 360
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 320,
                            h: 360
                        },
                        sourceSize: {
                            w: 320,
                            h: 360
                        }
                    },
                    "map-bunker-hydra-compartment-floor-01.img": {
                        frame: {
                            x: 1658,
                            y: 1215,
                            w: 352,
                            h: 320
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 352,
                            h: 320
                        },
                        sourceSize: {
                            w: 352,
                            h: 320
                        }
                    },
                    "map-bunker-hydra-compartment-floor-03.img": {
                        frame: {
                            x: 1658,
                            y: 1539,
                            w: 352,
                            h: 254
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 352,
                            h: 254
                        },
                        sourceSize: {
                            w: 352,
                            h: 256
                        }
                    },
                    "map-building-shack-floor-01.img": {
                        frame: {
                            x: 1658,
                            y: 1797,
                            w: 192,
                            h: 161
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 9,
                            y: 9,
                            w: 192,
                            h: 161
                        },
                        sourceSize: {
                            w: 210,
                            h: 170
                        }
                    },
                    "map-bunker-storm-floor-02.img": {
                        frame: {
                            x: 854,
                            y: 1044,
                            w: 160,
                            h: 191
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 160,
                            h: 191
                        },
                        sourceSize: {
                            w: 160,
                            h: 192
                        }
                    },
                    "map-building-container-ceiling-03.img": {
                        frame: {
                            x: 1018,
                            y: 1044,
                            w: 90,
                            h: 191
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 90,
                            h: 191
                        },
                        sourceSize: {
                            w: 90,
                            h: 268
                        }
                    },
                    "map-building-shack-floor-02.img": {
                        frame: {
                            x: 1854,
                            y: 1797,
                            w: 160,
                            h: 160
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 160,
                            h: 160
                        },
                        sourceSize: {
                            w: 160,
                            h: 160
                        }
                    },
                    "map-bunker-generic-floor-01.img": {
                        frame: {
                            x: 1112,
                            y: 1044,
                            w: 149,
                            h: 141
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 5,
                            y: 0,
                            w: 149,
                            h: 141
                        },
                        sourceSize: {
                            w: 160,
                            h: 144
                        }
                    },
                    "emote-circle-outer.img": {
                        frame: {
                            x: 1265,
                            y: 1044,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "map-tree-03.img": {
                        frame: {
                            x: 1397,
                            y: 1044,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "part-smoke-02.img": {
                        frame: {
                            x: 1186,
                            y: 1666,
                            w: 128,
                            h: 126
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 0,
                            y: 1,
                            w: 128,
                            h: 126
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "part-smoke-03.img": {
                        frame: {
                            x: 1318,
                            y: 1666,
                            w: 127,
                            h: 126
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 1,
                            y: 0,
                            w: 127,
                            h: 126
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "map-hut-res-01.img": {
                        frame: {
                            x: 1529,
                            y: 1044,
                            w: 119,
                            h: 119
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 64,
                            y: 68,
                            w: 119,
                            h: 119
                        },
                        sourceSize: {
                            w: 256,
                            h: 256
                        }
                    },
                    "map-airdrop-01.img": {
                        frame: {
                            x: 1449,
                            y: 1666,
                            w: 118,
                            h: 118
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 5,
                            y: 5,
                            w: 118,
                            h: 118
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "proj-smoke-pin.img": {
                        frame: {
                            x: 1571,
                            y: 1666,
                            w: 78,
                            h: 79
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 1,
                            y: 1,
                            w: 78,
                            h: 79
                        },
                        sourceSize: {
                            w: 80,
                            h: 80
                        }
                    },
                    "proj-smoke-nopin.img": {
                        frame: {
                            x: 694,
                            y: 1824,
                            w: 78,
                            h: 79
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 1,
                            y: 1,
                            w: 78,
                            h: 79
                        },
                        sourceSize: {
                            w: 80,
                            h: 80
                        }
                    },
                    "map-bush-03.img": {
                        frame: {
                            x: 776,
                            y: 1824,
                            w: 76,
                            h: 76
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 76,
                            h: 76
                        },
                        sourceSize: {
                            w: 76,
                            h: 76
                        }
                    },
                    "map-crate-11.img": {
                        frame: {
                            x: 856,
                            y: 1824,
                            w: 74,
                            h: 74
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 74,
                            h: 74
                        },
                        sourceSize: {
                            w: 74,
                            h: 74
                        }
                    },
                    "map-crate-10.img": {
                        frame: {
                            x: 934,
                            y: 1824,
                            w: 74,
                            h: 74
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 74,
                            h: 74
                        },
                        sourceSize: {
                            w: 74,
                            h: 74
                        }
                    },
                    "player-armor-base-01.img": {
                        frame: {
                            x: 1012,
                            y: 1824,
                            w: 74,
                            h: 74
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 74,
                            h: 74
                        },
                        sourceSize: {
                            w: 74,
                            h: 74
                        }
                    },
                    "player-circle-base-01.img": {
                        frame: {
                            x: 1090,
                            y: 1824,
                            w: 74,
                            h: 74
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 74,
                            h: 74
                        },
                        sourceSize: {
                            w: 74,
                            h: 74
                        }
                    },
                    "loot-circle-outer-01.img": {
                        frame: {
                            x: 1168,
                            y: 1824,
                            w: 73,
                            h: 73
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 73,
                            h: 73
                        },
                        sourceSize: {
                            w: 73,
                            h: 73
                        }
                    },
                    "map-crate-08.img": {
                        frame: {
                            x: 1245,
                            y: 1824,
                            w: 72,
                            h: 72
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 72,
                            h: 72
                        },
                        sourceSize: {
                            w: 72,
                            h: 72
                        }
                    },
                    "ping-border.img": {
                        frame: {
                            x: 1321,
                            y: 1824,
                            w: 72,
                            h: 72
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 72,
                            h: 72
                        },
                        sourceSize: {
                            w: 72,
                            h: 72
                        }
                    },
                    "map-barrel-02.img": {
                        frame: {
                            x: 1397,
                            y: 1824,
                            w: 72,
                            h: 72
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 72,
                            h: 72
                        },
                        sourceSize: {
                            w: 72,
                            h: 72
                        }
                    },
                    "part-plank-01.img": {
                        frame: {
                            x: 1473,
                            y: 1824,
                            w: 72,
                            h: 72
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 72,
                            h: 72
                        },
                        sourceSize: {
                            w: 72,
                            h: 72
                        }
                    },
                    "map-barrel-01.img": {
                        frame: {
                            x: 1549,
                            y: 1824,
                            w: 72,
                            h: 72
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 72,
                            h: 72
                        },
                        sourceSize: {
                            w: 72,
                            h: 72
                        }
                    },
                    "map-stone-01.img": {
                        frame: {
                            x: 694,
                            y: 1907,
                            w: 72,
                            h: 72
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 72,
                            h: 72
                        },
                        sourceSize: {
                            w: 72,
                            h: 72
                        }
                    },
                    "map-crate-01.img": {
                        frame: {
                            x: 770,
                            y: 1907,
                            w: 72,
                            h: 72
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 72,
                            h: 72
                        },
                        sourceSize: {
                            w: 72,
                            h: 72
                        }
                    },
                    "map-crate-02.img": {
                        frame: {
                            x: 846,
                            y: 1907,
                            w: 72,
                            h: 72
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 72,
                            h: 72
                        },
                        sourceSize: {
                            w: 72,
                            h: 72
                        }
                    },
                    "map-crate-03.img": {
                        frame: {
                            x: 922,
                            y: 1907,
                            w: 72,
                            h: 72
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 72,
                            h: 72
                        },
                        sourceSize: {
                            w: 72,
                            h: 72
                        }
                    },
                    "map-wall-03-rounded.img": {
                        frame: {
                            x: 807,
                            y: 889,
                            w: 16,
                            h: 48
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 16,
                            h: 48
                        },
                        sourceSize: {
                            w: 16,
                            h: 48
                        }
                    },
                    "map-crate-09.img": {
                        frame: {
                            x: 1074,
                            y: 1907,
                            w: 72,
                            h: 72
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 72,
                            h: 72
                        },
                        sourceSize: {
                            w: 72,
                            h: 72
                        }
                    },
                    "part-panel-01.img": {
                        frame: {
                            x: 1150,
                            y: 1907,
                            w: 72,
                            h: 72
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 72,
                            h: 72
                        },
                        sourceSize: {
                            w: 72,
                            h: 72
                        }
                    },
                    "player-ripple-01.img": {
                        frame: {
                            x: 1226,
                            y: 1907,
                            w: 71,
                            h: 71
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 71,
                            h: 71
                        },
                        sourceSize: {
                            w: 71,
                            h: 71
                        }
                    },
                    "part-woodchip-01.img": {
                        frame: {
                            x: 1301,
                            y: 1907,
                            w: 71,
                            h: 71
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 1,
                            y: 0,
                            w: 71,
                            h: 71
                        },
                        sourceSize: {
                            w: 72,
                            h: 72
                        }
                    },
                    "player-base-01.img": {
                        frame: {
                            x: 1376,
                            y: 1907,
                            w: 68,
                            h: 68
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 1,
                            y: 1,
                            w: 68,
                            h: 68
                        },
                        sourceSize: {
                            w: 70,
                            h: 70
                        }
                    },
                    "map-bunker-vent-02.img": {
                        frame: {
                            x: 1448,
                            y: 1907,
                            w: 68,
                            h: 68
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 68,
                            h: 68
                        },
                        sourceSize: {
                            w: 68,
                            h: 68
                        }
                    },
                    "map-table-res.img": {
                        frame: {
                            x: 1520,
                            y: 1907,
                            w: 67,
                            h: 67
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 1,
                            y: 2,
                            w: 67,
                            h: 67
                        },
                        sourceSize: {
                            w: 72,
                            h: 72
                        }
                    },
                    "part-splat-02.img": {
                        frame: {
                            x: 1591,
                            y: 1907,
                            w: 63,
                            h: 67
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 7,
                            y: 3,
                            w: 63,
                            h: 67
                        },
                        sourceSize: {
                            w: 72,
                            h: 72
                        }
                    },
                    "salt.img": {
                        frame: {
                            x: 2,
                            y: 1984,
                            w: 64,
                            h: 60
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 0,
                            y: 2,
                            w: 64,
                            h: 60
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "loot-weapon-m9-dual.img": {
                        frame: {
                            x: 70,
                            y: 1984,
                            w: 64,
                            h: 60
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 0,
                            y: 2,
                            w: 64,
                            h: 60
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "loot-weapon-sv98.img": {
                        frame: {
                            x: 138,
                            y: 1984,
                            w: 62,
                            h: 60
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 1,
                            y: 3,
                            w: 62,
                            h: 60
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "part-leaf-01.img": {
                        frame: {
                            x: 204,
                            y: 1984,
                            w: 62,
                            h: 54
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 1,
                            y: 5,
                            w: 62,
                            h: 54
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "loot-throwable-smoke.img": {
                        frame: {
                            x: 807,
                            y: 599,
                            w: 43,
                            h: 62
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 10,
                            y: 1,
                            w: 43,
                            h: 62
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "loot-medical-healthkit.img": {
                        frame: {
                            x: 270,
                            y: 1984,
                            w: 60,
                            h: 54
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 2,
                            y: 5,
                            w: 60,
                            h: 54
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "emote-medical-healthkit.img": {
                        frame: {
                            x: 334,
                            y: 1984,
                            w: 60,
                            h: 54
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 2,
                            y: 5,
                            w: 60,
                            h: 54
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "loot-weapon-flare-gun.img": {
                        frame: {
                            x: 807,
                            y: 665,
                            w: 42,
                            h: 60
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 11,
                            y: 2,
                            w: 42,
                            h: 60
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "pineapple.img": {
                        frame: {
                            x: 1982,
                            y: 851,
                            w: 35,
                            h: 57
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 15,
                            y: 0,
                            w: 35,
                            h: 57
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "loot-medical-soda.img": {
                        frame: {
                            x: 1982,
                            y: 912,
                            w: 32,
                            h: 56
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 16,
                            y: 4,
                            w: 32,
                            h: 56
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "ping-map-airdrop.img": {
                        frame: {
                            x: 1982,
                            y: 972,
                            w: 38,
                            h: 55
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 13,
                            y: 4,
                            w: 38,
                            h: 55
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "leek.img": {
                        frame: {
                            x: 398,
                            y: 1984,
                            w: 54,
                            h: 54
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 5,
                            y: 5,
                            w: 54,
                            h: 54
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "loot-weapon-mac10.img": {
                        frame: {
                            x: 456,
                            y: 1984,
                            w: 52,
                            h: 54
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 6,
                            y: 5,
                            w: 52,
                            h: 54
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "loot-throwable-frag.img": {
                        frame: {
                            x: 512,
                            y: 1984,
                            w: 52,
                            h: 52
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 6,
                            y: 6,
                            w: 52,
                            h: 52
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "crab.img": {
                        frame: {
                            x: 568,
                            y: 1984,
                            w: 52,
                            h: 52
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 6,
                            y: 6,
                            w: 52,
                            h: 52
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "ping-map-help.img": {
                        frame: {
                            x: 624,
                            y: 1984,
                            w: 52,
                            h: 52
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 6,
                            y: 6,
                            w: 52,
                            h: 52
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "movement.img": {
                        frame: {
                            x: 680,
                            y: 1984,
                            w: 52,
                            h: 52
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 6,
                            y: 6,
                            w: 52,
                            h: 52
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "potato.img": {
                        frame: {
                            x: 736,
                            y: 1984,
                            w: 52,
                            h: 50
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 6,
                            y: 7,
                            w: 52,
                            h: 50
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "question.img": {
                        frame: {
                            x: 1982,
                            y: 1031,
                            w: 36,
                            h: 52
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 14,
                            y: 6,
                            w: 36,
                            h: 52
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "map-building-bank-window-01.img": {
                        frame: {
                            x: 1982,
                            y: 1087,
                            w: 28,
                            h: 52
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 28,
                            h: 52
                        },
                        sourceSize: {
                            w: 28,
                            h: 52
                        }
                    },
                    "baguette.img": {
                        frame: {
                            x: 792,
                            y: 1984,
                            w: 50,
                            h: 50
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 7,
                            y: 7,
                            w: 50,
                            h: 50
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "copy.img": {
                        frame: {
                            x: 846,
                            y: 1984,
                            w: 46,
                            h: 50
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 9,
                            y: 7,
                            w: 46,
                            h: 50
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "map-toilet-04.img": {
                        frame: {
                            x: 1982,
                            y: 1143,
                            w: 34,
                            h: 50
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 8,
                            y: 0,
                            w: 34,
                            h: 50
                        },
                        sourceSize: {
                            w: 50,
                            h: 50
                        }
                    },
                    "map-toilet-03.img": {
                        frame: {
                            x: 807,
                            y: 729,
                            w: 34,
                            h: 50
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 8,
                            y: 0,
                            w: 34,
                            h: 50
                        },
                        sourceSize: {
                            w: 50,
                            h: 50
                        }
                    },
                    "gun-short-01.img": {
                        frame: {
                            x: 807,
                            y: 783,
                            w: 16,
                            h: 50
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 16,
                            h: 50
                        },
                        sourceSize: {
                            w: 16,
                            h: 50
                        }
                    },
                    "minimize.img": {
                        frame: {
                            x: 896,
                            y: 1984,
                            w: 49,
                            h: 49
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 8,
                            y: 7,
                            w: 49,
                            h: 49
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "part-airdrop-01.img": {
                        frame: {
                            x: 949,
                            y: 1984,
                            w: 48,
                            h: 48
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 48,
                            h: 48
                        },
                        sourceSize: {
                            w: 48,
                            h: 48
                        }
                    },
                    "map-pot-02.img": {
                        frame: {
                            x: 1001,
                            y: 1984,
                            w: 48,
                            h: 48
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 48,
                            h: 48
                        },
                        sourceSize: {
                            w: 48,
                            h: 48
                        }
                    },
                    "map-pot-01.img": {
                        frame: {
                            x: 1053,
                            y: 1984,
                            w: 48,
                            h: 48
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 48,
                            h: 48
                        },
                        sourceSize: {
                            w: 48,
                            h: 48
                        }
                    },
                    "map-toilet-res-02.img": {
                        frame: {
                            x: 807,
                            y: 837,
                            w: 42,
                            h: 48
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 11,
                            y: 8,
                            w: 42,
                            h: 48
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "map-building-house-wall-01.img": {
                        frame: {
                            x: 827,
                            y: 783,
                            w: 16,
                            h: 48
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 16,
                            h: 48
                        },
                        sourceSize: {
                            w: 16,
                            h: 48
                        }
                    },
                    "map-crate-07.img": {
                        frame: {
                            x: 998,
                            y: 1907,
                            w: 72,
                            h: 72
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 72,
                            h: 72
                        },
                        sourceSize: {
                            w: 72,
                            h: 72
                        }
                    }
                }
            }, {
                meta: {
                    image: "imgs-40a339d9.png",
                    size: {
                        w: 2048,
                        h: 2048
                    },
                    scale: .5
                },
                frames: {
                    "map-building-house-floor.img": {
                        frame: {
                            x: 2,
                            y: 470,
                            w: 480,
                            h: 496
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 480,
                            h: 496
                        },
                        sourceSize: {
                            w: 480,
                            h: 496
                        }
                    },
                    "map-building-mansion-cellar-01.img": {
                        frame: {
                            x: 2,
                            y: 2,
                            w: 544,
                            h: 464
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 544,
                            h: 464
                        },
                        sourceSize: {
                            w: 544,
                            h: 464
                        }
                    },
                    "map-building-house-ceiling.img": {
                        frame: {
                            x: 550,
                            y: 2,
                            w: 480,
                            h: 432
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 480,
                            h: 432
                        },
                        sourceSize: {
                            w: 480,
                            h: 432
                        }
                    },
                    "map-bunker-hydra-chamber-floor-01.img": {
                        frame: {
                            x: 550,
                            y: 438,
                            w: 449,
                            h: 368
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 449,
                            h: 368
                        },
                        sourceSize: {
                            w: 464,
                            h: 368
                        }
                    },
                    "map-bunker-hydra-ceiling-01.img": {
                        frame: {
                            x: 1034,
                            y: 2,
                            w: 434,
                            h: 306
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 31,
                            y: 15,
                            w: 434,
                            h: 306
                        },
                        sourceSize: {
                            w: 480,
                            h: 336
                        }
                    },
                    "map-bunker-hydra-floor-01.img": {
                        frame: {
                            x: 1034,
                            y: 312,
                            w: 432,
                            h: 304
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 432,
                            h: 304
                        },
                        sourceSize: {
                            w: 432,
                            h: 304
                        }
                    },
                    "map-bunker-hydra-chamber-ceiling-03.img": {
                        frame: {
                            x: 1034,
                            y: 620,
                            w: 400,
                            h: 272
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 400,
                            h: 272
                        },
                        sourceSize: {
                            w: 400,
                            h: 272
                        }
                    },
                    "map-bunker-hydra-chamber-ceiling-02.img": {
                        frame: {
                            x: 2,
                            y: 970,
                            w: 192,
                            h: 350
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 192,
                            h: 350
                        },
                        sourceSize: {
                            w: 192,
                            h: 350
                        }
                    },
                    "map-bunker-hydra-chamber-ceiling-01.img": {
                        frame: {
                            x: 198,
                            y: 970,
                            w: 321,
                            h: 345
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 321,
                            h: 345
                        },
                        sourceSize: {
                            w: 432,
                            h: 352
                        }
                    },
                    "map-building-vault-ceiling.img": {
                        frame: {
                            x: 523,
                            y: 970,
                            w: 322,
                            h: 337
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 322,
                            h: 337
                        },
                        sourceSize: {
                            w: 433,
                            h: 337
                        }
                    },
                    "map-building-vault-floor.img": {
                        frame: {
                            x: 849,
                            y: 970,
                            w: 322,
                            h: 337
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 322,
                            h: 337
                        },
                        sourceSize: {
                            w: 433,
                            h: 337
                        }
                    },
                    "map-bunker-egg-chamber-ceiling-01.img": {
                        frame: {
                            x: 1472,
                            y: 2,
                            w: 320,
                            h: 305
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 0,
                            y: 143,
                            w: 320,
                            h: 305
                        },
                        sourceSize: {
                            w: 320,
                            h: 448
                        }
                    },
                    "map-bunker-hydra-compartment-ceiling-03.img": {
                        frame: {
                            x: 1472,
                            y: 311,
                            w: 320,
                            h: 270
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 320,
                            h: 270
                        },
                        sourceSize: {
                            w: 320,
                            h: 270
                        }
                    },
                    "map-building-hut-ceiling-01.img": {
                        frame: {
                            x: 1472,
                            y: 585,
                            w: 254,
                            h: 263
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 9,
                            y: 9,
                            w: 254,
                            h: 263
                        },
                        sourceSize: {
                            w: 272,
                            h: 272
                        }
                    },
                    "map-building-hut-ceiling-02.img": {
                        frame: {
                            x: 1472,
                            y: 852,
                            w: 254,
                            h: 263
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 9,
                            y: 9,
                            w: 254,
                            h: 263
                        },
                        sourceSize: {
                            w: 272,
                            h: 272
                        }
                    },
                    "map-silo-01.img": {
                        frame: {
                            x: 1175,
                            y: 970,
                            w: 252,
                            h: 252
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 2,
                            y: 2,
                            w: 252,
                            h: 252
                        },
                        sourceSize: {
                            w: 256,
                            h: 256
                        }
                    },
                    "ping-map-pulse.img": {
                        frame: {
                            x: 2,
                            y: 1324,
                            w: 252,
                            h: 252
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 2,
                            y: 2,
                            w: 252,
                            h: 252
                        },
                        sourceSize: {
                            w: 256,
                            h: 256
                        }
                    },
                    "map-building-hut-floor-01.img": {
                        frame: {
                            x: 258,
                            y: 1324,
                            w: 226,
                            h: 226
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 15,
                            y: 15,
                            w: 226,
                            h: 226
                        },
                        sourceSize: {
                            w: 256,
                            h: 256
                        }
                    },
                    "map-bush-01.img": {
                        frame: {
                            x: 1472,
                            y: 1119,
                            w: 64,
                            h: 66
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 4,
                            y: 3,
                            w: 64,
                            h: 66
                        },
                        sourceSize: {
                            w: 72,
                            h: 72
                        }
                    },
                    "ping-map-coming.img": {
                        frame: {
                            x: 1730,
                            y: 585,
                            w: 58,
                            h: 66
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 3,
                            y: 3,
                            w: 58,
                            h: 66
                        },
                        sourceSize: {
                            w: 64,
                            h: 128
                        }
                    },
                    "czech-republic.img": {
                        frame: {
                            x: 1540,
                            y: 1119,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "sob-face.img": {
                        frame: {
                            x: 1608,
                            y: 1119,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "south-korea.img": {
                        frame: {
                            x: 1676,
                            y: 1119,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "spain.img": {
                        frame: {
                            x: 1472,
                            y: 1189,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "chile.img": {
                        frame: {
                            x: 1540,
                            y: 1189,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "china.img": {
                        frame: {
                            x: 1608,
                            y: 1189,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "belarus.img": {
                        frame: {
                            x: 1676,
                            y: 1189,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "sunglass-face.img": {
                        frame: {
                            x: 1034,
                            y: 896,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "denmark.img": {
                        frame: {
                            x: 1102,
                            y: 896,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "sweden.img": {
                        frame: {
                            x: 1170,
                            y: 896,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "disappoint-face.img": {
                        frame: {
                            x: 1238,
                            y: 896,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "ecuador.img": {
                        frame: {
                            x: 1306,
                            y: 896,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "switzerland.img": {
                        frame: {
                            x: 1374,
                            y: 896,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "finland.img": {
                        frame: {
                            x: 550,
                            y: 810,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "france.img": {
                        frame: {
                            x: 618,
                            y: 810,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "hong-kong.img": {
                        frame: {
                            x: 686,
                            y: 810,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "hungary.img": {
                        frame: {
                            x: 754,
                            y: 810,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "imp-face.img": {
                        frame: {
                            x: 822,
                            y: 810,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "india.img": {
                        frame: {
                            x: 890,
                            y: 810,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "indonesia.img": {
                        frame: {
                            x: 958,
                            y: 810,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "israel.img": {
                        frame: {
                            x: 550,
                            y: 878,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "italy.img": {
                        frame: {
                            x: 618,
                            y: 878,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "japan.img": {
                        frame: {
                            x: 686,
                            y: 878,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "georgia.img": {
                        frame: {
                            x: 754,
                            y: 878,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "germany.img": {
                        frame: {
                            x: 822,
                            y: 878,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "taiwan.img": {
                        frame: {
                            x: 890,
                            y: 878,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "joy-face.img": {
                        frame: {
                            x: 958,
                            y: 878,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "kazakhstan.img": {
                        frame: {
                            x: 1175,
                            y: 1226,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "greece.img": {
                        frame: {
                            x: 1243,
                            y: 1226,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "malaysia.img": {
                        frame: {
                            x: 1311,
                            y: 1226,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "thailand.img": {
                        frame: {
                            x: 1379,
                            y: 1226,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "mexico.img": {
                        frame: {
                            x: 488,
                            y: 1324,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "monocle-face.img": {
                        frame: {
                            x: 556,
                            y: 1324,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "netherlands.img": {
                        frame: {
                            x: 624,
                            y: 1324,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "thinking-face.img": {
                        frame: {
                            x: 692,
                            y: 1324,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "united-kingdom.img": {
                        frame: {
                            x: 760,
                            y: 1324,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "united-states-of-america.img": {
                        frame: {
                            x: 828,
                            y: 1324,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "new-zealand.img": {
                        frame: {
                            x: 896,
                            y: 1324,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "norway.img": {
                        frame: {
                            x: 964,
                            y: 1324,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "guatemala.img": {
                        frame: {
                            x: 1032,
                            y: 1324,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "upsidedown-face.img": {
                        frame: {
                            x: 1100,
                            y: 1324,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "uruguay.img": {
                        frame: {
                            x: 1168,
                            y: 1324,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "happy-face.img": {
                        frame: {
                            x: 1236,
                            y: 1324,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "belgium.img": {
                        frame: {
                            x: 1304,
                            y: 1324,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "trinidad-and-tobago.img": {
                        frame: {
                            x: 1372,
                            y: 1324,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "turkey.img": {
                        frame: {
                            x: 1440,
                            y: 1324,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "peru.img": {
                        frame: {
                            x: 1508,
                            y: 1324,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "colombia.img": {
                        frame: {
                            x: 1576,
                            y: 1324,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "philippines.img": {
                        frame: {
                            x: 1644,
                            y: 1324,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "ukraine.img": {
                        frame: {
                            x: 1712,
                            y: 1324,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "bolivia.img": {
                        frame: {
                            x: 488,
                            y: 1392,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "argentina.img": {
                        frame: {
                            x: 556,
                            y: 1392,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "australia.img": {
                        frame: {
                            x: 624,
                            y: 1392,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "venezuela.img": {
                        frame: {
                            x: 692,
                            y: 1392,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "vietnam.img": {
                        frame: {
                            x: 760,
                            y: 1392,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "austria.img": {
                        frame: {
                            x: 828,
                            y: 1392,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "honduras.img": {
                        frame: {
                            x: 896,
                            y: 1392,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "alien-face.img": {
                        frame: {
                            x: 964,
                            y: 1392,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "portugal.img": {
                        frame: {
                            x: 1032,
                            y: 1392,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "republic-of-poland.img": {
                        frame: {
                            x: 1100,
                            y: 1392,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "romania.img": {
                        frame: {
                            x: 1168,
                            y: 1392,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "russia.img": {
                        frame: {
                            x: 1236,
                            y: 1392,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "sad-face.img": {
                        frame: {
                            x: 1304,
                            y: 1392,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "bosnia-and-herzegovina.img": {
                        frame: {
                            x: 1372,
                            y: 1392,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "angry-face.img": {
                        frame: {
                            x: 1440,
                            y: 1392,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "brazil.img": {
                        frame: {
                            x: 1508,
                            y: 1392,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "canada.img": {
                        frame: {
                            x: 1576,
                            y: 1392,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "serbia.img": {
                        frame: {
                            x: 1644,
                            y: 1392,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "part-log-01.img": {
                        frame: {
                            x: 1712,
                            y: 1392,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "map-toilet-res-01.img": {
                        frame: {
                            x: 1047,
                            y: 1646,
                            w: 50,
                            h: 55
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 7,
                            y: 3,
                            w: 50,
                            h: 55
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "ping-team-airdrop.img": {
                        frame: {
                            x: 556,
                            y: 1460,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "ping-team-coming.img": {
                        frame: {
                            x: 624,
                            y: 1460,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "ping-team-danger.img": {
                        frame: {
                            x: 692,
                            y: 1460,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "ping-team-help.img": {
                        frame: {
                            x: 760,
                            y: 1460,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "slovakia.img": {
                        frame: {
                            x: 828,
                            y: 1460,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "loot-ammo-box.img": {
                        frame: {
                            x: 896,
                            y: 1460,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "croatia.img": {
                        frame: {
                            x: 964,
                            y: 1460,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "loot-scope-00.img": {
                        frame: {
                            x: 1032,
                            y: 1460,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "loot-scope-01.img": {
                        frame: {
                            x: 1100,
                            y: 1460,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "loot-scope-02.img": {
                        frame: {
                            x: 1168,
                            y: 1460,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "loot-scope-03.img": {
                        frame: {
                            x: 1236,
                            y: 1460,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "loot-scope-04.img": {
                        frame: {
                            x: 1304,
                            y: 1460,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "loot-weapon-deagle-dual.img": {
                        frame: {
                            x: 1372,
                            y: 1460,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "part-splat-01.img": {
                        frame: {
                            x: 1472,
                            y: 1257,
                            w: 64,
                            h: 63
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 4,
                            y: 4,
                            w: 64,
                            h: 63
                        },
                        sourceSize: {
                            w: 72,
                            h: 72
                        }
                    },
                    "heart.img": {
                        frame: {
                            x: 1540,
                            y: 1257,
                            w: 64,
                            h: 63
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 0,
                            y: 1,
                            w: 64,
                            h: 63
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "loot-weapon-ot38-dual.img": {
                        frame: {
                            x: 1730,
                            y: 655,
                            w: 62,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 1,
                            y: 0,
                            w: 62,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "loot-weapon-dp28.img": {
                        frame: {
                            x: 1730,
                            y: 723,
                            w: 58,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 3,
                            y: 0,
                            w: 58,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "trash.img": {
                        frame: {
                            x: 1730,
                            y: 852,
                            w: 56,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 4,
                            y: 0,
                            w: 56,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "thumbs-up.img": {
                        frame: {
                            x: 1730,
                            y: 920,
                            w: 54,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 5,
                            y: 0,
                            w: 54,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "map-toilet-01.img": {
                        frame: {
                            x: 1730,
                            y: 988,
                            w: 50,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 7,
                            y: 0,
                            w: 50,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "map-toilet-02.img": {
                        frame: {
                            x: 486,
                            y: 470,
                            w: 50,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 7,
                            y: 0,
                            w: 50,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "indicator.img": {
                        frame: {
                            x: 1744,
                            y: 1119,
                            w: 46,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 9,
                            y: 0,
                            w: 46,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "bullets.img": {
                        frame: {
                            x: 1744,
                            y: 1189,
                            w: 44,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 10,
                            y: 0,
                            w: 44,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "part-splat-03.img": {
                        frame: {
                            x: 1608,
                            y: 1257,
                            w: 63,
                            h: 62
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 6,
                            y: 2,
                            w: 63,
                            h: 62
                        },
                        sourceSize: {
                            w: 72,
                            h: 72
                        }
                    },
                    "police.img": {
                        frame: {
                            x: 486,
                            y: 538,
                            w: 52,
                            h: 63
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 6,
                            y: 0,
                            w: 52,
                            h: 63
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "map-crate-05.img": {
                        frame: {
                            x: 1675,
                            y: 1257,
                            w: 62,
                            h: 62
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 62,
                            h: 62
                        },
                        sourceSize: {
                            w: 62,
                            h: 62
                        }
                    },
                    "surviv.img": {
                        frame: {
                            x: 1440,
                            y: 1460,
                            w: 62,
                            h: 62
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 1,
                            y: 1,
                            w: 62,
                            h: 62
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "loot-weapon-awc.img": {
                        frame: {
                            x: 1506,
                            y: 1460,
                            w: 62,
                            h: 62
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 0,
                            y: 2,
                            w: 62,
                            h: 62
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "emote.img": {
                        frame: {
                            x: 1572,
                            y: 1460,
                            w: 62,
                            h: 62
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 1,
                            y: 1,
                            w: 62,
                            h: 62
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "map-decal-initiative.img": {
                        frame: {
                            x: 486,
                            y: 605,
                            w: 60,
                            h: 62
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 2,
                            y: 1,
                            w: 60,
                            h: 62
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "loot-weapon-m249.img": {
                        frame: {
                            x: 486,
                            y: 671,
                            w: 58,
                            h: 62
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 3,
                            y: 1,
                            w: 58,
                            h: 62
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "loot-weapon-mk12.img": {
                        frame: {
                            x: 486,
                            y: 737,
                            w: 58,
                            h: 62
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 3,
                            y: 1,
                            w: 58,
                            h: 62
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "tombstone.img": {
                        frame: {
                            x: 486,
                            y: 803,
                            w: 58,
                            h: 62
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 3,
                            y: 0,
                            w: 58,
                            h: 62
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "map-vat-res.img": {
                        frame: {
                            x: 486,
                            y: 869,
                            w: 56,
                            h: 62
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 9,
                            y: 5,
                            w: 56,
                            h: 62
                        },
                        sourceSize: {
                            w: 72,
                            h: 72
                        }
                    },
                    "proj-frag-pin.img": {
                        frame: {
                            x: 1638,
                            y: 1460,
                            w: 56,
                            h: 62
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 0,
                            y: 2,
                            w: 56,
                            h: 62
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "proj-frag-nopin.img": {
                        frame: {
                            x: 1698,
                            y: 1460,
                            w: 55,
                            h: 62
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 9,
                            y: 2,
                            w: 55,
                            h: 62
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "loot-weapon-m39.img": {
                        frame: {
                            x: 2,
                            y: 1580,
                            w: 54,
                            h: 62
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 5,
                            y: 1,
                            w: 54,
                            h: 62
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "egg.img": {
                        frame: {
                            x: 1741,
                            y: 1257,
                            w: 50,
                            h: 62
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 7,
                            y: 1,
                            w: 50,
                            h: 62
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "proj-frag-nopin-nolever.img": {
                        frame: {
                            x: 60,
                            y: 1580,
                            w: 46,
                            h: 62
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 9,
                            y: 2,
                            w: 46,
                            h: 62
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "loot-weapon-qbb97.img": {
                        frame: {
                            x: 110,
                            y: 1580,
                            w: 60,
                            h: 61
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 2,
                            y: 2,
                            w: 60,
                            h: 61
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "loot-weapon-hk416.img": {
                        frame: {
                            x: 174,
                            y: 1580,
                            w: 54,
                            h: 61
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 6,
                            y: 1,
                            w: 54,
                            h: 61
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "gas.img": {
                        frame: {
                            x: 232,
                            y: 1580,
                            w: 60,
                            h: 60
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 2,
                            y: 2,
                            w: 60,
                            h: 60
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "map-stone-res.img": {
                        frame: {
                            x: 296,
                            y: 1580,
                            w: 60,
                            h: 60
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 60,
                            h: 60
                        },
                        sourceSize: {
                            w: 60,
                            h: 60
                        }
                    },
                    "target.img": {
                        frame: {
                            x: 360,
                            y: 1580,
                            w: 60,
                            h: 60
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 2,
                            y: 2,
                            w: 60,
                            h: 60
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "skull.img": {
                        frame: {
                            x: 424,
                            y: 1580,
                            w: 60,
                            h: 60
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 2,
                            y: 2,
                            w: 60,
                            h: 60
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "loot-chest-01.img": {
                        frame: {
                            x: 488,
                            y: 1580,
                            w: 60,
                            h: 60
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 2,
                            y: 2,
                            w: 60,
                            h: 60
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "mag-glass.img": {
                        frame: {
                            x: 552,
                            y: 1580,
                            w: 60,
                            h: 60
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 2,
                            y: 2,
                            w: 60,
                            h: 60
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "loot-weapon-pumpshotgun.img": {
                        frame: {
                            x: 616,
                            y: 1580,
                            w: 60,
                            h: 60
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 2,
                            y: 2,
                            w: 60,
                            h: 60
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "loot-weapon-mosin.img": {
                        frame: {
                            x: 1730,
                            y: 1056,
                            w: 60,
                            h: 59
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 2,
                            y: 3,
                            w: 60,
                            h: 59
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "loot-weapon-ump9.img": {
                        frame: {
                            x: 680,
                            y: 1580,
                            w: 58,
                            h: 60
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 3,
                            y: 2,
                            w: 58,
                            h: 60
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "loot-weapon-famas.img": {
                        frame: {
                            x: 742,
                            y: 1580,
                            w: 58,
                            h: 60
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 3,
                            y: 2,
                            w: 58,
                            h: 60
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "loot-shirt-01.img": {
                        frame: {
                            x: 804,
                            y: 1580,
                            w: 60,
                            h: 58
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 2,
                            y: 3,
                            w: 60,
                            h: 58
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "flex.img": {
                        frame: {
                            x: 2,
                            y: 1646,
                            w: 56,
                            h: 60
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 4,
                            y: 2,
                            w: 56,
                            h: 60
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "loot-weapon-scar.img": {
                        frame: {
                            x: 62,
                            y: 1646,
                            w: 54,
                            h: 60
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 5,
                            y: 2,
                            w: 54,
                            h: 60
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "loot-medical-bandage.img": {
                        frame: {
                            x: 120,
                            y: 1646,
                            w: 54,
                            h: 60
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 5,
                            y: 2,
                            w: 54,
                            h: 60
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "loot-chest-03.img": {
                        frame: {
                            x: 178,
                            y: 1646,
                            w: 50,
                            h: 60
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 7,
                            y: 2,
                            w: 50,
                            h: 60
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "loot-weapon-m9.img": {
                        frame: {
                            x: 232,
                            y: 1646,
                            w: 50,
                            h: 60
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 7,
                            y: 2,
                            w: 50,
                            h: 60
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "loot-pack-01.img": {
                        frame: {
                            x: 286,
                            y: 1646,
                            w: 48,
                            h: 60
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 8,
                            y: 2,
                            w: 48,
                            h: 60
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "loot-pack-02.img": {
                        frame: {
                            x: 338,
                            y: 1646,
                            w: 46,
                            h: 60
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 9,
                            y: 2,
                            w: 46,
                            h: 60
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "loot-pack-00.img": {
                        frame: {
                            x: 388,
                            y: 1646,
                            w: 46,
                            h: 60
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 9,
                            y: 2,
                            w: 46,
                            h: 60
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "loot-weapon-soshotgun.img": {
                        frame: {
                            x: 438,
                            y: 1646,
                            w: 58,
                            h: 59
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 3,
                            y: 3,
                            w: 58,
                            h: 59
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "ammo-box.img": {
                        frame: {
                            x: 868,
                            y: 1580,
                            w: 58,
                            h: 58
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 3,
                            y: 3,
                            w: 58,
                            h: 58
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "part-spark-02.img": {
                        frame: {
                            x: 930,
                            y: 1580,
                            w: 58,
                            h: 58
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 1,
                            y: 1,
                            w: 58,
                            h: 58
                        },
                        sourceSize: {
                            w: 60,
                            h: 60
                        }
                    },
                    "ammo-50AE.img": {
                        frame: {
                            x: 992,
                            y: 1580,
                            w: 58,
                            h: 58
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 3,
                            y: 3,
                            w: 58,
                            h: 58
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "ammo-556mm.img": {
                        frame: {
                            x: 1054,
                            y: 1580,
                            w: 58,
                            h: 58
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 3,
                            y: 3,
                            w: 58,
                            h: 58
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "ammo-762mm.img": {
                        frame: {
                            x: 1116,
                            y: 1580,
                            w: 58,
                            h: 58
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 3,
                            y: 3,
                            w: 58,
                            h: 58
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "ammo-12gauge.img": {
                        frame: {
                            x: 1178,
                            y: 1580,
                            w: 58,
                            h: 58
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 3,
                            y: 3,
                            w: 58,
                            h: 58
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "ammo-308sub.img": {
                        frame: {
                            x: 1240,
                            y: 1580,
                            w: 58,
                            h: 58
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 3,
                            y: 3,
                            w: 58,
                            h: 58
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "ammo-flare.img": {
                        frame: {
                            x: 1302,
                            y: 1580,
                            w: 58,
                            h: 58
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 3,
                            y: 3,
                            w: 58,
                            h: 58
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "part-spark-01.img": {
                        frame: {
                            x: 1364,
                            y: 1580,
                            w: 58,
                            h: 58
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 1,
                            y: 1,
                            w: 58,
                            h: 58
                        },
                        sourceSize: {
                            w: 60,
                            h: 60
                        }
                    },
                    "ammo-9mm.img": {
                        frame: {
                            x: 1426,
                            y: 1580,
                            w: 58,
                            h: 58
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 3,
                            y: 3,
                            w: 58,
                            h: 58
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "loot-weapon-garand.img": {
                        frame: {
                            x: 1488,
                            y: 1580,
                            w: 57,
                            h: 58
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 3,
                            y: 3,
                            w: 57,
                            h: 58
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "player-emote.img": {
                        frame: {
                            x: 1730,
                            y: 791,
                            w: 58,
                            h: 57
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 3,
                            y: 4,
                            w: 58,
                            h: 57
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "player-gui.img": {
                        frame: {
                            x: 1549,
                            y: 1580,
                            w: 58,
                            h: 57
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 3,
                            y: 4,
                            w: 58,
                            h: 57
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "loot-weapon-vector.img": {
                        frame: {
                            x: 500,
                            y: 1646,
                            w: 56,
                            h: 58
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 4,
                            y: 3,
                            w: 56,
                            h: 58
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "loot-pack-03.img": {
                        frame: {
                            x: 560,
                            y: 1646,
                            w: 54,
                            h: 58
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 5,
                            y: 3,
                            w: 54,
                            h: 58
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "loot-weapon-deagle.img": {
                        frame: {
                            x: 618,
                            y: 1646,
                            w: 53,
                            h: 58
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 6,
                            y: 3,
                            w: 53,
                            h: 58
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "chick.img": {
                        frame: {
                            x: 675,
                            y: 1646,
                            w: 52,
                            h: 58
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 6,
                            y: 3,
                            w: 52,
                            h: 58
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "tap.img": {
                        frame: {
                            x: 731,
                            y: 1646,
                            w: 50,
                            h: 58
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 7,
                            y: 3,
                            w: 50,
                            h: 58
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "loot-weapon-spas12.img": {
                        frame: {
                            x: 785,
                            y: 1646,
                            w: 50,
                            h: 58
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 7,
                            y: 3,
                            w: 50,
                            h: 58
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "loot-weapon-mp5.img": {
                        frame: {
                            x: 839,
                            y: 1646,
                            w: 50,
                            h: 58
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 7,
                            y: 3,
                            w: 50,
                            h: 58
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "loot-weapon-ot38.img": {
                        frame: {
                            x: 893,
                            y: 1646,
                            w: 46,
                            h: 58
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 9,
                            y: 3,
                            w: 46,
                            h: 58
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "map-bollard-01.img": {
                        frame: {
                            x: 1611,
                            y: 1580,
                            w: 57,
                            h: 56
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 0,
                            y: 8,
                            w: 57,
                            h: 56
                        },
                        sourceSize: {
                            w: 72,
                            h: 72
                        }
                    },
                    "loot-weapon-ak.img": {
                        frame: {
                            x: 943,
                            y: 1646,
                            w: 50,
                            h: 57
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 7,
                            y: 4,
                            w: 50,
                            h: 57
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "map-tree-04.img": {
                        frame: {
                            x: 1672,
                            y: 1580,
                            w: 56,
                            h: 56
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 56,
                            h: 56
                        },
                        sourceSize: {
                            w: 56,
                            h: 56
                        }
                    },
                    "loot-weapon-autoshotgun.img": {
                        frame: {
                            x: 1732,
                            y: 1580,
                            w: 52,
                            h: 56
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 6,
                            y: 4,
                            w: 52,
                            h: 56
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "loot-weapon-glock.img": {
                        frame: {
                            x: 997,
                            y: 1646,
                            w: 46,
                            h: 56
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 9,
                            y: 4,
                            w: 46,
                            h: 56
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "singapore.img": {
                        frame: {
                            x: 488,
                            y: 1460,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    }
                }
            }, {
                meta: {
                    image: "imgs-c8e7334f.png",
                    size: {
                        w: 512,
                        h: 512
                    },
                    scale: .5
                },
                frames: {
                    "map-plane-01.img": {
                        frame: {
                            x: 253,
                            y: 2,
                            w: 92,
                            h: 102
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 18,
                            y: 5,
                            w: 92,
                            h: 102
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "map-building-mansion-cellar-02.img": {
                        frame: {
                            x: 2,
                            y: 2,
                            w: 247,
                            h: 219
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 0,
                            y: 1,
                            w: 247,
                            h: 219
                        },
                        sourceSize: {
                            w: 248,
                            h: 220
                        }
                    },
                    "player-circle-base-02.img": {
                        frame: {
                            x: 253,
                            y: 108,
                            w: 74,
                            h: 74
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 74,
                            h: 74
                        },
                        sourceSize: {
                            w: 74,
                            h: 74
                        }
                    },
                    "loot-melee-woodaxe.img": {
                        frame: {
                            x: 253,
                            y: 186,
                            w: 74,
                            h: 27
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 74,
                            h: 27
                        },
                        sourceSize: {
                            w: 74,
                            h: 27
                        }
                    },
                    "loot-circle-inner-01.img": {
                        frame: {
                            x: 2,
                            y: 225,
                            w: 70,
                            h: 70
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 2,
                            y: 2,
                            w: 70,
                            h: 70
                        },
                        sourceSize: {
                            w: 74,
                            h: 74
                        }
                    },
                    "player-base-03.img": {
                        frame: {
                            x: 76,
                            y: 225,
                            w: 68,
                            h: 68
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 1,
                            y: 1,
                            w: 68,
                            h: 68
                        },
                        sourceSize: {
                            w: 70,
                            h: 70
                        }
                    },
                    "player-base-02.img": {
                        frame: {
                            x: 148,
                            y: 225,
                            w: 68,
                            h: 68
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 1,
                            y: 1,
                            w: 68,
                            h: 68
                        },
                        sourceSize: {
                            w: 70,
                            h: 70
                        }
                    },
                    "loot-shirt-02.img": {
                        frame: {
                            x: 220,
                            y: 225,
                            w: 60,
                            h: 58
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 2,
                            y: 3,
                            w: 60,
                            h: 58
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "loot-melee-pan-black.img": {
                        frame: {
                            x: 284,
                            y: 225,
                            w: 60,
                            h: 44
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 2,
                            y: 10,
                            w: 60,
                            h: 44
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "loot-melee-bayonet-woodland.img": {
                        frame: {
                            x: 349,
                            y: 2,
                            w: 20,
                            h: 60
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 22,
                            y: 2,
                            w: 20,
                            h: 60
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "player-bullet-trail-02.img": {
                        frame: {
                            x: 373,
                            y: 134,
                            w: 18,
                            h: 18
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 18,
                            h: 18
                        },
                        sourceSize: {
                            w: 18,
                            h: 18
                        }
                    },
                    "loot-melee-huntsman-burnished.img": {
                        frame: {
                            x: 349,
                            y: 130,
                            w: 12,
                            h: 58
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 26,
                            y: 3,
                            w: 12,
                            h: 58
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "loot-melee-huntsman-rugged.img": {
                        frame: {
                            x: 349,
                            y: 192,
                            w: 12,
                            h: 58
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 26,
                            y: 3,
                            w: 12,
                            h: 58
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "loot-melee-pan-black-side.img": {
                        frame: {
                            x: 331,
                            y: 108,
                            w: 11,
                            h: 58
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 27,
                            y: 3,
                            w: 11,
                            h: 58
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "loot-melee-karambit-prismatic.img": {
                        frame: {
                            x: 2,
                            y: 299,
                            w: 52,
                            h: 22
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 6,
                            y: 21,
                            w: 52,
                            h: 22
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "loot-melee-karambit-rugged.img": {
                        frame: {
                            x: 58,
                            y: 299,
                            w: 52,
                            h: 22
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 6,
                            y: 21,
                            w: 52,
                            h: 22
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "part-flare-01.img": {
                        frame: {
                            x: 373,
                            y: 2,
                            w: 46,
                            h: 46
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 2,
                            y: 2,
                            w: 46,
                            h: 46
                        },
                        sourceSize: {
                            w: 50,
                            h: 50
                        }
                    },
                    "loot-melee-hook-silver.img": {
                        frame: {
                            x: 373,
                            y: 52,
                            w: 22,
                            h: 40
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 21,
                            y: 12,
                            w: 22,
                            h: 40
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "part-frag-burst-01.img": {
                        frame: {
                            x: 373,
                            y: 96,
                            w: 34,
                            h: 34
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 1,
                            y: 1,
                            w: 34,
                            h: 34
                        },
                        sourceSize: {
                            w: 36,
                            h: 36
                        }
                    },
                    "player-hands-02.img": {
                        frame: {
                            x: 399,
                            y: 52,
                            w: 19,
                            h: 19
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 19,
                            h: 19
                        },
                        sourceSize: {
                            w: 19,
                            h: 19
                        }
                    },
                    "loot-melee-bayonet-rugged.img": {
                        frame: {
                            x: 349,
                            y: 66,
                            w: 20,
                            h: 60
                        },
                        rotated: !1,
                        trimmed: !0,
                        spriteSourceSize: {
                            x: 22,
                            y: 2,
                            w: 20,
                            h: 60
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    }
                }
            }]
        }
    },
    "604cff9c": function(e, t, a) {
        "use strict";
        function i(e) {
            this.active = !1
        }
        function r() {
            this.explosions = []
        }
        var o = (a("80ac57a6"),
        a("989ad62a"))
          , n = (a("34e32c48"),
        a("10899aea"))
          , s = a("1901e2d9")
          , l = a("c2a798c8")
          , m = (a("ce29f17f"),
        a("af8ba00f"),
        {
            frag: {
                burst: {
                    particle: "explosionBurst",
                    scale: 1,
                    sound: {
                        grass: "explosion_01",
                        water: "explosion_02"
                    },
                    pan: !1,
                    time: 0
                },
                shakeStr: .2,
                shakeDur: .35,
                lifetime: 2
            },
            smoke: {
                burst: {
                    particle: "explosionBurst",
                    scale: 0,
                    sound: {
                        grass: "explosion_smoke_01",
                        water: "explosion_smoke_01"
                    },
                    pan: !0,
                    time: 0
                },
                shakeStr: 0,
                shakeDur: 0,
                lifetime: 6
            },
            barrel: {
                burst: {
                    particle: "explosionBurst",
                    scale: 1,
                    sound: {
                        grass: "explosion_01",
                        water: "explosion_02"
                    },
                    pan: !1,
                    time: 0
                },
                shakeStr: .2,
                shakeDur: .35,
                lifetime: 2
            }
        });
        i.prototype = {
            a: function(e, t, a) {
                var i = o.explosions[e].explosionType
                  , r = m[i];
                this.active = !0,
                this.done = !1,
                this.type = e,
                this.pos = l.copy(t),
                this.layer = a,
                this.ticker = 0,
                this.lifetime = r.lifetime,
                this.soundInstance = null,
                this.soundUpdateThrottle = 0
            },
            o: function() {
                this.active = !1
            },
            l: function(e, t, a, i, r) {
                var c = o.explosions[this.type].explosionType
                  , d = m[c];
                if (0 == this.ticker) {
                    t.addParticle(d.burst.particle, this.layer, this.pos, l.create(0, 0), d.burst.scale, 0, null);
                    var p = i.getGroundSurface(this.pos, this.layer)
                      , u = "water" == p ? d.burst.sound.water : d.burst.sound.grass;
                    if (this.soundInstance = a.playSound(u, {
                        channel: "sfx",
                        soundPos: this.pos,
                        layer: this.layer,
                        muffled: !0
                    }),
                    "water" == p)
                        for (var h = 0; h < 10; h++) {
                            var g = l.add(this.pos, l.mul(l.randomUnit(), s.random(0, 5)));
                            i.addRipple(g, this.layer, .06 * h)
                        }
                }
                this.soundInstance && this.soundUpdateThrottle < 0 ? (this.soundUpdateThrottle = .1,
                this.soundInstance = a.updateSound(this.soundInstance, "sfx", this.pos, {
                    layer: this.layer,
                    muffled: !0
                })) : this.soundUpdateThrottle -= e,
                this.ticker += e;
                var y = Math.min(this.ticker / d.shakeDur, 1)
                  , f = n.lerp(y, d.shakeStr, 0);
                r.addShake(this.pos, f),
                this.ticker >= this.lifetime && (this.active = !1)
            }
        },
        r.prototype = {
            addExplosion: function(e, t, a) {
                for (var r = null, o = 0; o < this.explosions.length; o++)
                    if (!this.explosions[o].active) {
                        r = this.explosions[o];
                        break
                    }
                r || (r = new i(this),
                this.explosions.push(r)),
                r.a(e, t, a)
            },
            l: function(e, t, a, i, r) {
                for (var o = 0; o < this.explosions.length; o++) {
                    var n = this.explosions[o];
                    n.active && (n.l(e, i, r, t, a),
                    n.active || n.o())
                }
            }
        },
        e.exports = {
            ne: r
        }
    },
    "61fc98e9": function(e, t, a) {
        "use strict";
        function i(e, t) {
            if (!(e instanceof t))
                throw new TypeError("Cannot call a class as a function")
        }
        function r(e, t) {
            var a = {
                join_full: t.translate("index-team-is-full"),
                join_not_found: t.translate("index-failed-joining-team"),
                create_failed: t.translate("index-failed-creating-team"),
                join_failed: t.translate("index-failed-joining-team"),
                join_game_failed: t.translate("index-failed-joining-game"),
                lost_conn: t.translate("index-lost-connection"),
                find_game_error: t.translate("index-failed-finding-game"),
                find_game_full: t.translate("index-failed-finding-game"),
                find_game_invalid_protocol: t.translate("index-invalid-protocol"),
                kicked: t.translate("index-team-kicked")
            };
            return a[e] || a.lost_conn
        }
        var o = function() {
            function e(e, t) {
                for (var a = 0; a < t.length; a++) {
                    var i = t[a];
                    i.enumerable = i.enumerable || !1,
                    i.configurable = !0,
                    "value"in i && (i.writable = !0),
                    Object.defineProperty(e, i.key, i)
                }
            }
            return function(t, a, i) {
                return a && e(t.prototype, a),
                i && e(t, i),
                t
            }
        }()
          , n = a("8ee62bea")
          , s = a("989ad62a")
          , l = (a("10899aea"),
        a("48eca919"))
          , m = a("26be8056")
          , c = (a("ce29f17f"),
        function() {
            function e(t, a, r, o, s) {
                var l = this;
                i(this, e),
                this.audioManager = s,
                this.playBtn = n("#btn-start-team"),
                this.serverWarning = n("#server-warning"),
                this.teamOptions = n("#btn-team-queue-duo, #btn-team-fill-auto, #btn-team-fill-none"),
                this.serverSelect = n("#team-server-select"),
                this.queueDuo = n("#btn-team-queue-duo"),
                this.queueSquad = n("#btn-team-queue-squad"),
                this.fillAuto = n("#btn-team-fill-auto"),
                this.fillNone = n("#btn-team-fill-none"),
                this.onLeave = null,
                this.config = t,
                this.pingTest = a,
                this.localization = r,
                this.joinGameFn = o,
                this.active = !1,
                this.joined = !1,
                this.create = !1,
                this.joiningGame = !1,
                this.ws = null,
                this.keepAliveTimeout = 0,
                this.siteInfo = {},
                this.playerData = {},
                this.roomData = {},
                this.players = [],
                this.prevPlayerCount = 0,
                this.localPlayerId = 0,
                this.isLeader = !0,
                this.serverSelect.change(function() {
                    var e = l.serverSelect.find(":selected").val();
                    l.pingTest.start(e),
                    l.setRoomProperty("region", e)
                }),
                this.queueDuo.click(function() {
                    l.players.length <= 2 && l.setRoomProperty("teamMode", 2)
                }),
                this.queueSquad.click(function() {
                    l.setRoomProperty("teamMode", 4)
                }),
                this.fillAuto.click(function() {
                    l.setRoomProperty("autoFill", !0)
                }),
                this.fillNone.click(function() {
                    l.setRoomProperty("autoFill", !1)
                }),
                this.playBtn.on("click", function() {
                    l.tryStartGame()
                }),
                n("#team-copy-url, #team-desc-text").click(function(e) {
                    var t = n("<div/>", {
                        class: "team-copy-toast",
                        html: "Copied!"
                    });
                    n("#start-menu-wrapper").append(t),
                    t.css({
                        left: e.pageX - parseInt(t.css("width")) / 2,
                        top: n("#team-copy-url").offset().top
                    }),
                    t.animate({
                        top: "-=20",
                        opacity: 1
                    }, {
                        queue: !1,
                        duration: 300,
                        complete: function() {
                            n(this).fadeOut(250, function() {
                                n(this).remove()
                            })
                        }
                    });
                    var a = n("#team-url").html()
                      , i = n("<input>");
                    if (n("body").append(i),
                    i.val(a),
                    m.detectiOS()) {
                        var r = i.get(0)
                          , o = r.contentEditable
                          , s = r.readOnly;
                        r.contentEditable = !0,
                        r.readOnly = !0;
                        var l = document.createRange();
                        l.selectNodeContents(r);
                        var c = window.getSelection();
                        c.removeAllRanges(),
                        c.addRange(l),
                        r.setSelectionRange(0, 999999),
                        r.contentEditable = o,
                        r.readOnly = s
                    } else
                        i.select();
                    document.execCommand("copy"),
                    i.remove()
                })
            }
            return o(e, [{
                key: "getPlayerById",
                value: function(e) {
                    return this.players.find(function(t) {
                        return t.playerId == e
                    })
                }
            }, {
                key: "update",
                value: function(e) {
                    this.joined && (this.keepAliveTimeout -= e,
                    this.keepAliveTimeout < 0 && (this.keepAliveTimeout = 30,
                    this.sendMessage("keepAlive", {})))
                }
            }, {
                key: "connect",
                value: function(e, t) {
                    var a = this;
                    if (!this.active || t !== this.roomData.roomUrl) {
                        var i = "https:" == window.location.protocol
                          , r = window.location.host;
                        if (!e) {
                            var o = l.decodeUrl(t);
                            r = "app-" + l.appIdToString(o.appId) + "." + /([^\.]+\.[^\.]+)$/.exec(window.location.hostname)[0]
                        }
                        var n = i ? "wss:" : "ws:"
                          , s = n + "//" + r + "/team";
                        this.active = !0,
                        this.joined = !1,
                        this.create = e,
                        this.joiningGame = !1,
                        this.playerData = {
                            name: this.config.get("playerName")
                        },
                        this.roomData = {
                            roomUrl: t,
                            region: this.config.get("region"),
                            teamMode: this.config.get("teamMode"),
                            autoFill: this.config.get("teamAutoFill"),
                            findingGame: !1,
                            lastError: ""
                        },
                        this.refreshUi();
                        try {
                            this.ws = new WebSocket(s),
                            this.ws.onerror = function(e) {
                                a.ws && a.ws.close()
                            }
                            ,
                            this.ws.onclose = function() {
                                var t = "";
                                a.joiningGame || (t = a.joined ? "lost_conn" : e ? "create_failed" : "join_failed"),
                                a.leave(t)
                            }
                            ,
                            this.ws.onopen = function() {
                                e ? a.sendMessage("create", {
                                    roomData: a.roomData,
                                    playerData: a.playerData
                                }) : a.sendMessage("join", {
                                    roomUrl: a.roomData.roomUrl,
                                    playerData: a.playerData
                                })
                            }
                            ,
                            this.ws.onmessage = function(e) {
                                if (a.active) {
                                    var t = JSON.parse(e.data);
                                    a.onMessage(t.type, t.data)
                                }
                            }
                        } catch (t) {
                            this.leave(e ? "create_failed" : "join_failed")
                        }
                    }
                }
            }, {
                key: "leave",
                value: function(e) {
                    var t = (this.serverWarning,
                    this.config)
                      , a = this.roomData
                      , i = this.playerData;
                    if (this.active) {
                        this.ws && this.ws.close(),
                        this.ws = null,
                        this.active = !1,
                        this.joined = !1,
                        this.joiningGame = !1,
                        this.refreshUi(),
                        t.set("playerName", i.name),
                        t.set("region", a.region),
                        t.set("teamMode", a.teamMode),
                        t.set("teamAutoFill", a.autoFill);
                        var o = "";
                        e && "" != e && (o = r(e, this.localization)),
                        this.onLeave(o)
                    }
                }
            }, {
                key: "onGameComplete",
                value: function() {
                    this.active && (this.joiningGame = !1,
                    this.sendMessage("gameComplete"))
                }
            }, {
                key: "onMessage",
                value: function(e, t) {
                    var a = this;
                    switch (this.config,
                    this.playerData,
                    this.roomData,
                    this.players,
                    e) {
                    case "state":
                        this.joined = !0;
                        var i = this.roomData;
                        this.roomData = t.room,
                        this.players = t.players,
                        this.localPlayerId = t.localPlayerId,
                        this.isLeader = this.getPlayerById(this.localPlayerId).isLeader,
                        this.isLeader && (this.roomData.region = i.region,
                        this.roomData.autoFill = i.autoFill,
                        this.roomData.teamMode = i.teamMode),
                        this.refreshUi();
                        break;
                    case "joinGame":
                        this.joiningGame = !0,
                        this.joinGameFn(t, function() {
                            a.leave("join_game_failed")
                        });
                        break;
                    case "keepAlive":
                        break;
                    case "kicked":
                        this.leave("kicked");
                        break;
                    case "error":
                        this.leave(t.type)
                    }
                }
            }, {
                key: "sendMessage",
                value: function(e, t) {
                    if (this.ws)
                        if (this.ws.readyState === this.ws.OPEN) {
                            var a = JSON.stringify({
                                type: e,
                                data: t
                            });
                            this.ws.send(a)
                        } else
                            this.ws.close()
                }
            }, {
                key: "setRoomProperty",
                value: function(e, t) {
                    this.isLeader && this.roomData[e] != t && (this.roomData[e] = t,
                    this.sendMessage("setRoomProps", this.roomData))
                }
            }, {
                key: "tryStartGame",
                value: function() {
                    if (this.isLeader && !this.roomData.findingGame) {
                        var e = s.protocolVersion
                          , t = this.roomData.region
                          , a = m.getParameterByName("region");
                        void 0 !== a && a.length > 0 && (t = a);
                        var i = this.pingTest.getZones(t)
                          , r = m.getParameterByName("zone");
                        void 0 !== r && r.length > 0 && (i = [r]);
                        var o = {
                            version: e,
                            region: t,
                            zones: i
                        };
                        this.sendMessage("playGame", o),
                        this.roomData.findingGame = !0,
                        this.refreshUi()
                    }
                }
            }, {
                key: "refreshUi",
                value: function() {
                    var e = this
                      , t = this.localization
                      , a = this.playBtn
                      , i = this.serverWarning
                      , o = this.teamOptions
                      , s = this.serverSelect
                      , l = this.queueDuo
                      , c = this.queueSquad
                      , d = this.fillAuto
                      , p = this.fillNone
                      , u = this.active
                      , h = this.joined
                      , g = this.create
                      , y = this.joiningGame
                      , f = this.siteInfo
                      , x = (this.playerData,
                    this.roomData)
                      , w = this.players
                      , b = this.localPlayerId
                      , _ = this.isLeader
                      , v = this.audioManager;
                    n("#team-menu").css("display", u ? "block" : "none"),
                    n("#start-menu").css("display", u ? "none" : "block"),
                    n("#news-block").css("display", u ? "none" : "block"),
                    n("#social-share-block").css("display", u ? "none" : "block");
                    var S = "" != x.lastError
                      , k = r(x.lastError, this.localization);
                    if (i.css("opacity", S ? 1 : 0),
                    i.html(k),
                    u && (n("#team-menu-joining-text").css("display", g ? "none" : "block"),
                    n("#team-menu-creating-text").css("display", g ? "block" : "none"),
                    n("#team-menu-connecting").css("display", h ? "none" : "block"),
                    n("#team-menu-contents").css("display", h ? "block" : "none")),
                    h) {
                        for (var z = f.pops || {}, M = Object.keys(z), T = 0; T < M.length; T++) {
                            var P = M[T]
                              , C = z[P]
                              , A = n("#team-server-opts").children('option[value="' + P + '"]');
                            A.html(A.attr("data-label") + " [" + C + "]")
                        }
                        s.find("option").each(function() {
                            this.selected = this.value == x.region
                        }),
                        n(".btn-team-queue").removeClass("btn-hollow-selected"),
                        (2 == x.teamMode ? l : c).addClass("btn-hollow-selected"),
                        n(".btn-team-fill").removeClass("btn-hollow-selected"),
                        (x.autoFill ? d : p).addClass("btn-hollow-selected"),
                        x.roomUrl && (n("#team-url").html(window.location.origin + "/" + x.roomUrl),
                        n("#team-code").html(x.roomUrl.substring(1)),
                        window.history && window.history.replaceState("", "", x.roomUrl)),
                        a.html(x.findingGame || y ? '<div class="ui-spinner"></div>' : a.attr("data-label")),
                        _ ? (o.addClass("btn-darken"),
                        o.removeClass("btn-disabled"),
                        o.removeClass("btn-opaque")) : (o.addClass("btn-disabled"),
                        n(".team-menu-options-buttons .btn-hollow-selected").removeClass("btn-opaque"),
                        n('.team-menu-options-buttons a:not(".btn-hollow-selected")').addClass("btn-opaque"),
                        o.removeClass("btn-darken")),
                        o.prop("disabled", !_),
                        s.prop("disabled", !_),
                        n("#btn-start-team").css("display", _ ? "block" : "none");
                        for (var I = !1, D = 0; D < w.length; D++)
                            w[D].isLeader && (I = w[D].inGame);
                        var O = n("#msg-wait-reason");
                        if (O.css("display", _ ? "none" : "block"),
                        x.findingGame || y ? O.html('<div class="ui-spinner" style="margin-right:16px"></div>' + t.translate("index-joining-game") + "<span> ...</span>") : I ? O.html(t.translate("index-game-in-progress") + "<span> ...</span>") : O.html(t.translate("index-waiting-for-leader") + "<span> ...</span>"),
                        _) {
                            var E = w.length <= 2;
                            E || (l.addClass("btn-disabled btn-opaque"),
                            l.removeClass("btn-darken btn-hollow-selected")),
                            l.prop("disabled", !E)
                        }
                        var L = n("#team-menu-member-list");
                        L.empty();
                        for (var B = 0; B < x.teamMode; B++) {
                            var F = {
                                name: "",
                                playerId: 0,
                                isLeader: !1,
                                inGame: !1
                            };
                            if (B < w.length) {
                                var R = w[B];
                                F = {
                                    name: R.name,
                                    playerId: R.playerId,
                                    isLeader: R.isLeader,
                                    inGame: R.inGame
                                }
                            }
                            var j = n("<div/>", {
                                class: "team-menu-member"
                            })
                              , q = "";
                            F.isLeader ? q = " icon-leader" : _ && 0 != F.playerId && (q = " icon-kick");
                            var N = "name-text";
                            F.playerId == b && (N += " name-self"),
                            F.inGame && (N += " name-in-game"),
                            j.append(n("<div/>", {
                                class: "icon" + q,
                                "data-playerid": F.playerId
                            })),
                            j.append(n("<div/>", {
                                class: "name menu-option"
                            }).append(n("<div/>", {
                                class: N,
                                html: m.htmlEscape(F.name)
                            }))),
                            j.append(n("<div/>", {
                                class: "icon " + (F.inGame ? "icon-in-game" : "")
                            })),
                            L.append(j)
                        }
                        n(".icon-kick", L).click(function(t) {
                            var a = n(t.currentTarget).attr("data-playerid");
                            e.sendMessage("kick", {
                                playerId: a
                            })
                        });
                        var G = w.find(function(e) {
                            return e.playerId == b
                        })
                          , U = G && !G.inGame;
                        !document.hasFocus() && this.prevPlayerCount < w.length && w.length > 1 && U && v.playSound("notification_join_01", {
                            channel: "ui"
                        }),
                        this.prevPlayerCount = w.length
                    }
                }
            }]),
            e
        }());
        e.exports = c
    },
    "6b42806d": function(e, t, a) {
        "use strict";
        var i = (a("0e566746"),
        a("34e32c48"))
          , r = (a("10899aea"),
        a("c2a798c8"))
          , o = {
            Type: {
                Circle: 0,
                Aabb: 1
            },
            createCircle: function(e, t, a) {
                return {
                    type: o.Type.Circle,
                    pos: r.copy(e),
                    rad: t,
                    height: void 0 !== a ? a : 0
                }
            },
            createAabb: function(e, t, a) {
                return {
                    type: o.Type.Aabb,
                    min: r.copy(e),
                    max: r.copy(t),
                    height: void 0 !== a ? a : 0
                }
            },
            createAabbExtents: function(e, t, a) {
                var i = r.sub(e, t)
                  , n = r.add(e, t);
                return o.createAabb(i, n, a)
            },
            createBounding: function(e) {
                if (1 == e.length)
                    return o.copy(e[0]);
                for (var t = [], a = 0, r = 0; r < e.length; r++) {
                    var n = e[r];
                    t.push(o.toAabb(n)),
                    a = Math.max(a, n.height)
                }
                var s = i.boundingAabb(t);
                return o.createAabb(s.min, s.max, a)
            },
            toAabb: function(e) {
                if (e.type == o.Type.Aabb)
                    return o.createAabb(e.min, e.max, e.height);
                var t = i.circleToAabb(e.pos, e.rad);
                return o.createAabb(t.min, t.max, e.height)
            },
            copy: function(e) {
                return e.type == o.Type.Circle ? o.createCircle(e.pos, e.rad, e.height) : o.createAabb(e.min, e.max, e.height)
            },
            transform: function(e, t, a, i) {
                if (e.type == o.Type.Aabb) {
                    for (var n = r.mul(r.sub(e.max, e.min), .5), s = r.add(e.min, n), l = [r.create(s.x - n.x, s.y - n.y), r.create(s.x - n.x, s.y + n.y), r.create(s.x + n.x, s.y - n.y), r.create(s.x + n.x, s.y + n.y)], m = r.create(Number.MAX_VALUE, Number.MAX_VALUE), c = r.create(-Number.MAX_VALUE, -Number.MAX_VALUE), d = 0; d < l.length; d++) {
                        var p = r.add(r.rotate(r.mul(l[d], i), a), t);
                        m.x = Math.min(m.x, p.x),
                        m.y = Math.min(m.y, p.y),
                        c.x = Math.max(c.x, p.x),
                        c.y = Math.max(c.y, p.y)
                    }
                    return o.createAabb(m, c, e.height)
                }
                return o.createCircle(r.add(r.rotate(r.mul(e.pos, i), a), t), e.rad * i, e.height)
            },
            intersectCircle: function(e, t, a) {
                return e.type == o.Type.Aabb ? i.intersectAabbCircle(e.min, e.max, t, a) : i.intersectCircleCircle(e.pos, e.rad, t, a)
            },
            intersectAabb: function(e, t, a) {
                return e.type == o.Type.Aabb ? i.intersectAabbAabb(e.min, e.max, t, a) : i.intersectAabbCircle(t, a, e.pos, e.rad)
            },
            intersectSegment: function(e, t, a) {
                return e.type == o.Type.Aabb ? i.intersectSegmentAabb(t, a, e.min, e.max) : i.intersectSegmentCircle(t, a, e.pos, e.rad)
            },
            intersect: function(e, t) {
                return t.type == o.Type.Aabb ? o.intersectAabb(e, t.min, t.max) : o.intersectCircle(e, t.pos, t.rad)
            }
        };
        e.exports = o
    },
    "6b9375bf": function(e, t, a) {
        "use strict";
        var i = {
            "@metadata": {
                "last-updated": "2018-05-13",
                locale: "vn"
            },
            "word-order": "svo",
            "index-slogan": "2d Battle Royale",
            "index-region": "Vùng",
            "index-north-america": "Bắc Mỹ",
            "index-europe": "Châu Âu",
            "index-asia": "Châu Á",
            "index-players": "người chơi",
            "index-play-solo": "Chơi một người",
            "index-play-duo": "Chơi nhóm hai người",
            "index-play-squad": "Chơi nhóm bốn người",
            "index-join-team": "Vào nhóm",
            "index-create-team": "Tạo nhóm",
            "index-leave-team": "Rời nhóm",
            "index-joining-team": "Đang vào nhóm",
            "index-creating-team": "Đang tạo nhóm",
            "index-invite-link": "Đường dẫn mời chơi",
            "index-invite-code": "Mã số mời chơi",
            "index-solo": "Đơn",
            "index-duo": "Nhóm hai",
            "index-squad": "Nhóm bốn",
            "index-auto-fill": "Tự động điền",
            "index-no-fill": "Không thêm",
            "index-waiting-for-leader": "Chờ trưởng nhóm bắt đầu lượt chơi",
            "index-joining-game": "Tham gia trò chơi",
            "index-game-in-progress": "Trò chơi đang diễn ra",
            "index-play": "Chơi",
            "index-featured-youtuber": "YouTuber khách mời",
            "index-streaming-live": "Phát trực tiếp!",
            "index-settings": "Cài đặt",
            "index-high-resolution": "Độ phân giải cao (đánh dấu để tăng chất lượng hình ảnh)",
            "index-screen-shake": "Rung màn hình",
            "index-master-volume": "Âm lượng tổng",
            "index-sfx-volume": "Âm lượng SFX",
            "index-music-volume": "Music Volume",
            "index-mobile-announce": "Now available on mobile!",
            "index-mobile-tooltip": "Visit <span>surviv.io</span> on your mobile device to play on the go!",
            "index-team-is-full": "Nhóm đã đủ người!",
            "index-failed-joining-team": "Không vào được nhóm.",
            "index-failed-creating-team": "Không tạo được nhóm.",
            "index-failed-finding-game": "Không tìm được lượt chơi.",
            "index-failed-joining-game": "Không vào được lượt chơi.",
            "index-lost-connection": "Mất kết nối với nhóm.",
            "index-host-closed": "Chủ lượt chơi đã đóng kết nối.",
            "index-invalid-protocol": "Phiên bản cũ.",
            "index-view-more": "Xem thêm",
            "index-back-to-main": "Quay lại Danh mục chính",
            "index-most-kills": "Tiêu diệt nhiều nhất",
            "index-total-kills": "Tổng số bị tiêu diệt",
            "index-total-wins": "Tổng số lần thắng",
            "index-top-5-percent": "Tốp 5 phần trăm",
            "index-kill-death-ratio": 'Tỷ lệ "Tiêu diệt-Bị tiêu diệt"',
            "index-mode": "Mode",
            "index-for": "Của",
            "index-today": "Ngày hôm nay",
            "index-this-week": "Tuần này",
            "index-all-time": "Toàn bộ thời gian chơi",
            "index-top-100": "Tốp 100",
            "index-rank": "Thứ hạng",
            "index-player": "Người chơi",
            "index-total-games": "Tất cả các lượt chơi",
            "index-controls": "Kiểm soát",
            "index-movement": "Di chuyển",
            "index-movement-ctrl": "W, A, S, D",
            "index-aim": "Ngắm",
            "index-aim-ctrl": "Chuột",
            "index-punch": "Đấm",
            "index-shoot": "Bắn",
            "index-shoot-ctrl": "Bấm chuột trái",
            "index-change-weapons": "Đổi vũ khí",
            "index-change-weapons-ctrl": "1 đến 4 hoặc nút cuộn chuột",
            "index-stow-weapons": "Stow Weapons (Melee Mode)",
            "index-stow-weapons-ctrl": "3 hoặc E",
            "index-swap-weapons": "Đổi về vũ khí trước đó",
            "index-swap-weapons-ctrl": "Q",
            "index-reload": "Nạp đạn",
            "index-reload-ctrl": "R",
            "index-scope-zoom": "Phóng to",
            "index-scope-zoom-ctrl": "Bấm chuột trái để phóng to",
            "index-pickup": "Nhặt lên",
            "index-loot": "Vật phẩm",
            "index-revive": "Hồi phục",
            "index-pickup-ctrl": "F",
            "index-use-medical": "Sử dụng vật phẩm cứu thương",
            "index-use-medical-ctrl": "Bấm chuột trái lệ vật phẩm hoặc ấn 7-0",
            "index-drop-item": "Bỏ vật phẩm",
            "index-drop-item-ctrl": "Phải chuột phải vào vật phẩm",
            "index-cancel-action": "Hủy hành động",
            "index-cancel-action-ctrl": "X",
            "index-view-map": "Xem bản đồ",
            "index-view-map-ctrl": "M hoặc G",
            "index-toggle-minimap": "Bật bản đồ mini",
            "index-toggle-minimap-ctrl": "V",
            "index-use-ping": "Sử dụng Cửa sổ Trò chuyện của nhóm",
            "index-use-ping-ctrl": "Giữ C, rồi giữ chuột phải và rê chuột, rồi thả chuột phải",
            "index-use-emote": "Dùng Cửa sổ Biểu cảm của nhóm",
            "index-use-emote-ctrl": "Giữ phải chuột rồi rê chuột, rồi thả phải chuột",
            "index-how-to-play": "Cách chơi",
            "index-tips-1-desc": "Mục tiêu của trò surviv.io là thành người cuối cùng còn sống sót. Bạn chỉ có một mạng cho mỗi lượt chơi - không thể tái sinh lại!",
            "index-tips-2": "2D PUBG",
            "index-tips-2-desc": "Nếu các bạn đã chơi những trò chơi sinh tồn kiểu PUBG, Fortnite hay H1Z1, thì bạn đã nắm được một nửa trò chơi rồi! Hãy coi trò surviv.io như là trò PUBG 2D.",
            "index-tips-3": "Kiếm vật phẩm và tiêu diệt",
            "index-tips-3-desc": "Bạn sẽ bắt đầu trò chơi mà không có vật phẩm gì ngoài một cái balo. Chạy quanh bản đồ để tìm vật phẩm như: vũ khí, đạn, ống ngắm và và vật phẩm cứu thương. Tiêu diệt những người chơi khác và bạn có thể lấy vật phẩm của họ!",
            "index-tips-4": "Màu đỏ = Không ổn!",
            "index-tips-4-desc": "Người không chỉ là thứ duy nhất có thể gây sát thương lên bạn. Vùng màu đỏ nguy hiểm sẽ di chuyển và thu nhỏ dần lại theo bản đồ và gây sát thương lớn nếu bạn nằm trong vùng màu đỏ. Hãy để ý tới bản đồ và giữ khoảng cách an toàn.",
            "index-movement-ctrl-touch": "Núm điều khiển bên trái",
            "index-aim-ctrl-touch": "Núm điều khiển bên phải",
            "index-shoot-ctrl-touch": "Kéo nút điều khiển bên phải ra ngoài mép thanh điều khiển",
            "index-change-weapons-ctrl-touch": "Chạm vào ô vũ khí",
            "index-reload-ctrl-touch": "Chạm vào bộ đếm đạn được trang bị",
            "index-scope-zoom-ctrl-touch": "Chạm vào mục thu phóng",
            "index-pickup-ctrl-touch": "Chạm vào nút tương tác hoặc tên vật phẩm",
            "index-use-medical-ctrl-touch": "Chạm vào mục y tế",
            "index-drop-item-ctrl-touch": "Chạm và giữ đồ vật",
            "index-cancel-action-ctrl-touch": "Chạm vào nút tương tác",
            "index-view-map-ctrl-touch": "Chạm vào bản đồ mini",
            "index-use-ping-ctrl-touch": "Hiển thị bản đồ và chạm vào bất kỳ vị trí nào trên bản đồ",
            "index-use-emote-ctrl-touch": "Chạm vào biểu tượng sống sót",
            "game-alive": "Còn sống",
            "game-reloading": "Nạp đạn",
            "game-use": "Use",
            "game-using": "Sử dụng",
            "game-reviving": "Hồi phục",
            "game-revive-teammate": "Hồi phục cho đồng đội",
            "game-equip": "Trang bị",
            "game-cancel": "Hủy",
            "game-open-door": "Mở cửa",
            "game-close-door": "Đóng cửa",
            "game-You": "Bạn",
            "game-you": "bạn",
            "game-themselves": "chính họ",
            "game-yourself": "chính bạn",
            "game-you-died": "đã bị tiêu diệt",
            "game-player-died": "đã bị tiêu diệt",
            "game-with": "bởi",
            "game-knocked-out": "hạ gục",
            "game-killed": "đã bị tiêu diệt",
            "game-finally-killed": "cuối cùng cũng tiêu diệt được",
            "game-finally-bled-out": "cuối cùng đã chảy máu",
            "game-died-outside": "đã bị tiêu diệt ngoài vùng an toàn",
            "game-the-red-zone": "Vùng màu đỏ",
            "game-waiting-for-players": "Đợi người chơi khác",
            "game-spectating": "Quan sát",
            "game-red-zone-advances": "Vùng màu đỏ thu hẹp dần",
            "game-red-zone-advancing": "Vùng màu đỏ đang thu hẹp dần, hãy chạy về vùng an toàn!",
            "game-seconds": "giây",
            "game-minutes": "phút",
            "game-minute": "phút",
            "game-m": "m",
            "game-s": "s",
            "game-not-enough-space": "Không đủ chỗ!",
            "game-item-already-owned": "Đã có vật phẩm này!",
            "game-item-already-equipped": "Đã trang bị vật phẩm!",
            "game-better-item-equipped": "Đã trang bị vật phẩm tốt hơn!",
            "game-play-new-game": "Chơi lượt mới",
            "game-spectate": "Xem người khác chơi",
            "game-full-screen": "Toàn màn hình",
            "game-sound": "Âm thanh",
            "game-quit-game": "Thoát khỏi lượt chơi",
            "game-return-to-game": "Trở lại lượt chơi",
            "game-hide-match-stats": "Ẩn chỉ số trận đấu",
            "game-view-match-stats": "Xem chỉ số trận đấu",
            "game-previous-teammate": "Đồng đội trước đó",
            "game-next-teammate": "Đồng đội kế tiếp",
            "game-spectate-previous": "Người chơi trước",
            "game-spectate-next": "The next player",
            "game-leave-game": "Thoát lượt chơi",
            "game-your-results": "Kết quả của bạn",
            "game-chicken": "Chiến thắng chiến thắng Cơm gà xả láng!",
            "game-won-the-game": "đã thắng lượt chơi.",
            "game-team-eliminated": "Đội của bạn đã bị tiêu diệt.",
            "game-solo-rank": "Xếp hạng Solo",
            "game-duo-rank": "Xếp hạng Duo",
            "game-squad-rank": "Xếp hạng đội hình",
            "game-rank": "Thứ hạng",
            "game-team-rank": "Thứ hạng của đội",
            "game-team-kills": "Số lượt tiêu diệt được của đội",
            "game-kill": "Tiêu diệt",
            "game-kills": "Tiêu diệt",
            "game-damage-dealt": "Sát thương gây ra",
            "game-damage-taken": "Sát thương nhận",
            "game-survived": "Đã sống sót",
            "game-backpack00": "Túi đồ",
            "game-backpack01": "Balo nhỏ",
            "game-backpack02": "Balo vừa",
            "game-backpack03": "Balo quân sự",
            "game-bandage": "Túi cứu thương",
            "game-bandage-tooltip": "Bấm chuột trái để hồi 15 máu.",
            "game-healing-tooltip": "Không thể hồi quá 75 máu.",
            "game-healthkit": "Bộ kit cứu thương",
            "game-healthkit-tooltip": "Bấm chuột trái để hồi 100 máu.",
            "game-soda": "Soda",
            "game-soda-tooltip": "Bấm chuột trái để tăng adrenalin lên 25 điểm.",
            "game-adrenaline-tooltip": "Adrenalin hồi phục máu theo thời gian.",
            "game-painkiller": "Thuốc",
            "game-painkiller-tooltip": "Bấm chuột trái để tăng adrenaline lên 50.",
            "game-9mm": "9mm",
            "game-9mm-tooltip": "Đạn cho súng M9, G18C, MP5, MAC-10, UMP9 và Vector.",
            "game-12gauge": "cỡ 12",
            "game-12gauge-tooltip": "Đạn cho súng M870, SPAS-12, Saiga-12 và MP220.",
            "game-762mm": "7.62mm",
            "game-762mm-tooltip": "Đạn cho súng AK-47, SCAR-H, M39, Mosin-Nagant, SV-98, OT-38 và DP-28.",
            "game-556mm": "5.56mm",
            "game-556mm-tooltip": "Đạn cho súng FAMAS, M416, Mk 12 và M249.",
            "game-50AE": ".50 AE",
            "game-50AE-tooltip": "Đạn cho súng Desert Eagle.",
            "game-308sub": ".308 Subsonic",
            "game-308sub-tooltip": "Đạn cho súng AWM-S.",
            "game-flare": "Flare",
            "game-flare-tooltip": "Đạn cho súng Flare Gun.",
            "game-chest01": "Áo giáp cấp 1",
            "game-chest02": "Áo giáp cấp 2",
            "game-chest03": "Áo giáp cấp 3",
            "game-helmet01": "Mũ cối cấp 1",
            "game-helmet02": "Mũ cối cấp 2",
            "game-helmet03": "Mũ cối cấp 3",
            "game-1xscope": "1x Kính ngắm",
            "game-2xscope": "2x Kính ngắm",
            "game-4xscope": "4x Kính ngắm",
            "game-8xscope": "8x Kính ngắm",
            "game-15xscope": "15x Kính ngắm",
            "game-level-1": "Lvl. 1",
            "game-level-2": "Lvl. 2",
            "game-level-3": "Lvl. 3",
            "game-outfitBase": "Basic Outfit",
            "game-outfitRoyalFortune": "Royal Fortune",
            "game-outfitKeyLime": "Key Lime",
            "game-outfitCobaltShell": "Cobalt Shell",
            "game-outfitCarbonFiber": "Carbon Fiber",
            "game-outfitDarkGloves": "The Professional",
            "game-outfitGhillie": "Ghillie Suit",
            "game-outfitCamo": "Forest Camo",
            "game-outfitRed": "Target Practice",
            "game-outfitWhite": "Arctic Avenger",
            "game-outfitWoodland": "Woodland Combat",
            "game-outfitJester": "Jester's Folly",
            "game-outfitPrisoner": "The New Black",
            "game-outfitCasanova": "Casanova Silks",
            "game-outfitKhaki": "The Initiative",
            "game-fists": "Nắm đấm",
            "game-ak47": "AK-47",
            "game-scar": "SCAR-H",
            "game-dp28": "DP-28",
            "game-mosin": "Mosin-Nagant",
            "game-m39": "M39 EMR",
            "game-mp5": "MP5",
            "game-mac10": "MAC-10",
            "game-ump9": "UMP9",
            "game-vector": "Vector",
            "game-m870": "M870",
            "game-mp220": "MP220",
            "game-saiga": "Saiga-12",
            "game-m9": "M9",
            "game-m9_dual": "Dual M9",
            "game-hud-m9_dual": "M9",
            "game-glock": "G18C",
            "game-glock_dual": "Dual G18C",
            "game-hud-glock_dual": "G18C",
            "game-ot38": "OT-38",
            "game-ot38_dual": "Dual OT-38",
            "game-hud-ot38_dual": "OT-38",
            "game-deagle": "Desert Eagle",
            "game-deagle_dual": "Dual Desert Eagle",
            "game-hud-deagle_dual": "Desert Eagle",
            "game-famas": "FAMAS",
            "game-hk416": "M416",
            "game-mk12": "Mk 12 SPR",
            "game-m249": "M249",
            "game-frag": "Lựu đạn",
            "game-hud-frag": "Lựu đạn",
            "game-smoke": "Lựu đạn khói",
            "game-hud-smoke": "Lựu đạn cháy",
            "game-barrel_01": "một khẩu súng",
            "game-silo_01": "một chiếc xi lô",
            "game-oven_01": "một chiếc lò nướng",
            "game-control_panel_01": "Bảng điều khiển",
            "game-control_panel_02": "Bảng điều khiển",
            "game-control_panel_03": "một khối đầu cuối máy tính",
            "game-power_box_01": "một chiếc tủ điện"
        };
        e.exports = i
    },
    "6bad552e": function(e, t, a) {
        "use strict";
        function i(e, t, a) {
            return t in e ? Object.defineProperty(e, t, {
                value: a,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = a,
            e
        }
        function r(e, t) {
            if (!(e instanceof t))
                throw new TypeError("Cannot call a class as a function")
        }
        function o(e, t) {
            return {
                time: e,
                bones: t
            }
        }
        function n(e, t, a) {
            return {
                time: e,
                fn: t,
                args: a
            }
        }
        var s, l, m, c, d, p, u, h, g, y, f, x, w, b, _, v, S, k, z, M, T, P, C, A, I, D, O, E, L, B, F, R, j = function() {
            function e(e, t) {
                for (var a = 0; a < t.length; a++) {
                    var i = t[a];
                    i.enumerable = i.enumerable || !1,
                    i.configurable = !0,
                    "value"in i && (i.writable = !0),
                    Object.defineProperty(e, i.key, i)
                }
            }
            return function(t, a, i) {
                return a && e(t.prototype, a),
                i && e(t, i),
                t
            }
        }(), q = a("989ad62a"), N = (q.Anim,
        a("0e566746")), G = a("10899aea"), U = a("c2a798c8"), V = function() {
            function e(t, a, i) {
                r(this, e),
                this.pivot = U.copy(t || U.create(0, 0)),
                this.rot = 0,
                this.pos = U.copy(i || U.create(0, 0))
            }
            return j(e, [{
                key: "copy",
                value: function(e) {
                    U.set(this.pivot, e.pivot),
                    this.rot = e.rot,
                    U.set(this.pos, e.pos)
                }
            }, {
                key: "rotate",
                value: function(e) {
                    return this.rot = e,
                    this
                }
            }, {
                key: "offset",
                value: function(e) {
                    return this.pos = U.copy(e),
                    this
                }
            }]),
            e
        }();
        V.identity = new V(U.create(0, 0)),
        V.lerp = function(e, t, a) {
            var i = new V;
            return i.pos = U.lerp(e, t.pos, a.pos),
            i.rot = G.lerp(e, t.rot, a.rot),
            i.pivot = U.lerp(e, t.pivot, a.pivot),
            i
        }
        ;
        var H = {
            HandL: 0,
            HandR: 1,
            FootL: 2,
            FootR: 3
        };
        N(Object.keys(H).length % 2 == 0);
        var W = {
            fists: (s = {},
            i(s, H.HandL, new V(U.create(14, -12.25))),
            i(s, H.HandR, new V(U.create(14, 12.25))),
            s),
            slash: (l = {},
            i(l, H.HandL, new V(U.create(18, -8.25))),
            i(l, H.HandR, new V(U.create(6, 20.25))),
            l),
            meleeTwoHanded: (m = {},
            i(m, H.HandL, new V(U.create(10.5, -14.25))),
            i(m, H.HandR, new V(U.create(18, 6.25))),
            m),
            rifle: (c = {},
            i(c, H.HandL, new V(U.create(28, 5.25))),
            i(c, H.HandR, new V(U.create(14, 1.75))),
            c),
            pistol: (d = {},
            i(d, H.HandL, new V(U.create(14, 1.75))),
            i(d, H.HandR, new V(U.create(14, 1.75))),
            d),
            dualPistol: (p = {},
            i(p, H.HandL, new V(U.create(15.75, -8.75))),
            i(p, H.HandR, new V(U.create(15.75, 8.75))),
            p),
            throwable: (u = {},
            i(u, H.HandL, new V(U.create(15.75, -9.625))),
            i(u, H.HandR, new V(U.create(15.75, 9.625))),
            u),
            downed: (h = {},
            i(h, H.HandL, new V(U.create(14, -12.25))),
            i(h, H.HandR, new V(U.create(14, 12.25))),
            i(h, H.FootL, new V(U.create(-15.75, -9))),
            i(h, H.FootR, new V(U.create(-15.75, 9))),
            h)
        }
          , K = q.items.fists
          , X = q.items.hook
          , Y = q.items.woodaxe
          , Z = {
            none: {
                keyframes: [],
                effects: []
            },
            fists: {
                keyframes: [o(0, i({}, H.HandR, new V(U.create(14, 12.25)))), o(K.damageTime, i({}, H.HandR, new V(U.create(29.75, 1.75)))), o(K.cooldownTime, i({}, H.HandR, new V(U.create(14, 12.25))))],
                effects: [n(0, "animPlaySound", {
                    sound: "swing"
                }), n(K.damageTime, "animMeleeCollision", {})]
            },
            cut: {
                keyframes: [o(0, i({}, H.HandR, new V(U.create(14, 12.25)))), o(.25 * K.damageTime, i({}, H.HandR, new V(U.create(14, 12.25)).rotate(.35 * -Math.PI))), o(1 * K.damageTime, i({}, H.HandR, new V(U.create(14, 12.25)).rotate(.35 * Math.PI))), o(K.cooldownTime, i({}, H.HandR, new V(U.create(14, 12.25))))],
                effects: [n(0, "animPlaySound", {
                    sound: "swing"
                }), n(K.damageTime, "animMeleeCollision", {})]
            },
            thrust: {
                keyframes: [o(0, i({}, H.HandR, new V(U.create(14, 12.25)))), o(.4 * K.damageTime, i({}, H.HandR, new V(U.create(5, 12.25)).rotate(.1 * Math.PI))), o(1 * K.damageTime, i({}, H.HandR, new V(U.create(25, 6.25)).rotate(0 * -Math.PI))), o(K.cooldownTime, i({}, H.HandR, new V(U.create(14, 12.25))))],
                effects: [n(0, "animPlaySound", {
                    sound: "swing"
                }), n(K.damageTime, "animMeleeCollision", {})]
            },
            slash: {
                keyframes: [o(0, (g = {},
                i(g, H.HandL, new V(U.create(18, -8.25))),
                i(g, H.HandR, new V(U.create(6, 20.25))),
                g)), o(K.damageTime, (y = {},
                i(y, H.HandL, new V(U.create(6, -22.25))),
                i(y, H.HandR, new V(U.create(6, 20.25)).rotate(.6 * -Math.PI)),
                y)), o(K.cooldownTime, (f = {},
                i(f, H.HandL, new V(U.create(18, -8.25))),
                i(f, H.HandR, new V(U.create(6, 20.25)).rotate(0)),
                f))],
                effects: [n(0, "animPlaySound", {
                    sound: "swing"
                }), n(K.damageTime, "animMeleeCollision", {})]
            },
            hook: {
                keyframes: [o(0, i({}, H.HandR, new V(U.create(14, 12.25)))), o(.25 * X.damageTime, i({}, H.HandR, new V(U.create(14, 12.25)).rotate(.1 * Math.PI))), o(.75 * X.damageTime, i({}, H.HandR, new V(U.create(24, 1.75)))), o(.5 * X.cooldownTime, i({}, H.HandR, new V(U.create(14, 12.25)).rotate(-.3 * Math.PI))), o(.5 * X.cooldownTime, i({}, H.HandR, new V(U.create(14, 12.25))))],
                effects: [n(0, "animPlaySound", {
                    sound: "swing"
                }), n(X.damageTime, "animMeleeCollision", {})]
            },
            pan: {
                keyframes: [o(0, i({}, H.HandR, new V(U.create(14, 12.25)))), o(.15, i({}, H.HandR, new V(U.create(22, -8.25)).rotate(.2 * -Math.PI))), o(.1, i({}, H.HandR, new V(U.create(28, -8.25)).rotate(.5 * Math.PI))), o(.3, i({}, H.HandR, new V(U.create(14, 12.25))))],
                effects: [n(0, "animPlaySound", {
                    sound: "swing"
                }), n(q.items.pan.damageTime, "animMeleeCollision", {})]
            },
            twoHandSwing: {
                keyframes: [o(0, (x = {},
                i(x, H.HandL, new V(U.create(10.5, -14.25))),
                i(x, H.HandR, new V(U.create(18, 6.25))),
                x)), o(.4 * Y.damageTime, (w = {},
                i(w, H.HandL, new V(U.create(9, -14.25)).rotate(.4 * Math.PI)),
                i(w, H.HandR, new V(U.create(18, 6.25)).rotate(.4 * Math.PI)),
                w)), o(.6 * Y.damageTime, (b = {},
                i(b, H.HandL, new V(U.create(9, -14.25)).rotate(.4 * -Math.PI)),
                i(b, H.HandR, new V(U.create(18, 6.25)).rotate(.4 * -Math.PI)),
                b)), o(Y.cooldownTime, (_ = {},
                i(_, H.HandL, new V(U.create(10.5, -14.25))),
                i(_, H.HandR, new V(U.create(18, 6.25))),
                _))],
                effects: [n(Y.damageTime, "animPlaySound", {
                    sound: "swing"
                }), n(q.items.woodaxe.damageTime, "animMeleeCollision", {})]
            },
            cook: {
                keyframes: [o(0, (v = {},
                i(v, H.HandL, new V(U.create(15.75, -9.625))),
                i(v, H.HandR, new V(U.create(15.75, 9.625))),
                v)), o(.1, (S = {},
                i(S, H.HandL, new V(U.create(14, -1.75))),
                i(S, H.HandR, new V(U.create(14, 1.75))),
                S)), o(.2, (k = {},
                i(k, H.HandL, new V(U.create(14, -1.75))),
                i(k, H.HandR, new V(U.create(14, 1.75))),
                k)), o(.1, (z = {},
                i(z, H.HandL, new V(U.create(22.75, -1.75))),
                i(z, H.HandR, new V(U.create(1.75, 14))),
                z)), o(99999, (M = {},
                i(M, H.HandL, new V(U.create(22.75, -1.75))),
                i(M, H.HandR, new V(U.create(1.75, 14))),
                M))],
                effects: [n(0, "animPlaySound", {
                    sound: "pullPin"
                }), n(.1, "animSetThrowableState", {
                    state: "cook"
                })]
            },
            throw: {
                keyframes: [o(0, (T = {},
                i(T, H.HandL, new V(U.create(22.75, -1.75))),
                i(T, H.HandR, new V(U.create(1.75, 14.175))),
                T)), o(.15, (P = {},
                i(P, H.HandL, new V(U.create(5.25, -15.75))),
                i(P, H.HandR, new V(U.create(29.75, 1.75))),
                P)), o(q.player.throwTime, (C = {},
                i(C, H.HandL, new V(U.create(15.75, -9.625))),
                i(C, H.HandR, new V(U.create(15.75, 9.625))),
                C))],
                effects: [n(0, "animPlaySound", {
                    sound: "throwing"
                }), n(0, "animSetThrowableState", {
                    state: "throwing"
                }), n(0, "animThrowableParticles", {})]
            },
            crawl_forward: {
                keyframes: [o(q.player.crawlTime / 3, (A = {},
                i(A, H.HandL, new V(U.create(19.25, -10.5))),
                i(A, H.FootL, new V(U.create(-20.25, -9))),
                A)), o(q.player.crawlTime / 3, (I = {},
                i(I, H.HandL, new V(U.create(5.25, -15.75))),
                i(I, H.FootL, new V(U.create(-11.25, -9))),
                I)), o(q.player.crawlTime / 3, (D = {},
                i(D, H.HandL, new V(U.create(14, -12.25))),
                i(D, H.FootL, new V(U.create(-15.75, -9))),
                D))],
                effects: []
            },
            crawl_backward: {
                keyframes: [o(q.player.crawlTime / 3, (O = {},
                i(O, H.HandL, new V(U.create(5.25, -15.75))),
                i(O, H.FootL, new V(U.create(-11.25, -9))),
                O)), o(q.player.crawlTime / 3, (E = {},
                i(E, H.HandL, new V(U.create(19.25, -10.5))),
                i(E, H.FootL, new V(U.create(-20.25, -9))),
                E)), o(q.player.crawlTime / 3, (L = {},
                i(L, H.HandL, new V(U.create(14, -12.25))),
                i(L, H.FootL, new V(U.create(-15.75, -9))),
                L))],
                effects: []
            },
            revive: {
                keyframes: [o(0, (B = {},
                i(B, H.HandL, new V(U.create(14, -12.25))),
                i(B, H.HandR, new V(U.create(14, 12.25))),
                B)), o(.2, (F = {},
                i(F, H.HandL, new V(U.create(24.5, -8.75))),
                i(F, H.HandR, new V(U.create(5.25, 21))),
                F)), o(q.player.reviveDuration, (R = {},
                i(R, H.HandL, new V(U.create(24.5, -8.75))),
                i(R, H.HandR, new V(U.create(5.25, 21))),
                R))],
                effects: []
            }
        };
        e.exports = {
            Pose: V,
            Bones: H,
            IdlePoses: W,
            Animations: Z
        }
    },
    "6e43d1d7": function(e, t, a) {
        "use strict";
        function i(e, t, a, i, r, s) {
            var l = o.items[e]
              , m = n.rotate(i, t)
              , c = n.mul(m, 9.5);
            c = n.rotate(c, (Math.random() - .5) * Math.PI / 3);
            var d = n.add(a, n.mul(i, o.player.radius + l.particle.shellOffset));
            s.addParticle(l.ammo, r, d, c, l.particle.shellScale, -Math.atan2(m.y, m.x))
        }
        function r() {
            this.shots = []
        }
        var o = (a("80ac57a6"),
        a("989ad62a"))
          , n = (a("10899aea"),
        a("c2a798c8"));
        a("1901e2d9"),
        r.prototype = {
            addShot: function(e, t, a, i, r, s) {
                for (var l = null, m = 0; m < this.shots.length; m++)
                    if (!this.shots[m].active) {
                        l = this.shots[m];
                        break
                    }
                l || (l = {},
                this.shots.push(l));
                var c = o.items[i];
                l.active = !0,
                l.pos = n.copy(e),
                l.layer = t,
                l.playerId = a,
                l.weaponType = i,
                l.offhand = r,
                l.lastShot = s,
                l.ticker = 0,
                l.pullDelay = void 0 !== c.pullDelay ? .45 * c.pullDelay : 0
            },
            l: function(e, t, a, r, n) {
                for (var s = 0; s < this.shots.length; s++) {
                    var l = this.shots[s];
                    if (l.active) {
                        var m = o.items[l.weaponType];
                        if (0 == l.ticker) {
                            var c = a.se(l.playerId)
                              , d = l.lastShot ? m.sound.shootLast : m.sound.shoot;
                            if (n.playSound(d, {
                                channel: l.playerId == t ? "activePlayer" : "otherPlayers",
                                soundPos: l.pos,
                                layer: c ? c.layer : l.layer,
                                muffled: !0,
                                fallOff: m.sound.fallOff ? m.sound.fallOff : 0
                            }),
                            c) {
                                if (c.__id == t && "single" == m.fireMode && m.pullDelay) {
                                    var p = c.U.weapons[c.U.curWeapIdx].ammo
                                      , u = p > 0 ? m.sound.cycle : m.sound.pull;
                                    n.localActionSoundInstance = n.playSound(u)
                                }
                                var h = l.offhand || !m.isDual
                                  , g = !l.offhand || !m.isDual;
                                c.addRecoil(m.worldImg.recoil, h, g)
                            }
                        }
                        if (l.ticker += e,
                        l.ticker >= l.pullDelay) {
                            var y = a.se(l.playerId);
                            y && !y.N.dead && y.N.curWeapType == l.weaponType && "shoot" == m.caseTiming && i(l.weaponType, Math.PI / 2 * -1, y.N.pos, y.N.dir, y.layer, r),
                            l.active = !1
                        }
                    }
                }
            }
        },
        e.exports = {
            createCasingParticle: i,
            le: r
        }
    },
    "72409abe": function(e, t, a) {
        "use strict";
        function i() {
            var e = {
                fontFamily: "Arial",
                fontWeight: "bold",
                fontSize: c.pixelRatio > 1 ? 30 : 24,
                align: "center",
                fill: 16777215,
                stroke: 0,
                strokeThickness: 0,
                dropShadow: !0,
                dropShadowColor: "#000000",
                dropShadowBlur: 1,
                dropShadowAngle: Math.PI / 3,
                dropShadowDistance: 1
            }
              , t = new n.Text("",e);
            return t.anchor.set(.5, .5),
            t.scale.set(.5, .5),
            t
        }
        function r(e) {
            this.active = !1,
            this.pos = m.create(0, 0),
            this.container = new n.Container,
            this.sprite = n.Sprite.fromImage("skull.img"),
            this.sprite.anchor.set(.5, .5),
            this.sprite.scale.set(.4, .4),
            this.sprite.tint = 5921370,
            this.container.addChild(this.sprite),
            this.nameText = i(),
            this.nameText.anchor.set(.5, -1),
            this.nameText.tint = l.rgb2hex(l.hsv2rgb(0, 0, .5)),
            this.container.addChild(this.nameText),
            this.container.visible = this.sprite
        }
        function o(e) {
            this.me = new d.Pool(r),
            this.anonPlayerNames = e
        }
        var n = (a("0e566746"),
        a("80ac57a6"))
          , s = a("6b42806d")
          , l = (a("989ad62a"),
        a("10899aea"),
        a("1901e2d9"))
          , m = a("c2a798c8")
          , c = a("ce29f17f")
          , d = (a("af8ba00f"),
        a("753d6e4b"));
        r.prototype = {
            a: function() {},
            o: function() {
                this.container.visible = !1
            },
            n: function(e, t, a, i) {
                this.pos = m.copy(e.pos),
                t && (this.layer = e.layer,
                this.playerId = e.playerId),
                a && (this.nameTextSet = !1,
                this.container.visible = !0)
            }
        },
        o.prototype = {
            l: function(e, t, a, i, r, o) {
                for (var n = this, l = this.me.m(), m = 0; m < l.length; m++) {
                    var c = l[m];
                    if (c.active) {
                        c.nameTextSet || function() {
                            c.nameTextSet = !0;
                            var e = t.H(c.playerId)
                              , i = t.H(a.__id).teamId;
                            n.anonPlayerNames ? function(e) {
                                return e.playerId == n.ce || e.teamId == i
                            }(e) || (c.nameText.text = e.anonName) : c.nameText.text = e.name
                        }();
                        var d = s.createCircle(c.pos, 1)
                          , p = i.insideStructureStairs(d)
                          , u = c.layer
                          , h = 12;
                        0 == c.layer && 0 == a.layer && p && (u |= 2,
                        h += 100),
                        o.addPIXIObj(c.container, u, h, c.__id);
                        var g = r.pointToScreen(c.pos)
                          , y = r.pixels(1);
                        c.container.position.set(g.x, g.y),
                        c.container.scale.set(y, y)
                    }
                }
            },
            getDeadBodyById: function(e) {
                for (var t = this.me.m(), a = 0; a < t.length; a++) {
                    var i = t[a];
                    if (i.active && i.playerId == e)
                        return i
                }
                return null
            }
        },
        e.exports = {
            de: o
        }
    },
    "753d6e4b": function(e, t, a) {
        "use strict";
        function i(e) {
            o(void 0 !== e),
            this.creator = {
                type: e
            },
            this.pe = [],
            this.activeCount = 0
        }
        function r(e) {
            this.idToObj = {},
            this.types = {},
            this.seenCount = 0
        }
        var o = a("0e566746")
          , n = a("f398b7c7");
        i.prototype = {
            alloc: function() {
                for (var e = null, t = 0; t < this.pe.length; t++)
                    if (!this.pe[t].active) {
                        e = this.pe[t];
                        break
                    }
                return e || (e = new this.creator.type,
                this.pe.push(e)),
                e.active = !0,
                e.a(),
                this.activeCount++,
                e
            },
            free: function(e) {
                if (e.o(),
                e.active = !1,
                this.activeCount--,
                this.pe.length > 128 && this.activeCount < this.pe.length / 2) {
                    for (var t = [], a = 0; a < this.pe.length; a++)
                        this.pe[a].active && t.push(this.pe[a]);
                    this.pe = t
                }
            },
            m: function() {
                return this.pe
            }
        },
        r.prototype = {
            registerType: function(e, t) {
                this.types[e] = t
            },
            getObjById: function(e) {
                return this.idToObj[e]
            },
            getTypeById: function(e, t) {
                var a = this.getObjById(e);
                if (!a) {
                    var i = {
                        instId: n.instanceId,
                        id: e,
                        ids: Object.keys(this.idToObj),
                        stream: t._view._view
                    };
                    return n.logError("getTypeById" + JSON.stringify(i)),
                    n.storeGeneric("objectPoolErr", "getTypeById"),
                    0
                }
                return a.__type
            },
            updateObjFull: function(e, t, a, i) {
                var r = this.getObjById(t)
                  , o = !1;
                return void 0 === r && (r = this.types[e].alloc(),
                r.__id = t,
                r.__type = e,
                this.idToObj[t] = r,
                this.seenCount++,
                o = !0),
                r.n(a, !0, o, i),
                r
            },
            updateObjPart: function(e, t, a) {
                var i = this.getObjById(e);
                i ? i.n(t, !1, !1, a) : (console.log("updateObjPart, missing object", e),
                n.storeGeneric("objectPoolErr", "updateObjPart"))
            },
            deleteObj: function(e) {
                var t = this.getObjById(e);
                void 0 === t ? (console.log("deleteObj, missing object", e),
                n.storeGeneric("objectPoolErr", "deleteObj")) : (this.types[t.__type].free(t),
                delete this.idToObj[e])
            }
        },
        e.exports = {
            Pool: i,
            Creator: r
        }
    },
    "7aa4bfa8": function(e, t, a) {
        "use strict";
        var i = {
            "@metadata": {
                "last-updated": "2018-03-02",
                locale: "tr"
            },
            "word-order": "sov",
            "index-slogan": "2d Battle Royale",
            "index-region": "Bölge",
            "index-north-america": "Kuzey Amerika",
            "index-europe": "Avrupa",
            "index-asia": "Asya",
            "index-players": "oyuncular",
            "index-play-solo": "Tekli oyna",
            "index-play-duo": "İkili oyna",
            "index-play-squad": "Takım oyna",
            "index-create-team": "Takım Oluştur",
            "index-leave-team": "Takımdan Çık",
            "index-joining-team": "Takıma Katılınıyor",
            "index-creating-team": "Takım Oluşturuluyor",
            "index-invite-link": "Davet linki",
            "index-solo": "Tekli",
            "index-duo": "İkili",
            "index-squad": "Takım",
            "index-auto-fill": "Otomatik Oyuncu Seç",
            "index-no-fill": "Otomatik Oyuncu Seçme",
            "index-waiting-for-leader": "Liderin oyunu başlatması bekleniyor",
            "index-play": "Oyna",
            "index-featured-youtuber": "Önerilen Youtuber",
            "index-settings": "Ayarlar",
            "index-high-resolution": "Yüksek Çözünürlük (görsel kaliteyi artırmak için seç)",
            "index-screen-shake": "Ekran sallanması",
            "index-master-volume": "Ana Ses",
            "index-sfx-volume": "Ses Efekti Düzeyi",
            "index-music-volume": "Müzik Sesi",
            "index-mobile-announce": "Şimdi mobilde!",
            "index-mobile-tooltip": "Cihazınızdan <span>surviv.io</span> web sitesine girin!",
            "index-team-is-full": "Takım dolu!",
            "index-failed-joining-team": "Takıma katılım başarısız oldu.",
            "index-failed-creating-team": "Takım oluşturma başarısız oldu.",
            "index-failed-finding-game": "Oyun bulma başarısız oldu.",
            "index-failed-joining-game": "Oyuna katılım başarısız oldu.",
            "index-lost-connection": "Takım bağlantısı koptu.",
            "index-host-closed": "Host bağlantıyı kapattı.",
            "index-invalid-protocol": "Eski istemci sürümü.",
            "index-view-more": "Daha Fazla Gör",
            "index-back-to-main": "Ana Menüye Geri Dön",
            "index-most-kills": "En Çok Öldürmeler",
            "index-total-kills": "Tüm Öldürmeler",
            "index-total-wins": "Tüm Galibiyetler",
            "index-top-5-percent": "En Üst Yüzde 5",
            "index-for": "için",
            "index-kill-death-ratio": "Öldürme-Ölüm oranı",
            "index-today": "Bugün",
            "index-this-week": "Bu Hafta",
            "index-all-time": "Tüm Zamanlar",
            "index-top-100": "En İyi 100",
            "index-rank": "Sıralama",
            "index-player": "Oyuncu",
            "index-total-games": "Tüm oyunlar",
            "index-controls": "Kontroller",
            "index-movement": "Hareket",
            "index-movement-ctrl": "W, A, S, D",
            "index-aim": "Nişan",
            "index-aim-ctrl": "Fare",
            "index-punch": "Yumruk",
            "index-shoot": "Ateş Etme",
            "index-shoot-ctrl": "Sol-Tık",
            "index-change-weapons": "Silah Değiştirme",
            "index-change-weapons-ctrl": "1'den 4'e veya Fare Tekerleği",
            "index-stow-weapons": "Silahları Koy (Yumruk Modu)",
            "index-stow-weapons-ctrl": "3 veya E",
            "index-swap-weapons": "Önceki Silaha Geç",
            "index-swap-weapons-ctrl": "Q",
            "index-reload": "Yeniden Doldur",
            "index-reload-ctrl": "R",
            "index-scope-zoom": "Yakınlaştırma",
            "index-scope-zoom-ctrl": "Yakınlaştırma üzerine sol tıkla",
            "index-pickup": "Al",
            "index-loot": "Yağmala",
            "index-revive": "İyileştir",
            "index-pickup-ctrl": "F",
            "index-use-medical": "Tedavi Eşyası Kullan",
            "index-use-medical-ctrl": "Eşya Üzerine Sol-Tık veya 7'den 0'e kadar",
            "index-drop-item": "Eşyayı At",
            "index-drop-item-ctrl": "Sağ-Tık",
            "index-cancel-action": "Durdur",
            "index-cancel-action-ctrl": "X",
            "index-view-map": "Haritayı Göster",
            "index-view-map-ctrl": "M veya G",
            "index-toggle-minimap": "Mini Haritayı Değiştir",
            "index-toggle-minimap-ctrl": "V",
            "index-use-ping": "Takım Komut Tekerleğini Kullan",
            "index-use-ping-ctrl": "C'ye basılı tut, sonra Sağ-Tıka basılı tut ve fareyi sürükle, sonra Sağ-Tıkı bırak",
            "index-use-emote": "Emote Tekerini Kullan",
            "index-use-emote-ctrl": "Sağ-Tıka basılı tut ve fareyi sürükle, sonra Sağ-Tıkı bırak",
            "index-how-to-play": "Nasıl Oynanır",
            "index-tips-1-desc": "surviv.io nun amacı son hayatta kalan olmaktır. Bir oyunda sadece bir kere yaşayabilirsin - yeniden doğmka yok!",
            "index-tips-2": "2D PUBG",
            "index-tips-2-desc": "Eğer daha önce PUBG, Fortnite veya H1Z1 gibi battle royale oyunlar oynadıysan, sen zaten yolu yarılamışsın! surviv.io'yu 2D PUBG gibi düşün.",
            "index-tips-3": "Yağmala ve Öldür",
            "index-tips-3-desc": "Oyuna basit bir sırt çantası dışında hiçbir öğeyle başlamayacaksın. Ganimet bulmak için haritanın etrafında dolaş: silahlar, cephane, kapsüller ve tıbbi ürünler. Diğer oyuncuları ele ve onların ganimetlerini alabilirsin!",
            "index-tips-4": "Kırmızı = Kötü!",
            "index-tips-4-desc": "Seni incitebilecek tek şey oyuncular değil. Ölümcül kırmızı bölge harita kenarlarından içeri ilerler eğer içene girerseniz giderek daha fazla zarar görürsünüz. Haritaya bakmayı unutma ve güvende kal.",
            "game-alive": "Hayatta",
            "game-reloading": "Yeniden Dolduruluyor",
            "game-using": "Kullanılıyor",
            "game-reviving": "İyileştiriliyor",
            "game-revive-teammate": "Takım Arkadaşını İyileştir",
            "game-equip": "Kuşan",
            "game-cancel": "İptal et",
            "game-open-door": "Kapıyı aç",
            "game-close-door": "Kapıyı kapat",
            "game-You": "Sen",
            "game-you": "sen",
            "game-themselves": "kendisini",
            "game-yourself": "kendini",
            "game-you-died": "Öldün",
            "game-player-died": "öldü",
            "game-with": "ile",
            "game-knocked-out": "düştü",
            "game-killed": "öldürdü",
            "game-finally-killed": "sonunda öldürdü",
            "game-finally-bled-out": "sonunda kan kaybederek öldü",
            "game-died-outside": "güvenli bölgenin dışında öldü",
            "game-the-red-zone": "Kırmızı alan",
            "game-waiting-for-players": "Oyuncular bekleniyor",
            "game-spectating": "İzleniyor",
            "game-red-zone-advances": "Kırmızı alan -the time- içinde geliyor",
            "game-red-zone-advancing": "Kırmızı alan geliyor, güvenli bölgeye git!",
            "game-seconds": "saniyeler",
            "game-minutes": "dakikalar",
            "game-minute": "dakika",
            "game-m": "dk",
            "game-s": "sn",
            "game-not-enough-space": "Yeterli alan yok!",
            "game-item-already-owned": "Eşyaya zaten sahipsin!",
            "game-item-already-equipped": "Eşya zaten kuşanılmış!",
            "game-better-item-equipped": "Daha iyi eşya kuşanıldı!",
            "game-play-new-game": "Yeni Oyun Oyna",
            "game-spectate": "Seyret",
            "game-full-screen": "Tam Ekran",
            "game-sound": "Ses",
            "game-quit-game": "Oyundan Çık",
            "game-return-to-game": "Oyuna Geri Dön",
            "game-hide-match-stats": "Oyun İstatistiklerini Gizle",
            "game-view-match-stats": "Oyun İstatistiklerini Göster",
            "game-previous-teammate": "Önceki Takım Arkadaşı",
            "game-next-teammate": "Sonraki Takım Arkadaşı",
            "game-spectate-previous": "",
            "game-spectate-next": "",
            "game-leave-game": "Oyundan Ayrıl",
            "game-your-results": "Skorun",
            "game-chicken": "Hadi yine iyisin akşama tavuk var!",
            "game-won-the-game": "oyunu kazandı",
            "game-team-eliminated": "Takımınız yenildi.",
            "game-rank": "Sıralama",
            "game-team-rank": "Takım Sırası",
            "game-team-kills": "Takım Öldürmeleri",
            "game-kill": "Öldürme",
            "game-kills": "Öldürme",
            "game-damage-dealt": "Verilen Hasar",
            "game-damage-taken": "Alınan Hasar",
            "game-survived": "Hayatta Kaldı",
            "game-backpack00": "Torba",
            "game-backpack01": "Küçük Çanta",
            "game-backpack02": "Normal Çanta",
            "game-backpack03": "Askeri Çanta",
            "game-bandage": "Bandaj",
            "game-bandage-tooltip": "15 sağlık iyileşmek için sol tıkla.",
            "game-healing-tooltip": "75 sağlıktan sonra iyileştiremez.",
            "game-healthkit": "İlk Yardım Seti",
            "game-healthkit-tooltip": "100 sağlık iyileşmek için sol tıkla.",
            "game-soda": "Soda",
            "game-soda-tooltip": "25 adrenalin basmak için sol tıkla.",
            "game-adrenaline-tooltip": "Adrenalin, zamanla sağlığı düzeltir.",
            "game-painkiller": "Haplar",
            "game-painkiller-tooltip": "50 adrenalin basmak için sol tıkla.",
            "game-9mm": "9mm",
            "game-9mm-tooltip": "M9, G18C, MP5, MAC-10, UMP9 ve Vector için cephane.",
            "game-12gauge": "12 kalibre",
            "game-12gauge-tooltip": "M870, SPAS-12, Saiga-12 ve MP220 için cephane.",
            "game-762mm": "7.62mm",
            "game-762mm-tooltip": "AK-47, SCAR-H, M39, Mosin-Nagant, SV-98, OT-38 ve DP-28 için cephane.",
            "game-556mm": "5.56mm",
            "game-556mm-tooltip": "FAMAS, M416, Mk 12 ve M249 için cephane.",
            "game-50AE": ".50 AE",
            "game-50AE-tooltip": "Desert Eagle için cephane.",
            "game-308sub": ".308 Subsonic",
            "game-308sub-tooltip": "AWM-S için cephane.",
            "game-flare": "Flare",
            "game-flare-tooltip": "Flare Gun için cephane.",
            "game-chest01": "Seviye 1 Zırh",
            "game-chest02": "Seviye 2 Zırh",
            "game-chest03": "Seviye 3 Zırh",
            "game-helmet01": "Seviye 1 Kask",
            "game-helmet02": "Seviye 2 Kask",
            "game-helmet03": "Seviye 3 Kask",
            "game-1xscope": "1x Dürbün",
            "game-2xscope": "2x Dürbün",
            "game-4xscope": "4x Dürbün",
            "game-8xscope": "8x Dürbün",
            "game-15xscope": "15x Dürbün",
            "game-level-1": "Svy. 1",
            "game-level-2": "Svy. 2",
            "game-level-3": "Svy. 3",
            "game-outfitBase": "Basit Kıyafet",
            "game-outfitWoodland": "Orman Savaşı",
            "game-outfitRoyalFortune": "Asil Servet",
            "game-outfitKeyLime": "Misket Limonu",
            "game-outfitCobaltShell": "Kobalt Kabuğu",
            "game-outfitCarbonFiber": "Karbonfiber",
            "game-outfitDarkGloves": "Profosyonel",
            "game-outfitGhillie": "Komando",
            "game-outfitCamo": "Kamuflaj",
            "game-outfitRed": "Atış Talimi",
            "game-outfitWhite": "Buzul Yenilmezi",
            "game-fists": "Yumruk",
            "game-ak47": "AK-47",
            "game-dp28": "DP-28",
            "game-mosin": "Mosin-Nagant",
            "game-m39": "M39 EMR",
            "game-mp5": "MP5",
            "game-mac10": "MAC-10",
            "game-ump9": "UMP9",
            "game-m870": "M870",
            "game-mp220": "MP220",
            "game-saiga": "Saiga-12",
            "game-m9": "M9",
            "game-glock": "G18C",
            "game-ot38": "OT-38",
            "game-famas": "FAMAS",
            "game-hk416": "M416",
            "game-mk12": "Mk 12 SPR",
            "game-m249": "M249",
            "game-frag": "El Bombası",
            "game-hud-frag": "El Bombası",
            "game-smoke": "Sis Bombası",
            "game-hud-smoke": "Sis Bombası",
            "game-barrel_01": "Varil",
            "game-silo_01": "Ambar",
            "game-oven_01": "ocak"
        };
        e.exports = i
    },
    "7d64d541": function(e, t, a) {
        "use strict";
        function i() {
            this.acceptedLocales = ["da", "de", "en", "es", "fr", "it", "jp", "ko", "nl", "pl", "pt", "ru", "sv", "th", "tr", "vn", "zh-cn", "zh-tw"],
            this.translations = {};
            for (var e = 0; e < this.acceptedLocales.length; e++) {
                var t = this.acceptedLocales[e]
                  , i = {};
                try {
                    i = a("fac69c0a")("./" + t + ".js")
                } catch (e) {
                    console.log("localization not found", t)
                }
                this.translations[t] = i
            }
            this.locale = "en"
        }
        var r = a("8ee62bea")
          , o = a("ce29f17f");
        i.prototype = {
            setLocale: function(e) {
                this.locale = -1 != this.acceptedLocales.indexOf(e) ? e : "en"
            },
            getLocale: function() {
                return this.locale
            },
            translate: function(e) {
                return this.translations[this.locale][e] || this.translations.en[e] || ""
            },
            localizeIndex: function() {
                var e = this;
                r("*[data-l10n]").each(function(t, a) {
                    var i = r(a)
                      , n = i.attr("data-l10n");
                    i.hasClass("help-control") && o.touch && (n += "-touch");
                    var s = e.translate(n);
                    if (s) {
                        if (i.attr("label"))
                            return i.attr("label", s),
                            !0;
                        i.html(s),
                        i.attr("data-label") && i.attr("data-label", s)
                    }
                })
            }
        },
        e.exports = i
    },
    "819695aa": function(e, t, a) {
        "use strict";
        function i(e, t) {
            if (!(e instanceof t))
                throw new TypeError("Cannot call a class as a function")
        }
        var r = function() {
            function e(e, t) {
                for (var a = 0; a < t.length; a++) {
                    var i = t[a];
                    i.enumerable = i.enumerable || !1,
                    i.configurable = !0,
                    "value"in i && (i.writable = !0),
                    Object.defineProperty(e, i.key, i)
                }
            }
            return function(t, a, i) {
                return a && e(t.prototype, a),
                i && e(t, i),
                t
            }
        }()
          , o = a("34e32c48")
          , n = a("c2a798c8")
          , s = function() {
            function e() {
                i(this, e),
                this.type = e.Type.Aabb,
                this.min = n.create(0, 0),
                this.max = n.create(0, 0),
                this.height = 0
            }
            return r(e, [{
                key: "copy",
                value: function() {
                    return this.type == e.Type.Aabb ? e.createAabb(this.min, this.max, this.height) : e.createCircle(this.pos, this.rad, this.height)
                }
            }, {
                key: "getAabb",
                value: function() {
                    if (this.type == e.Type.Aabb)
                        return this.copy();
                    var t = o.circleToAabb(this.pos, this.rad);
                    return e.createAabb(t.min, t.max)
                }
            }, {
                key: "transform",
                value: function(t, a, i) {
                    if (this.type == e.Type.Aabb) {
                        for (var r = n.mul(n.sub(this.max, this.min), .5), o = n.add(this.min, r), s = [n.create(o.x - r.x, o.y - r.y), n.create(o.x - r.x, o.y + r.y), n.create(o.x + r.x, o.y - r.y), n.create(o.x + r.x, o.y + r.y)], l = n.create(Number.MAX_VALUE, Number.MAX_VALUE), m = n.create(-Number.MAX_VALUE, -Number.MAX_VALUE), c = 0; c < s.length; c++) {
                            var d = n.add(n.rotate(n.mul(s[c], i), a), t);
                            l.x = Math.min(l.x, d.x),
                            l.y = Math.min(l.y, d.y),
                            m.x = Math.max(m.x, d.x),
                            m.y = Math.max(m.y, d.y)
                        }
                        this.min = l,
                        this.max = m
                    } else
                        this.pos = n.add(t, n.rotate(n.mul(this.pos, i), a)),
                        this.rad *= i;
                    return this
                }
            }, {
                key: "intersect",
                value: function(t) {
                    if (t.height > this.height)
                        return null;
                    var a = this.type
                      , i = t.type;
                    if (a == e.Type.Aabb && i == e.Type.Aabb)
                        return o.intersectAabbAabb(this.min, this.max, t.min, t.max);
                    if (a == e.Type.Aabb && i == e.Type.Circle)
                        return o.intersectAabbCircle(this.min, this.max, t.pos, t.rad);
                    if (a == e.Type.Circle && i == e.Type.Aabb) {
                        var r = o.intersectAabbCircle(t.min, t.max, this.pos, this.rad);
                        return r && (r.dir = n.neg(r.dir)),
                        r
                    }
                    return o.intersectCircleCircle(this.pos, this.rad, t.pos, t.rad)
                }
            }, {
                key: "intersectSegment",
                value: function(t, a, i) {
                    return i > this.height ? null : this.type == e.Type.Aabb ? o.intersectSegmentAabb(t, a, this.min, this.max) : o.intersectSegmentCircle(t, a, this.pos, this.rad)
                }
            }]),
            e
        }();
        s.Type = {
            Aabb: 0,
            Circle: 1
        },
        s.createCircle = function(e, t, a) {
            var i = new s;
            return i.type = s.Type.Circle,
            i.pos = n.copy(e),
            i.rad = t,
            i.height = a,
            i
        }
        ,
        s.createAabb = function(e, t, a) {
            var i = new s;
            return i.type = s.Type.Aabb,
            i.min = n.copy(e),
            i.max = n.copy(t),
            i.height = a,
            i
        }
        ,
        s.createAabbExtents = function(e, t, a) {
            var i = n.sub(e, t)
              , r = n.add(e, t);
            return s.createAabb(i, r, a)
        }
        ;
        var l = function() {
            function e() {
                i(this, e),
                this.shapes = [],
                this.aabb = s.createAabb(n.create(0, 0), n.create(0, 0), 0),
                this.aabbDirty = !0
            }
            return r(e, [{
                key: "addShape",
                value: function(e) {
                    this.shapes.push(e.copy()),
                    this.aabbDirty = !0
                }
            }, {
                key: "copy",
                value: function() {
                    for (var t = new e, a = 0; a < this.shapes.length; a++)
                        t.addShape(this.shapes[a]);
                    return t
                }
            }, {
                key: "getAabb",
                value: function() {
                    if (this.aabbDirty) {
                        for (var e = [], t = 0; t < this.shapes.length; t++)
                            e.push(this.shapes[t].getAabb());
                        var a = o.boundingAabb(e);
                        this.aabb = s.createAabb(a.min, a.max, 0),
                        this.aabbDirty = !1
                    }
                    return this.aabb
                }
            }, {
                key: "transform",
                value: function(e, t, a) {
                    for (var i = 0; i < this.shapes.length; i++)
                        this.shapes[i].transform(e, t, a);
                    return this.aabbDirty = !0,
                    this
                }
            }, {
                key: "intersect",
                value: function(e) {
                    if (1 == this.shapes.length) {
                        var t = e.intersectShape(this.shapes[0]);
                        return t && (t.dir = n.neg(t.dir)),
                        t
                    }
                    return 1 == e.shapes.length ? this.intersectShape(e.shapes[0]) : this.getAabb().intersect(e.getAabb())
                }
            }, {
                key: "intersectShape",
                value: function(e, t) {
                    for (var a = null, i = 0; i < this.shapes.length; i++) {
                        var r = this.shapes[i].intersect(e);
                        r && (!a || r.pen > a.pen) && (a = r)
                    }
                    return a
                }
            }, {
                key: "intersectSegment",
                value: function(e, t, a) {
                    for (var i = null, r = 0; r < this.shapes.length; r++) {
                        var o = this.shapes[r].intersectSegment(e, t, a);
                        if (o) {
                            var s = n.length(n.sub(o.point, e));
                            (!i || s < i.dist) && (i = o,
                            i.dist = s)
                        }
                    }
                    return i
                }
            }]),
            e
        }();
        e.exports = {
            Shape: s,
            Body: l
        }
    },
    "8649e148": function(e, t, a) {
        "use strict";
        function i(e, t) {
            if (!(e instanceof t))
                throw new TypeError("Cannot call a class as a function")
        }
        var r = function() {
            function e(e, t) {
                for (var a = 0; a < t.length; a++) {
                    var i = t[a];
                    i.enumerable = i.enumerable || !1,
                    i.configurable = !0,
                    "value"in i && (i.writable = !0),
                    Object.defineProperty(e, i.key, i)
                }
            }
            return function(t, a, i) {
                return a && e(t.prototype, a),
                i && e(t, i),
                t
            }
        }()
          , o = a("0e566746")
          , n = {
            Invalid: 0,
            Player: 1,
            Obstacle: 2,
            Loot: 3,
            LootSpawner: 4,
            DeadBody: 5,
            Building: 6,
            Structure: 7,
            Decal: 8,
            Projectile: 9,
            Smoke: 10,
            Airdrop: 11
        }
          , s = 65535
          , l = function() {
            function e() {
                i(this, e),
                this.objects = [],
                this.idToObj = [];
                for (var t = 0; t < s; t++)
                    this.idToObj[t] = null;
                this.idToType = new Uint8Array(s),
                this.dirtyPart = new Uint8Array(s),
                this.dirtyFull = new Uint8Array(s),
                this.idNext = 1,
                this.freeLists = {}
            }
            return r(e, [{
                key: "allocId",
                value: function(e) {
                    var t = 1;
                    if (this.idNext < s)
                        t = this.idNext++;
                    else {
                        var a = this.freeLists[e] || [];
                        a.length > 0 ? t = a.pop() : o(!1)
                    }
                    return t
                }
            }, {
                key: "freeId",
                value: function(e, t) {
                    this.freeLists[e] = this.freeLists[e] || [],
                    this.freeLists[e].push(t)
                }
            }, {
                key: "register",
                value: function(e, t) {
                    var a = this.allocId(t);
                    e.__id = a,
                    e.__type = t,
                    e.__arrayIdx = this.objects.length,
                    this.objects[e.__arrayIdx] = e,
                    this.idToObj[a] = e,
                    this.idToType[a] = t,
                    this.dirtyPart[a] = 1,
                    this.dirtyFull[a] = 1
                }
            }, {
                key: "unregister",
                value: function(e) {
                    o(e.__id > 0);
                    var t = this.objects.pop();
                    e !== t && (this.objects[e.__arrayIdx] = t,
                    t.__arrayIdx = e.__arrayIdx),
                    this.idToObj[e.__id] = null,
                    this.freeId(e.__type, e.__id),
                    this.idToType[e.__id] = 0,
                    this.dirtyPart[e.__id] = 0,
                    this.dirtyFull[e.__id] = 0,
                    e.__id = 0,
                    e.__type = 0
                }
            }]),
            e
        }();
        e.exports = {
            MAX_ID: s,
            Type: n,
            Registrar: l
        }
    },
    "8f9fd353": function(e, t, a) {
        "use strict";
        var i = {
            "@metadata": {
                "last-updated": "2018-03-17",
                locale: "da"
            },
            "word-order": "svo",
            "index-create-account": "Opret Profil",
            "index-set-account-name": "Vælg profil navn",
            "index-enter-name": "Indtast navn",
            "index-finish": "Færdig",
            "index-delete-account": "Slet Profil",
            "index-delete-account-desc": 'Indtast "DELETE" for at slette din profil:',
            "index-confirm": "Bekræft",
            "index-customize-avatar": "Tilpas Avatar",
            "index-done": "Færdig",
            "index-account": "Profil",
            "index-log-in-with": "Log ind med",
            "index-facebook": "Facebook",
            "index-google": "Google",
            "index-twitch": "Twitch",
            "index-discord": "Discord",
            "index-my-stats": "Min Statistik",
            "index-link-account": "Link Profil",
            "index-log-out": "Log Ud",
            "index-change-avatar": "Skift Avatar",
            "index-change-account-name": "Skift Profil Navn",
            "index-back": "Tilbage",
            "index-link-account-to": "Link Profil Til",
            "index-log-in-desc": "Log ind for at spore statistik!",
            "index-logging-in": "Logging in",
            "index-leaderboards": "Pointtavler",
            "index-slogan": "2d Battle Royale",
            "index-region": "Region",
            "index-north-america": "Nord Amerika",
            "index-europe": "Europa",
            "index-asia": "Asien",
            "index-players": "Spillere",
            "index-play-solo": "Spil Solo",
            "index-play-duo": "Spil Duo",
            "index-play-squad": "Spil Hold",
            "index-create-team": "Lav Hold",
            "index-how-to-play": "Sådan spiller du",
            "index-leave-team": "Forlad Hold",
            "index-joining-team": "Tilslutter Til Hold",
            "index-creating-team": "Laver Hold",
            "index-invite-link": "Inviter Link",
            "index-solo": "Solo",
            "index-duo": "Duo",
            "index-squad": "Hold",
            "index-auto-fill": "Auto Fyld",
            "index-no-fill": "Ingen Fyld",
            "index-waiting-for-leader": "Venter på at lederen starter spillet",
            "index-play": "Spil",
            "index-featured-youtuber": "Udvalgt Youtuber",
            "index-settings": "Indstillinger",
            "index-high-resolution": "Høj opløsning (Tjek for at øge visuel kvalitet)",
            "index-screen-shake": "Skærm rystning",
            "index-master-volume": "Master Volume",
            "index-sfx-volume": "SFX Volume",
            "index-music-volume": "Music Volume",
            "index-mobile-announce": "Nu tilgængelig på mobil!",
            "index-mobile-tooltip": "Besøg <span>surviv.io</span> på din mobil for at spille på farten!",
            "index-team-is-full": "Holdet er fuldt!",
            "index-failed-joining-team": "Mislykkes at tilslutte til hold.",
            "index-failed-creating-team": "Mislykkes at oprette et hold.",
            "index-failed-finding-game": "Mislykkes at finde et spil.",
            "index-failed-joining-game": "Mislykkes at tilslutte til spil.",
            "index-lost-connection": "Mistede forbindelse til hold.",
            "index-host-closed": "Vært lukkede forbindelsen.",
            "index-view-more": "Vis mere",
            "index-back-to-main": "Tilbage til Hovedmenuen",
            "index-most-kills": "Flest Drab",
            "index-total-kills": "Total Drab",
            "index-total-wins": "Total Kampe Vundet",
            "index-top-5-percent": "Top 5 procent",
            "index-kill-death-ratio": "Drab-Død Forhold",
            "index-for": "For",
            "index-today": "Idag",
            "index-this-week": "Denne Uge",
            "index-all-time": "Altid",
            "index-top-100": "TOP 100",
            "index-rank": "Rang",
            "index-player": "Spiller",
            "index-total-games": "Samlede spil",
            "index-controls": "Taster",
            "index-movement": "Bevægelse",
            "index-movement-ctrl": "W, A, S, D",
            "index-aim": "Sigt",
            "index-aim-ctrl": "Mus",
            "index-punch": "Slå",
            "index-shoot": "Skyd",
            "index-shoot-ctrl": "Venstre-Klik",
            "index-change-weapons": "Skift Våben",
            "index-change-weapons-ctrl": "1 igennem 4 eller musehjul",
            "index-stow-weapons": "Gem Våben (Slå Tilstand)",
            "index-stow-weapons-ctrl": "3 eller E",
            "index-swap-weapons": "Skift til Sidst anvendet våben",
            "index-swap-weapons-ctrl": "Q",
            "index-reload": "Genlad",
            "index-reload-ctrl": "R",
            "index-scope-zoom": "Sigtekorns Zoom",
            "index-scope-zoom-ctrl": "Venstre-Klik for at Zoome",
            "index-pickup": "Saml op",
            "index-loot": "Bytte",
            "index-revive": "Genoplev",
            "index-pickup-ctrl": "F",
            "index-use-medical": "Brug Medicinsk Genstand",
            "index-use-medical-ctrl": "Venstre-Klik på Genstand eller 7 igennem 0",
            "index-drop-item": "Smid Bytte",
            "index-drop-item-ctrl": "Højre-Klik på Bytte",
            "index-cancel-action": "Annuler Handling",
            "index-cancel-action-ctrl": "X",
            "index-view-map": "Vis Kort",
            "index-view-map-ctrl": "M eller G",
            "index-toggle-minimap": "Slå Kort Til/Fra",
            "index-toggle-minimap-ctrl": "V",
            "game-alive": "I Live",
            "game-reloading": "Genlader",
            "game-using": "Bruger",
            "game-reviving": "Genoplever",
            "game-revive-teammate": "Genoplever Holdkammerat",
            "game-equip": "Udstyr",
            "game-cancel": "Annuller",
            "game-You": "Du",
            "game-you": "dig",
            "game-themselves": "dem selv",
            "game-yourself": "dig selv",
            "game-you-died": "døde",
            "game-player-died": "døde",
            "game-with": "med",
            "game-knocked-out": "slog",
            "game-killed": "dræbte",
            "game-finally-killed": "dræbte endeligt",
            "game-finally-bled-out": "blødte endeligt ud",
            "game-died-outside": "døde udenfor den sikre zone",
            "game-the-red-zone": "Den røde zone",
            "game-waiting-for-players": "Venter på spillere",
            "game-spectating": "Tilskuer",
            "game-red-zone-advances": "Rød zone rykker om",
            "game-red-zone-advancing": "Rød zone rykker, kom til den sikre zone",
            "game-seconds": "sekunder",
            "game-minutes": "minutter",
            "game-minute": "minut",
            "game-m": "m",
            "game-s": "s",
            "game-not-enough-space": "Ikke nok plads!",
            "game-item-already-owned": "Du har allerede denne genstand!",
            "game-item-already-equipped": "Genstand allerede udstyret!",
            "game-better-item-equipped": "Bedre genstand allerede udstyret!",
            "game-play-new-game": "Spil Nyt Spil",
            "game-spectate": "Tilskuer",
            "game-full-screen": "Fuld Skærm",
            "game-sound": "Lyd",
            "game-quit-game": "Forlad Spil",
            "game-return-to-game": "Tilbage Til Spillet",
            "game-hide-match-stats": "Gem Kamp Statistikken",
            "game-view-match-stats": "Vis Kamp Statistikken",
            "game-previous-teammate": "Forrige Holdkammerat",
            "game-next-teammate": "Næste Holdkammerat",
            "game-spectate-previous": "Forrige",
            "game-spectate-next": "Næste",
            "game-leave-game": "Forlad Spil",
            "game-your-results": "Dine Resultater",
            "game-chicken": "Vinder Vinder Kyllinge Middag!",
            "game-won-the-game": "Vandt Spillet.",
            "game-team-eliminated": "Din Holdkammerat blev dræbt.",
            "game-rank": "Rang",
            "game-team-rank": "Hold Rang",
            "game-team-kills": "Hold Drab",
            "game-kill": "Drab",
            "game-kills": "Drab",
            "game-damage-dealt": "Skade Gjort",
            "game-damage-taken": "Skade Taget",
            "game-survived": "Overlevet",
            "game-backpack00": "Pose",
            "game-backpack01": "Lille Taske",
            "game-backpack02": "Normal Taske",
            "game-backpack03": "Militær rygsæk",
            "game-bandage": "Bandage",
            "game-bandage-tooltip": "Venstre-Klik for at gendanne 15 Liv.",
            "game-healing-tooltip": "Kan ikke gendanne mere end 75 Liv.",
            "game-healthkit": "Førstehjælpskasse",
            "game-healthkit-tooltip": "Venstre-Klik for at gendanne 100 Liv.",
            "game-soda": "Sodavand",
            "game-soda-tooltip": "Venstre-Klik for at løfte adrenalinen med 25.",
            "game-adrenaline-tooltip": "Adrenalinen gendanner liv over tid.",
            "game-painkiller": "Piller",
            "game-painkiller-tooltip": "Venstre-klik for at løfte adrenalinen med 50.",
            "game-9mm": "9mm",
            "game-9mm-tooltip": "Ammo for M9, G18C, MP5, MAC-10, UMP9 og Vector.",
            "game-12gauge": "12 gauge",
            "game-12gauge-tooltip": "Ammo for M870, SPAS-12, Saiga-12 og MP220.",
            "game-762mm": "7.62mm",
            "game-762mm-tooltip": "Ammo for AK-47, SCAR-H, M39, Mosin-Nagant, SV-98, M1, OT-38 og DP-28.",
            "game-556mm": "5.56mm",
            "game-556mm-tooltip": "Ammo for FAMAS, M416, QBB-97, Mk 12 og M249.",
            "game-50AE": ".50 AE",
            "game-50AE-tooltip": "Ammo for Desert Eagle.",
            "game-308sub": ".308 Subsonic",
            "game-308sub-tooltip": "Ammo for AWM-S.",
            "game-flare": "Flare",
            "game-flare-tooltip": "Ammo for Flare Gun.",
            "game-chest01": "Level 1 Vest",
            "game-chest02": "Level 2 Vest",
            "game-chest03": "Level 3 Vest",
            "game-helmet01": "Level 1 Hjelm",
            "game-helmet02": "Level 2 Hjelm",
            "game-helmet03": "Level 3 Hjelm",
            "game-1xscope": "1x Sigte",
            "game-2xscope": "2x Sigte",
            "game-4xscope": "4x Sigte",
            "game-8xscope": "8x Sigte",
            "game-15xscope": "15x Sigte",
            "game-level-1": "Lvl. 1",
            "game-level-2": "Lvl. 2",
            "game-level-3": "Lvl. 3",
            "game-outfitBase": "Basis Tøj",
            "game-outfitRoyalFortune": "Royal Rigdom",
            "game-outfitKeyLime": "Nøgle Lime",
            "game-outfitCobaltShell": "Kobalt Skal",
            "game-outfitCarbonFiber": "Kulstof Fiber",
            "game-outfitDarkGloves": "Den Professionelle",
            "game-outfitGhillie": "Ghillie Dragt",
            "game-outfitCamo": "Skov Kamo",
            "game-outfitRed": "Mål Øvelse",
            "game-outfitWhite": "Arktisk Hævner",
            "game-ak47": "AK-47",
            "game-dp28": "DP-28",
            "game-mosin": "Mosin-Nagant",
            "game-m39": "M39 EMR",
            "game-mp5": "MP5",
            "game-mac10": "MAC-10",
            "game-ump9": "UMP9",
            "game-m870": "M870",
            "game-mp220": "MP220",
            "game-saiga": "Saiga-12",
            "game-m9": "M9",
            "game-glock": "G18C",
            "game-ot38": "OT-38",
            "game-barrel_01": "En Tønde",
            "game-silo_01": "En Silo"
        };
        e.exports = i
    },
    "9085f81b": function(e, t, a) {
        "use strict";
        var i = {
            "@metadata": {
                "last-updated": "2018-02-06",
                locale: "zh-tw"
            },
            "word-order": "svo",
            "index-slogan": "2d大逃殺",
            "index-region": "地區",
            "index-north-america": "北美",
            "index-europe": "歐洲",
            "index-asia": "亞洲",
            "index-players": "玩家",
            "index-play-solo": "單人",
            "index-play-duo": "雙人",
            "index-play-squad": "4人",
            "index-create-team": "創立隊伍",
            "index-join-team": "加入隊伍",
            "index-how-to-play": "如何玩",
            "index-leave-team": "離開聯隊",
            "index-joining-team": "加入隊伍中",
            "index-creating-team": "建立隊伍中",
            "index-invite-link": "邀請的連結",
            "index-solo": "單人",
            "index-duo": "兩人",
            "index-squad": "聯隊",
            "index-auto-fill": "自動找玩家加入",
            "index-no-fill": "不加入隨機玩家",
            "index-waiting-for-leader": "等待隊長開始遊戲",
            "index-play": "開始",
            "index-featured-youtuber": "推薦的YouTube客",
            "index-settings": "設定",
            "index-high-resolution": "高解像度(提升畫面質素)",
            "index-screen-shake": "營幕震動",
            "index-team-is-full": "團隊已滿!",
            "index-failed-joining-team": "加入隊伍失敗。",
            "index-failed-creating-team": "創立隊伍失敗。",
            "index-failed-finding-game": "尋找隊伍失敗。",
            "index-failed-joining-game": "加入遊戲失敗。",
            "index-lost-connection": "和隊伍失去連接。",
            "index-host-closed": "伺服器關了連接。",
            "index-invalid-protocol": "舊版客戶端,請按F5更新.",
            "index-view-more": "查看更多",
            "index-back-to-main": "回到主畫面",
            "index-most-kills": "殺敵最多",
            "index-total-kills": "總殺數",
            "index-total-wins": "總贏數",
            "index-top-5-percent": "前5%",
            "index-kill-death-ratio": "殺敵和生還比例",
            "index-for": "For",
            "index-today": "今日",
            "index-this-week": "這個禮拜",
            "index-all-time": "所有時間",
            "index-top-100": "前一百",
            "index-rank": "排名",
            "index-player": "玩家",
            "index-total-games": "總遊戲數",
            "index-controls": "控制",
            "index-movement": "運動",
            "index-movement-ctrl": "W, A, S, D鍵",
            "index-aim": "瞄準",
            "index-aim-ctrl": "鼠標",
            "index-punch": "出拳",
            "index-shoot": "射擊",
            "index-shoot-ctrl": "滑鼠左鍵",
            "index-change-weapons": "更換武器",
            "index-change-weapons-ctrl": "1 到 4或滾輪",
            "index-stow-weapons": "收起武器(拳擊模式)",
            "index-stow-weapons-ctrl": "3或E鍵",
            "index-swap-weapons": "換到之前的武器",
            "index-swap-weapons-ctrl": "Q掣",
            "index-reload": "裝子彈",
            "index-reload-ctrl": "R掣",
            "index-scope-zoom": "變焦範圍",
            "index-scope-zoom-ctrl": "左鍵單擊放大",
            "index-pickup": "拾起",
            "index-loot": "戰利品",
            "index-revive": "恢復",
            "index-pickup-ctrl": "F鍵",
            "index-use-medical": "使用醫療物品",
            "index-use-medical-ctrl": "左鍵單擊物品或7 到 0",
            "index-drop-item": "丟棄物品",
            "index-drop-item-ctrl": "右鍵單擊物品",
            "index-cancel-action": "取消操作",
            "index-cancel-action-ctrl": "X鍵",
            "index-view-map": "查看地圖",
            "index-view-map-ctrl": "M或G鍵",
            "index-toggle-minimap": "切換小地圖",
            "index-toggle-minimap-ctrl": "V鍵",
            "game-alive": "玩家",
            "game-reloading": "裝彈",
            "game-using": "使用",
            "game-reviving": "恢復",
            "game-revive-teammate": "復活隊友",
            "game-equip": "裝備",
            "game-cancel": "撤銷",
            "game-open-door": "開門",
            "game-close-door": "關門",
            "game-You": "You",
            "game-you": "you",
            "game-themselves": "themselves",
            "game-yourself": "yourself",
            "game-you-died": "died",
            "game-player-died": "died",
            "game-with": "with",
            "game-knocked-out": "knocked out",
            "game-killed": "killed",
            "game-finally-killed": "finally killed",
            "game-finally-bled-out": "finally bled out",
            "game-died-outside": "died outside the safe zone",
            "game-the-red-zone": "The red zone",
            "game-waiting-for-players": "等待玩家",
            "game-spectating": "觀看",
            "game-red-zone-advances": "紅色區域擴大於",
            "game-red-zone-advancing": "紅色區域擴大中，快到安全區去!",
            "game-seconds": "秒",
            "game-minutes": "分",
            "game-minute": "分",
            "game-m": "分",
            "game-s": "秒",
            "game-not-enough-space": "空間不足!",
            "game-item-already-owned": "物品已擁有!",
            "game-item-already-equipped": "物品已裝備!",
            "game-better-item-equipped": "已裝備更好物品!",
            "game-play-new-game": "開始新遊戲",
            "game-spectate": "觀看",
            "game-full-screen": "全屏",
            "game-sound": "聲音",
            "game-quit-game": "離開遊戲",
            "game-return-to-game": "返回游戲",
            "game-hide-match-stats": "隱藏比賽數據",
            "game-view-match-stats": "查看比賽數據",
            "game-previous-teammate": "上個隊友",
            "game-next-teammate": "下個隊友",
            "game-spectate-previous": "",
            "game-spectate-next": "",
            "game-leave-game": "離開遊戲",
            "game-your-results": "你的戰績",
            "game-chicken": "大吉大利，今晚吃雞!",
            "game-won-the-game": "贏了遊戲。",
            "game-team-eliminated": "你的隊伍被擊敗了。",
            "game-rank": "排名",
            "game-team-rank": "聯隊排名",
            "game-team-kills": "聯隊殺",
            "game-kill": "殺",
            "game-kills": "殺",
            "game-damage-dealt": "傷害輸出",
            "game-damage-taken": "受到傷害",
            "game-survived": "生存",
            "game-backpack00": "袋子",
            "game-backpack01": "小包",
            "game-backpack02": "常規包",
            "game-backpack03": "軍用包",
            "game-bandage": "繃帶",
            "game-bandage-tooltip": "左鍵點擊恢復15生命。",
            "game-healing-tooltip": "無法治療75點以上的生命。",
            "game-healthkit": "醫藥箱",
            "game-healthkit-tooltip": "左鍵點擊恢復100生命。",
            "game-soda": "汽水",
            "game-soda-tooltip": "左鍵點擊可以增加25的腎上腺素。",
            "game-adrenaline-tooltip": "腎上腺素會隨著時間的推移而恢復血量。",
            "game-painkiller": "藥片",
            "game-painkiller-tooltip": "左鍵點擊可使腎上腺素增加50。",
            "game-9mm": "9毫米",
            "game-9mm-tooltip": "M9, G18C, MP5, Vector, MAC-10和UMP9彈藥。",
            "game-12gauge": "12計",
            "game-12gauge-tooltip": "M870, SPAS-12, Saiga-12 和 MP220彈藥。",
            "game-762mm": "7.62毫米",
            "game-762mm-tooltip": "AK-47, SCAR-H, M39, Mosin-Nagant, SV-98, M1, OT-38 和 DP-28彈藥。",
            "game-556mm": "5.56mm",
            "game-556mm-tooltip": "FAMAS, M416, QBB-97, Mk 12 和 M249彈藥。",
            "game-50AE": ".50 AE",
            "game-50AE-tooltip": "Desert Eagle彈藥。",
            "game-308sub": ".308 Subsonic",
            "game-308sub-tooltip": "AWM-S彈藥。",
            "game-flare": "Flare",
            "game-flare-tooltip": "Flare Gun彈藥。",
            "game-chest01": "一級防彈衣",
            "game-chest02": "二級防彈衣",
            "game-chest03": "三級防彈衣",
            "game-helmet01": "一級頭盔",
            "game-helmet02": "二級頭盔",
            "game-helmet03": "三級頭盔",
            "game-1xscope": "1x 倍鏡",
            "game-2xscope": "2x 倍鏡",
            "game-4xscope": "4x 倍鏡",
            "game-8xscope": "8x 倍鏡",
            "game-15xscope": "15x 倍鏡",
            "game-level-1": "一級",
            "game-level-2": "二級",
            "game-level-3": "三級",
            "game-outfitBase": "Basic Outfit",
            "game-outfitRoyalFortune": "Royal Fortune",
            "game-outfitKeyLime": "Key Lime",
            "game-outfitCobaltShell": "Cobalt Shell",
            "game-outfitCarbonFiber": "Carbon Fiber",
            "game-outfitDarkGloves": "The Professional",
            "game-outfitGhillie": "Ghillie Suit",
            "game-outfitCamo": "Forest Camo",
            "game-outfitRed": "Target Practice",
            "game-outfitWhite": "Arctic Avenger",
            "game-ak47": "AK-47",
            "game-dp28": "DP-28",
            "game-mosin": "Mosin-Nagant",
            "game-m39": "M39 EMR",
            "game-mp5": "MP5",
            "game-mac10": "MAC-10",
            "game-ump9": "UMP9",
            "game-m870": "M870",
            "game-mp220": "MP220",
            "game-saiga": "Saiga-12",
            "game-m9": "M9",
            "game-glock": "G18C",
            "game-ot38": "OT-38",
            "game-frag": "碎片手榴彈",
            "game-smoke": "煙霧彈",
            "game-barrel_01": "a barrel",
            "game-silo_01": "a silo"
        };
        e.exports = i
    },
    "927ff3fc": function(e, t) {},
    "946c898d": function(e, t, a) {
        "use strict";
        var i = {
            players: {
                m9_01: {
                    name: "audio/guns/m9_01.mp3",
                    volume: 1,
                    maxInstances: 5
                },
                m9_reload_01: {
                    name: "audio/guns/m9_reload_01.mp3",
                    volume: 1
                },
                m9_reload_02: {
                    name: "audio/guns/m9_reload_02.mp3",
                    volume: 1
                },
                m9_switch_01: {
                    name: "audio/guns/m9_switch_01.mp3",
                    volume: 1
                },
                glock_01: {
                    name: "audio/guns/glock_01.mp3",
                    volume: 1,
                    maxInstances: 5
                },
                glock_reload_01: {
                    name: "audio/guns/glock_reload_01.mp3",
                    volume: 1
                },
                glock_reload_02: {
                    name: "audio/guns/glock_reload_02.mp3",
                    volume: 1
                },
                glock_switch_01: {
                    name: "audio/guns/glock_switch_01.mp3",
                    volume: 1
                },
                ot38_01: {
                    name: "audio/guns/ot38_01.mp3",
                    volume: 1,
                    maxInstances: 5
                },
                ot38_reload_01: {
                    name: "audio/guns/ot38_reload_01.mp3",
                    volume: 1
                },
                ot38_reload_02: {
                    name: "audio/guns/ot38_reload_02.mp3",
                    volume: 1
                },
                ot38_switch_01: {
                    name: "audio/guns/ot38_switch_01.mp3",
                    volume: 1
                },
                deagle_01: {
                    name: "audio/guns/deagle_01.mp3",
                    volume: 1,
                    maxInstances: 5
                },
                deagle_reload_01: {
                    name: "audio/guns/deagle_reload_01.mp3",
                    volume: 1
                },
                deagle_reload_02: {
                    name: "audio/guns/deagle_reload_02.mp3",
                    volume: 1
                },
                deagle_switch_01: {
                    name: "audio/guns/deagle_switch_01.mp3",
                    volume: 1
                },
                flare_gun_01: {
                    name: "audio/guns/flare_gun_01.mp3",
                    volume: 1,
                    maxInstances: 5
                },
                flare_gun_reload_01: {
                    name: "audio/guns/flare_gun_reload_01.mp3",
                    volume: 1
                },
                ak47_01: {
                    name: "audio/guns/ak47_01.mp3",
                    volume: 1,
                    maxInstances: 5
                },
                ak47_reload_01: {
                    name: "audio/guns/ak47_reload_01.mp3",
                    volume: 1
                },
                ak47_switch_01: {
                    name: "audio/guns/ak47_switch_01.mp3",
                    volume: 1
                },
                scar_01: {
                    name: "audio/guns/scar_01.mp3",
                    volume: 1,
                    maxInstances: 5
                },
                scar_reload_01: {
                    name: "audio/guns/scar_reload_01.mp3",
                    volume: 1
                },
                scar_switch_01: {
                    name: "audio/guns/scar_switch_01.mp3",
                    volume: 1
                },
                dp28_01: {
                    name: "audio/guns/dp28_01.mp3",
                    volume: 1,
                    maxInstances: 5
                },
                dp28_reload_01: {
                    name: "audio/guns/dp28_reload_01.mp3",
                    volume: 1
                },
                dp28_switch_01: {
                    name: "audio/guns/dp28_switch_01.mp3",
                    volume: 1
                },
                m870_01: {
                    name: "audio/guns/m870_01.mp3",
                    volume: 1,
                    maxInstances: 5
                },
                m870_reload_01: {
                    name: "audio/guns/m870_reload_01.mp3",
                    volume: 1
                },
                m870_cycle_01: {
                    name: "audio/guns/m870_cycle_01.mp3",
                    volume: 1
                },
                m870_pull_01: {
                    name: "audio/guns/m870_pull_01.mp3",
                    volume: 1
                },
                spas12_01: {
                    name: "audio/guns/spas12_01.mp3",
                    volume: 1,
                    maxInstances: 5
                },
                spas12_reload_01: {
                    name: "audio/guns/spas12_reload_01.mp3",
                    volume: 1
                },
                spas12_cycle_01: {
                    name: "audio/guns/spas12_cycle_01.mp3",
                    volume: 1
                },
                spas12_pull_01: {
                    name: "audio/guns/spas12_pull_01.mp3",
                    volume: 1
                },
                mp220_01: {
                    name: "audio/guns/mp220_01.mp3",
                    volume: 1,
                    maxInstances: 5
                },
                mp220_reload_01: {
                    name: "audio/guns/mp220_reload_01.mp3",
                    volume: 1
                },
                mp220_deploy_01: {
                    name: "audio/guns/mp220_deploy_01.mp3",
                    volume: 1
                },
                saiga_01: {
                    name: "audio/guns/saiga_01.mp3",
                    volume: 1,
                    maxInstances: 5
                },
                saiga_reload_01: {
                    name: "audio/guns/saiga_reload_01.mp3",
                    volume: 1
                },
                saiga_switch_01: {
                    name: "audio/guns/saiga_switch_01.mp3",
                    volume: 1
                },
                m39_01: {
                    name: "audio/guns/m39_01.mp3",
                    volume: 1,
                    maxInstances: 5
                },
                m39_reload_01: {
                    name: "audio/guns/m39_reload_01.mp3",
                    volume: 1
                },
                m39_switch_01: {
                    name: "audio/guns/m39_switch_01.mp3",
                    volume: 1
                },
                garand_01: {
                    name: "audio/guns/garand_01.mp3",
                    volume: 1,
                    maxInstances: 5
                },
                garand_02: {
                    name: "audio/guns/garand_02.mp3",
                    volume: 1,
                    maxInstances: 5
                },
                garand_reload_01: {
                    name: "audio/guns/garand_reload_01.mp3",
                    volume: 1
                },
                garand_switch_01: {
                    name: "audio/guns/garand_switch_01.mp3",
                    volume: 1
                },
                mp5_01: {
                    name: "audio/guns/mp5_01.mp3",
                    volume: 1,
                    maxInstances: 5
                },
                mp5_reload_01: {
                    name: "audio/guns/mp5_reload_01.mp3",
                    volume: 1
                },
                mp5_switch_01: {
                    name: "audio/guns/mp5_switch_01.mp3",
                    volume: 1
                },
                mac10_01: {
                    name: "audio/guns/mac10_01.mp3",
                    volume: 1,
                    maxInstances: 5
                },
                mac10_reload_01: {
                    name: "audio/guns/mac10_reload_01.mp3",
                    volume: 1
                },
                mac10_switch_01: {
                    name: "audio/guns/mac10_switch_01.mp3",
                    volume: 1
                },
                ump9_01: {
                    name: "audio/guns/ump9_01.mp3",
                    volume: 1,
                    maxInstances: 5
                },
                ump9_reload_01: {
                    name: "audio/guns/ump9_reload_01.mp3",
                    volume: 1
                },
                ump9_switch_01: {
                    name: "audio/guns/ump9_switch_01.mp3",
                    volume: 1
                },
                vector_01: {
                    name: "audio/guns/vector_01.mp3",
                    volume: 1,
                    maxInstances: 5
                },
                vector_reload_01: {
                    name: "audio/guns/vector_reload_01.mp3",
                    volume: 1
                },
                vector_switch_01: {
                    name: "audio/guns/vector_switch_01.mp3",
                    volume: 1
                },
                famas_01: {
                    name: "audio/guns/famas_01.mp3",
                    volume: 1,
                    maxInstances: 5
                },
                famas_reload_01: {
                    name: "audio/guns/famas_reload_01.mp3",
                    volume: 1
                },
                famas_switch_01: {
                    name: "audio/guns/famas_switch_01.mp3",
                    volume: 1
                },
                hk416_01: {
                    name: "audio/guns/hk416_01.mp3",
                    volume: 1,
                    maxInstances: 5
                },
                hk416_reload_01: {
                    name: "audio/guns/hk416_reload_01.mp3",
                    volume: 1
                },
                hk416_switch_01: {
                    name: "audio/guns/hk416_switch_01.mp3",
                    volume: 1
                },
                mk12_01: {
                    name: "audio/guns/mk12_01.mp3",
                    volume: 1,
                    maxInstances: 5
                },
                mk12_reload_01: {
                    name: "audio/guns/mk12_reload_01.mp3",
                    volume: 1
                },
                mk12_switch_01: {
                    name: "audio/guns/mk12_switch_01.mp3",
                    volume: 1
                },
                m249_01: {
                    name: "audio/guns/m249_01.mp3",
                    volume: 1,
                    maxInstances: 5
                },
                m249_reload_01: {
                    name: "audio/guns/m249_reload_01.mp3",
                    volume: 1
                },
                m249_switch_01: {
                    name: "audio/guns/m249_switch_01.mp3",
                    volume: 1
                },
                qbb97_01: {
                    name: "audio/guns/qbb97_01.mp3",
                    volume: 1,
                    maxInstances: 5
                },
                qbb97_reload_01: {
                    name: "audio/guns/qbb97_reload_01.mp3",
                    volume: 1
                },
                qbb97_switch_01: {
                    name: "audio/guns/qbb97_switch_01.mp3",
                    volume: 1
                },
                mosin_01: {
                    name: "audio/guns/mosin_01.mp3",
                    volume: 1,
                    maxInstances: 5
                },
                mosin_reload_01: {
                    name: "audio/guns/mosin_reload_01.mp3",
                    volume: 1
                },
                mosin_cycle_01: {
                    name: "audio/guns/mosin_cycle_01.mp3",
                    volume: 1
                },
                mosin_pull_01: {
                    name: "audio/guns/mosin_pull_01.mp3",
                    volume: 1
                },
                sv98_01: {
                    name: "audio/guns/sv98_01.mp3",
                    volume: 1,
                    maxInstances: 5
                },
                sv98_reload_01: {
                    name: "audio/guns/sv98_reload_01.mp3",
                    volume: 1
                },
                sv98_cycle_01: {
                    name: "audio/guns/sv98_cycle_01.mp3",
                    volume: 1
                },
                sv98_pull_01: {
                    name: "audio/guns/sv98_pull_01.mp3",
                    volume: 1
                },
                awc_01: {
                    name: "audio/guns/awc_01.mp3",
                    volume: 1,
                    maxInstances: 5
                },
                awc_reload_01: {
                    name: "audio/guns/awc_reload_01.mp3",
                    volume: 1
                },
                awc_cycle_01: {
                    name: "audio/guns/awc_cycle_01.mp3",
                    volume: 1
                },
                awc_pull_01: {
                    name: "audio/guns/awc_pull_01.mp3",
                    volume: 1
                },
                empty_fire_01: {
                    name: "audio/guns/empty_fire_01.mp3",
                    volume: .9
                },
                empty_fire_02: {
                    name: "audio/guns/empty_fire_02.mp3",
                    volume: .9
                },
                gun_switch_01: {
                    name: "audio/guns/gun_switch_01.mp3",
                    volume: 1
                },
                bandage_use_01: {
                    name: "audio/ui/bandage_use_01.mp3",
                    volume: 1
                },
                healthkit_use_01: {
                    name: "audio/ui/healthkit_use_01.mp3",
                    volume: 1
                },
                soda_use_01: {
                    name: "audio/ui/soda_use_01.mp3",
                    volume: 1
                },
                pills_use_01: {
                    name: "audio/ui/pills_use_01.mp3",
                    volume: 1
                }
            },
            hits: {
                stone_bullet_hit_01: {
                    name: "audio/hits/stone_bullet_hit_01.mp3",
                    volume: 1,
                    canCoalesce: !0,
                    maxInstances: 3
                },
                wood_bullet_hit_01: {
                    name: "audio/hits/wood_bullet_hit_01.mp3",
                    volume: 1,
                    canCoalesce: !0,
                    maxInstances: 3
                },
                wood_bullet_hit_02: {
                    name: "audio/hits/wood_bullet_hit_02.mp3",
                    volume: 1,
                    canCoalesce: !0,
                    maxInstances: 3
                },
                wood_bullet_hit_03: {
                    name: "audio/hits/wood_bullet_hit_03.mp3",
                    volume: 1,
                    canCoalesce: !0,
                    maxInstances: 3
                },
                wood_bullet_hit_04: {
                    name: "audio/hits/wood_bullet_hit_04.mp3",
                    volume: 1,
                    canCoalesce: !0,
                    maxInstances: 3
                },
                bush_bullet_hit_01: {
                    name: "audio/hits/bush_bullet_hit_01.mp3",
                    volume: 1,
                    canCoalesce: !0,
                    maxInstances: 3
                },
                metal_bullet_hit_01: {
                    name: "audio/hits/metal_bullet_hit_01.mp3",
                    volume: 1,
                    canCoalesce: !0,
                    maxInstances: 3
                },
                metal_bullet_hit_03: {
                    name: "audio/hits/metal_bullet_hit_03.mp3",
                    volume: 1,
                    canCoalesce: !0,
                    maxInstances: 3
                },
                metal_bullet_hit_04: {
                    name: "audio/hits/metal_bullet_hit_04.mp3",
                    volume: 1,
                    canCoalesce: !0,
                    maxInstances: 6
                },
                pan_bullet_hit_01: {
                    name: "audio/hits/pan_bullet_hit_01.mp3",
                    volume: 1,
                    canCoalesce: !0,
                    maxInstances: 6
                },
                brick_bullet_hit_01: {
                    name: "audio/hits/brick_bullet_hit_01.mp3",
                    volume: 1,
                    canCoalesce: !0,
                    maxInstances: 3
                },
                punch_hit_01: {
                    name: "audio/hits/punch_hit_01.mp3",
                    volume: 1
                },
                knife_hit_01: {
                    name: "audio/hits/knife_hit_01.mp3",
                    volume: 1
                },
                pan_hit_01: {
                    name: "audio/hits/pan_hit_01.mp3",
                    volume: 1
                },
                axe_hit_01: {
                    name: "audio/hits/axe_hit_01.mp3",
                    volume: 1
                },
                hook_hit_01: {
                    name: "audio/hits/hook_hit_01.mp3",
                    volume: 1
                },
                metal_punch_hit_01: {
                    name: "audio/hits/metal_punch_hit_01.mp3",
                    volume: 1
                },
                metal_punch_hit_02: {
                    name: "audio/hits/metal_punch_hit_02.mp3",
                    volume: 1
                },
                player_bullet_hit_01: {
                    name: "audio/hits/player_bullet_hit_01.mp3",
                    volume: 1,
                    canCoalesce: !0,
                    maxInstances: 3
                },
                player_bullet_hit_02: {
                    name: "audio/hits/player_bullet_hit_02.mp3",
                    volume: 1,
                    canCoalesce: !0
                },
                plastic_bullet_hit_01: {
                    name: "audio/hits/plastic_bullet_hit_01.mp3",
                    volume: 1,
                    canCoalesce: !0,
                    maxInstances: 3
                },
                toilet_bullet_hit_01: {
                    name: "audio/hits/toilet_bullet_hit_01.mp3",
                    volume: 1,
                    canCoalesce: !0,
                    maxInstances: 3
                },
                toilet_bullet_hit_02: {
                    name: "audio/hits/toilet_bullet_hit_02.mp3",
                    volume: 1,
                    canCoalesce: !0,
                    maxInstances: 3
                },
                glass_bullet_hit_01: {
                    name: "audio/hits/glass_bullet_hit_01.mp3",
                    volume: 1,
                    canCoalesce: !0,
                    maxInstances: 3
                },
                concrete_hit_01: {
                    name: "audio/hits/concrete_hit_01.mp3",
                    volume: 1,
                    canCoalesce: !0,
                    maxInstances: 3
                },
                frag_grass_01: {
                    name: "audio/hits/frag_grass_01.mp3",
                    volume: 1,
                    canCoalesce: !0,
                    maxInstances: 3
                },
                frag_sand_01: {
                    name: "audio/hits/frag_sand_01.mp3",
                    volume: 1,
                    canCoalesce: !0,
                    maxInstances: 3
                },
                frag_water_01: {
                    name: "audio/hits/frag_water_01.mp3",
                    volume: 1,
                    canCoalesce: !0,
                    maxInstances: 3
                }
            },
            sfx: {
                crate_break_01: {
                    name: "audio/sfx/crate_break_01.mp3",
                    volume: 1
                },
                crate_break_02: {
                    name: "audio/sfx/crate_break_02.mp3",
                    volume: 1
                },
                tree_break_01: {
                    name: "audio/sfx/tree_break_01.mp3",
                    volume: 1
                },
                bush_break_01: {
                    name: "audio/sfx/bush_break_01.mp3",
                    volume: 1
                },
                bush_enter_01: {
                    name: "audio/sfx/bush_enter_01.mp3",
                    volume: 1,
                    canCoalesce: !0
                },
                barrel_break_01: {
                    name: "audio/sfx/barrel_break_01.mp3",
                    volume: 1
                },
                barrel_break_02: {
                    name: "audio/sfx/barrel_break_02.mp3",
                    volume: 1
                },
                stone_break_01: {
                    name: "audio/sfx/stone_break_01.mp3",
                    volume: 1
                },
                wall_break_01: {
                    name: "audio/sfx/wall_break_01.mp3",
                    volume: 1
                },
                ceiling_break_01: {
                    name: "audio/sfx/ceiling_break_01.mp3",
                    volume: 1
                },
                toilet_break_01: {
                    name: "audio/sfx/toilet_break_01.mp3",
                    volume: 1
                },
                toilet_break_02: {
                    name: "audio/sfx/toilet_break_02.mp3",
                    volume: 1
                },
                vending_break_01: {
                    name: "audio/sfx/vending_break_01.mp3",
                    volume: 1
                },
                window_break_01: {
                    name: "audio/sfx/window_break_01.mp3",
                    volume: 1
                },
                window_break_02: {
                    name: "audio/sfx/window_break_02.mp3",
                    volume: 1
                },
                drawers_break_01: {
                    name: "audio/sfx/drawers_break_01.mp3",
                    volume: 1
                },
                oven_break_01: {
                    name: "audio/sfx/oven_break_01.mp3",
                    volume: 1
                },
                deposit_box_break_01: {
                    name: "audio/sfx/deposit_box_break_01.mp3",
                    volume: 1
                },
                footstep_grass_01: {
                    name: "audio/sfx/footstep_grass_01.mp3",
                    volume: 1
                },
                footstep_grass_02: {
                    name: "audio/sfx/footstep_grass_02.mp3",
                    volume: 1
                },
                footstep_metal_01: {
                    name: "audio/sfx/footstep_metal_01.mp3",
                    volume: 1
                },
                footstep_metal_02: {
                    name: "audio/sfx/footstep_metal_02.mp3",
                    volume: 1
                },
                footstep_metal_03: {
                    name: "audio/sfx/footstep_metal_03.mp3",
                    volume: 1
                },
                footstep_metal_04: {
                    name: "audio/sfx/footstep_metal_04.mp3",
                    volume: 1
                },
                footstep_metal_05: {
                    name: "audio/sfx/footstep_metal_05.mp3",
                    volume: 1
                },
                footstep_wood_01: {
                    name: "audio/sfx/footstep_wood_01.mp3",
                    volume: 1
                },
                footstep_wood_02: {
                    name: "audio/sfx/footstep_wood_02.mp3",
                    volume: 1
                },
                footstep_wood_03: {
                    name: "audio/sfx/footstep_wood_03.mp3",
                    volume: 1
                },
                footstep_sand_01: {
                    name: "audio/sfx/footstep_sand_01.mp3",
                    volume: 1
                },
                footstep_sand_02: {
                    name: "audio/sfx/footstep_sand_02.mp3",
                    volume: 1
                },
                footstep_water_01: {
                    name: "audio/sfx/footstep_water_01.mp3",
                    volume: 1
                },
                footstep_water_02: {
                    name: "audio/sfx/footstep_water_02.mp3",
                    volume: 1
                },
                footstep_tile_01: {
                    name: "audio/sfx/footstep_tile_01.mp3",
                    volume: 1
                },
                footstep_tile_02: {
                    name: "audio/sfx/footstep_tile_02.mp3",
                    volume: 1
                },
                footstep_asphalt_01: {
                    name: "audio/sfx/footstep_asphalt_01.mp3",
                    volume: 1
                },
                footstep_asphalt_02: {
                    name: "audio/sfx/footstep_asphalt_02.mp3",
                    volume: 1
                },
                footstep_brick_01: {
                    name: "audio/sfx/footstep_brick_01.mp3",
                    volume: 1
                },
                punch_swing_01: {
                    name: "audio/sfx/punch_swing_01.mp3",
                    volume: 1
                },
                knife_swing_01: {
                    name: "audio/sfx/knife_swing_01.mp3",
                    volume: 1
                },
                heavy_swing_01: {
                    name: "audio/sfx/heavy_swing_01.mp3",
                    volume: 1
                },
                bullet_whiz_01: {
                    name: "audio/sfx/bullet_whiz_01.mp3",
                    volume: 1
                },
                bullet_whiz_02: {
                    name: "audio/sfx/bullet_whiz_02.mp3",
                    volume: 1
                },
                bullet_whiz_03: {
                    name: "audio/sfx/bullet_whiz_03.mp3",
                    volume: 1
                },
                frag_throw_01: {
                    name: "audio/sfx/frag_throw_01.mp3",
                    volume: 1
                },
                frag_pin_01: {
                    name: "audio/sfx/frag_pin_01.mp3",
                    volume: 1
                },
                frag_deploy_01: {
                    name: "audio/ui/frag_pickup_01.mp3",
                    volume: 1
                },
                explosion_01: {
                    name: "audio/sfx/explosion_01.mp3",
                    volume: 1
                },
                explosion_02: {
                    name: "audio/sfx/explosion_02.mp3",
                    volume: 1
                },
                explosion_smoke_01: {
                    name: "audio/sfx/explosion_smoke_01.mp3",
                    volume: 1
                },
                stow_weapon_01: {
                    name: "audio/ui/stow_weapon_01.mp3",
                    volume: 1
                },
                knife_deploy_01: {
                    name: "audio/ui/knife_deploy_01.mp3",
                    volume: 1
                },
                pan_pickup_01: {
                    name: "audio/ui/pan_pickup_01.mp3",
                    volume: 1
                },
                door_open_01: {
                    name: "audio/sfx/door_open_01.mp3",
                    volume: 1
                },
                door_close_01: {
                    name: "audio/sfx/door_close_01.mp3",
                    volume: 1
                },
                door_open_02: {
                    name: "audio/sfx/door_open_02.mp3",
                    volume: 1
                },
                door_close_02: {
                    name: "audio/sfx/door_close_02.mp3",
                    volume: 1
                },
                door_open_03: {
                    name: "audio/sfx/door_open_03.mp3",
                    volume: 1
                },
                door_close_03: {
                    name: "audio/sfx/door_close_03.mp3",
                    volume: 1
                },
                door_error_01: {
                    name: "audio/sfx/door_error_01.mp3",
                    volume: 1
                },
                vault_change_01: {
                    name: "audio/sfx/vault_change_01.mp3",
                    volume: 1
                },
                cell_control_01: {
                    name: "audio/sfx/cell_control_01.mp3",
                    volume: 1
                },
                plane_01: {
                    name: "audio/sfx/plane_01.mp3",
                    volume: 1
                },
                airdrop_chute_01: {
                    name: "audio/sfx/airdrop_chute_01.mp3",
                    volume: 1
                },
                airdrop_fall_01: {
                    name: "audio/sfx/airdrop_fall_01.mp3",
                    volume: 1
                },
                airdrop_crash_01: {
                    name: "audio/sfx/airdrop_crash_01.mp3",
                    volume: 1
                },
                airdrop_crash_02: {
                    name: "audio/sfx/airdrop_crash_02.mp3",
                    volume: 1
                },
                airdrop_open_01: {
                    name: "audio/sfx/airdrop_open_01.mp3",
                    volume: 1
                },
                airdrop_open_02: {
                    name: "audio/sfx/airdrop_open_02.mp3",
                    volume: 1
                }
            },
            ambient: {
                ambient_wind_01: {
                    name: "audio/ambient/ambient_wind_01.mp3",
                    volume: 1
                },
                ambient_waves_01: {
                    name: "audio/ambient/ambient_waves_01.mp3",
                    volume: 1
                }
            },
            ui: {
                ammo_pickup_01: {
                    name: "audio/ui/ammo_pickup_01.mp3",
                    volume: 1
                },
                clothes_pickup_01: {
                    name: "audio/ui/clothes_pickup_01.mp3",
                    volume: 1
                },
                helmet_pickup_01: {
                    name: "audio/ui/helmet_pickup_01.mp3",
                    volume: 1
                },
                chest_pickup_01: {
                    name: "audio/ui/chest_pickup_01.mp3",
                    volume: 1
                },
                gun_pickup_01: {
                    name: "audio/ui/gun_pickup_01.mp3",
                    volume: 1
                },
                scope_pickup_01: {
                    name: "audio/ui/scope_pickup_01.mp3",
                    volume: 1
                },
                pack_pickup_01: {
                    name: "audio/ui/pack_pickup_01.mp3",
                    volume: 1
                },
                soda_pickup_01: {
                    name: "audio/ui/soda_pickup_01.mp3",
                    volume: 1
                },
                pills_pickup_01: {
                    name: "audio/ui/pills_pickup_01.mp3",
                    volume: 1
                },
                bandage_pickup_01: {
                    name: "audio/ui/bandage_pickup_01.mp3",
                    volume: 1
                },
                healthkit_pickup_01: {
                    name: "audio/ui/healthkit_pickup_01.mp3",
                    volume: 1
                },
                frag_pickup_01: {
                    name: "audio/ui/frag_pickup_01.mp3",
                    volume: 1
                },
                heavy_pickup_01: {
                    name: "audio/ui/heavy_pickup_01.mp3",
                    volume: 1
                },
                pan_pickup_01: {
                    name: "audio/ui/pan_pickup_01.mp3",
                    volume: 1
                },
                ping_danger_01: {
                    name: "audio/ui/ping_danger_01.mp3",
                    volume: 1
                },
                ping_coming_01: {
                    name: "audio/ui/ping_coming_01.mp3",
                    volume: 1
                },
                ping_help_01: {
                    name: "audio/ui/ping_help_01.mp3",
                    volume: 1
                },
                ping_airdrop_01: {
                    name: "audio/ui/ping_airdrop_01.mp3",
                    volume: 1
                },
                emote_01: {
                    name: "audio/ui/emote_01.mp3",
                    volume: 1
                },
                loot_drop_01: {
                    name: "audio/ui/loot_drop_01.mp3",
                    volume: 1
                },
                notification_start_01: {
                    name: "audio/ui/notification_start_01.mp3",
                    volume: 1
                },
                notification_join_01: {
                    name: "audio/ui/notification_join_01.mp3",
                    volume: 1
                }
            },
            music: {
                menu_music: {
                    name: "audio/ambient/menu_music_01.mp3",
                    volume: 1
                }
            }
        }
          , r = {
            footstep_grass: {
                channel: "sfx",
                sounds: ["footstep_grass_01", "footstep_grass_02"]
            },
            footstep_container: {
                channel: "sfx",
                sounds: ["footstep_metal_03"]
            },
            footstep_warehouse: {
                channel: "sfx",
                sounds: ["footstep_metal_01", "footstep_metal_02"]
            },
            footstep_house: {
                channel: "sfx",
                sounds: ["footstep_wood_02", "footstep_wood_03"]
            },
            footstep_shack: {
                channel: "sfx",
                sounds: ["footstep_wood_01"]
            },
            footstep_sand: {
                channel: "sfx",
                sounds: ["footstep_sand_01", "footstep_sand_02"]
            },
            footstep_water: {
                channel: "sfx",
                sounds: ["footstep_water_01", "footstep_water_02"]
            },
            footstep_tile: {
                channel: "sfx",
                sounds: ["footstep_tile_01", "footstep_tile_02"]
            },
            footstep_asphalt: {
                channel: "sfx",
                sounds: ["footstep_asphalt_01", "footstep_asphalt_02"]
            },
            footstep_brick: {
                channel: "sfx",
                sounds: ["footstep_brick_01"]
            },
            footstep_bunker: {
                channel: "sfx",
                sounds: ["footstep_metal_04", "footstep_metal_05"]
            },
            player_bullet_hit: {
                channel: "hits",
                sounds: ["player_bullet_hit_01"]
            },
            metal_punch: {
                channel: "hits",
                sounds: ["metal_punch_hit_01", "metal_punch_hit_02"]
            },
            wall_bullet: {
                channel: "hits",
                sounds: ["metal_bullet_hit_01"]
            },
            wall_wood_bullet: {
                channel: "hits",
                sounds: ["wood_bullet_hit_02"]
            },
            wall_brick_bullet: {
                channel: "hits",
                sounds: ["brick_bullet_hit_01"]
            },
            stone_bullet: {
                channel: "hits",
                sounds: ["stone_bullet_hit_01"]
            },
            barrel_bullet: {
                channel: "hits",
                sounds: ["metal_bullet_hit_03"]
            },
            pan_bullet: {
                channel: "hits",
                sounds: ["pan_bullet_hit_01"]
            },
            silo_bullet: {
                channel: "hits",
                sounds: ["metal_bullet_hit_04"]
            },
            toilet_porc_bullet: {
                channel: "hits",
                sounds: ["toilet_bullet_hit_01"]
            },
            toilet_metal_bullet: {
                channel: "hits",
                sounds: ["toilet_bullet_hit_02"]
            },
            glass_bullet: {
                channel: "hits",
                sounds: ["glass_bullet_hit_01"]
            },
            concrete_hit: {
                channel: "hits",
                sounds: ["concrete_hit_01"]
            },
            wood_prop_bullet: {
                channel: "hits",
                sounds: ["wood_bullet_hit_03"]
            },
            wood_crate_bullet: {
                channel: "hits",
                sounds: ["wood_bullet_hit_04"]
            },
            ammo_crate_bullet: {
                channel: "hits",
                sounds: ["plastic_bullet_hit_01"]
            },
            bush_bullet: {
                channel: "hits",
                sounds: ["bush_bullet_hit_01"]
            },
            tree_bullet: {
                channel: "hits",
                sounds: ["wood_bullet_hit_01"]
            },
            player_bullet_grunt: {
                channel: "hits",
                sounds: ["player_bullet_hit_02"]
            },
            bullet_whiz: {
                channel: "sfx",
                sounds: ["bullet_whiz_01", "bullet_whiz_02", "bullet_whiz_03"]
            },
            frag_grass: {
                channel: "hits",
                sounds: ["frag_grass_01"]
            },
            frag_sand: {
                channel: "hits",
                sounds: ["frag_sand_01"]
            },
            frag_water: {
                channel: "hits",
                sounds: ["frag_water_01"]
            }
        }
          , o = {
            activePlayer: {
                volume: .5,
                maxRange: 48,
                list: "players",
                name: "activePlayer",
                type: "sound"
            },
            otherPlayers: {
                volume: .5,
                maxRange: 48,
                list: "players",
                name: "otherPlayers",
                type: "sound"
            },
            hits: {
                volume: .4,
                maxRange: 48,
                list: "hits",
                name: "hits",
                type: "sound"
            },
            sfx: {
                volume: 1,
                maxRange: 48,
                list: "sfx",
                name: "sfx",
                type: "sound"
            },
            ambient: {
                volume: 1,
                maxRange: 1,
                list: "ambient",
                name: "ambient",
                type: "sound"
            },
            ui: {
                volume: .75,
                maxRange: 48,
                list: "ui",
                name: "ui",
                type: "sound"
            },
            music: {
                volume: 1,
                maxRange: 1,
                list: "music",
                name: "music",
                type: "music"
            }
        }
          , n = {
            cathedral: {
                name: "audio/reverb/cathedral_01.mp3",
                volume: .7,
                stereoSpread: .004
            },
            cave: {
                name: "audio/reverb/cave_mono_01.mp3",
                volume: .7,
                echoVolume: .5,
                echoDelay: .25,
                echoLowPass: 800,
                stereoSpread: .004
            }
        };
        e.exports = {
            Sounds: i,
            Groups: r,
            Channels: o,
            Reverbs: n
        }
    },
    "989ad62a": function(e, t, a) {
        "use strict";
        e.exports = {
            Action: {
                None: 0,
                Reload: 1,
                UseItem: 2,
                Revive: 3
            },
            WeaponSlot: {
                Primary: 0,
                Secondary: 1,
                Throwable: 3,
                Melee: 2,
                Count: 4
            },
            WeaponType: ["gun", "gun", "melee", "throwable"],
            DamageType: {
                Player: 0,
                Bleeding: 1,
                Gas: 2,
                Airdrop: 3
            },
            Anim: {
                None: 0,
                Melee: 1,
                Cook: 2,
                Throw: 3,
                CrawlForward: 4,
                CrawlBackward: 5,
                Revive: 6
            },
            GasMode: {
                Inactive: 0,
                Waiting: 1,
                Moving: 2
            },
            protocolVersion: 31,
            map: {
                baseWidth: 512,
                baseHeight: 512,
                gridSize: 16,
                shoreDivisions: 64,
                shoreInset: 48,
                shoreVariation: 3,
                grassInset: 18,
                grassVariation: 2,
                extension: 112
            },
            player: {
                radius: 1,
                maxVisualRadius: 3.75,
                maxInteractionRad: 3.5,
                minActiveTime: 10,
                moveSpeed: 12,
                health: 100,
                boostDecay: .375,
                boostMoveSpeed: 1.9,
                boostHealAmount: .33,
                boostBreakpoints: [1, 1, 1.5, .5],
                scopeDelay: .25,
                baseSwitchDelay: .25,
                freeSwitchCooldown: 1,
                headshotChance: .15,
                spectateDeadTimeout: 2,
                bleedTickRate: 1,
                bleedDamage: 2,
                downedMoveSpeed: 4,
                downedRezMoveSpeed: 2,
                reviveDuration: 8,
                reviveMaxRange: 5,
                reviveHealth: 24,
                crawlTime: .75,
                emoteSoftCooldown: 2,
                emoteHardCooldown: 6,
                emoteThreshold: 6,
                throwableMaxMouseDist: 18,
                cookTime: .1,
                throwTime: .3,
                cookSpeedPenalty: 3,
                waterSpeedPenalty: 3,
                meleeHeight: .25
            },
            airdrop: {
                fallTime: 8,
                crushDamage: 100,
                planeVel: 48,
                planeRad: 150
            },
            teamColors: [16776960, 255, 16711680, 16711935],
            bullet: {
                maxReflect: 3,
                reflectDistDecay: 1.5,
                height: .25
            },
            projectile: {
                maxHeight: 2
            },
            explosions: {
                explosion_frag: {
                    damage: 125,
                    obstacleDamage: 1.1,
                    rad: {
                        min: 5,
                        max: 12
                    },
                    shrapnelCount: 12,
                    shrapnelType: "shrapnel_frag",
                    explosionType: "frag",
                    decalType: "decal_frag_explosion"
                },
                explosion_smoke: {
                    damage: 0,
                    obstacleDamage: 1,
                    rad: {
                        min: 5,
                        max: 12
                    },
                    shrapnelCount: 0,
                    shrapnelType: "shrapnel_frag",
                    explosionType: "smoke",
                    decalType: "decal_smoke_explosion"
                },
                explosion_barrel: {
                    damage: 125,
                    obstacleDamage: 1,
                    rad: {
                        min: 5,
                        max: 12
                    },
                    shrapnelCount: 12,
                    shrapnelType: "shrapnel_barrel",
                    explosionType: "barrel",
                    decalType: "decal_barrel_explosion"
                }
            },
            bullets: {
                bullet_mp5: {
                    damage: 11,
                    obstacleDamage: 1,
                    falloff: .8,
                    distance: 100,
                    speed: 85,
                    variance: 0,
                    shrapnel: !1,
                    tracerColor: "9mm",
                    tracerWidth: .1,
                    tracerLength: .7
                },
                bullet_ak47: {
                    damage: 13.5,
                    obstacleDamage: 1,
                    falloff: .9,
                    distance: 200,
                    speed: 100,
                    variance: 0,
                    shrapnel: !1,
                    tracerColor: "762mm",
                    tracerWidth: .1,
                    tracerLength: .9
                },
                bullet_scar: {
                    damage: 15,
                    obstacleDamage: 1,
                    falloff: .85,
                    distance: 175,
                    speed: 108,
                    variance: 0,
                    shrapnel: !1,
                    tracerColor: "762mm",
                    tracerWidth: .1,
                    tracerLength: .9
                },
                bullet_mosin: {
                    damage: 72,
                    obstacleDamage: 1.5,
                    falloff: .95,
                    distance: 500,
                    speed: 178,
                    variance: 0,
                    shrapnel: !1,
                    tracerColor: "762mm",
                    tracerWidth: .16,
                    tracerLength: 1
                },
                bullet_sv98: {
                    damage: 80,
                    obstacleDamage: 1.5,
                    falloff: .96,
                    distance: 520,
                    speed: 182,
                    variance: 0,
                    shrapnel: !1,
                    tracerColor: "762mm",
                    tracerWidth: .2,
                    tracerLength: 1
                },
                bullet_awc: {
                    damage: 180,
                    obstacleDamage: 1.5,
                    falloff: .94,
                    distance: 300,
                    speed: 136,
                    variance: 0,
                    shrapnel: !1,
                    tracerColor: "308sub",
                    tracerWidth: .2,
                    tracerLength: 1
                },
                bullet_m39: {
                    damage: 24.5,
                    obstacleDamage: 1,
                    falloff: .9,
                    distance: 400,
                    speed: 125,
                    variance: 0,
                    shrapnel: !1,
                    tracerColor: "762mm",
                    tracerWidth: .1,
                    tracerLength: .9
                },
                bullet_garand: {
                    damage: 32,
                    obstacleDamage: 1,
                    falloff: .9,
                    distance: 400,
                    speed: 130,
                    variance: 0,
                    shrapnel: !1,
                    tracerColor: "762mm",
                    tracerWidth: .12,
                    tracerLength: .9
                },
                bullet_buckshot: {
                    damage: 12.5,
                    obstacleDamage: 1,
                    falloff: .3,
                    speed: 66,
                    distance: 27,
                    variance: 0,
                    shrapnel: !1,
                    tracerColor: "12gauge",
                    tracerWidth: .1,
                    tracerLength: .8
                },
                bullet_flechette: {
                    damage: 8.75,
                    obstacleDamage: 1,
                    falloff: .85,
                    speed: 88,
                    distance: 45,
                    variance: 0,
                    shrapnel: !1,
                    tracerColor: "12gauge",
                    tracerWidth: .075,
                    tracerLength: .5
                },
                bullet_m9: {
                    damage: 12,
                    obstacleDamage: 1,
                    falloff: .7,
                    speed: 85,
                    distance: 100,
                    variance: 0,
                    shrapnel: !1,
                    tracerColor: "9mm",
                    tracerWidth: .1,
                    tracerLength: .7
                },
                bullet_ot38: {
                    damage: 26,
                    obstacleDamage: 1,
                    falloff: .75,
                    speed: 112,
                    distance: 125,
                    variance: 0,
                    shrapnel: !1,
                    tracerColor: "762mm",
                    tracerWidth: .09,
                    tracerLength: .8
                },
                bullet_deagle: {
                    damage: 35,
                    obstacleDamage: 1,
                    falloff: .75,
                    speed: 115,
                    distance: 120,
                    variance: 0,
                    shrapnel: !1,
                    tracerColor: "50AE",
                    tracerWidth: .12,
                    tracerLength: .8
                },
                bullet_mac10: {
                    damage: 9.25,
                    obstacleDamage: 1,
                    falloff: .6,
                    distance: 50,
                    speed: 75,
                    variance: 0,
                    shrapnel: !1,
                    tracerColor: "9mm",
                    tracerWidth: .1,
                    tracerLength: .7
                },
                bullet_ump9: {
                    damage: 15,
                    obstacleDamage: 1,
                    falloff: .75,
                    distance: 100,
                    speed: 100,
                    variance: 0,
                    shrapnel: !1,
                    tracerColor: "9mm",
                    tracerWidth: .1,
                    tracerLength: .7
                },
                bullet_vector: {
                    damage: 7.5,
                    obstacleDamage: 1,
                    falloff: .6,
                    distance: 46,
                    speed: 88,
                    variance: 0,
                    shrapnel: !1,
                    tracerColor: "9mm",
                    tracerWidth: .1,
                    tracerLength: .7
                },
                bullet_dp28: {
                    damage: 14,
                    obstacleDamage: 1.5,
                    falloff: .9,
                    distance: 225,
                    speed: 110,
                    variance: 0,
                    shrapnel: !1,
                    tracerColor: "762mm",
                    tracerWidth: .1,
                    tracerLength: .9
                },
                bullet_glock: {
                    damage: 9,
                    obstacleDamage: 1,
                    falloff: .5,
                    speed: 70,
                    distance: 44,
                    variance: 0,
                    shrapnel: !1,
                    tracerColor: "9mm",
                    tracerWidth: .1,
                    tracerLength: .7
                },
                bullet_famas: {
                    damage: 17,
                    obstacleDamage: 1,
                    falloff: .8,
                    distance: 150,
                    speed: 110,
                    variance: 0,
                    shrapnel: !1,
                    tracerColor: "556mm",
                    tracerWidth: .1,
                    tracerLength: .9
                },
                bullet_hk416: {
                    damage: 11,
                    obstacleDamage: 1,
                    falloff: .85,
                    distance: 175,
                    speed: 105,
                    variance: 0,
                    shrapnel: !1,
                    tracerColor: "556mm",
                    tracerWidth: .1,
                    tracerLength: .9
                },
                bullet_mk12: {
                    damage: 19.5,
                    obstacleDamage: 1,
                    falloff: .9,
                    distance: 400,
                    speed: 132,
                    variance: 0,
                    shrapnel: !1,
                    tracerColor: "556mm",
                    tracerWidth: .1,
                    tracerLength: .9
                },
                bullet_m249: {
                    damage: 14,
                    obstacleDamage: 1.75,
                    falloff: .9,
                    distance: 220,
                    speed: 125,
                    variance: 0,
                    shrapnel: !1,
                    tracerColor: "556mm",
                    tracerWidth: .1,
                    tracerLength: .9
                },
                bullet_qbb97: {
                    damage: 14,
                    obstacleDamage: 1.5,
                    falloff: .9,
                    distance: 200,
                    speed: 118,
                    variance: 0,
                    shrapnel: !1,
                    tracerColor: "556mm",
                    tracerWidth: .1,
                    tracerLength: .9
                },
                bullet_flare: {
                    damage: 0,
                    obstacleDamage: 1,
                    falloff: 10,
                    distance: 16,
                    speed: 4,
                    variance: 0,
                    shrapnel: !1,
                    tracerColor: "flare",
                    tracerWidth: .3,
                    tracerLength: 1.2,
                    flareColor: 16733184,
                    addFlare: !0,
                    maxFlareScale: 2
                },
                shrapnel_barrel: {
                    damage: 2,
                    obstacleDamage: 1,
                    falloff: 1,
                    speed: 20,
                    distance: 8,
                    variance: 1.5,
                    shrapnel: !0,
                    tracerColor: "shrapnel",
                    tracerWidth: .125,
                    tracerLength: .6
                },
                shrapnel_frag: {
                    damage: 20,
                    obstacleDamage: 1,
                    falloff: 1,
                    speed: 20,
                    distance: 8,
                    variance: 1.5,
                    shrapnel: !0,
                    tracerColor: "shrapnel",
                    tracerWidth: .125,
                    tracerLength: .6
                }
            },
            tracerColors: {
                "9mm": {
                    regular: 16704198,
                    saturated: 16767411
                },
                "762mm": {
                    regular: 12965630,
                    saturated: 11257087
                },
                "12gauge": {
                    regular: 16702684,
                    saturated: 16702684
                },
                "556mm": {
                    regular: 11141010,
                    saturated: 11141010
                },
                "50AE": {
                    regular: 16773256,
                    saturated: 16773256
                },
                "308sub": {
                    regular: 2435840,
                    saturated: 4608e3,
                    alphaRate: .97,
                    alphaMin: .12
                },
                flare: {
                    regular: 14869218,
                    saturated: 14869218
                },
                shrapnel: {
                    regular: 3355443,
                    saturated: 3355443
                }
            },
            items: {
                outfitBase: {
                    name: "Basic Outfit",
                    type: "skin",
                    skinImg: {
                        baseTint: 16303476,
                        baseSprite: "player-base-01.img",
                        handTint: 16303476,
                        handSprite: "player-hands-01.img",
                        footTint: 16303476,
                        footSprite: "player-feet-01.img",
                        backpackTint: 8480055,
                        backpackSprite: "player-circle-base-01.img"
                    },
                    lootImg: {
                        sprite: "loot-shirt-01.img",
                        scale: .2,
                        tint: 16303476
                    },
                    sound: {
                        pickup: "clothes_pickup_01"
                    }
                },
                outfitHeaven: {
                    name: "Celestial Garb",
                    type: "skin",
                    subtype: "normal",
                    rad: 1,
                    skinImg: {
                        baseTint: 16777215,
                        baseSprite: "player-base-03.img",
                        baseScale: 1,
                        handTint: 13762639,
                        handSprite: "player-hands-02.img",
                        footTint: 13762639,
                        footSprite: "player-feet-02.img",
                        backpackTint: 36503,
                        backpackSprite: "player-circle-base-02.img"
                    },
                    lootImg: {
                        sprite: "loot-shirt-02.img",
                        scale: .2,
                        rad: 16,
                        border: !0,
                        tint: 16777215
                    },
                    sound: {
                        pickup: "clothes_pickup_01"
                    }
                },
                outfitMeteor: {
                    name: "Falling Star",
                    type: "skin",
                    subtype: "normal",
                    rad: 1,
                    skinImg: {
                        baseTint: 9764864,
                        baseSprite: "player-base-02.img",
                        baseScale: 1,
                        handTint: 16742400,
                        handSprite: "player-hands-02.img",
                        footTint: 16742400,
                        footSprite: "player-feet-02.img",
                        backpackTint: 4727582,
                        backpackSprite: "player-circle-base-02.img"
                    },
                    lootImg: {
                        sprite: "loot-shirt-01.img",
                        scale: .2,
                        rad: 16,
                        border: !0,
                        tint: 9764864
                    },
                    sound: {
                        pickup: "clothes_pickup_01"
                    }
                },
                outfitIslander: {
                    name: "Island Time",
                    type: "skin",
                    skinImg: {
                        baseTint: 16762368,
                        baseSprite: "player-base-01.img",
                        handTint: 148992,
                        handSprite: "player-hands-01.img",
                        footTint: 148992,
                        footSprite: "player-feet-01.img",
                        backpackTint: 4495104,
                        backpackSprite: "player-circle-base-01.img"
                    },
                    lootImg: {
                        sprite: "loot-shirt-01.img",
                        scale: .2,
                        tint: 16762368
                    },
                    sound: {
                        pickup: "clothes_pickup_01"
                    }
                },
                outfitAqua: {
                    name: "Aquatic Avenger",
                    type: "skin",
                    skinImg: {
                        baseTint: 47778,
                        baseSprite: "player-base-01.img",
                        handTint: 65502,
                        handSprite: "player-hands-01.img",
                        footTint: 65502,
                        footSprite: "player-feet-01.img",
                        backpackTint: 536620,
                        backpackSprite: "player-circle-base-01.img"
                    },
                    lootImg: {
                        sprite: "loot-shirt-01.img",
                        scale: .2,
                        tint: 47778
                    },
                    sound: {
                        pickup: "clothes_pickup_01"
                    }
                },
                outfitCoral: {
                    name: "Coral Guise",
                    type: "skin",
                    skinImg: {
                        baseTint: 16736103,
                        baseSprite: "player-base-01.img",
                        handTint: 16746895,
                        handSprite: "player-hands-01.img",
                        footTint: 16746895,
                        footSprite: "player-feet-01.img",
                        backpackTint: 16772298,
                        backpackSprite: "player-circle-base-01.img"
                    },
                    lootImg: {
                        sprite: "loot-shirt-01.img",
                        scale: .2,
                        tint: 16736103
                    },
                    sound: {
                        pickup: "clothes_pickup_01"
                    }
                },
                outfitKhaki: {
                    name: "The Initiative",
                    type: "skin",
                    skinImg: {
                        baseTint: 12824197,
                        baseSprite: "player-base-01.img",
                        handTint: 9404516,
                        handSprite: "player-hands-01.img",
                        footTint: 9404516,
                        footSprite: "player-feet-01.img",
                        backpackTint: 4208940,
                        backpackSprite: "player-circle-base-01.img"
                    },
                    lootImg: {
                        sprite: "loot-shirt-01.img",
                        scale: .2,
                        tint: 12824197
                    },
                    sound: {
                        pickup: "clothes_pickup_01"
                    }
                },
                outfitCasanova: {
                    name: "Casanova Silks",
                    type: "skin",
                    skinImg: {
                        baseTint: 4327436,
                        baseSprite: "player-base-01.img",
                        handTint: 7602183,
                        handSprite: "player-hands-01.img",
                        footTint: 7602183,
                        footSprite: "player-feet-01.img",
                        backpackTint: 1052688,
                        backpackSprite: "player-circle-base-01.img"
                    },
                    lootImg: {
                        sprite: "loot-shirt-01.img",
                        scale: .2,
                        tint: 4327436
                    },
                    sound: {
                        pickup: "clothes_pickup_01"
                    }
                },
                outfitPrisoner: {
                    name: "The New Black",
                    type: "skin",
                    skinImg: {
                        baseTint: 16735266,
                        baseSprite: "player-base-01.img",
                        handTint: 16545059,
                        handSprite: "player-hands-01.img",
                        footTint: 16545059,
                        footSprite: "player-feet-01.img",
                        backpackTint: 16756224,
                        backpackSprite: "player-circle-base-01.img"
                    },
                    lootImg: {
                        sprite: "loot-shirt-01.img",
                        scale: .2,
                        tint: 16735266
                    },
                    sound: {
                        pickup: "clothes_pickup_01"
                    }
                },
                outfitJester: {
                    name: "Jester's Folly",
                    type: "skin",
                    skinImg: {
                        baseTint: 7798904,
                        baseSprite: "player-base-01.img",
                        handTint: 4915276,
                        handSprite: "player-hands-01.img",
                        footTint: 4915276,
                        footSprite: "player-feet-01.img",
                        backpackTint: 936960,
                        backpackSprite: "player-circle-base-01.img"
                    },
                    lootImg: {
                        sprite: "loot-shirt-01.img",
                        scale: .2,
                        tint: 7798904
                    },
                    sound: {
                        pickup: "clothes_pickup_01"
                    }
                },
                outfitWoodland: {
                    name: "Woodland Combat",
                    type: "skin",
                    skinImg: {
                        baseTint: 2831146,
                        baseSprite: "player-base-01.img",
                        handTint: 5925970,
                        handSprite: "player-hands-01.img",
                        footTint: 5925970,
                        footSprite: "player-feet-01.img",
                        backpackTint: 5056e3,
                        backpackSprite: "player-circle-base-01.img"
                    },
                    lootImg: {
                        sprite: "loot-shirt-01.img",
                        scale: .2,
                        tint: 2831146
                    },
                    sound: {
                        pickup: "clothes_pickup_01"
                    }
                },
                outfitRoyalFortune: {
                    name: "Royal Fortune",
                    type: "skin",
                    skinImg: {
                        baseTint: 8333091,
                        baseSprite: "player-base-01.img",
                        handTint: 15254058,
                        handSprite: "player-hands-01.img",
                        footTint: 15254058,
                        footSprite: "player-feet-01.img",
                        backpackTint: 9981696,
                        backpackSprite: "player-circle-base-01.img"
                    },
                    lootImg: {
                        sprite: "loot-shirt-01.img",
                        scale: .2,
                        tint: 8333091
                    },
                    sound: {
                        pickup: "clothes_pickup_01"
                    }
                },
                outfitKeyLime: {
                    name: "Key Lime",
                    type: "skin",
                    skinImg: {
                        baseTint: 13107007,
                        baseSprite: "player-base-01.img",
                        handTint: 15662941,
                        handSprite: "player-hands-01.img",
                        footTint: 15662941,
                        footSprite: "player-feet-01.img",
                        backpackTint: 12355383,
                        backpackSprite: "player-circle-base-01.img"
                    },
                    lootImg: {
                        sprite: "loot-shirt-01.img",
                        scale: .2,
                        tint: 13107007
                    },
                    sound: {
                        pickup: "clothes_pickup_01"
                    }
                },
                outfitCobaltShell: {
                    name: "Cobalt Shell",
                    type: "skin",
                    skinImg: {
                        baseTint: 11095,
                        baseSprite: "player-base-01.img",
                        handTint: 2711164,
                        handSprite: "player-hands-01.img",
                        footTint: 2711164,
                        footSprite: "player-feet-01.img",
                        backpackTint: 19093,
                        backpackSprite: "player-circle-base-01.img"
                    },
                    lootImg: {
                        sprite: "loot-shirt-01.img",
                        scale: .2,
                        tint: 11095
                    },
                    sound: {
                        pickup: "clothes_pickup_01"
                    }
                },
                outfitCarbonFiber: {
                    name: "Carbon Fiber",
                    type: "skin",
                    skinImg: {
                        baseTint: 2171169,
                        baseSprite: "player-base-01.img",
                        handTint: 1842204,
                        handSprite: "player-hands-01.img",
                        footTint: 1842204,
                        footSprite: "player-feet-01.img",
                        backpackTint: 3552822,
                        backpackSprite: "player-circle-base-01.img"
                    },
                    lootImg: {
                        sprite: "loot-shirt-01.img",
                        scale: .2,
                        tint: 2171169
                    },
                    sound: {
                        pickup: "clothes_pickup_01"
                    }
                },
                outfitDarkGloves: {
                    name: "The Professional",
                    type: "skin",
                    skinImg: {
                        baseTint: 16303476,
                        baseSprite: "player-base-01.img",
                        handTint: 12482560,
                        handSprite: "player-hands-01.img",
                        footTint: 12482560,
                        footSprite: "player-feet-01.img",
                        backpackTint: 10708736,
                        backpackSprite: "player-circle-base-01.img"
                    },
                    lootImg: {
                        sprite: "loot-shirt-01.img",
                        scale: .2,
                        tint: 12482560
                    },
                    sound: {
                        pickup: "clothes_pickup_01"
                    }
                },
                outfitGhillie: {
                    name: "Ghillie Suit",
                    type: "skin",
                    camo: !0,
                    skinImg: {
                        baseTint: 8630096,
                        baseSprite: "player-base-01.img",
                        handTint: 8630096,
                        handSprite: "player-hands-01.img",
                        footTint: 8630096,
                        footSprite: "player-feet-01.img",
                        backpackTint: 6697728,
                        backpackSprite: "player-circle-base-01.img"
                    },
                    lootImg: {
                        sprite: "loot-shirt-01.img",
                        scale: .2,
                        tint: 8630096
                    },
                    sound: {
                        pickup: "clothes_pickup_01"
                    }
                },
                outfitCamo: {
                    name: "Forest Camo",
                    type: "skin",
                    skinImg: {
                        baseTint: 10066278,
                        baseSprite: "player-base-01.img",
                        handTint: 8684631,
                        handSprite: "player-hands-01.img",
                        footTint: 8684631,
                        footSprite: "player-feet-01.img",
                        backpackTint: 6710835,
                        backpackSprite: "player-circle-base-01.img"
                    },
                    lootImg: {
                        sprite: "loot-shirt-01.img",
                        scale: .2,
                        tint: 10066278
                    },
                    sound: {
                        pickup: "clothes_pickup_01"
                    }
                },
                outfitRed: {
                    name: "Target Practice",
                    type: "skin",
                    skinImg: {
                        baseTint: 16711680,
                        baseSprite: "player-base-01.img",
                        handTint: 13893632,
                        handSprite: "player-hands-01.img",
                        footTint: 13893632,
                        footSprite: "player-feet-01.img",
                        backpackTint: 11993088,
                        backpackSprite: "player-circle-base-01.img"
                    },
                    lootImg: {
                        sprite: "loot-shirt-01.img",
                        scale: .2,
                        tint: 16711680
                    },
                    sound: {
                        pickup: "clothes_pickup_01"
                    }
                },
                outfitWhite: {
                    name: "Arctic Avenger",
                    type: "skin",
                    skinImg: {
                        baseTint: 14935011,
                        baseSprite: "player-base-01.img",
                        handTint: 15658734,
                        handSprite: "player-hands-01.img",
                        footTint: 15658734,
                        footSprite: "player-feet-01.img",
                        backpackTint: 14474460,
                        backpackSprite: "player-circle-base-01.img"
                    },
                    lootImg: {
                        sprite: "loot-shirt-01.img",
                        scale: .2,
                        tint: 14935011
                    },
                    sound: {
                        pickup: "clothes_pickup_01"
                    }
                },
                fists: {
                    name: "Fists",
                    type: "melee",
                    autoAttack: !1,
                    switchDelay: .25,
                    attackOffset: {
                        x: 1.35,
                        y: 0
                    },
                    attackRad: .9,
                    damageTime: .1,
                    cooldownTime: .15,
                    damage: 24,
                    obstacleDamage: 1,
                    headshotMult: 1,
                    speed: {
                        equip: 1,
                        attack: 0
                    },
                    anim: {
                        idlePose: "fists",
                        attackAnims: ["fists"]
                    },
                    sound: {
                        swing: "punch_swing_01",
                        deploy: "stow_weapon_01",
                        playerHit: "punch_hit_01"
                    },
                    lootImg: {
                        sprite: "loot-weapon-fists.img",
                        scale: .3,
                        rad: 25,
                        border: !0,
                        tint: 65280
                    }
                },
                karambit_rugged: {
                    name: "Karambit Rugged",
                    type: "melee",
                    autoAttack: !1,
                    switchDelay: .25,
                    attackOffset: {
                        x: 1.35,
                        y: 0
                    },
                    attackRad: .9,
                    damageTime: .1,
                    cooldownTime: .15,
                    damage: 27,
                    obstacleDamage: 1,
                    headshotMult: 1,
                    speed: {
                        equip: 1,
                        attack: 0
                    },
                    anim: {
                        idlePose: "slash",
                        attackAnims: ["slash", "fists"]
                    },
                    sound: {
                        pickup: "frag_pickup_01",
                        swing: "knife_swing_01",
                        deploy: "knife_deploy_01",
                        playerHit: "knife_hit_01"
                    },
                    lootImg: {
                        sprite: "loot-melee-karambit-rugged.img",
                        scale: .3,
                        tint: 16777215,
                        mirror: !0,
                        rot: 2.35619
                    },
                    worldImg: {
                        sprite: "loot-melee-karambit-rugged.img",
                        pos: {
                            x: 15.5,
                            y: -5
                        },
                        rot: .5 * Math.PI,
                        scale: {
                            x: .35,
                            y: .35
                        },
                        tint: 16777215
                    }
                },
                karambit_prismatic: {
                    name: "Karambit Prismatic",
                    type: "melee",
                    autoAttack: !1,
                    switchDelay: .25,
                    attackOffset: {
                        x: 1.35,
                        y: 0
                    },
                    attackRad: .9,
                    damageTime: .1,
                    cooldownTime: .15,
                    damage: 27,
                    obstacleDamage: 1,
                    headshotMult: 1,
                    speed: {
                        equip: 1,
                        attack: 0
                    },
                    anim: {
                        idlePose: "slash",
                        attackAnims: ["slash", "fists"]
                    },
                    sound: {
                        pickup: "frag_pickup_01",
                        swing: "knife_swing_01",
                        deploy: "knife_deploy_01",
                        playerHit: "knife_hit_01"
                    },
                    lootImg: {
                        sprite: "loot-melee-karambit-prismatic.img",
                        scale: .3,
                        tint: 16777215,
                        mirror: !0,
                        rot: 2.35619
                    },
                    worldImg: {
                        sprite: "loot-melee-karambit-prismatic.img",
                        pos: {
                            x: 15.5,
                            y: -5
                        },
                        rot: .5 * Math.PI,
                        scale: {
                            x: .35,
                            y: .35
                        },
                        tint: 16777215
                    }
                },
                bayonet_rugged: {
                    name: "Bayonet Rugged",
                    type: "melee",
                    autoAttack: !1,
                    switchDelay: .25,
                    attackOffset: {
                        x: 1.35,
                        y: 0
                    },
                    attackRad: .9,
                    damageTime: .1,
                    cooldownTime: .15,
                    damage: 27,
                    obstacleDamage: 1,
                    headshotMult: 1,
                    speed: {
                        equip: 1,
                        attack: 0
                    },
                    anim: {
                        idlePose: "fists",
                        attackAnims: ["cut", "thrust"]
                    },
                    sound: {
                        pickup: "frag_pickup_01",
                        swing: "knife_swing_01",
                        deploy: "knife_deploy_01",
                        playerHit: "knife_hit_01"
                    },
                    lootImg: {
                        sprite: "loot-melee-bayonet-rugged.img",
                        scale: .3,
                        tint: 16777215,
                        rot: .785
                    },
                    worldImg: {
                        sprite: "loot-melee-bayonet-rugged.img",
                        pos: {
                            x: -.5,
                            y: -32.5
                        },
                        rot: .785,
                        scale: {
                            x: .35,
                            y: .35
                        },
                        tint: 16777215
                    }
                },
                bayonet_woodland: {
                    name: "Bayonet Woodland",
                    type: "melee",
                    autoAttack: !1,
                    switchDelay: .25,
                    attackOffset: {
                        x: 1.35,
                        y: 0
                    },
                    attackRad: .9,
                    damageTime: .1,
                    cooldownTime: .15,
                    damage: 27,
                    obstacleDamage: 1,
                    headshotMult: 1,
                    speed: {
                        equip: 1,
                        attack: 0
                    },
                    anim: {
                        idlePose: "fists",
                        attackAnims: ["cut", "thrust"]
                    },
                    sound: {
                        pickup: "frag_pickup_01",
                        swing: "knife_swing_01",
                        deploy: "knife_deploy_01",
                        playerHit: "knife_hit_01"
                    },
                    lootImg: {
                        sprite: "loot-melee-bayonet-woodland.img",
                        scale: .3,
                        tint: 16777215,
                        rot: .785
                    },
                    worldImg: {
                        sprite: "loot-melee-bayonet-woodland.img",
                        pos: {
                            x: -.5,
                            y: -32.5
                        },
                        rot: .785,
                        scale: {
                            x: .35,
                            y: .35
                        },
                        tint: 16777215
                    }
                },
                huntsman_rugged: {
                    name: "Huntsman Rugged",
                    type: "melee",
                    autoAttack: !1,
                    switchDelay: .25,
                    attackOffset: {
                        x: 1.35,
                        y: 0
                    },
                    attackRad: .9,
                    damageTime: .1,
                    cooldownTime: .15,
                    damage: 27,
                    obstacleDamage: 1,
                    headshotMult: 1,
                    speed: {
                        equip: 1,
                        attack: 0
                    },
                    anim: {
                        idlePose: "fists",
                        attackAnims: ["cut", "thrust"]
                    },
                    sound: {
                        pickup: "frag_pickup_01",
                        swing: "knife_swing_01",
                        deploy: "knife_deploy_01",
                        playerHit: "knife_hit_01"
                    },
                    lootImg: {
                        sprite: "loot-melee-huntsman-rugged.img",
                        scale: .3,
                        tint: 16777215,
                        rot: .785
                    },
                    worldImg: {
                        sprite: "loot-melee-huntsman-rugged.img",
                        pos: {
                            x: 2.5,
                            y: -35.5
                        },
                        rot: .82,
                        scale: {
                            x: .35,
                            y: .35
                        },
                        tint: 16777215
                    }
                },
                huntsman_burnished: {
                    name: "Huntsman Burnished",
                    type: "melee",
                    autoAttack: !1,
                    switchDelay: .25,
                    attackOffset: {
                        x: 1.35,
                        y: 0
                    },
                    attackRad: .9,
                    damageTime: .1,
                    cooldownTime: .15,
                    damage: 27,
                    obstacleDamage: 1,
                    headshotMult: 1,
                    speed: {
                        equip: 1,
                        attack: 0
                    },
                    anim: {
                        idlePose: "fists",
                        attackAnims: ["cut", "thrust"]
                    },
                    sound: {
                        pickup: "frag_pickup_01",
                        swing: "knife_swing_01",
                        deploy: "knife_deploy_01",
                        playerHit: "knife_hit_01"
                    },
                    lootImg: {
                        sprite: "loot-melee-huntsman-burnished.img",
                        scale: .3,
                        tint: 16777215,
                        rot: .785
                    },
                    worldImg: {
                        sprite: "loot-melee-huntsman-burnished.img",
                        pos: {
                            x: 2.5,
                            y: -35.5
                        },
                        rot: .82,
                        scale: {
                            x: .35,
                            y: .35
                        },
                        tint: 16777215
                    }
                },
                woodaxe: {
                    name: "Wood Axe",
                    type: "melee",
                    armorPiercing: !0,
                    autoAttack: !1,
                    switchDelay: .25,
                    attackOffset: {
                        x: 1.35,
                        y: 0
                    },
                    attackRad: 1,
                    damageTime: .18,
                    cooldownTime: .18,
                    damage: 36,
                    obstacleDamage: 1.92,
                    headshotMult: 1,
                    speed: {
                        equip: 1,
                        attack: 0
                    },
                    anim: {
                        idlePose: "meleeTwoHanded",
                        attackAnims: ["twoHandSwing"]
                    },
                    sound: {
                        pickup: "heavy_pickup_01",
                        swing: "heavy_swing_01",
                        deploy: "stow_weapon_01",
                        playerHit: "axe_hit_01"
                    },
                    lootImg: {
                        sprite: "loot-melee-woodaxe.img",
                        scale: .3,
                        tint: 16777215,
                        mirror: !0,
                        rot: 2.35619
                    },
                    worldImg: {
                        sprite: "loot-melee-woodaxe.img",
                        pos: {
                            x: -12.5,
                            y: -16
                        },
                        rot: 1.2,
                        scale: {
                            x: .35,
                            y: .35
                        },
                        tint: 16777215,
                        leftHandOntop: !0
                    }
                },
                hook: {
                    name: "Hook",
                    type: "melee",
                    autoAttack: !0,
                    switchDelay: .25,
                    attackOffset: {
                        x: 1.5,
                        y: 0
                    },
                    attackRad: 1,
                    damageTime: .075,
                    cooldownTime: .1,
                    damage: 18,
                    obstacleDamage: 1,
                    headshotMult: 1,
                    speed: {
                        equip: 1,
                        attack: 0
                    },
                    anim: {
                        idlePose: "fists",
                        attackAnims: ["hook"]
                    },
                    sound: {
                        pickup: "frag_pickup_01",
                        swing: "knife_swing_01",
                        deploy: "stow_weapon_01",
                        playerHit: "hook_hit_01"
                    },
                    lootImg: {
                        sprite: "loot-melee-hook-silver.img",
                        scale: .3,
                        tint: 16777215,
                        rot: .785
                    },
                    worldImg: {
                        sprite: "loot-melee-hook-silver.img",
                        pos: {
                            x: 0,
                            y: -27
                        },
                        rot: .5 * Math.PI,
                        scale: {
                            x: .35,
                            y: .35
                        },
                        tint: 16777215,
                        renderOnHand: !0
                    }
                },
                pan: {
                    name: "Pan",
                    type: "melee",
                    autoAttack: !1,
                    switchDelay: .25,
                    attackOffset: {
                        x: 2,
                        y: 0
                    },
                    attackRad: 1.5,
                    damageTime: .15,
                    cooldownTime: .35,
                    damage: 60,
                    obstacleDamage: .8,
                    headshotMult: 1,
                    speed: {
                        equip: 1,
                        attack: 0
                    },
                    anim: {
                        idlePose: "fists",
                        attackAnims: ["pan"]
                    },
                    sound: {
                        pickup: "pan_pickup_01",
                        swing: "heavy_swing_01",
                        deploy: "pan_pickup_01",
                        playerHit: "pan_hit_01",
                        bullet: "pan_bullet"
                    },
                    lootImg: {
                        sprite: "loot-melee-pan-black.img",
                        scale: .3,
                        tint: 16777215,
                        rot: -.785
                    },
                    worldImg: {
                        sprite: "loot-melee-pan-black-side.img",
                        pos: {
                            x: 0,
                            y: -40
                        },
                        rot: 1.125,
                        scale: {
                            x: .35,
                            y: .35
                        },
                        tint: 16777215
                    },
                    hipImg: {
                        sprite: "loot-melee-pan-black-side.img",
                        pos: {
                            x: -17.25,
                            y: 7.5
                        },
                        rot: .78 * Math.PI,
                        scale: {
                            x: .3,
                            y: .3
                        },
                        tint: 16777215
                    },
                    reflectSurface: {
                        equipped: {
                            p0: {
                                x: 2.65,
                                y: -.125
                            },
                            p1: {
                                x: 1.35,
                                y: -.74
                            }
                        },
                        unequipped: {
                            p0: {
                                x: -.625,
                                y: -1.2
                            },
                            p1: {
                                x: -1.4,
                                y: -.25
                            }
                        }
                    }
                },
                mp5: {
                    name: "MP5",
                    type: "gun",
                    fireMode: "auto",
                    reloadMode: "mag",
                    caseTiming: "shoot",
                    ammo: "9mm",
                    ammoSpawnCount: 90,
                    maxClip: 30,
                    maxReload: 30,
                    reloadTime: 2,
                    fireDelay: .09,
                    switchDelay: .75,
                    barrelLength: 2.625,
                    recoilTime: 1e10,
                    moveSpread: 4,
                    shotSpread: 3,
                    bulletCount: 1,
                    bulletType: "bullet_mp5",
                    headshotMult: 2,
                    speed: {
                        equip: 0,
                        attack: 0
                    },
                    lootImg: {
                        sprite: "loot-weapon-mp5.img",
                        scale: .3,
                        tint: 65280
                    },
                    worldImg: {
                        sprite: "gun-med-01.img",
                        scale: {
                            x: .5,
                            y: .49
                        },
                        tint: 1184274,
                        leftHandOffset: 0,
                        recoil: 1
                    },
                    particle: {
                        shellScale: 1,
                        shellOffset: .375
                    },
                    sound: {
                        shoot: "mp5_01",
                        reload: "mp5_reload_01",
                        pickup: "gun_pickup_01",
                        empty: "empty_fire_01",
                        deploy: "mp5_switch_01"
                    }
                },
                mac10: {
                    name: "MAC-10",
                    type: "gun",
                    fireMode: "auto",
                    reloadMode: "mag",
                    caseTiming: "shoot",
                    ammo: "9mm",
                    ammoSpawnCount: 96,
                    maxClip: 32,
                    maxReload: 32,
                    reloadTime: 1.8,
                    fireDelay: .045,
                    switchDelay: .75,
                    barrelLength: 2.45,
                    recoilTime: 1e10,
                    moveSpread: 11,
                    shotSpread: 10,
                    bulletCount: 1,
                    bulletType: "bullet_mac10",
                    headshotMult: 2,
                    speed: {
                        equip: 0,
                        attack: 0
                    },
                    lootImg: {
                        sprite: "loot-weapon-mac10.img",
                        scale: .3,
                        tint: 65280
                    },
                    worldImg: {
                        sprite: "gun-med-01.img",
                        scale: {
                            x: .5,
                            y: .44
                        },
                        tint: 3684408,
                        leftHandOffset: 1.4,
                        recoil: 1
                    },
                    particle: {
                        shellScale: 1,
                        shellOffset: .35
                    },
                    sound: {
                        shoot: "mac10_01",
                        reload: "mac10_reload_01",
                        pickup: "gun_pickup_01",
                        empty: "empty_fire_01",
                        deploy: "mac10_switch_01"
                    }
                },
                ump9: {
                    name: "UMP9",
                    type: "gun",
                    fireMode: "burst",
                    reloadMode: "mag",
                    caseTiming: "shoot",
                    ammo: "9mm",
                    ammoSpawnCount: 90,
                    maxClip: 30,
                    maxReload: 30,
                    reloadTime: 1.9,
                    fireDelay: .35,
                    burstDelay: .07,
                    switchDelay: .75,
                    barrelLength: 2.7,
                    recoilTime: 1e10,
                    moveSpread: 3,
                    shotSpread: 1.5,
                    bulletCount: 1,
                    burstCount: 3,
                    bulletType: "bullet_ump9",
                    headshotMult: 2,
                    speed: {
                        equip: 0,
                        attack: 0
                    },
                    lootImg: {
                        sprite: "loot-weapon-ump9.img",
                        scale: .3,
                        tint: 65280
                    },
                    worldImg: {
                        sprite: "gun-med-01.img",
                        scale: {
                            x: .5,
                            y: .515
                        },
                        tint: 1184274,
                        leftHandOffset: 5.6,
                        recoil: 1
                    },
                    particle: {
                        shellScale: 1,
                        shellOffset: .4
                    },
                    sound: {
                        shoot: "ump9_01",
                        reload: "ump9_reload_01",
                        pickup: "gun_pickup_01",
                        empty: "empty_fire_01",
                        deploy: "ump9_switch_01"
                    }
                },
                vector: {
                    name: "Vector",
                    type: "gun",
                    fireMode: "auto",
                    reloadMode: "mag",
                    caseTiming: "shoot",
                    ammo: "9mm",
                    ammoSpawnCount: 99,
                    maxClip: 33,
                    maxReload: 33,
                    reloadTime: 1.6,
                    fireDelay: .038,
                    switchDelay: .75,
                    barrelLength: 2.5,
                    recoilTime: 1e10,
                    moveSpread: 4.5,
                    shotSpread: 2.5,
                    bulletCount: 1,
                    bulletType: "bullet_vector",
                    headshotMult: 2,
                    speed: {
                        equip: 0,
                        attack: 0
                    },
                    lootImg: {
                        sprite: "loot-weapon-vector.img",
                        scale: .3,
                        tint: 65280
                    },
                    worldImg: {
                        sprite: "gun-med-01.img",
                        scale: {
                            x: .5,
                            y: .5
                        },
                        tint: 9009504,
                        leftHandOffset: 7,
                        recoil: .89
                    },
                    particle: {
                        shellScale: 1,
                        shellOffset: .4
                    },
                    sound: {
                        shoot: "vector_01",
                        reload: "vector_reload_01",
                        pickup: "gun_pickup_01",
                        empty: "empty_fire_01",
                        deploy: "vector_switch_01"
                    }
                },
                famas: {
                    name: "FAMAS",
                    type: "gun",
                    fireMode: "burst",
                    reloadMode: "mag",
                    caseTiming: "shoot",
                    ammo: "556mm",
                    ammoSpawnCount: 75,
                    maxClip: 25,
                    maxReload: 25,
                    reloadTime: 2.3,
                    fireDelay: .35,
                    burstDelay: .07,
                    switchDelay: .75,
                    barrelLength: 2.95,
                    recoilTime: 1e10,
                    moveSpread: 2,
                    shotSpread: 1.1,
                    bulletCount: 1,
                    burstCount: 3,
                    bulletType: "bullet_famas",
                    headshotMult: 2,
                    speed: {
                        equip: 0,
                        attack: 0
                    },
                    lootImg: {
                        sprite: "loot-weapon-famas.img",
                        scale: .3,
                        tint: 65280
                    },
                    worldImg: {
                        sprite: "gun-med-01.img",
                        scale: {
                            x: .5,
                            y: .53
                        },
                        tint: 10061929,
                        leftHandOffset: 5.6,
                        recoil: 1.33
                    },
                    particle: {
                        shellScale: 1,
                        shellOffset: .425
                    },
                    sound: {
                        shoot: "famas_01",
                        reload: "famas_reload_01",
                        pickup: "gun_pickup_01",
                        empty: "empty_fire_01",
                        deploy: "famas_switch_01"
                    }
                },
                hk416: {
                    name: "M416",
                    type: "gun",
                    fireMode: "auto",
                    reloadMode: "mag",
                    caseTiming: "shoot",
                    ammo: "556mm",
                    ammoSpawnCount: 90,
                    maxClip: 30,
                    maxReload: 30,
                    reloadTime: 2.3,
                    fireDelay: .075,
                    switchDelay: .75,
                    barrelLength: 2.7,
                    recoilTime: 1e10,
                    moveSpread: 8,
                    shotSpread: 4,
                    bulletCount: 1,
                    bulletType: "bullet_hk416",
                    headshotMult: 2,
                    speed: {
                        equip: 0,
                        attack: 0
                    },
                    lootImg: {
                        sprite: "loot-weapon-hk416.img",
                        scale: .3,
                        tint: 65280
                    },
                    worldImg: {
                        sprite: "gun-med-01.img",
                        scale: {
                            x: .5,
                            y: .52
                        },
                        tint: 14402714,
                        leftHandOffset: 4.2,
                        recoil: 1.33
                    },
                    particle: {
                        shellScale: 1,
                        shellOffset: .4
                    },
                    sound: {
                        shoot: "hk416_01",
                        reload: "hk416_reload_01",
                        pickup: "gun_pickup_01",
                        empty: "empty_fire_01",
                        deploy: "hk416_switch_01"
                    }
                },
                mk12: {
                    name: "Mk 12 SPR",
                    type: "gun",
                    fireMode: "single",
                    reloadMode: "mag",
                    caseTiming: "shoot",
                    ammo: "556mm",
                    ammoSpawnCount: 60,
                    maxClip: 20,
                    maxReload: 20,
                    reloadTime: 2.4,
                    fireDelay: .15,
                    switchDelay: .75,
                    barrelLength: 3.5,
                    recoilTime: 1e10,
                    moveSpread: 3,
                    shotSpread: 1,
                    bulletCount: 1,
                    bulletType: "bullet_mk12",
                    headshotMult: 2,
                    speed: {
                        equip: 0,
                        attack: 0
                    },
                    lootImg: {
                        sprite: "loot-weapon-mk12.img",
                        scale: .3,
                        tint: 65280
                    },
                    worldImg: {
                        sprite: "gun-long-01.img",
                        scale: {
                            x: .5,
                            y: .485
                        },
                        tint: 10984586,
                        leftHandOffset: 4.2,
                        recoil: 1.66
                    },
                    particle: {
                        shellScale: 1.3,
                        shellOffset: .55
                    },
                    sound: {
                        shoot: "mk12_01",
                        reload: "mk12_reload_01",
                        pickup: "gun_pickup_01",
                        empty: "empty_fire_02",
                        deploy: "mk12_switch_01"
                    }
                },
                m249: {
                    name: "M249",
                    type: "gun",
                    fireMode: "auto",
                    reloadMode: "mag",
                    caseTiming: "shoot",
                    ammo: "556mm",
                    ammoSpawnCount: 200,
                    maxClip: 100,
                    maxReload: 100,
                    reloadTime: 6.7,
                    fireDelay: .08,
                    switchDelay: .75,
                    barrelLength: 3.75,
                    recoilTime: 1e10,
                    moveSpread: 6,
                    shotSpread: 1.5,
                    bulletCount: 1,
                    bulletType: "bullet_m249",
                    headshotMult: 2,
                    speed: {
                        equip: 0,
                        attack: -4
                    },
                    lootImg: {
                        sprite: "loot-weapon-m249.img",
                        scale: .3,
                        tint: 65280
                    },
                    worldImg: {
                        sprite: "gun-long-01.img",
                        scale: {
                            x: .5,
                            y: .525
                        },
                        tint: 3618613,
                        leftHandOffset: 11.2,
                        recoil: 1.33,
                        magImg: {
                            sprite: "gun-m249-bot-01.img",
                            pos: {
                                x: 0,
                                y: -16.5
                            }
                        }
                    },
                    particle: {
                        shellScale: 1,
                        shellOffset: .5875
                    },
                    sound: {
                        shoot: "m249_01",
                        reload: "m249_reload_01",
                        pickup: "gun_pickup_01",
                        empty: "empty_fire_02",
                        deploy: "m249_switch_01"
                    }
                },
                qbb97: {
                    name: "QBB-97",
                    type: "gun",
                    fireMode: "auto",
                    reloadMode: "mag",
                    caseTiming: "shoot",
                    ammo: "556mm",
                    ammoSpawnCount: 150,
                    maxClip: 75,
                    maxReload: 75,
                    reloadTime: 3.9,
                    fireDelay: .1,
                    switchDelay: .75,
                    barrelLength: 3.1,
                    recoilTime: 1e10,
                    moveSpread: .5,
                    shotSpread: 4,
                    bulletCount: 1,
                    bulletType: "bullet_qbb97",
                    headshotMult: 2,
                    speed: {
                        equip: 0,
                        attack: -2
                    },
                    lootImg: {
                        sprite: "loot-weapon-qbb97.img",
                        scale: .3,
                        tint: 65280
                    },
                    worldImg: {
                        sprite: "gun-long-01.img",
                        scale: {
                            x: .5,
                            y: .425
                        },
                        tint: 1973790,
                        leftHandOffset: 8.4,
                        recoil: 1.33,
                        magImg: {
                            sprite: "gun-qbb97-bot-01.img",
                            pos: {
                                x: -1.5,
                                y: -14.25
                            }
                        }
                    },
                    particle: {
                        shellScale: 1,
                        shellOffset: .5875
                    },
                    sound: {
                        shoot: "qbb97_01",
                        reload: "qbb97_reload_01",
                        pickup: "gun_pickup_01",
                        empty: "empty_fire_02",
                        deploy: "qbb97_switch_01"
                    }
                },
                ak47: {
                    name: "AK-47",
                    type: "gun",
                    fireMode: "auto",
                    reloadMode: "mag",
                    caseTiming: "shoot",
                    ammo: "762mm",
                    ammoSpawnCount: 90,
                    maxClip: 30,
                    maxReload: 30,
                    reloadTime: 2.5,
                    fireDelay: .1,
                    switchDelay: .75,
                    barrelLength: 3.15,
                    recoilTime: 1e10,
                    moveSpread: 7.5,
                    shotSpread: 2.5,
                    bulletCount: 1,
                    bulletType: "bullet_ak47",
                    headshotMult: 2,
                    speed: {
                        equip: 0,
                        attack: 0
                    },
                    lootImg: {
                        sprite: "loot-weapon-ak.img",
                        scale: .3,
                        tint: 65280
                    },
                    worldImg: {
                        sprite: "gun-long-01.img",
                        scale: {
                            x: .5,
                            y: .435
                        },
                        tint: 6433298,
                        leftHandOffset: 2.8,
                        recoil: 1.33
                    },
                    particle: {
                        shellScale: 1,
                        shellOffset: .45
                    },
                    sound: {
                        shoot: "ak47_01",
                        reload: "ak47_reload_01",
                        pickup: "gun_pickup_01",
                        empty: "empty_fire_02",
                        deploy: "ak47_switch_01"
                    }
                },
                scar: {
                    name: "SCAR-H",
                    type: "gun",
                    fireMode: "auto",
                    reloadMode: "mag",
                    caseTiming: "shoot",
                    ammo: "762mm",
                    ammoSpawnCount: 80,
                    maxClip: 20,
                    maxReload: 20,
                    reloadTime: 2.7,
                    fireDelay: .09,
                    switchDelay: .75,
                    barrelLength: 3.15,
                    recoilTime: 1e10,
                    moveSpread: 5,
                    shotSpread: 2,
                    bulletCount: 1,
                    bulletType: "bullet_scar",
                    headshotMult: 2,
                    speed: {
                        equip: 0,
                        attack: 0
                    },
                    lootImg: {
                        sprite: "loot-weapon-scar.img",
                        scale: .3,
                        tint: 65280
                    },
                    worldImg: {
                        sprite: "gun-long-01.img",
                        scale: {
                            x: .5,
                            y: .435
                        },
                        tint: 10189640,
                        leftHandOffset: 2.8,
                        recoil: 1.33
                    },
                    particle: {
                        shellScale: 1,
                        shellOffset: .45
                    },
                    sound: {
                        shoot: "scar_01",
                        reload: "scar_reload_01",
                        pickup: "gun_pickup_01",
                        empty: "empty_fire_02",
                        deploy: "scar_switch_01"
                    }
                },
                dp28: {
                    name: "DP-28",
                    type: "gun",
                    fireMode: "auto",
                    reloadMode: "mag",
                    caseTiming: "shoot",
                    ammo: "762mm",
                    ammoSpawnCount: 120,
                    maxClip: 60,
                    maxReload: 60,
                    reloadTime: 3.3,
                    fireDelay: .115,
                    switchDelay: .75,
                    barrelLength: 3.75,
                    recoilTime: 1e10,
                    moveSpread: 9,
                    shotSpread: 2,
                    bulletCount: 1,
                    bulletType: "bullet_dp28",
                    headshotMult: 2,
                    speed: {
                        equip: 0,
                        attack: -2
                    },
                    lootImg: {
                        sprite: "loot-weapon-dp28.img",
                        scale: .3,
                        tint: 65280
                    },
                    worldImg: {
                        sprite: "gun-long-01.img",
                        scale: {
                            x: .5,
                            y: .53
                        },
                        tint: 1710618,
                        leftHandOffset: 8.4,
                        recoil: 1.33,
                        magImg: {
                            sprite: "gun-dp28-top-01.img",
                            pos: {
                                x: 0,
                                y: -22.5
                            },
                            top: !0
                        }
                    },
                    particle: {
                        shellScale: 1,
                        shellOffset: .6
                    },
                    sound: {
                        shoot: "dp28_01",
                        reload: "dp28_reload_01",
                        pickup: "gun_pickup_01",
                        empty: "empty_fire_02",
                        deploy: "dp28_switch_01"
                    }
                },
                mosin: {
                    name: "Mosin-Nagant",
                    type: "gun",
                    fireMode: "single",
                    reloadMode: "single",
                    caseTiming: "shoot",
                    ammo: "762mm",
                    ammoSpawnCount: 20,
                    maxClip: 5,
                    maxReload: 1,
                    reloadTime: .9,
                    fireDelay: 2,
                    switchDelay: 1,
                    pullDelay: 1,
                    barrelLength: 3.75,
                    recoilTime: 1e10,
                    moveSpread: 3,
                    shotSpread: 1,
                    bulletCount: 1,
                    bulletType: "bullet_mosin",
                    headshotMult: 1.5,
                    speed: {
                        equip: 0,
                        attack: 0
                    },
                    lootImg: {
                        sprite: "loot-weapon-mosin.img",
                        scale: .3,
                        tint: 65280
                    },
                    worldImg: {
                        sprite: "gun-long-01.img",
                        scale: {
                            x: .5,
                            y: .52
                        },
                        tint: 3348992,
                        leftHandOffset: 2.8,
                        recoil: 2.33
                    },
                    particle: {
                        shellScale: 1.6,
                        shellOffset: .6
                    },
                    sound: {
                        shoot: "mosin_01",
                        reload: "mosin_reload_01",
                        cycle: "mosin_cycle_01",
                        pull: "mosin_pull_01",
                        pickup: "gun_pickup_01",
                        empty: "empty_fire_02",
                        deploy: "mosin_cycle_01"
                    }
                },
                sv98: {
                    name: "SV-98",
                    type: "gun",
                    fireMode: "single",
                    reloadMode: "mag",
                    caseTiming: "shoot",
                    ammo: "762mm",
                    ammoSpawnCount: 30,
                    maxClip: 10,
                    maxReload: 10,
                    reloadTime: 2.7,
                    fireDelay: 1.5,
                    switchDelay: 1,
                    pullDelay: .8,
                    barrelLength: 3.5,
                    recoilTime: 1e10,
                    moveSpread: 2.5,
                    shotSpread: 1,
                    bulletCount: 1,
                    bulletType: "bullet_sv98",
                    headshotMult: 1.5,
                    speed: {
                        equip: 0,
                        attack: 0
                    },
                    lootImg: {
                        sprite: "loot-weapon-sv98.img",
                        scale: .3,
                        tint: 65280
                    },
                    worldImg: {
                        sprite: "gun-long-01.img",
                        scale: {
                            x: .5,
                            y: .4925
                        },
                        tint: 6654279,
                        leftHandOffset: 2.8,
                        recoil: 2.33
                    },
                    particle: {
                        shellScale: 1.6,
                        shellOffset: .6
                    },
                    sound: {
                        shoot: "sv98_01",
                        reload: "sv98_reload_01",
                        cycle: "sv98_cycle_01",
                        pickup: "gun_pickup_01",
                        empty: "empty_fire_02",
                        deploy: "sv98_cycle_01"
                    }
                },
                awc: {
                    name: "AWM-S",
                    type: "gun",
                    fireMode: "single",
                    reloadMode: "mag",
                    caseTiming: "shoot",
                    ammo: "308sub",
                    ammoSpawnCount: 20,
                    maxClip: 1,
                    maxReload: 1,
                    reloadTime: 1.9,
                    fireDelay: 1.5,
                    switchDelay: 1,
                    pullDelay: 1.4,
                    barrelLength: 3.6,
                    recoilTime: 1e10,
                    moveSpread: 4,
                    shotSpread: .5,
                    bulletCount: 1,
                    bulletType: "bullet_awc",
                    headshotMult: 1,
                    speed: {
                        equip: 0,
                        attack: 0
                    },
                    lootImg: {
                        sprite: "loot-weapon-awc.img",
                        scale: .3,
                        tint: 65280
                    },
                    worldImg: {
                        sprite: "gun-long-01.img",
                        scale: {
                            x: .5,
                            y: .505
                        },
                        tint: 2304004,
                        leftHandOffset: 5.6,
                        recoil: 2.66
                    },
                    particle: {
                        shellScale: 1.5,
                        shellOffset: .6
                    },
                    sound: {
                        shoot: "awc_01",
                        reload: "awc_reload_01",
                        cycle: "awc_cycle_01",
                        pull: "awc_pull_01",
                        pickup: "gun_pickup_01",
                        empty: "empty_fire_02",
                        deploy: "awc_cycle_01",
                        fallOff: 3
                    }
                },
                m39: {
                    name: "M39 EMR",
                    type: "gun",
                    fireMode: "single",
                    reloadMode: "mag",
                    caseTiming: "shoot",
                    ammo: "762mm",
                    ammoSpawnCount: 60,
                    maxClip: 20,
                    maxReload: 20,
                    reloadTime: 2.5,
                    fireDelay: .2,
                    switchDelay: .75,
                    barrelLength: 3.5,
                    recoilTime: 1e10,
                    moveSpread: 4.25,
                    shotSpread: 1,
                    bulletCount: 1,
                    bulletType: "bullet_m39",
                    headshotMult: 2,
                    speed: {
                        equip: 0,
                        attack: 0
                    },
                    lootImg: {
                        sprite: "loot-weapon-m39.img",
                        scale: .3,
                        tint: 65280
                    },
                    worldImg: {
                        sprite: "gun-long-01.img",
                        scale: {
                            x: .5,
                            y: .4925
                        },
                        tint: 3355443,
                        leftHandOffset: 2.8,
                        recoil: 1.66
                    },
                    particle: {
                        shellScale: 1.3,
                        shellOffset: .575
                    },
                    sound: {
                        shoot: "m39_01",
                        reload: "m39_reload_01",
                        pickup: "gun_pickup_01",
                        empty: "empty_fire_02",
                        deploy: "m39_switch_01"
                    }
                },
                garand: {
                    name: "M1 Garand",
                    type: "gun",
                    fireMode: "single",
                    reloadMode: "clip",
                    caseTiming: "shoot",
                    ammo: "762mm",
                    ammoSpawnCount: 40,
                    maxClip: 8,
                    maxReload: 8,
                    reloadTime: 2.1,
                    fireDelay: .2,
                    switchDelay: .75,
                    barrelLength: 3.4,
                    recoilTime: .36,
                    moveSpread: 4,
                    shotSpread: 1,
                    bulletCount: 1,
                    bulletType: "bullet_garand",
                    headshotMult: 2,
                    speed: {
                        equip: 0,
                        attack: 0
                    },
                    lootImg: {
                        sprite: "loot-weapon-garand.img",
                        scale: .3,
                        tint: 65280
                    },
                    worldImg: {
                        sprite: "gun-long-01.img",
                        scale: {
                            x: .5,
                            y: .485
                        },
                        tint: 2495506,
                        leftHandOffset: 3.5,
                        recoil: 1.66
                    },
                    particle: {
                        shellScale: 1.3,
                        shellOffset: .575
                    },
                    sound: {
                        shoot: "garand_01",
                        shootLast: "garand_02",
                        reload: "garand_reload_01",
                        pickup: "gun_pickup_01",
                        empty: "empty_fire_02",
                        deploy: "garand_switch_01"
                    }
                },
                m870: {
                    name: "M870",
                    type: "gun",
                    fireMode: "single",
                    reloadMode: "single",
                    caseTiming: "shoot",
                    ammo: "12gauge",
                    ammoSpawnCount: 10,
                    maxClip: 5,
                    maxReload: 1,
                    reloadTime: .75,
                    fireDelay: .9,
                    switchDelay: .9,
                    pullDelay: .9,
                    barrelLength: 3.15,
                    recoilTime: 1e10,
                    moveSpread: 2,
                    shotSpread: 10,
                    bulletCount: 9,
                    jitter: 1,
                    bulletType: "bullet_buckshot",
                    headshotMult: 1.5,
                    lootImg: {
                        sprite: "loot-weapon-pumpshotgun.img",
                        scale: .3,
                        tint: 65280
                    },
                    speed: {
                        equip: 0,
                        attack: 0
                    },
                    worldImg: {
                        sprite: "gun-long-01.img",
                        scale: {
                            x: .5,
                            y: .435
                        },
                        tint: 3348992,
                        leftHandOffset: 7,
                        recoil: 1.33
                    },
                    particle: {
                        shellScale: 1,
                        shellOffset: .45
                    },
                    sound: {
                        shoot: "m870_01",
                        reload: "m870_reload_01",
                        cycle: "m870_cycle_01",
                        pull: "m870_pull_01",
                        pickup: "gun_pickup_01",
                        empty: "empty_fire_01",
                        deploy: "m870_cycle_01"
                    }
                },
                mp220: {
                    name: "MP220",
                    type: "gun",
                    fireMode: "single",
                    reloadMode: "mag",
                    caseTiming: "reload",
                    ammo: "12gauge",
                    ammoSpawnCount: 10,
                    maxClip: 2,
                    maxReload: 2,
                    reloadTime: 2.6,
                    fireDelay: .2,
                    switchDelay: .3,
                    barrelLength: 2.45,
                    recoilTime: 1e10,
                    moveSpread: 2,
                    shotSpread: 10,
                    bulletCount: 9,
                    jitter: 1,
                    bulletType: "bullet_buckshot",
                    headshotMult: 1.5,
                    speed: {
                        equip: 0,
                        attack: 0
                    },
                    lootImg: {
                        sprite: "loot-weapon-soshotgun.img",
                        scale: .3,
                        tint: 65280
                    },
                    worldImg: {
                        sprite: "gun-med-01.img",
                        scale: {
                            x: .5,
                            y: .45
                        },
                        tint: 3348992,
                        leftHandOffset: 0,
                        recoil: 1.33
                    },
                    particle: {
                        shellScale: 1,
                        shellOffset: .35
                    },
                    sound: {
                        shoot: "mp220_01",
                        reload: "mp220_reload_01",
                        pickup: "gun_pickup_01",
                        empty: "empty_fire_01",
                        deploy: "mp220_deploy_01"
                    }
                },
                saiga: {
                    name: "Saiga-12",
                    type: "gun",
                    fireMode: "auto",
                    reloadMode: "mag",
                    caseTiming: "shoot",
                    ammo: "12gauge",
                    ammoSpawnCount: 20,
                    maxClip: 5,
                    maxReload: 5,
                    reloadTime: 2.5,
                    fireDelay: .4,
                    switchDelay: .75,
                    barrelLength: 3.15,
                    recoilTime: 1e10,
                    moveSpread: 2,
                    shotSpread: 10,
                    bulletCount: 9,
                    jitter: 1,
                    bulletType: "bullet_buckshot",
                    headshotMult: 1.5,
                    speed: {
                        equip: 0,
                        attack: 0
                    },
                    lootImg: {
                        sprite: "loot-weapon-autoshotgun.img",
                        scale: .3,
                        tint: 65280
                    },
                    worldImg: {
                        sprite: "gun-long-01.img",
                        scale: {
                            x: .5,
                            y: .435
                        },
                        tint: 2302755,
                        leftHandOffset: 4.2,
                        recoil: 1.33
                    },
                    particle: {
                        shellScale: 1,
                        shellOffset: .45
                    },
                    sound: {
                        shoot: "saiga_01",
                        reload: "saiga_reload_01",
                        pickup: "gun_pickup_01",
                        empty: "empty_fire_02",
                        deploy: "saiga_switch_01"
                    }
                },
                spas12: {
                    name: "SPAS-12",
                    type: "gun",
                    fireMode: "single",
                    reloadMode: "single",
                    caseTiming: "shoot",
                    ammo: "12gauge",
                    ammoSpawnCount: 18,
                    maxClip: 9,
                    maxReload: 1,
                    reloadTime: .55,
                    fireDelay: .75,
                    switchDelay: .75,
                    pullDelay: .75,
                    barrelLength: 2.8,
                    recoilTime: 1e10,
                    moveSpread: 3,
                    shotSpread: 4,
                    bulletCount: 9,
                    jitter: .2,
                    bulletType: "bullet_flechette",
                    headshotMult: 1.5,
                    speed: {
                        equip: 0,
                        attack: 0
                    },
                    lootImg: {
                        sprite: "loot-weapon-spas12.img",
                        scale: .3,
                        tint: 65280
                    },
                    worldImg: {
                        sprite: "gun-long-01.img",
                        scale: {
                            x: .5,
                            y: .4
                        },
                        tint: 2966097,
                        leftHandOffset: 4.9,
                        recoil: 1.33
                    },
                    particle: {
                        shellScale: 1,
                        shellOffset: .45
                    },
                    sound: {
                        shoot: "spas12_01",
                        reload: "spas12_reload_01",
                        cycle: "spas12_cycle_01",
                        pull: "spas12_pull_01",
                        pickup: "gun_pickup_01",
                        empty: "empty_fire_01",
                        deploy: "spas12_cycle_01"
                    }
                },
                m9: {
                    name: "M9",
                    type: "gun",
                    fireMode: "single",
                    reloadMode: "mag",
                    caseTiming: "shoot",
                    ammo: "9mm",
                    ammoSpawnCount: 45,
                    dualWieldType: "m9_dual",
                    pistol: !0,
                    maxClip: 15,
                    maxReload: 15,
                    reloadTime: 1.6,
                    fireDelay: .12,
                    switchDelay: .25,
                    barrelLength: 2.2,
                    recoilTime: 1e10,
                    moveSpread: 8,
                    shotSpread: 8,
                    bulletCount: 1,
                    bulletType: "bullet_m9",
                    headshotMult: 2,
                    speed: {
                        equip: 0,
                        attack: 0
                    },
                    lootImg: {
                        sprite: "loot-weapon-m9.img",
                        scale: .3,
                        tint: 65280
                    },
                    worldImg: {
                        sprite: "gun-short-01.img",
                        scale: {
                            x: .5,
                            y: .505
                        },
                        tint: 1973790,
                        leftHandOffset: 0,
                        recoil: 1
                    },
                    particle: {
                        shellScale: 1,
                        shellOffset: .25
                    },
                    sound: {
                        shoot: "m9_01",
                        reload: "m9_reload_01",
                        pickup: "gun_pickup_01",
                        empty: "empty_fire_01",
                        deploy: "m9_switch_01"
                    }
                },
                m9_dual: {
                    name: "Dual M9",
                    type: "gun",
                    fireMode: "single",
                    reloadMode: "mag",
                    caseTiming: "shoot",
                    isDual: !0,
                    pistol: !0,
                    ammo: "9mm",
                    ammoSpawnCount: 45,
                    maxClip: 30,
                    maxReload: 30,
                    reloadTime: 3.1,
                    fireDelay: .08,
                    switchDelay: .25,
                    barrelLength: 2.2,
                    recoilTime: 1e10,
                    moveSpread: 9,
                    shotSpread: 11,
                    bulletCount: 1,
                    bulletType: "bullet_m9",
                    headshotMult: 2,
                    speed: {
                        equip: 0,
                        attack: 0
                    },
                    lootImg: {
                        sprite: "loot-weapon-m9-dual.img",
                        scale: .3,
                        tint: 65280
                    },
                    worldImg: {
                        sprite: "gun-short-01.img",
                        scale: {
                            x: .5,
                            y: .505
                        },
                        tint: 1973790,
                        leftHandOffset: 0,
                        recoil: 1
                    },
                    particle: {
                        shellScale: 1,
                        shellOffset: .25
                    },
                    sound: {
                        shoot: "m9_01",
                        reload: "m9_reload_02",
                        pickup: "gun_pickup_01",
                        empty: "empty_fire_01",
                        deploy: "m9_switch_01"
                    }
                },
                glock: {
                    name: "G18C",
                    type: "gun",
                    fireMode: "auto",
                    reloadMode: "mag",
                    caseTiming: "shoot",
                    ammo: "9mm",
                    ammoSpawnCount: 51,
                    dualWieldType: "glock_dual",
                    pistol: !0,
                    maxClip: 17,
                    maxReload: 17,
                    reloadTime: 1.95,
                    fireDelay: .06,
                    switchDelay: .25,
                    barrelLength: 2.2,
                    recoilTime: 1e10,
                    moveSpread: 10,
                    shotSpread: 12,
                    bulletCount: 1,
                    bulletType: "bullet_glock",
                    headshotMult: 2,
                    speed: {
                        equip: 0,
                        attack: 0
                    },
                    lootImg: {
                        sprite: "loot-weapon-glock.img",
                        scale: .3,
                        tint: 65280
                    },
                    worldImg: {
                        sprite: "gun-short-01.img",
                        scale: {
                            x: .5,
                            y: .49
                        },
                        tint: 1973790,
                        leftHandOffset: 0,
                        recoil: 1
                    },
                    particle: {
                        shellScale: 1,
                        shellOffset: .25
                    },
                    sound: {
                        shoot: "glock_01",
                        reload: "glock_reload_01",
                        pickup: "gun_pickup_01",
                        empty: "empty_fire_01",
                        deploy: "glock_switch_01"
                    }
                },
                glock_dual: {
                    name: "Dual G18C",
                    type: "gun",
                    fireMode: "auto",
                    reloadMode: "mag",
                    caseTiming: "shoot",
                    ammo: "9mm",
                    ammoSpawnCount: 51,
                    isDual: !0,
                    pistol: !0,
                    maxClip: 34,
                    maxReload: 34,
                    reloadTime: 3.8,
                    fireDelay: .03,
                    switchDelay: .25,
                    barrelLength: 2.2,
                    recoilTime: 1e10,
                    moveSpread: 16,
                    shotSpread: 18,
                    bulletCount: 1,
                    bulletType: "bullet_glock",
                    headshotMult: 2,
                    speed: {
                        equip: 0,
                        attack: 0
                    },
                    lootImg: {
                        sprite: "loot-weapon-glock-dual.img",
                        scale: .3,
                        tint: 65280
                    },
                    worldImg: {
                        sprite: "gun-short-01.img",
                        scale: {
                            x: .5,
                            y: .49
                        },
                        tint: 1973790,
                        leftHandOffset: 0,
                        recoil: 1
                    },
                    particle: {
                        shellScale: 1,
                        shellOffset: .25
                    },
                    sound: {
                        shoot: "glock_01",
                        reload: "glock_reload_02",
                        pickup: "gun_pickup_01",
                        empty: "empty_fire_01",
                        deploy: "glock_switch_01"
                    }
                },
                ot38: {
                    name: "OT-38",
                    type: "gun",
                    fireMode: "single",
                    reloadMode: "mag",
                    caseTiming: "shoot",
                    ammo: "762mm",
                    ammoSpawnCount: 20,
                    dualWieldType: "ot38_dual",
                    pistol: !0,
                    maxClip: 5,
                    maxReload: 5,
                    reloadTime: 2,
                    fireDelay: .4,
                    switchDelay: .3,
                    barrelLength: 2.05,
                    recoilTime: 1e10,
                    moveSpread: 3,
                    shotSpread: 1.25,
                    bulletCount: 1,
                    bulletType: "bullet_ot38",
                    headshotMult: 2,
                    speed: {
                        equip: 0,
                        attack: 0
                    },
                    lootImg: {
                        sprite: "loot-weapon-ot38.img",
                        scale: .3,
                        tint: 65280
                    },
                    worldImg: {
                        sprite: "gun-short-01.img",
                        scale: {
                            x: .5,
                            y: .4625
                        },
                        tint: 7368816,
                        leftHandOffset: 0,
                        recoil: 1
                    },
                    particle: {
                        shellScale: 1,
                        shellOffset: .225
                    },
                    sound: {
                        shoot: "ot38_01",
                        reload: "ot38_reload_01",
                        pickup: "gun_pickup_01",
                        empty: "empty_fire_01",
                        deploy: "ot38_switch_01"
                    }
                },
                ot38_dual: {
                    name: "Dual OT-38",
                    type: "gun",
                    fireMode: "single",
                    reloadMode: "mag",
                    caseTiming: "shoot",
                    ammo: "762mm",
                    ammoSpawnCount: 20,
                    isDual: !0,
                    pistol: !0,
                    maxClip: 10,
                    maxReload: 10,
                    reloadTime: 3.8,
                    fireDelay: .2,
                    switchDelay: .3,
                    barrelLength: 2,
                    recoilTime: 1e10,
                    moveSpread: 4,
                    shotSpread: 1.75,
                    bulletCount: 1,
                    bulletType: "bullet_ot38",
                    headshotMult: 2,
                    speed: {
                        equip: 0,
                        attack: 0
                    },
                    lootImg: {
                        sprite: "loot-weapon-ot38-dual.img",
                        scale: .3,
                        tint: 65280
                    },
                    worldImg: {
                        sprite: "gun-short-01.img",
                        scale: {
                            x: .5,
                            y: .4625
                        },
                        tint: 7368816,
                        leftHandOffset: 0,
                        recoil: 1
                    },
                    particle: {
                        shellScale: 1,
                        shellOffset: .225
                    },
                    sound: {
                        shoot: "ot38_01",
                        reload: "ot38_reload_02",
                        pickup: "gun_pickup_01",
                        empty: "empty_fire_01",
                        deploy: "ot38_switch_01"
                    }
                },
                deagle: {
                    name: "Desert Eagle",
                    type: "gun",
                    fireMode: "single",
                    reloadMode: "mag",
                    caseTiming: "shoot",
                    ammo: "50AE",
                    ammoSpawnCount: 56,
                    dualWieldType: "deagle_dual",
                    pistol: !0,
                    maxClip: 7,
                    maxReload: 7,
                    reloadTime: 2.3,
                    fireDelay: .16,
                    switchDelay: .3,
                    barrelLength: 1.855,
                    recoilTime: .5,
                    moveSpread: 6,
                    shotSpread: 2.5,
                    bulletCount: 1,
                    bulletType: "bullet_deagle",
                    headshotMult: 2,
                    speed: {
                        equip: 0,
                        attack: 0
                    },
                    lootImg: {
                        sprite: "loot-weapon-deagle.img",
                        scale: .3,
                        tint: 65280
                    },
                    worldImg: {
                        sprite: "gun-short-01.img",
                        scale: {
                            x: .5,
                            y: .54
                        },
                        tint: 14791743,
                        leftHandOffset: 0,
                        recoil: 1
                    },
                    particle: {
                        shellScale: 1.4,
                        shellOffset: .265
                    },
                    sound: {
                        shoot: "deagle_01",
                        reload: "deagle_reload_01",
                        pickup: "gun_pickup_01",
                        empty: "empty_fire_01",
                        deploy: "deagle_switch_01"
                    }
                },
                deagle_dual: {
                    name: "Dual Desert Eagle",
                    type: "gun",
                    fireMode: "single",
                    reloadMode: "mag",
                    caseTiming: "shoot",
                    ammo: "50AE",
                    ammoSpawnCount: 98,
                    isDual: !0,
                    pistol: !0,
                    maxClip: 14,
                    maxReload: 14,
                    reloadTime: 4,
                    fireDelay: .12,
                    switchDelay: .3,
                    barrelLength: 1.855,
                    recoilTime: .5,
                    moveSpread: 7.5,
                    shotSpread: 3.5,
                    bulletCount: 1,
                    bulletType: "bullet_deagle",
                    headshotMult: 2,
                    speed: {
                        equip: 0,
                        attack: 0
                    },
                    lootImg: {
                        sprite: "loot-weapon-deagle-dual.img",
                        scale: .3,
                        tint: 65280
                    },
                    worldImg: {
                        sprite: "gun-short-01.img",
                        scale: {
                            x: .5,
                            y: .54
                        },
                        tint: 14791743,
                        leftHandOffset: 0,
                        recoil: 1
                    },
                    particle: {
                        shellScale: 1,
                        shellOffset: .265
                    },
                    sound: {
                        shoot: "deagle_01",
                        reload: "deagle_reload_02",
                        pickup: "gun_pickup_01",
                        empty: "empty_fire_01",
                        deploy: "deagle_switch_01"
                    }
                },
                flare_gun: {
                    name: "Flare Gun",
                    type: "gun",
                    fireMode: "single",
                    reloadMode: "single",
                    caseTiming: "shoot",
                    ammo: "flare",
                    pistol: !0,
                    outsideOnly: !0,
                    ammoSpawnCount: 1,
                    maxClip: 1,
                    maxReload: 1,
                    reloadTime: 2,
                    fireDelay: .4,
                    switchDelay: .3,
                    barrelLength: 2,
                    recoilTime: 1e10,
                    moveSpread: 3,
                    shotSpread: 1.25,
                    bulletCount: 1,
                    bulletType: "bullet_flare",
                    headshotMult: 2,
                    speed: {
                        equip: 0,
                        attack: 0
                    },
                    lootImg: {
                        sprite: "loot-weapon-flare-gun.img",
                        scale: .3,
                        tint: 65280
                    },
                    worldImg: {
                        sprite: "gun-short-01.img",
                        scale: {
                            x: .5,
                            y: .4625
                        },
                        tint: 16733184,
                        leftHandOffset: 0,
                        recoil: 1
                    },
                    particle: {
                        shellScale: 1,
                        shellOffset: .225
                    },
                    sound: {
                        shoot: "flare_gun_01",
                        reload: "flare_gun_reload_01",
                        pickup: "gun_pickup_01",
                        empty: "empty_fire_01",
                        deploy: "gun_switch_01"
                    }
                },
                frag: {
                    name: "Frag Grenade",
                    type: "throwable",
                    explosionType: "explosion_frag",
                    inventoryOrder: 1,
                    cookable: !0,
                    fuseTime: 4,
                    fireDelay: .4,
                    switchDelay: .3,
                    rad: 1,
                    projRad: .5,
                    throwSpeed: 20,
                    throwDistance: 18,
                    speed: {
                        equip: 0,
                        attack: 0
                    },
                    lootImg: {
                        sprite: "loot-throwable-frag.img",
                        scale: .2,
                        tint: 65280
                    },
                    worldImg: {
                        sprite: "proj-frag-nopin-nolever.img",
                        scale: .12,
                        tint: 16777215
                    },
                    handImg: {
                        equip: {
                            right: {
                                sprite: "proj-frag-pin.img",
                                pos: {
                                    x: 4.2,
                                    y: 4.2
                                },
                                scale: .14
                            },
                            left: {
                                sprite: "none"
                            }
                        },
                        cook: {
                            right: {
                                sprite: "proj-frag-nopin.img",
                                pos: {
                                    x: 4.2,
                                    y: 4.2
                                },
                                scale: .14
                            },
                            left: {
                                sprite: "proj-frag-pin-part.img",
                                pos: {
                                    x: 4.2,
                                    y: 4.2
                                },
                                scale: .14
                            }
                        },
                        throwing: {
                            right: {
                                sprite: "none"
                            },
                            left: {
                                sprite: "none"
                            }
                        }
                    },
                    sound: {
                        pullPin: "frag_pin_01",
                        throwing: "frag_throw_01",
                        pickup: "frag_pickup_01",
                        deploy: "frag_deploy_01"
                    }
                },
                smoke: {
                    name: "Smoke Grenade",
                    type: "throwable",
                    explosionType: "explosion_smoke",
                    inventoryOrder: 2,
                    cookable: !1,
                    fuseTime: 2.5,
                    fireDelay: .4,
                    switchDelay: .3,
                    rad: 1,
                    projRad: .5,
                    throwSpeed: 15,
                    throwDistance: 18,
                    speed: {
                        equip: 0,
                        attack: 0
                    },
                    lootImg: {
                        sprite: "loot-throwable-smoke.img",
                        scale: .2,
                        tint: 65280
                    },
                    worldImg: {
                        sprite: "proj-smoke-nopin-nolever.img",
                        scale: .12,
                        tint: 16777215
                    },
                    handImg: {
                        equip: {
                            right: {
                                sprite: "proj-smoke-pin.img",
                                pos: {
                                    x: 3,
                                    y: 4.2
                                },
                                scale: .14
                            },
                            left: {
                                sprite: "none"
                            }
                        },
                        cook: {
                            right: {
                                sprite: "proj-smoke-nopin.img",
                                pos: {
                                    x: 3,
                                    y: 4.2
                                },
                                scale: .14
                            },
                            left: {
                                sprite: "proj-frag-pin-part.img",
                                pos: {
                                    x: 3,
                                    y: 4.2
                                },
                                scale: .14
                            }
                        },
                        throwing: {
                            right: {
                                sprite: "none"
                            },
                            left: {
                                sprite: "none"
                            }
                        }
                    },
                    sound: {
                        pullPin: "frag_pin_01",
                        throwing: "frag_throw_01",
                        pickup: "frag_pickup_01",
                        deploy: "frag_deploy_01"
                    }
                },
                "9mm": {
                    name: "9mm",
                    type: "ammo",
                    subtype: "standard",
                    minStackSize: 15,
                    lootImg: {
                        sprite: "loot-ammo-box.img",
                        scale: .2,
                        tint: 16756224,
                        tintDark: 12550912
                    },
                    sound: {
                        pickup: "ammo_pickup_01"
                    }
                },
                "762mm": {
                    name: "7.62mm",
                    type: "ammo",
                    subtype: "standard",
                    minStackSize: 10,
                    lootImg: {
                        sprite: "loot-ammo-box.img",
                        scale: .2,
                        tint: 26367,
                        tintDark: 19903
                    },
                    sound: {
                        pickup: "ammo_pickup_01"
                    }
                },
                "556mm": {
                    name: "5.56mm",
                    type: "ammo",
                    subtype: "standard",
                    minStackSize: 10,
                    lootImg: {
                        sprite: "loot-ammo-box.img",
                        scale: .2,
                        tint: 237056,
                        tintDark: 161536
                    },
                    sound: {
                        pickup: "ammo_pickup_01"
                    }
                },
                "12gauge": {
                    name: "12 gauge",
                    type: "ammo",
                    subtype: "standard",
                    minStackSize: 5,
                    lootImg: {
                        sprite: "loot-ammo-box.img",
                        scale: .2,
                        tint: 16711680,
                        tintDark: 12517376
                    },
                    sound: {
                        pickup: "ammo_pickup_01"
                    }
                },
                "50AE": {
                    name: ".50 AE",
                    type: "ammo",
                    special: !0,
                    minStackSize: 10,
                    lootImg: {
                        sprite: "loot-ammo-box.img",
                        scale: .2,
                        tint: 2697513,
                        tintDark: 2039583
                    },
                    sound: {
                        pickup: "ammo_pickup_01"
                    }
                },
                "308sub": {
                    name: ".308 Subsonic",
                    type: "ammo",
                    special: !0,
                    minStackSize: 10,
                    lootImg: {
                        sprite: "loot-ammo-box.img",
                        scale: .2,
                        tint: 3225600,
                        tintDark: 2435840
                    },
                    sound: {
                        pickup: "ammo_pickup_01"
                    }
                },
                flare: {
                    name: "Flare",
                    type: "ammo",
                    special: !0,
                    minStackSize: 1,
                    lootImg: {
                        sprite: "loot-ammo-box.img",
                        scale: .2,
                        tint: 13911552,
                        tintDark: 13911552
                    },
                    sound: {
                        pickup: "ammo_pickup_01"
                    }
                },
                bandage: {
                    name: "Bandage",
                    type: "heal",
                    useTime: 2.6,
                    heal: 15,
                    maxHeal: 75,
                    lootImg: {
                        sprite: "loot-medical-bandage.img",
                        scale: .2,
                        tint: 16777215
                    },
                    sound: {
                        pickup: "bandage_pickup_01",
                        use: "bandage_use_01"
                    }
                },
                healthkit: {
                    name: "Med Kit",
                    type: "heal",
                    useTime: 6,
                    heal: 100,
                    maxHeal: 100,
                    lootImg: {
                        sprite: "loot-medical-healthkit.img",
                        scale: .2,
                        tint: 16777215
                    },
                    sound: {
                        pickup: "healthkit_pickup_01",
                        use: "healthkit_use_01"
                    }
                },
                soda: {
                    name: "Soda",
                    type: "boost",
                    useTime: 3,
                    boost: 25,
                    lootImg: {
                        sprite: "loot-medical-soda.img",
                        scale: .2,
                        tint: 16777215
                    },
                    sound: {
                        pickup: "soda_pickup_01",
                        use: "soda_use_01"
                    }
                },
                painkiller: {
                    name: "Pills",
                    type: "boost",
                    useTime: 5,
                    boost: 50,
                    lootImg: {
                        sprite: "loot-medical-pill.img",
                        scale: .2,
                        tint: 16777215
                    },
                    sound: {
                        pickup: "pills_pickup_01",
                        use: "pills_use_01"
                    }
                },
                backpack00: {
                    name: "Pouch",
                    type: "backpack",
                    level: 0,
                    playerRad: .55,
                    tint: 16777215,
                    lootImg: {
                        sprite: "loot-pack-00.img",
                        scale: .2,
                        tint: 16777215
                    },
                    sound: {
                        pickup: "pack_pickup_01"
                    }
                },
                backpack01: {
                    name: "Small Pack",
                    type: "backpack",
                    level: 1,
                    playerRad: .65,
                    tint: 6697728,
                    lootImg: {
                        sprite: "loot-pack-01.img",
                        scale: .2,
                        tint: 16777215
                    },
                    sound: {
                        pickup: "pack_pickup_01"
                    }
                },
                backpack02: {
                    name: "Regular Pack",
                    type: "backpack",
                    level: 2,
                    tint: 26112,
                    playerRad: .85,
                    lootImg: {
                        sprite: "loot-pack-02.img",
                        scale: .2,
                        tint: 16777215
                    },
                    sound: {
                        pickup: "pack_pickup_01"
                    }
                },
                backpack03: {
                    name: "Military Pack",
                    type: "backpack",
                    level: 3,
                    tint: 6710835,
                    playerRad: 1,
                    lootImg: {
                        sprite: "loot-pack-03.img",
                        scale: .2,
                        tint: 16777215
                    },
                    sound: {
                        pickup: "pack_pickup_01"
                    }
                },
                helmet01: {
                    name: "Level 1 Helmet",
                    type: "helmet",
                    level: 1,
                    damageReduction: .25,
                    tint: 3244031,
                    lootImg: {
                        sprite: "loot-helmet-01.img",
                        scale: .2,
                        tint: 16777215
                    },
                    sound: {
                        pickup: "helmet_pickup_01"
                    }
                },
                helmet02: {
                    name: "Level 2 Helmet",
                    type: "helmet",
                    level: 2,
                    damageReduction: .4,
                    tint: 13027014,
                    lootImg: {
                        sprite: "loot-helmet-02.img",
                        scale: .2,
                        tint: 16777215
                    },
                    sound: {
                        pickup: "helmet_pickup_01"
                    }
                },
                helmet03: {
                    name: "Level 3 Helmet",
                    type: "helmet",
                    level: 3,
                    damageReduction: .55,
                    tint: 2434341,
                    lootImg: {
                        sprite: "loot-helmet-03.img",
                        scale: .2,
                        tint: 16777215
                    },
                    sound: {
                        pickup: "helmet_pickup_01"
                    }
                },
                chest01: {
                    name: "Level 1 Vest",
                    type: "chest",
                    level: 1,
                    damageReduction: .25,
                    tint: 11842740,
                    lootImg: {
                        sprite: "loot-chest-01.img",
                        scale: .2,
                        tint: 16777215
                    },
                    sound: {
                        pickup: "chest_pickup_01"
                    }
                },
                chest02: {
                    name: "Level 2 Vest",
                    type: "chest",
                    level: 2,
                    damageReduction: .38,
                    tint: 4934475,
                    lootImg: {
                        sprite: "loot-chest-02.img",
                        scale: .2,
                        tint: 16777215
                    },
                    sound: {
                        pickup: "chest_pickup_01"
                    }
                },
                chest03: {
                    name: "Level 3 Vest",
                    type: "chest",
                    level: 3,
                    damageReduction: .45,
                    tint: 0,
                    lootImg: {
                        sprite: "loot-chest-03.img",
                        scale: .2,
                        tint: 16777215
                    },
                    sound: {
                        pickup: "chest_pickup_01"
                    }
                },
                "1xscope": {
                    name: "1x Scope",
                    type: "scope",
                    level: 1,
                    lootImg: {
                        sprite: "loot-scope-00.img",
                        scale: .2,
                        tint: 16777215
                    },
                    sound: {
                        pickup: "scope_pickup_01"
                    }
                },
                "2xscope": {
                    name: "2x Scope",
                    type: "scope",
                    level: 2,
                    lootImg: {
                        sprite: "loot-scope-01.img",
                        scale: .2,
                        tint: 16777215
                    },
                    sound: {
                        pickup: "scope_pickup_01"
                    }
                },
                "4xscope": {
                    name: "4x Scope",
                    type: "scope",
                    level: 4,
                    lootImg: {
                        sprite: "loot-scope-02.img",
                        scale: .2,
                        tint: 16777215
                    },
                    sound: {
                        pickup: "scope_pickup_01"
                    }
                },
                "8xscope": {
                    name: "8x Scope",
                    type: "scope",
                    level: 8,
                    lootImg: {
                        sprite: "loot-scope-03.img",
                        scale: .2,
                        tint: 16777215
                    },
                    sound: {
                        pickup: "scope_pickup_01"
                    }
                },
                "15xscope": {
                    name: "15x Scope",
                    type: "scope",
                    level: 15,
                    lootImg: {
                        sprite: "loot-scope-04.img",
                        scale: .2,
                        tint: 16777215
                    },
                    sound: {
                        pickup: "scope_pickup_01"
                    }
                }
            },
            scopeZoomRadius: {
                "1xscope": 28,
                "2xscope": 36,
                "4xscope": 48,
                "8xscope": 68,
                "15xscope": 104
            },
            bagSizes: {
                "9mm": [120, 240, 330, 420],
                "762mm": [90, 180, 240, 300],
                "556mm": [90, 180, 240, 300],
                "12gauge": [15, 30, 60, 90],
                "50AE": [49, 98, 147, 196],
                "308sub": [10, 20, 30, 40],
                flare: [2, 4, 6, 8],
                frag: [3, 6, 9, 12],
                smoke: [3, 6, 9, 12],
                bandage: [5, 10, 15, 30],
                healthkit: [1, 2, 3, 4],
                soda: [2, 5, 10, 15],
                painkiller: [1, 2, 3, 4],
                "1xscope": [1, 1, 1, 1],
                "2xscope": [1, 1, 1, 1],
                "4xscope": [1, 1, 1, 1],
                "8xscope": [1, 1, 1, 1],
                "15xscope": [1, 1, 1, 1]
            },
            lootRadius: {
                skin: 1,
                melee: 1.25,
                gun: 1.25,
                throwable: 1,
                ammo: 1.2,
                heal: 1,
                boost: 1,
                backpack: 1,
                helmet: 1,
                chest: 1,
                scope: 1
            }
        }
    },
    "9b5f96fd": function(e, t, a) {
        "use strict";
        function i(e, t, a) {
            return t in e ? Object.defineProperty(e, t, {
                value: a,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = a,
            e
        }
        function r(e, t, a, i, r, o) {
            this.initialized = !1,
            this.teamMode = 0,
            this.onJoin = r,
            this.onQuit = o,
            this.pixi = e,
            this.ue = t,
            this.ambientSounds = {},
            this.victoryMusic = null,
            this.localization = a,
            this.config = i,
            this.ws = null,
            this.connecting = !1,
            this.connected = !1
        }
        var o = a("80ac57a6")
          , n = a("989ad62a")
          , s = a("8649e148")
          , l = a("b78cf179")
          , m = l.EmoteSlot
          , c = (l.EmoteData,
        a("ceee80d9"))
          , d = a("10899aea")
          , p = a("300e2704")
          , u = a("c2a798c8")
          , h = a("2bb110d0")
          , g = a("ce29f17f")
          , y = a("26be8056")
          , f = a("2701b048")
          , x = a("c73dee75")
          , w = a("1ad3d2a4")
          , b = a("72409abe")
          , _ = a("af8ba00f")
          , v = a("172c57dc")
          , S = (a("e98400ad"),
        a("e5d16b4d"))
          , k = a("604cff9c")
          , z = a("f398b7c7")
          , M = a("f034d167")
          , T = a("a7f094a3")
          , P = a("4b8d140f")
          , C = a("a48f3bb2")
          , A = a("d49cd95c")
          , I = a("753d6e4b")
          , D = a("119e8c4c")
          , O = a("feb8fc30")
          , E = a("fc6a992a")
          , L = a("a508b62a")
          , B = a("bc83ef37")
          , F = a("c60b5e9f")
          , R = a("6e43d1d7")
          , j = a("0955a76e")
          , q = (a("ce089fd5"),
        a("e2094860"))
          , N = a("3160ea28")
          , G = a("d3da5587");
        r.prototype = {
            k: function(e, t, a) {
                var i = this;
                if (!(this.connecting || this.connected || this.initialized)) {
                    this.ws && (this.ws.onerror = function() {}
                    ,
                    this.ws.onopen = function() {}
                    ,
                    this.ws.onmessage = function() {}
                    ,
                    this.ws.onclose = function() {}
                    ,
                    this.ws.close(),
                    this.ws = null),
                    this.connecting = !0,
                    this.connected = !1;
                    try {
                        this.ws = new WebSocket(t),
                        this.ws.binaryType = "arraybuffer",
                        this.ws.onerror = function(e) {
                            i.ws && i.ws.close()
                        }
                        ,
                        this.ws.onopen = function() {
                            i.connecting = !1,
                            i.connected = !0,
                            i.a();
                            var t = new p.JoinMsg;
                            t.protocol = n.protocolVersion,
                            t.privData = e,
                            t.name = i.name,
                            t.emotes = i.emoteLoadout,
                            t.useTouch = g.touch,
                            t.bot = !1,
                            i.he(p.Msg.Join, t)
                        }
                        ,
                        this.ws.onmessage = function(e) {
                            for (var t = new p.MsgStream(e.data); ; ) {
                                var a = t.deserializeMsgType();
                                if (a == p.Msg.None)
                                    break;
                                i.ge(a, t.getStream())
                            }
                        }
                        ,
                        this.ws.onclose = function() {
                            var e = i.connecting
                              , t = i.connected;
                            if (i.connecting = !1,
                            i.connected = !1,
                            e)
                                a();
                            else if (t && !i.gameOver) {
                                var r = "";
                                r = i.disconnectMsg && "" != i.disconnectMsg ? i.disconnectMsg : i.localization.translate("index-host-closed"),
                                i.onQuit(r)
                            }
                        }
                    } catch (e) {
                        this.connecting = !1,
                        this.connected = !1,
                        a()
                    }
                }
            },
            a: function() {
                var e, t = this.pixi.renderer.type == o.RENDERER_TYPE.CANVAS;
                this.ye = 0,
                this.fe = 0,
                this.xe = 0,
                this.we = 0,
                this.I = !1,
                this.be = new P.oe(this.pixi.view),
                this._e = new q.ve(this.be,this.config),
                this.q = new w._,
                this.Se = new F.ke(t),
                this.ze = new D.d(this.Se),
                this.Me = new A.Te,
                this.Pe = new L.Ce,
                this.Ae = new x.Ie,
                this.De = new M.Oe,
                this.Ee = new B.Le,
                this.Be = new k.ne,
                this.Fe = new E.Re(this.ue),
                this.je = new f.j,
                this.qe = new j.c,
                this.Ne = new b.de(this.config.get("anonPlayerNames")),
                this.Ge = new v.u,
                this.Ue = new C.Ve,
                this.He = new T.We(t),
                this.Ke = new O.Xe,
                this.Ye = new N.K(this,this.ue,this.Ke,this.ze,this.localization,t,this._e),
                this.Ze = new G.Qe(this.localization),
                this.Je = new S.$e(this,this.ue,this.Ye,this.Pe,this.q,this.Me),
                this.et = new R.le(this.ze,this.ue,this.Ye);
                var a = (e = {},
                i(e, s.Type.Player, this.Pe.tt),
                i(e, s.Type.Obstacle, this.Me.Y),
                i(e, s.Type.Loot, this.Ue.at),
                i(e, s.Type.LootSpawner, this.Me.it),
                i(e, s.Type.DeadBody, this.Ne.me),
                i(e, s.Type.Building, this.Me.rt),
                i(e, s.Type.Structure, this.Me.ot),
                i(e, s.Type.Decal, this.Ge.p),
                i(e, s.Type.Projectile, this.Ee.nt),
                i(e, s.Type.Smoke, this.qe.e),
                i(e, s.Type.Airdrop, this.je.B),
                e);
                this.st = new I.Creator;
                for (var r in a)
                    a.hasOwnProperty(r) && this.st.registerType(r, a[r]);
                this.debugDisplay = new o.Graphics;
                for (var n = [this.Me.display.water, this.Me.display.background, this.Se.layers[0], this.Se.ground, this.Se.layers[1], this.Se.layers[2], this.Se.layers[3], this.debugDisplay, this.He.gasRenderer.display, this._e.container, this.Je.container, this.Ye.container, this.Je.indContainer, this.Ke.container], l = 0; l < n.length; l++) {
                    var c = n[l];
                    c && (c.interactiveChildren = !1,
                    this.pixi.stage.addChild(c))
                }
                this.disconnectMsg = "",
                this.playing = !1,
                this.gameOver = !1,
                this.spectating = !1,
                this.moveMsgTimeout = 0,
                this.prevMoveMsg = new p.MoveMsg,
                this.playingTicker = 0,
                this.lt = 0,
                this.ce = 0,
                this.mt = null,
                this.ct = !1,
                this.f = 1,
                this.debugZoom = 1,
                this.useDebugZoom = !1,
                this.soundUpdateThrottle = 0,
                this.seq = 0,
                this.seqInFlight = !1,
                this.seqSendTime = 0,
                this.pings = [],
                this.debugPingTime = 0,
                this.q.setShakeEnabled(this.config.get("screenShake")),
                this.name = this.config.get("playerName"),
                this.anonPlayerNames = this.config.get("anonPlayerNames");
                var u = {
                    emoteTop: m.Top,
                    emoteRight: m.Right,
                    emoteBottom: m.Bottom,
                    emoteLeft: m.Left,
                    emoteWin: m.Win,
                    emoteDeath: m.Death
                };
                this.emoteLoadout = [],
                this.emoteLoadout[m.None] = 0;
                for (var h = Object.keys(u), g = 0; g < h.length; g++) {
                    var _ = h[g]
                      , U = parseInt(this.config.get(_))
                      , V = d.clamp(U, 1, 255);
                    this.emoteLoadout[u[_]] = V
                }
                this.Je.updateEmoteWheel(this.emoteLoadout),
                void 0 == this.ambientSounds.wavesInst && (this.ambientSounds.wavesInst = this.ue.playSound("ambient_waves_01", {
                    channel: "ambient",
                    startSilent: !0,
                    loop: !0,
                    forceStart: !0
                })),
                document.hasFocus() || this.ue.playSound("notification_start_01", {
                    channel: "ui"
                }),
                y.removeConsent(),
                z.storeGeneric("language", this.config.get("language")),
                this.dt(),
                this.initialized = !0
            },
            o: function() {
                if (this.ws && (this.ws.onmessage = function() {}
                ,
                this.ws.close(),
                this.ws = null),
                this.connecting = !1,
                this.connected = !1,
                this.initialized) {
                    for (this.initialized = !1,
                    this.Je.o(),
                    this.Ze.o(),
                    this.Ye.o(),
                    this.Ke.destroy(),
                    this.He.free(),
                    this.je.o(),
                    this.Fe.o(),
                    this.Me.o(),
                    this.Se.o(),
                    this.be.o(); this.pixi.stage.children.length > 0; ) {
                        var e = this.pixi.stage.children[0];
                        this.pixi.stage.removeChild(e),
                        e.destroy({
                            children: !0
                        })
                    }
                    z.storeGeneric("socketTimeout", this.I)
                }
            },
            pt: function() {
                return this.initialized && this.playing && !this.spectating && !this.Ye.displayingStats
            },
            l: function(e) {
                this.ye++,
                this.fe++,
                this.xe++;
                var t = this.qe.particles
                  , a = this.Me.Y.m()
                  , i = c.t
                  , r = 0;
                if (this.playing && (this.playingTicker += e),
                this.Pe.l(e, this.ce, this.Se, this.ze, this.q, this.Me, this.be, this.ue, this.Je.wheelKeyTriggered, this.gameOver, this.spectating),
                this.soundUpdateThrottle -= e,
                this.soundUpdateThrottle < 0) {
                    this.soundUpdateThrottle = .2;
                    var o = 0
                      , s = 1;
                    if ("water" !== this.mt.surface) {
                        var l = this.Me.distanceToShore(this.mt.pos);
                        l < 50 && (o = (50 - l) / 50,
                        s = 1 - o)
                    } else
                        o = 1,
                        s = 0;
                    this.ue.setVolume(this.ambientSounds.wavesInst, o),
                    this.ue.setVolume(this.ambientSounds.windInst, s)
                }
                this.q.pos = u.copy(this.mt.pos),
                this.q.applyShake();
                var m = this.mt.ut()
                  , h = d.min(this.q.screenWidth, this.q.screenHeight)
                  , f = d.max(this.q.screenWidth, this.q.screenHeight)
                  , x = d.max(h * (16 / 9), f);
                this.q.f = .5 * x / (m * this.q.ppu);
                var w = this.mt.zoomFast ? 3 : 2
                  , b = this.mt.zoomFast ? 3 : 1.4
                  , _ = this.q.f > this.q.zoom ? w : b;
                this.q.zoom = d.lerp(e * _, this.q.zoom, this.q.f),
                this.ue.cameraPos = u.copy(this.q.pos),
                (this.be.J(P.Key.M) || this.be.J(P.Key.G)) && this.Ye.displayMapLarge(!1),
                this.be.J(P.Key.Escape) && this.Ye.toggleEscMenu(),
                this.be.J(P.Key.V) && this.Ye.cycleVisibilityMode();
                var v = this.mt.pos
                  , S = this.q.screenToPoint(this.be.mousePos)
                  , k = u.sub(S, v)
                  , z = u.length(k)
                  , M = z > 1e-5 ? u.div(k, z) : u.create(1, 0);
                this.Je.wheelDisplayed && (z = this.prevMoveMsg.toMouseLen,
                M = this.prevMoveMsg.toMouseDir);
                var T = new p.MoveMsg;
                if (T.seq = this.seq,
                !this.spectating) {
                    var C = this._e.getTouchMovement(this.q);
                    if (this._e.moveDetected) {
                        var A = 255 * d.clamp(C.moveLen, 0, 1);
                        T.moveLeft = C.left,
                        T.moveRight = C.right,
                        T.moveUp = C.up,
                        T.moveDown = C.down,
                        T.moveLen = A
                    } else
                        T.moveLeft = this.be.Z(P.Key.Left) || this.be.Z(P.Key.A),
                        T.moveRight = this.be.Z(P.Key.Right) || this.be.Z(P.Key.D),
                        T.moveUp = this.be.Z(P.Key.Up) || this.be.Z(P.Key.W),
                        T.moveDown = this.be.Z(P.Key.Down) || this.be.Z(P.Key.S),
                        T.moveLen = 255;
                    if (g.touch) {
                        var I = this.mt.U.curWeapIdx == n.WeaponSlot.Throwable
                          , D = this._e.getAimMovement(I, this.q);
                        T.toMouseDir = D.toAimDir;
                        var O = D.toAimLen / 10;
                        T.toMouseLen = Math.min(O, p.kMouseMaxLen)
                    } else
                        T.toMouseDir = u.copy(M),
                        T.toMouseLen = Math.min(z, p.kMouseMaxLen);
                    T.shootStart = this.be.te() || this._e.shotDetected,
                    T.shootHold = this.be.ee() || this._e.shotDetected,
                    T.reload = this.be.J(P.Key.R) || this.Ye.reloadTouched,
                    T.interaction = this.be.J(P.Key.F) || this.Ye.interactionTouched,
                    T.cancelAction = this.be.J(P.Key.X) || this.Ye.interactionTouched,
                    T.equipPrimary = this.be.J(P.Key.One),
                    T.equipSecondary = this.be.J(P.Key.Two),
                    T.equipThrowable = this.be.J(P.Key.Four),
                    T.equipMelee = this.be.J(P.Key.Three) || this.be.J(P.Key.E),
                    T.equipLast = this.be.J(P.Key.Q),
                    T.scrollDown = this.be.re() > 0,
                    T.scrollUp = this.be.re() < 0,
                    T.portrait = this.q.screenWidth < this.q.screenHeight,
                    T.swapWeapSlots = this.be.J(P.Key.T) || this.Ye.swapWeapSlots,
                    T.swapWeapSlots && (this.mt.gunSwitchCooldown = 0);
                    for (var E = 0; E < this.Ze.uiEvents.length; E++) {
                        var L = this.Ze.uiEvents[E];
                        if ("use" == L.action)
                            if ("weapon" == L.type)
                                switch (L.data) {
                                case 0:
                                    T.equipPrimary = !0;
                                    break;
                                case 1:
                                    T.equipSecondary = !0;
                                    break;
                                case 2:
                                    T.equipMelee = !0;
                                    break;
                                case 3:
                                    T.equipThrowable = !0
                                }
                            else
                                "scope" == L.type ? T.useScope = L.data : T.useItem = L.data
                    }
                    "" === T.useItem && (T.useItem = this.be.J(P.Key.Seven) ? "bandage" : this.be.J(P.Key.Eight) ? "healthkit" : this.be.J(P.Key.Nine) ? "soda" : this.be.J(P.Key.Zero) ? "painkiller" : "");
                    for (var B = !1, F = 0; F < this.Ze.uiEvents.length; F++) {
                        var R = this.Ze.uiEvents[F];
                        if ("drop" == R.action) {
                            var j = new p.DropItemMsg;
                            if ("weapon" == R.type) {
                                var q = this.mt.U.weapons;
                                j.item = q[R.data].name,
                                j.weapIdx = R.data
                            } else {
                                var N = "";
                                N = "helmet" == R.data ? this.mt.N.helmet : "chest" == R.data ? this.mt.N.chest : R.data,
                                j.item = N
                            }
                            "" != j.item && (this.he(p.Msg.DropItem, j),
                            B = !0)
                        }
                    }
                    B && this.ue.playSound("loot_drop_01", {
                        channel: "ui"
                    })
                }
                var G = this.Ye.specNext || this.spectating && this.be.J(P.Key.Right)
                  , U = this.Ye.specPrev || this.spectating && this.be.J(P.Key.Left);
                if (this.Ye.beginSpectating || G || U) {
                    this.gameOver = !1;
                    var V = new p.SpectateMsg;
                    V.specNext = G,
                    V.specPrev = U,
                    this.he(p.Msg.Spectate, V)
                }
                this.Ye.beginSpectating = !1,
                this.Ye.specNext = !1,
                this.Ye.specPrev = !1,
                this.Ye.reloadTouched = !1,
                this.Ye.interactionTouched = !1,
                this.Ye.swapWeapSlots = !1;
                var H = !1;
                for (var W in T)
                    if (T.hasOwnProperty(W)) {
                        if ("toMouseDir" == W) {
                            var K = d.clamp(u.dot(T[W], this.prevMoveMsg[W]), -1, 1)
                              , X = d.rad2deg(Math.acos(K));
                            H = X > .4
                        } else
                            "toMouseLen" == W ? H = Math.abs(this.prevMoveMsg[W] - T[W]) > .5 : "shootStart" == W ? H = T[W] || T[W] != this.prevMoveMsg[W] : this.prevMoveMsg[W] != T[W] && (H = !0);
                        if (H)
                            break
                    }
                this.moveMsgTimeout -= e,
                (H || this.moveMsgTimeout < 0) && (this.seqInFlight || (this.seq = (this.seq + 1) % 256,
                this.seqSendTime = (new Date).getTime(),
                this.seqInFlight = !0,
                T.seq = this.seq),
                this.he(p.Msg.Move, T),
                this.moveMsgTimeout = 1,
                this.prevMoveMsg = T),
                this.Ze.flushInput(),
                this.Me.l(e, this.mt, this.ze, this.ue, this.Se, this.q),
                this.Ue.l(e, this.mt, this.q),
                this.Ae.l(e, this.Pe, this.Me, this.q, this.mt, this.Se, this.ze, this.ue),
                this.De.l(e, this.Pe, this.Me, this.q, this.mt, this.Se, this.ze, this.ue),
                this.Ee.l(e, this.ze, this.ue, this.mt, this.Me, this.Se, this.q),
                this.Be.l(e, this.Me, this.q, this.ze, this.ue),
                this.je.l(e, this.mt, this.q, this.Me, this.ze, this.Se, this.ue),
                this.Fe.l(e, this.q, this.mt, this.Me, this.Se),
                this.qe.l(e, this.q, this.mt, this.Me, this.Se),
                this.et.l(e, this.ce, this.Pe, this.ze, this.ue),
                this.ze.l(e, this.q),
                this.Ne.l(e, this.Pe, this.mt, this.Me, this.q, this.Se),
                this.Ge.l(e, this.Me, this.q),
                this.Ke.l(e, this.mt, this.q),
                this.Ye.l(e, this.mt, this.ce == this.lt, this.Me, this.He, this.Ue, this.Pe, this.q, this.teamMode, this.be),
                this.Ze.l(e, this.mt, this.spectating, this.Pe, this.Ue, this.Me),
                this.Je.l(e, this.lt, this.mt, this.be.mousePos, this.teamMode, this.Ne, this.Se),
                this._e.updateDisplay(),
                this.Se.l(e, this.q, this.Me);
                for (var Y = 0; Y < this.Je.newPings.length; Y++) {
                    var Z = this.Je.newPings[Y]
                      , Q = new p.EmoteMsg;
                    Q.type = Z.type,
                    Q.pos = Z.pos,
                    Q.useLoadout = !1,
                    Q.teamOnly = !0,
                    Q.isPing = !0,
                    this.he(p.Msg.Emote, Q)
                }
                this.Je.newPings = [];
                for (var J = 0; J < this.Je.newEmotes.length; J++) {
                    var $ = this.Je.newEmotes[J]
                      , ee = new p.EmoteMsg;
                    ee.type = $.type,
                    ee.pos = $.pos,
                    ee.useLoadout = $.useLoadout,
                    ee.teamOnly = !1,
                    ee.isPing = !1,
                    this.he(p.Msg.Emote, ee)
                }
                if (this.Je.newEmotes = [],
                this.ht(e),
                this.be.flush(),
                ++this.we % 30 == 0) {
                    for (var te = (Date.now(),
                    0); te < t.length; te++) {
                        var ae = t[te];
                        ae.active && !ae.fade && i(ae, .8) && r++
                    }
                    for (var ie = 0; ie < a.length; ie++) {
                        var re = a[ie];
                        re.active && !re.dead && i(re, .9) && r++
                    }
                    r && (this.I = !0),
                    r && this.ct && y.I()
                }
            },
            ht: function(e) {
                this.pixi.renderer.backgroundColor = h.background,
                this.Pe.render(this.q),
                this.Ae.render(this.q),
                this.De.render(this.q),
                this.Me.render(this.q),
                this.He.render(this.q),
                this.Ye.render(this.mt.pos, this.He, this.q, this.Me),
                this.Je.render(this.q),
                this.Ke.render(this.q),
                _.flush()
            },
            dt: function() {
                var e = y.getScreenDimensions()
                  , t = e.width;
                y.isLandscape() || (t = e.height),
                g.layout = t <= 850 || g.mobile ? g.Layout.Sm : g.Layout.Lg,
                this.q.screenWidth = e.width,
                this.q.screenHeight = e.height,
                this.Me.resize(this.pixi.renderer),
                this.He.resize(),
                this.Ye.resize(this.q),
                this._e.resize(),
                this.Se.resize(this.q)
            },
            gt: function(e) {
                for (var t = {
                    audioManager: this.ue,
                    renderer: this.Se,
                    particleBarn: this.ze,
                    map: this.Me,
                    smokeBarn: this.qe
                }, a = 0; a < e.delObjIds.length; a++)
                    e.delObjIds[a],
                    this.st.deleteObj(e.delObjIds[a]);
                for (var i = 0; i < e.fullObjects.length; i++) {
                    var r = e.fullObjects[i];
                    this.st.updateObjFull(r.__type, r.__id, r, t)
                }
                for (var o = 0; o < e.partObjects.length; o++) {
                    var s = e.partObjects[o];
                    this.st.updateObjPart(s.__id, s, t)
                }
                if (e.activePlayerIdDirty && (this.ce = e.activePlayerId),
                this.spectating = this.ce != this.lt,
                this.mt = this.Pe.se(this.ce),
                this.mt.yt(e.activePlayerData, this.Pe),
                e.activePlayerData.weapsDirty && (this.Ye.weapsDirty = !0),
                this.spectating) {
                    this.Ye.setSpectating(!0);
                    var l = this.Pe.H(this.ce)
                      , m = this.anonPlayerNames && 1 == this.teamMode ? l.anonName : l.name;
                    this.Ye.setSpectatedPlayer(this.ce, m),
                    this._e.hideAll()
                }
                this.mt.layer = this.mt.N.layer,
                this.Se.setActiveLayer(this.mt.layer),
                this.ue.activeLayer = this.mt.layer,
                e.aliveDirty && this.Ye.updatePlayersAlive(e.aliveCount),
                this.He.setProgress(e.gasT),
                e.gasDirty && this.He.setFullState(e.gasT, e.gasData, this.Me, this.Ye);
                for (var c = 0; c < e.teams.length; c++)
                    this.Pe.setTeamInfo(e.teams[c]);
                for (var d = this.Pe.H(this.ce).teamId, p = this.Pe.getTeamInfo(d), u = 0; u < e.teamData.length; u++) {
                    var h = e.teamData[u];
                    this.Pe.setTeammateData(p.playerIds[h.playerIdx], h)
                }
                for (var g = 0; g < e.bullets.length; g++) {
                    var y = e.bullets[g];
                    n.bullets[y.bulletType].addFlare ? this.De.addFlare(y, this.Pe, this.Se) : this.Ae.addBullet(y, this.Pe, this.Se),
                    y.shotFx && this.et.addShot(y.pos, y.layer, y.playerId, y.shotSourceType, y.shotOffhand, y.lastShot)
                }
                for (var f = 0; f < e.explosions.length; f++) {
                    var x = e.explosions[f];
                    this.Be.addExplosion(x.type, x.pos, x.layer)
                }
                for (var w = 0; w < e.emotes.length; w++) {
                    var b = e.emotes[w];
                    b.isPing ? this.Je.addPing(b) : this.Je.addEmote(b)
                }
                this.Fe.ft(e.planes)
            },
            ge: function(e, t) {
                var a = this;
                switch (e) {
                case p.Msg.Joined:
                    var i = new p.JoinedMsg;
                    i.deserialize(t),
                    this.onJoin(),
                    this.teamMode = i.teamMode,
                    this.lt = i.playerId,
                    this.ct = 2 & i.gameOpts;
                    for (var r = 0; r < i.playerInfoMsgs.length; r++) {
                        var o = i.playerInfoMsgs[r];
                        this.Pe.xt(o),
                        this.Pe.se(o.id)
                    }
                    i.started || this.Ye.setWaitingForPlayers(!0),
                    this.Ye.removeAds(),
                    this.victoryMusic && (this.victoryMusic.stop(),
                    this.victoryMusic = null),
                    1 & i.gameOpts && y.O(this.config.useLocalStorage, this.ws);
                    break;
                case p.Msg.PlayerInfo:
                    var s = new p.PlayerInfoMsg;
                    s.deserialize(t),
                    this.Pe.xt(s);
                    break;
                case p.Msg.Map:
                    var l = new p.MapMsg;
                    l.deserialize(t),
                    this.Me.setData(l.width, l.height, l.seed, l.places, l.objects, this.q),
                    this.Me.renderMap(this.pixi.renderer);
                    break;
                case p.Msg.Update:
                    var m = new p.UpdateMsg;
                    m.deserialize(t, this.st),
                    this.playing = !0,
                    this.gt(m);
                    break;
                case p.Msg.Kill:
                    var c = new p.KillMsg;
                    c.deserialize(t);
                    var d = (this.Pe.se(c.targetId),
                    this.Pe.H(c.targetId))
                      , u = this.Pe.H(c.killCreditId)
                      , h = c.itemSourceType || c.mapSourceType
                      , g = this.localization.translate("game-" + h)
                      , f = this.Pe.H(this.ce).teamId
                      , x = c.downed && !c.killed || c.damageType == n.DamageType.Gas || c.damageType == n.DamageType.Bleeding || c.damageType == n.DamageType.Airdrop
                      , w = x ? u : this.Pe.H(c.killerId)
                      , b = d.name
                      , _ = u.name
                      , v = w.name;
                    if (this.anonPlayerNames) {
                        var S = function(e) {
                            return e.playerId == a.ce || e.teamId == f
                        };
                        S(d) || (b = d.anonName),
                        S(u) || (_ = u.anonName),
                        S(w) || (v = w.anonName)
                    }
                    b = y.htmlEscape(b),
                    _ = y.htmlEscape(_),
                    v = y.htmlEscape(v),
                    c.killCreditId == this.ce ? this.Ye.showKill({
                        name: _,
                        kills: c.killerKills,
                        completeKill: c.killerId == this.ce
                    }, {
                        name: b,
                        suicide: c.killerId == c.targetId || c.killCreditId == c.targetId,
                        killed: c.killed,
                        downed: c.downed,
                        teamKill: d.teamId == u.teamId
                    }, g, this.spectating) : c.targetId == this.ce && c.downed && !c.killed && this.Ye.showDowned({
                        name: _,
                        damageType: c.damageType
                    }, {
                        name: b,
                        suicide: c.killerId == c.targetId || c.killCreditId == c.targetId
                    }, g, this.spectating);
                    var k = this.Ze.getKillFeedText(b, 0 == w.teamId ? "" : v, g, c.damageType, c.downed && !c.killed)
                      , z = this.Ze.getKillFeedColor(f, d.teamId, u.teamId);
                    this.Ze.addKillFeed(k, z),
                    c.type == n.DamageType.Player && this.Ae.createBulletHit(this.Pe, c.targetId, this.ue);
                    break;
                case p.Msg.PlayerStats:
                    var M = new p.PlayerStatsMsg;
                    M.deserialize(t),
                    this.Ye.setLocalStats(M.playerStats);
                    break;
                case p.Msg.GameOver:
                    var T = new p.GameOverMsg;
                    T.deserialize(t),
                    this.gameOver = T.gameOver,
                    this.Ye.showStats({
                        victory: T.victory,
                        spectating: this.spectating,
                        gameOver: T.gameOver,
                        stats: T.playerStats,
                        teamRank: T.teamRank,
                        teamMode: this.teamMode
                    }, this.Pe),
                    this._e.hideAll(),
                    T.victory && (!this.spectating || this.teamMode > 1) && (this.victoryMusic = this.ue.playSound("menu_music", {
                        channel: "music",
                        delay: 1300,
                        forceStart: !0
                    }));
                    break;
                case p.Msg.Pickup:
                    var P = new p.PickupMsg;
                    if (P.deserialize(t),
                    P.type == p.PickupMsgType.Success && P.item) {
                        var C = n.items[P.item];
                        this.ue.playSound(C.sound.pickup, {
                            channel: "ui"
                        }),
                        "throwable" == C.type && (this.mt.lastThrowablePickupSfxTicker = .3)
                    } else
                        this.Ze.displayPickupMessage(P.type);
                    break;
                case p.Msg.Disconnect:
                    var A = new p.DisconnectMsg;
                    A.deserialize(t),
                    this.disconnectMsg = this.localization.translate(A.reason)
                }
            },
            he: function(e, t) {
                var a = new p.MsgStream(new ArrayBuffer(4096));
                a.serializeMsg(e, t),
                this.wt(a)
            },
            wt: function(e) {
                if (this.ws && this.ws.readyState == this.ws.OPEN)
                    try {
                        this.ws.send(e.getBuffer())
                    } catch (e) {
                        z.storeGeneric("error", "sendMessageException"),
                        this.ws.close()
                    }
            }
        },
        e.exports = {
            bt: r
        }
    },
    "9e5281a7": function(e, t, a) {
        "use strict";
        var i = {
            "@metadata": {
                "last-updated": "2018-01-28",
                locale: "pt"
            },
            "word-order": "svo",
            "index-slogan": "Batalha Real 2D",
            "index-region": "Região",
            "index-north-america": "América do Norte",
            "index-europe": "Europa",
            "index-asia": "Ásia",
            "index-players": "jogadores",
            "index-play-solo": "Jogar Sozinho",
            "index-play-duo": "Jogar em Duplas",
            "index-play-squad": "Jogar em Tropas",
            "index-create-team": "Criar Equipe",
            "index-join-team": "Junte-se à Equipe",
            "index-how-to-play": "Como Jogar",
            "index-leave-team": "Abandonar Equipe",
            "index-joining-team": "Entrando na Equipe",
            "index-creating-team": "Criando Equipe",
            "index-invite-link": "Link de Convite",
            "index-solo": "Solo",
            "index-duo": "Dupla",
            "index-squad": "Tropa",
            "index-auto-fill": "Preencher",
            "index-no-fill": "Não Preencher",
            "index-waiting-for-leader": "Esperando o líder começar",
            "index-play": "Jogar",
            "index-featured-youtuber": "YouTuber em Destaque",
            "index-settings": "Configurações",
            "index-high-resolution": "Alta resolução (marque para melhorar a qualidade visual)",
            "index-screen-shake": "Tremer a tela",
            "index-master-volume": "Volume geral",
            "index-sfx-volume": "Volume de efeitos sonoros",
            "index-music-volume": "Volume da música",
            "index-mobile-announce": "Agora disponível no celular!",
            "index-mobile-tooltip": "Visite <span>surviv.io</span> no seu dispositivo móvel para jogar em qualquer lugar!",
            "index-team-is-full": "A equipe está cheia!",
            "index-failed-joining-team": "Falha ao entrar na equipe.",
            "index-failed-creating-team": "Falha ao criar a equipe.",
            "index-failed-finding-game": "Falha ao encontrar jogo.",
            "index-failed-joining-game": "Falha ao entrar no jogo.",
            "index-lost-connection": "Perda de conexão com a equipe.",
            "index-host-closed": "Conexão fechada do servidor.",
            "index-view-more": "Ver Mais",
            "index-back-to-main": "Voltar ao Menu Principal",
            "index-most-kills": "Maior Número de Kills",
            "index-total-kills": "Total de Kills",
            "index-total-wins": "Total de Vitórias",
            "index-top-5-percent": "Top 5 porcento",
            "index-kill-death-ratio": "Taxa de assinatados/mortes",
            "index-for": "para",
            "index-today": "Hoje",
            "index-this-week": "Esta Semana",
            "index-all-time": "Todos os Tempos",
            "index-top-100": "TOP 100",
            "index-rank": "Classificação",
            "index-player": "Jogador",
            "index-total-games": "Total de jogos",
            "index-controls": "Controles",
            "index-movement": "Movimentação",
            "index-movement-ctrl": "W, A, S, D",
            "index-aim": "Mira",
            "index-aim-ctrl": "Mouse",
            "index-punch": "Soco",
            "index-shoot": "Atirar",
            "index-shoot-ctrl": "Clique com botão esquerdo",
            "index-change-weapons": "Trocar de Armas",
            "index-change-weapons-ctrl": "1 até 4 ou Roda do Mouse",
            "index-stow-weapons": "Guardar Armas (Modo Soco)",
            "index-stow-weapons-ctrl": "3 ou E",
            "index-swap-weapons": "Alternar para a Arma Anterior",
            "index-swap-weapons-ctrl": "Q",
            "index-reload": "Recarregar",
            "index-reload-ctrl": "R",
            "index-scope-zoom": "Alcance do Zoom",
            "index-scope-zoom-ctrl": "Clique com o botão esquerdo no Zoom",
            "index-pickup": "Pegar",
            "index-loot": "Saquear",
            "index-revive": "Reviver",
            "index-pickup-ctrl": "F",
            "index-use-medical": "Usar Item Médico",
            "index-use-medical-ctrl": "Clique com o Botão esquerdo sobre o Item ou pressione 7 até 0",
            "index-drop-item": "Soltar Item",
            "index-drop-item-ctrl": "Clique com o Botão direito no Item",
            "index-cancel-action": "Cancelar Ação",
            "index-cancel-action-ctrl": "X",
            "index-view-map": "Ver Mapa",
            "index-view-map-ctrl": "M ou G",
            "index-toggle-minimap": "Alternar para Minimapa",
            "index-toggle-minimap-ctrl": "V",
            "game-alive": "Vivos",
            "game-reloading": "Recarregando",
            "game-using": "Usando",
            "game-reviving": "Revivendo",
            "game-revive-teammate": "Reviver",
            "game-equip": "Equipar",
            "game-cancel": "Cancelar",
            "game-You": "Você",
            "game-you": "você",
            "game-themselves": "a si próprios",
            "game-yourself": "a si próprio",
            "game-you-died": "morreu",
            "game-player-died": "morreu",
            "game-with": "com",
            "game-knocked-out": "derrubou",
            "game-killed": "matou",
            "game-finally-killed": "finalmente matou",
            "game-finally-bled-out": "finalmente se libertou",
            "game-died-outside": "morreu fora da zona de segurança",
            "game-the-red-zone": "A zona vermelha",
            "game-waiting-for-players": "Esperando jogadores",
            "game-spectating": "Assistindo",
            "game-red-zone-advances": "A zona vermelha avança em",
            "game-red-zone-advancing": "Zona vermelha avançando, vá para a zona segura!",
            "game-seconds": "segundos",
            "game-minutes": "minutos",
            "game-minute": "minuto",
            "game-m": "m",
            "game-s": "s",
            "game-not-enough-space": "Espaço insuficiente!",
            "game-item-already-owned": "O jogador já possui o item!",
            "game-item-already-equipped": "Item já equipado!",
            "game-better-item-equipped": "Melhor item equipado!",
            "game-play-new-game": "Jogar Partida",
            "game-spectate": "Assistir",
            "game-full-screen": "Tela Cheia",
            "game-sound": "Som",
            "game-quit-game": "Sair do Jogo",
            "game-return-to-game": "Voltar ao Jogo",
            "game-hide-match-stats": "Esconder Estatísticas",
            "game-view-match-stats": "Visualizar Estatísticas",
            "game-previous-teammate": "Colega Anterior",
            "game-next-teammate": "Próximo Colega",
            "game-spectate-previous": "",
            "game-spectate-next": "",
            "game-leave-game": "Sair do Jogo",
            "game-your-results": "Seus Resultados",
            "game-chicken": "Hoje vamos comer frango no jantar!",
            "game-won-the-game": "ganhou o jogo.",
            "game-team-eliminated": "Sua equipe foi derrotada.",
            "game-rank": "Classificação",
            "game-team-rank": "Classificação da Equipe",
            "game-team-kills": "Kills da Equipe",
            "game-kill": "Kill",
            "game-kills": "Kills",
            "game-damage-dealt": "Dano Causado",
            "game-damage-taken": "Dando Recebido",
            "game-survived": "Sobreviveu por",
            "game-backpack00": "Bolsa",
            "game-backpack01": "Pacote Pequeno",
            "game-backpack02": "Pacote Regular",
            "game-backpack03": "Pacote Militar",
            "game-bandage": "Bandagem",
            "game-bandage-tooltip": "Clique com o botão esquerdo para restaurar 15 de vida.",
            "game-healing-tooltip": "Não é possível curar quando a vida é maior que 75.",
            "game-healthkit": "Kit Médico",
            "game-healthkit-tooltip": "Clique com o botão esquerdo para restaurar 100 de vida.",
            "game-soda": "Soda",
            "game-soda-tooltip": "Clique com o botão esquerdo para aumentar a adrenalina em 25.",
            "game-adrenaline-tooltip": "A adrenalina restaura a vida com o passar do tempo.",
            "game-painkiller": "Pílulas",
            "game-painkiller-tooltip": "Clique com o botão esquerdo para aumentar a adrenalina em 50.",
            "game-9mm": "9mm",
            "game-9mm-tooltip": "Munição para M9, G18C, MP5, MAC-10, UMP9 e Vector.",
            "game-12gauge": "Calibre 12",
            "game-12gauge-tooltip": "Munição para M870, SPAS-12, Saiga-12 e MP220.",
            "game-762mm": "7.62mm",
            "game-762mm-tooltip": "Munição para AK-47, SCAR-H, M39, Mosin-Nagant, SV-98, M1, OT-38 e DP-28.",
            "game-556mm": "5.56mm",
            "game-556mm-tooltip": "Munição para FAMAS, M416, QBB-97, Mk 12 e M249.",
            "game-50AE": ".50 AE",
            "game-50AE-tooltip": "Munição para Desert Eagle.",
            "game-308sub": ".308 Subsonic",
            "game-308sub-tooltip": "Munição para AWM-S.",
            "game-flare": "Flare",
            "game-flare-tooltip": "Munição para Flare Gun.",
            "game-chest01": "Colete Nível 1",
            "game-chest02": "Colete Nível 2",
            "game-chest03": "Colete Nível 3",
            "game-helmet01": "Capacete Nível 1",
            "game-helmet02": "Capacete Nível 2",
            "game-helmet03": "Capacete Nível 3",
            "game-1xscope": "1x Mira",
            "game-2xscope": "2x Mira",
            "game-4xscope": "4x Mira",
            "game-8xscope": "8x Mira",
            "game-15xscope": "15x Mira",
            "game-level-1": "Nvl. 1",
            "game-level-2": "Nvl. 2",
            "game-level-3": "Nvl. 3",
            "game-outfitBase": "Basic Outfit",
            "game-outfitRoyalFortune": "Royal Fortune",
            "game-outfitKeyLime": "Key Lime",
            "game-outfitCobaltShell": "Cobalt Shell",
            "game-outfitCarbonFiber": "Carbon Fiber",
            "game-outfitDarkGloves": "The Professional",
            "game-outfitGhillie": "Ghillie Suit",
            "game-outfitCamo": "Forest Camo",
            "game-outfitRed": "Target Practice",
            "game-outfitWhite": "Arctic Avenger",
            "game-ak47": "AK-47",
            "game-dp28": "DP-28",
            "game-mosin": "Mosin-Nagant",
            "game-m39": "M39 EMR",
            "game-mp5": "MP5",
            "game-mac10": "MAC-10",
            "game-ump9": "UMP9",
            "game-m870": "M870",
            "game-mp220": "MP220",
            "game-saiga": "Saiga-12",
            "game-m9": "M9",
            "game-glock": "G18C",
            "game-ot38": "OT-38",
            "game-frag": "Granada de Fragmento",
            "game-hud-frag": "Fragmento",
            "game-barrel_01": "um barril",
            "game-silo_01": "a silo"
        };
        e.exports = i
    },
    a48f3bb2: function(e, t, a) {
        "use strict";
        function i() {
            this.ticker = 0,
            this.container = new o.Sprite,
            this.container.anchor.set(.5, .5),
            this.container.scale.set(1, 1),
            this.innerSprite = new o.Sprite,
            this.innerSprite.anchor.set(.5, .5),
            this.innerSprite.scale.set(1, 1),
            this.container.addChild(this.innerSprite),
            this.sprite = new o.Sprite,
            this.sprite.anchor.set(.5, .5),
            this.sprite.scale.set(.8, .8),
            this.container.addChild(this.sprite)
        }
        function r() {
            this.at = new c.Pool(i),
            this._t = null
        }
        var o = a("80ac57a6")
          , n = a("989ad62a")
          , s = a("10899aea")
          , l = a("1901e2d9")
          , m = a("c2a798c8")
          , c = (a("ce29f17f"),
        a("af8ba00f"),
        a("753d6e4b"));
        i.prototype = {
            a: function() {},
            o: function() {
                this.container.visible = !1
            },
            n: function(e, t, a, i) {
                if (this.pos = m.copy(e.pos),
                t && (this.layer = e.layer,
                this.name = e.name,
                this.count = e.count,
                this.isOld = e.isOld),
                a) {
                    this.ticker = 0,
                    this.isOld && (this.ticker = 10);
                    var r = n.items[this.name]
                      , s = "ammo" != r.type
                      , l = "melee" == r.type;
                    this.rad = n.lootRadius[r.type],
                    this.imgScale = 1.25 * r.lootImg.scale,
                    this.sprite.texture = o.Texture.fromImage(r.lootImg.sprite),
                    this.sprite.tint = r.lootImg.tint,
                    this.container.texture = s ? o.Texture.fromImage("loot-circle-outer-01.img") : o.Texture.EMPTY;
                    var c = n.items[r.ammo];
                    this.container.tint = c ? c.lootImg.tintDark : 0,
                    l && (this.innerSprite.texture = o.Texture.fromImage("loot-circle-inner-01.img"),
                    this.innerSprite.tint = c ? c.lootImg.tintDark : 14935011),
                    this.innerSprite.visible = l,
                    this.sprite.rotation = r.lootImg.rot ? r.lootImg.rot : 0,
                    this.sprite.scale.x = r.lootImg.mirror ? -.8 : .8,
                    this.container.visible = !0
                }
                (a || t) && i.renderer.addPIXIObj(this.container, this.layer, 13, this.__id)
            }
        },
        r.prototype = {
            l: function(e, t, a) {
                this._t = null;
                for (var i = Number.MAX_VALUE, r = this.at.m(), o = 0; o < r.length; o++) {
                    var n = r[o];
                    if (n.active) {
                        if (l.sameLayer(n.layer, t.layer)) {
                            var c = n.pos
                              , d = n.rad
                              , p = m.sub(t.pos, c)
                              , u = m.lengthSqr(p);
                            u < d * d && u < i && (i = u,
                            this._t = n)
                        }
                        n.ticker += e;
                        var h = s.delerp(n.ticker, 0, 1)
                          , g = s.easeOutElastic(h, .75)
                          , y = a.pointToScreen(n.pos)
                          , f = a.pixels(n.imgScale * g);
                        n.container.position.set(y.x, y.y),
                        n.container.scale.set(f, f)
                    }
                }
            },
            vt: function() {
                return this._t
            }
        },
        e.exports = {
            Ve: r
        }
    },
    a508b62a: function(e, t, a) {
        "use strict";
        function i(e, t) {
            if (!(e instanceof t))
                throw new TypeError("Cannot call a class as a function")
        }
        function r() {
            var e = {
                fontFamily: "Arial",
                fontWeight: "bold",
                fontSize: v.pixelRatio > 1 ? 30 : 22,
                align: "center",
                fill: 65535,
                stroke: 0,
                strokeThickness: 0,
                dropShadow: !0,
                dropShadowColor: "#000000",
                dropShadowBlur: 1,
                dropShadowAngle: Math.PI / 3,
                dropShadowDistance: 1
            }
              , t = new m.Text("",e);
            return t.anchor.set(.5, .5),
            t.scale.set(.5, .5),
            t.position.set(0, 30),
            t.visible = !1,
            t
        }
        function o() {
            var e = new m.Sprite;
            return e.texture = m.Texture.EMPTY,
            e.anchor.set(.5, .5),
            e.scale.set(1, 1),
            e.tint = 16777215,
            e.visible = !1,
            e
        }
        function n() {
            this.bodySprite = o(),
            this.chestSprite = o(),
            this.helmetSprite = o(),
            this.backpackSprite = o(),
            this.handLSprite = o(),
            this.handRSprite = o(),
            this.footLSprite = o(),
            this.footRSprite = o(),
            this.hipSprite = o(),
            this.gunLSprites = new M,
            this.gunRSprites = new M,
            this.objectLSprite = o(),
            this.objectRSprite = o(),
            this.meleeSprite = o(),
            this.bodySubmergeSprite = o(),
            this.handLSubmergeSprite = o(),
            this.handRSubmergeSprite = o(),
            this.footLSubmergeSprite = o(),
            this.footRSubmergeSprite = o(),
            this.bodySprite.addChild(this.bodySubmergeSprite),
            this.handLSprite.addChild(this.handLSubmergeSprite),
            this.handRSprite.addChild(this.handRSubmergeSprite),
            this.footLSprite.addChild(this.footLSubmergeSprite),
            this.footRSprite.addChild(this.footRSubmergeSprite),
            this.handLContainer = new m.Container,
            this.handLContainer.addChild(this.gunLSprites.container),
            this.handLContainer.addChild(this.handLSprite),
            this.handLContainer.addChild(this.objectLSprite),
            this.handRContainer = new m.Container,
            this.handRContainer.addChild(this.gunRSprites.container),
            this.handRContainer.addChild(this.meleeSprite),
            this.handRContainer.addChild(this.handRSprite),
            this.handRContainer.addChild(this.objectRSprite),
            this.footLContainer = new m.Container,
            this.footLContainer.addChild(this.footLSprite),
            this.footRContainer = new m.Container,
            this.footRContainer.addChild(this.footRSprite),
            this.bodyContainer = new m.Container,
            this.bodyContainer.addChild(this.footLContainer),
            this.bodyContainer.addChild(this.footRContainer),
            this.bodyContainer.addChild(this.backpackSprite),
            this.bodyContainer.addChild(this.bodySprite),
            this.bodyContainer.addChild(this.chestSprite),
            this.bodyContainer.addChild(this.hipSprite),
            this.bodyContainer.addChild(this.helmetSprite),
            this.bodyContainer.addChild(this.handLContainer),
            this.bodyContainer.addChild(this.handRContainer),
            this.container = new m.Container,
            this.container.addChild(this.bodyContainer),
            this.nameText = r(),
            this.container.addChild(this.nameText),
            this.initSubmergeSprites(),
            this.bones = [],
            this.anim = {
                type: p.None,
                data: {},
                seq: 0,
                ticker: 0,
                bones: []
            };
            for (var e = Object.keys(z).length, t = 0; t < e; t++)
                this.bones.push(new k),
                this.anim.bones.push({
                    weight: 0,
                    pose: new k
                });
            this.surface = "grass",
            this.isOnBrightSurface = !1,
            this.wasInWater = !1,
            this.weapType = "",
            this.visualsDirty = !1,
            this.stepDistance = 0,
            this.zoomFast = !1,
            this.playedDryFire = !1,
            this.curAction = {
                type: d.None
            },
            this.actionSoundInstance = !1,
            this.downed = !1,
            this.wasDowned = !1,
            this.bleedTicker = 0,
            this.submersion = 0,
            this.gunRecoilL = 0,
            this.gunRecoilR = 0,
            this.throwableState = "equip",
            this.throwableStatePrev = this.throwableState,
            this.lastThrowablePickupSfxTicker = 0,
            this.isNearDoorError = !1,
            this.doorErrorTicker = 0,
            this.noCeilingRevealTicker = 0,
            this.N = {},
            this.U = {
                action: {
                    type: d.None
                },
                spectatorCount: 0
            },
            this.pos = y.create(0, 0),
            this.posOld = y.create(0, 0),
            this.dir = y.create(1, 0),
            this.dirOld = y.create(1, 0),
            this.layer = 0
        }
        function s() {
            this.tt = new S.Pool(n),
            this.St = {},
            this.teamInfo = {},
            this.teammateData = {}
        }
        var l = function() {
            function e(e, t) {
                for (var a = 0; a < t.length; a++) {
                    var i = t[a];
                    i.enumerable = i.enumerable || !1,
                    i.configurable = !0,
                    "value"in i && (i.writable = !0),
                    Object.defineProperty(e, i.key, i)
                }
            }
            return function(t, a, i) {
                return a && e(t.prototype, a),
                i && e(t, i),
                t
            }
        }()
          , m = a("80ac57a6")
          , c = a("989ad62a")
          , d = c.Action
          , p = c.Anim
          , u = a("ceee80d9")
          , h = a("300e2704")
          , g = a("1901e2d9")
          , y = a("c2a798c8")
          , f = a("10899aea")
          , x = a("34e32c48")
          , w = a("6b42806d")
          , b = (a("2bb110d0"),
        a("6bad552e"))
          , _ = a("b58076b1")
          , v = a("ce29f17f")
          , S = (a("af8ba00f"),
        a("26be8056"),
        a("753d6e4b"))
          , k = b.Pose
          , z = b.Bones
          , M = function() {
            function e() {
                i(this, e),
                this.gunBarrel = o(),
                this.gunMag = o(),
                this.container = new m.Container,
                this.container.addChild(this.gunBarrel),
                this.container.addChild(this.gunMag),
                this.container.rotation = .5 * Math.PI,
                this.container.visible = !1,
                this.type = "",
                this.magTop = !1
            }
            return l(e, [{
                key: "setVisible",
                value: function(e) {
                    this.container.visible = e
                }
            }, {
                key: "setType",
                value: function(e) {
                    if (e != this.type) {
                        this.type = e;
                        var t = c.items[e]
                          , a = t.worldImg;
                        if (this.gunBarrel.texture = m.Texture.fromImage(a.sprite),
                        this.gunBarrel.anchor.set(.5, 1),
                        this.gunBarrel.position.set(0, 0),
                        this.gunBarrel.scale.set(.5 * a.scale.x, .5 * a.scale.y),
                        this.gunBarrel.tint = a.tint,
                        this.gunBarrel.visible = !0,
                        a.magImg) {
                            var i = a.magImg;
                            this.gunMag.texture = m.Texture.fromImage(i.sprite),
                            this.gunMag.anchor.set(.5, .5),
                            this.gunMag.position.set(i.pos.x, i.pos.y),
                            this.gunMag.scale.set(.25, .25),
                            this.gunMag.tint = 16777215,
                            this.gunMag.visible = !0,
                            i.top ? this.container.addChild(this.gunMag) : this.container.addChildAt(this.gunMag, 0)
                        } else
                            this.gunMag.visible = !1;
                        this.magTop = a.magImg && a.magImg.top;
                        var r = y.create(-4.25, -1.75);
                        t.pistol && t.isDual && (r = t.isDual ? y.create(-5.95, 0) : y.create(-4.75, -1.75)),
                        this.container.position.set(r.x, r.y)
                    }
                }
            }]),
            e
        }();
        n.prototype = {
            a: function() {
                this.isNew = !1,
                this.wasInsideObstacle = !1,
                this.insideObstacleType = "",
                this.lastInsideObstacleTime = 0,
                this.playAnim(p.None, 0)
            },
            o: function() {
                this.container.visible = !1
            },
            n: function(e, t, a, i) {
                var r = this.N;
                r.pos = y.copy(e.pos),
                r.dir = y.copy(e.dir),
                t && (r.layer = e.layer,
                r.dead = e.dead,
                r.downed = e.downed,
                r.disconnected = e.disconnected,
                r.actionType = e.actionType,
                r.animType = e.animType,
                r.animSeq = e.animSeq,
                r.skin = e.skin,
                r.backpack = e.backpack,
                r.helmet = e.helmet,
                r.chest = e.chest,
                r.curWeapType = e.curWeapType,
                r.wearingPan = e.wearingPan,
                this.N.animSeq != this.anim.seq && this.playAnim(this.N.animType, this.N.animSeq),
                this.visualsDirty = !0),
                a && (this.isNew = !0)
            },
            yt: function(e, t) {
                var a = this.U.curScope
                  , i = this.U;
                if (i.scopedIn = e.scopedIn,
                i.health = e.health,
                e.boostDirty && (i.boost = e.boost),
                i.action = {
                    type: this.N.actionType
                },
                e.hasAction && (i.action.time = e.action.time,
                i.action.duration = e.action.duration,
                i.action.item = e.action.item,
                i.action.targetId = e.action.targetId),
                e.inventoryDirty) {
                    i.curScope = e.curScope,
                    i.inventory = {};
                    for (var r in c.bagSizes)
                        c.bagSizes.hasOwnProperty(r) && (i.inventory[r] = e.inventory[r])
                }
                if (e.weapsDirty) {
                    i.curWeapIdx = e.curWeapIdx,
                    i.weapons = [];
                    for (var o = 0; o < c.WeaponSlot.Count; o++) {
                        var n = {};
                        n.name = e.weapons[o].name,
                        n.ammo = e.weapons[o].ammo,
                        i.weapons.push(n)
                    }
                }
                e.spectatorCountDirty && (i.spectatorCount = e.spectatorCount),
                this.U.curScope != a && (this.zoomFast = !0),
                this.U.scopedIn && (this.zoomFast = !1)
            },
            ut: function() {
                var e = this.N.downed || this.U.scopedIn ? "1xscope" : this.U.curScope;
                return c.scopeZoomRadius[e]
            },
            kt: function() {
                return c.items[this.N.backpack].level
            },
            zt: function() {
                return c.items[this.N.curWeapType].type
            },
            Mt: function(e) {
                return "" !== this.U.weapons[e].name
            },
            hasActivePan: function() {
                return this.N.wearingPan || "pan" == this.N.curWeapType && this.currentAnim() != p.Melee
            },
            getPanSegment: function() {
                var e = this.N.wearingPan ? "unequipped" : "equipped";
                return c.items.pan.reflectSurface[e]
            },
            l: function(e, t, a, i, r, o, n, s, l, m, h) {
                var f = c.items[this.N.curWeapType]
                  , x = this.__id == s
                  , v = t.se(s);
                this.posOld = y.copy(this.pos),
                this.dirOld = y.copy(this.dir),
                this.pos = y.copy(this.N.pos),
                this.dir = y.copy(this.N.dir),
                this.layer = this.N.layer,
                this.downed = this.N.downed;
                var S = this.weapType != this.N.curWeapType;
                this.weapType = this.N.curWeapType,
                this.lastThrowablePickupSfxTicker -= e,
                this.noCeilingRevealTicker -= e;
                var z = t.St[s].teamId
                  , M = t.St[this.__id].teamId == z;
                if (this.isNew) {
                    var T = t.H(this.__id);
                    this.nameText.text = T.name,
                    this.nameText.visible = !x && M
                }
                for (var P = null, C = null, A = a.Y.m(), I = 0; I < A.length; I++) {
                    var D = A[I];
                    if (D.active && !D.dead && D.layer == this.N.layer)
                        if (D.isBush) {
                            var O = .25 * c.player.radius;
                            w.intersectCircle(D.collider, this.pos, O) && (P = D)
                        } else if (D.isDoor && !D.door.open && D.door.playErrorFx) {
                            var E = c.player.radius + .25
                              , L = y.rotate(y.create(1, 0), D.rot)
                              , B = y.sub(D.pos, this.pos);
                            y.dot(B, L) < 0 && w.intersectCircle(D.collider, this.pos, E) && (C = D)
                        }
                }
                var F = null != P;
                if (F && (this.insideObstacleType = P.type),
                this.lastInsideObstacleTime -= e,
                this.wasInsideObstacle != F && this.lastInsideObstacleTime < 0 && !this.isNew) {
                    var R = u.Defs[this.insideObstacleType];
                    this.lastInsideObstacleTime = .2,
                    i.playSound(R.sound.enter, {
                        channel: "sfx",
                        soundPos: this.pos,
                        falloff: 1,
                        layer: this.layer,
                        muffled: !0
                    });
                    for (var j = y.normalizeSafe(y.sub(this.posOld, this.pos), y.create(1, 0)), q = F ? 1 : -1, N = Math.floor(g.random(3, 5)), G = 0; G < N; G++) {
                        var U = y.mul(y.rotate(y.mul(j, q), (Math.random() - .5) * Math.PI / 1.5), g.random(6, 8));
                        r.addParticle(R.hitParticle, this.layer, this.pos, U)
                    }
                }
                this.wasInsideObstacle = F;
                var V = this.isNearDoorError;
                if (this.isNearDoorError = null != C,
                this.doorErrorTicker -= e,
                this.isNearDoorError && !V && this.doorErrorTicker <= 0) {
                    this.doorErrorTicker = .5;
                    var H = u.Defs[C.type]
                      , W = H.door.sound.error;
                    i.playSound(W, {
                        channel: "sfx",
                        soundPos: this.pos,
                        falloff: 1,
                        layer: this.layer,
                        muffled: !0
                    })
                }
                this.surface = a.getGroundSurface(this.pos, this.layer),
                this.isOnBrightSurface = 1 == this.layer && "tile" == this.surface;
                var K = "water" === this.surface;
                if (this.updateSubmersion(e, K, a),
                this.stepDistance += y.length(y.sub(this.posOld, this.pos)),
                this.stepDistance > 5 && K || K && !this.wasInWater ? (this.stepDistance = 0,
                a.addRipple(this.pos, this.layer, 0),
                i.playGroup("footstep_water", {
                    soundPos: this.pos,
                    fallOff: 3,
                    layer: this.layer,
                    muffled: !0
                })) : this.stepDistance > 4 && !K && (this.stepDistance = 0,
                i.playGroup("footstep_" + this.surface, {
                    soundPos: this.pos,
                    fallOff: 3,
                    layer: this.layer,
                    muffled: !0
                })),
                this.wasInWater = K,
                this.bleedTicker -= e,
                this.N.downed && !this.N.dead && this.N.actionType == d.None && this.bleedTicker < 0) {
                    this.bleedTicker = c.player.bleedTickRate;
                    var X = y.mul(this.dir, 1);
                    X = y.rotate(X, (Math.random() - .5) * Math.PI / 3),
                    r.addParticle("bloodSplat", this.layer, this.pos, X),
                    m || i.playSound("player_bullet_hit_02", {
                        channel: "hits",
                        soundPos: this.pos,
                        fallOff: 3,
                        layer: this.layer,
                        muffled: !0
                    })
                }
                if (x && !h) {
                    var Y = this.U.curWeapIdx
                      , Z = this.U.weapons[Y]
                      , Q = c.items[Z.name];
                    if (!this.playedDryFire && "gun" == this.zt() && (o.te() || o.ee() && "auto" == Q.fireMode) && 0 === this.U.action.type && !l) {
                        var J = this.U.inventory[Q.ammo]
                          , $ = Z.ammo;
                        0 === J && 0 === $ && (i.playSound(Q.sound.empty),
                        this.playedDryFire = !0)
                    }
                    o.te() || o.ee() || (this.playedDryFire = !1)
                }
                var ee = this.N.actionType;
                if (!x && this.curAction.type != ee) {
                    i.stopSound(this.actionSoundInstance);
                    var te = null;
                    switch (ee) {
                    case d.Reload:
                        var ae = this.N.curWeapType;
                        "" != ae && (te = c.items[ae].sound.reload)
                    }
                    te && (this.actionSoundInstance = i.playSound(te, {
                        channel: "otherPlayers",
                        soundPos: this.pos,
                        fallOff: 2,
                        layer: this.layer,
                        muffled: !0
                    })),
                    this.curAction.type = ee
                }
                if (this.gunSwitchCooldown -= e,
                x && (S || this.curWeapIdx != this.U.curWeapIdx)) {
                    this.curWeapIdx = this.U.curWeapIdx;
                    var ie = c.items[this.weapType];
                    if ("melee" == ie.type || "throwable" == ie.type)
                        ("throwable" != ie.type || this.lastThrowablePickupSfxTicker <= 0) && i.playSound(ie.sound.deploy, {
                            channel: "sfx",
                            soundPos: this.pos,
                            fallOff: 3
                        });
                    else if ("gun" == ie.type) {
                        var re = "gun_switch_01";
                        this.gunSwitchCooldown > 0 ? re = ie.sound.deploy : this.gunSwitchCooldown = c.player.freeSwitchCooldown,
                        i.stopLocalActionSound(),
                        i.playSound(re, {
                            channel: "activePlayer"
                        })
                    }
                }
                this.gunRecoilL = Math.max(0, this.gunRecoilL - this.gunRecoilL * e * 5 - e),
                this.gunRecoilR = Math.max(0, this.gunRecoilR - this.gunRecoilR * e * 5 - e);
                var oe = {
                    playerBarn: t,
                    map: a,
                    audioManager: i,
                    particleBarn: r
                };
                this.updateAnim(e, oe),
                this.currentAnim() == p.None && (this.throwableState = "equip"),
                this.currentAnim() != p.Cook && this.currentAnim() != p.Throw || "throwable" == f.type || this.playAnim(p.None, 0);
                for (var ne = this.selectIdlePose(), se = b.IdlePoses[ne], le = 0; le < this.bones.length; le++) {
                    var me = le
                      , ce = se[me] || k.identity
                      , de = this.anim.bones[me];
                    de.weight > 0 ? this.bones[le].copy(k.lerp(de.weight, ce, de.pose)) : this.bones[le].copy(ce)
                }
                (this.visualsDirty || this.throwableStatePrev != this.throwableState) && this.Tt(),
                this.visualsDirty = !1,
                this.throwableStatePrev = this.throwableState,
                this.Pt();
                for (var pe = this.layer, ue = w.createCircle(this.pos, c.player.maxVisualRadius), he = !1, ge = !1, ye = !1, fe = a.ot.m(), xe = 0; xe < fe.length; xe++) {
                    var we = fe[xe];
                    if (we.active) {
                        for (var be = 0; be < we.stairs.length; be++) {
                            var _e = we.stairs[be]
                              , ve = w.intersect(_e.collision, ue);
                            if (ve) {
                                ge = !0;
                                var Se = y.add(_e.center, y.mul(_e.downDir, -3))
                                  , ke = y.sub(Se, this.pos)
                                  , ze = y.length(ke);
                                ke = ze > 1e-4 ? y.div(ke, ze) : y.create(1, 0),
                                ye = _.intersectSegment(a.Y.m(), this.pos, ke, ze, .5, this.layer, !1) < ze
                            }
                            x && _e.noCeilingReveal && ve && 0 != this.layer && (this.noCeilingRevealTicker = .25)
                        }
                        for (var Me = 0; Me < we.mask.length; Me++)
                            if (w.intersect(we.mask[Me], ue)) {
                                he = !0;
                                break
                            }
                    }
                }
                var Te = 18;
                ge && (1 & pe && (1 & v.layer || !ye) || 2 & v.layer && !he) && (pe |= 2),
                (1 & pe) != (1 & v.layer) || !ge || he && 0 != v.layer || (pe |= 2,
                Te += 100);
                var Pe = this.__id + (this.N.downed ? 0 : 131072) + (x ? 65536 : 0);
                n.addPIXIObj(this.container, pe, Te, Pe),
                this.isNew = !1
            },
            ht: function(e) {
                var t = e.pointToScreen(this.pos)
                  , a = e.pixels(1);
                this.container.position.set(t.x, t.y),
                this.container.scale.set(a, a),
                this.container.visible = !this.N.dead
            },
            Tt: function() {
                var e = c.items[this.N.skin]
                  , t = e.skinImg;
                this.bodySprite.texture = m.Texture.fromImage(t.baseSprite),
                this.bodySprite.tint = t.baseTint,
                this.bodySprite.scale.set(.25, .25),
                this.bodySprite.visible = !0;
                var a = function(e, t, a) {
                    e.texture = m.Texture.fromImage(t),
                    e.scale.set(.35, .35),
                    e.tint = a,
                    e.visible = !0
                };
                a(this.handLSprite, t.handSprite, t.handTint),
                a(this.handRSprite, t.handSprite, t.handTint);
                var i = function(e, t, a) {
                    e.texture = m.Texture.fromImage("player-feet-01.img"),
                    e.scale.set(.45, .45),
                    e.rotation = .5 * Math.PI,
                    e.tint = t,
                    e.visible = a
                };
                if (i(this.footLSprite, t.footTint, this.downed),
                i(this.footRSprite, t.footTint, this.downed),
                "" == this.N.chest || e.camo)
                    this.chestSprite.visible = !1;
                else {
                    var r = c.items[this.N.chest];
                    this.chestSprite.texture = m.Texture.fromImage("player-armor-base-01.img"),
                    this.chestSprite.scale.set(.25, .25),
                    this.chestSprite.tint = r.tint,
                    this.chestSprite.visible = !0
                }
                if ("" == this.N.helmet || e.camo)
                    this.helmetSprite.visible = !1;
                else {
                    var o = c.items[this.N.helmet]
                      , n = 3.33 * (this.downed ? 1 : -1);
                    this.helmetSprite.texture = m.Texture.fromImage("player-circle-base-01.img"),
                    this.helmetSprite.position.set(n, 0),
                    this.helmetSprite.scale.set(.15, .15),
                    this.helmetSprite.tint = o.tint,
                    this.helmetSprite.visible = !0
                }
                if (this.kt() > 0 && !e.camo && !this.downed) {
                    var s = (c.items[this.N.backpack],
                    [10.25, 11.5, 12.75])
                      , l = this.kt()
                      , d = s[Math.min(l - 1, s.length - 1)]
                      , u = .5 * (.4 + .03 * l);
                    this.backpackSprite.texture = m.Texture.fromImage("player-circle-base-01.img"),
                    this.backpackSprite.position.set(-d, 0),
                    this.backpackSprite.scale.set(u, u),
                    this.backpackSprite.tint = t.backpackTint,
                    this.backpackSprite.visible = !0,
                    function(e, t, a) {
                        e.texture = m.Texture.fromImage(t),
                        e.tint = a
                    }(this.backpackSprite, t.backpackSprite, t.backpackTint)
                } else
                    this.backpackSprite.visible = !1;
                if (this.N.wearingPan) {
                    var h = c.items.pan.hipImg;
                    this.hipSprite.texture = m.Texture.fromImage(h.sprite),
                    this.hipSprite.position.set(h.pos.x, h.pos.y),
                    this.hipSprite.scale.set(h.scale.x, h.scale.y),
                    this.hipSprite.rotation = h.rot,
                    this.hipSprite.tint = h.tint,
                    this.hipSprite.visible = !0
                } else
                    this.hipSprite.visible = !1;
                var g = c.items[this.N.curWeapType];
                if ("gun" == g.type) {
                    this.gunRSprites.setType(this.N.curWeapType),
                    this.gunRSprites.setVisible(!0),
                    g.isDual ? (this.gunLSprites.setType(this.N.curWeapType),
                    this.gunLSprites.setVisible(!0)) : this.gunLSprites.setVisible(!1);
                    var y = this.bodyContainer.getChildIndex(this.handRContainer)
                      , f = y + 1;
                    this.gunRSprites.magTop && (f = y - 1),
                    f = Math.max(f, 0),
                    this.bodyContainer.getChildIndex(this.handLContainer) != f && this.bodyContainer.addChildAt(this.handLContainer, f)
                } else
                    this.gunLSprites.setVisible(!1),
                    this.gunRSprites.setVisible(!1);
                if ("melee" == g.type && "fists" != this.N.curWeapType) {
                    var x = g.worldImg;
                    this.meleeSprite.texture = m.Texture.fromImage(x.sprite),
                    this.meleeSprite.pivot.set(-x.pos.x, -x.pos.y),
                    this.meleeSprite.scale.set(x.scale.x, x.scale.y),
                    this.meleeSprite.rotation = x.rot,
                    this.meleeSprite.tint = x.tint,
                    this.meleeSprite.visible = !0;
                    var w = this.handRContainer.getChildIndex(this.handRSprite)
                      , b = Math.max(x.renderOnHand ? w + 1 : w - 1, 0);
                    this.handRContainer.getChildIndex(this.meleeSprite) != b && this.handRContainer.addChildAt(this.meleeSprite, b);
                    var _ = this.bodyContainer.getChildIndex(this.handRContainer)
                      , v = Math.max(x.leftHandOntop ? _ + 1 : _ - 1, 0);
                    this.bodyContainer.getChildIndex(this.handLContainer) != v && this.bodyContainer.addChildAt(this.handLContainer, v)
                } else
                    this.meleeSprite.visible = !1;
                if ("throwable" == g.type) {
                    var S = function(e, t) {
                        t.sprite && "none" != t.sprite ? (e.texture = m.Texture.fromImage(t.sprite),
                        e.position.set(t.pos.x, t.pos.y),
                        e.scale.set(t.scale, t.scale),
                        e.rotation = .5 * Math.PI,
                        e.visible = !0) : e.visible = !1
                    }
                      , k = g.handImg[this.throwableState];
                    S(this.objectLSprite, k.left),
                    S(this.objectRSprite, k.right)
                } else
                    this.objectLSprite.visible = !1,
                    this.objectRSprite.visible = !1;
                if ((this.downed || this.currentAnim() == p.Revive) && (this.gunLSprites.setVisible(!1),
                this.gunRSprites.setVisible(!1),
                this.meleeSprite.visible = !1,
                this.objectLSprite.visible = !1,
                this.objectRSprite.visible = !1),
                this.downed && (this.backpackSprite.visible = !1,
                this.hipSprite.visible = !1),
                this.downed != this.wasDowned)
                    if (this.wasDowned = this.downed,
                    this.downed) {
                        var z = this.bodyContainer.getChildIndex(this.footLContainer);
                        this.bodyContainer.addChildAt(this.handLContainer, z),
                        this.bodyContainer.addChildAt(this.handRContainer, z)
                    } else
                        this.bodyContainer.addChild(this.handLContainer),
                        this.bodyContainer.addChild(this.handRContainer)
            },
            Pt: function() {
                var e = function(e, t) {
                    e.position.set(t.pos.x, t.pos.y),
                    e.pivot.set(-t.pivot.x, -t.pivot.y),
                    e.rotation = t.rot
                };
                e(this.handLContainer, this.bones[z.HandL]),
                e(this.handRContainer, this.bones[z.HandR]),
                e(this.footLContainer, this.bones[z.FootL]),
                e(this.footRContainer, this.bones[z.FootR]);
                var t = c.items[this.N.curWeapType];
                !this.downed && this.currentAnim() != p.Revive && "gun" == t.type && t.worldImg.leftHandOffset && (this.handLContainer.position.x += t.worldImg.leftHandOffset),
                this.handLContainer.position.x -= 1.125 * this.gunRecoilL,
                this.handRContainer.position.x -= 1.125 * this.gunRecoilR,
                this.bodyContainer.rotation = -Math.atan2(this.dir.y, this.dir.x)
            },
            selectIdlePose: function() {
                var e = c.items[this.N.curWeapType]
                  , t = "fists";
                return t = this.downed ? "downed" : e.anim && e.anim.idlePose ? e.anim.idlePose : "gun" == e.type ? e.pistol ? e.isDual ? "dualPistol" : "pistol" : "rifle" : "throwable" == e.type ? "throwable" : "fists",
                b.IdlePoses[t] ? t : "fists"
            },
            selectAnim: function(e) {
                var t = function(e, t) {
                    return {
                        name: e,
                        mirror: !!t && Math.random() < .5
                    }
                };
                switch (e) {
                case p.None:
                    return t("none", !1);
                case p.Cook:
                    return t("cook", !1);
                case p.Throw:
                    return t("throw", !1);
                case p.Revive:
                    return t("revive", !1);
                case p.CrawlForward:
                    return t("crawl_forward", !0);
                case p.CrawlBackward:
                    return t("crawl_backward", !0);
                case p.Melee:
                    var a = c.items[this.N.curWeapType];
                    if (!a.anim || !a.anim.attackAnims)
                        return t("fists", !0);
                    var i = a.anim.attackAnims
                      , r = Math.floor(Math.random() * i.length)
                      , o = i[r];
                    return t(o, "fists" == o && 1 == i.length);
                default:
                    return t("none", !1)
                }
            },
            currentAnim: function() {
                return this.anim.type
            },
            playAnim: function(e, t) {
                this.anim.type = e,
                this.anim.data = this.selectAnim(e),
                this.anim.seq = t,
                this.anim.ticker = 0;
                for (var a = 0; a < this.bones.length; a++) {
                    var i = this.anim.bones[a];
                    i.weight = 0,
                    i.pose.copy(this.bones[a])
                }
            },
            updateAnim: function(e, t) {
                if ("none" == this.anim.data.name && this.playAnim(p.None, this.anim.seq),
                this.currentAnim() != p.None) {
                    var a = this.anim.ticker;
                    this.anim.ticker += 1 * e;
                    for (var i = b.Animations[this.anim.data.name], r = i.keyframes, o = this.anim.ticker, n = -1, s = 0; o >= r[s].time && s < r.length - 1; )
                        o -= r[s].time,
                        n++,
                        s++;
                    n = Math.max(n, 0);
                    for (var l = Math.min(o / r[s].time, 1), m = r[n].bones, c = r[s].bones, d = this.anim.data.mirror, u = 0; u < this.anim.bones.length; u++) {
                        var h = this.anim.bones[u]
                          , g = u;
                        d && (g = u % 2 == 0 ? u + 1 : u - 1),
                        void 0 !== m[g] && void 0 !== c[g] && (h.weight = n == s ? l : 1,
                        h.pose.copy(k.lerp(l, m[g], c[g])),
                        d && (h.pose.pos.y *= -1,
                        h.pose.pivot.y *= -1,
                        h.pose.rot *= -1))
                    }
                    var y = s == r.length - 1 && f.eqAbs(l, 1)
                      , x = this.anim.ticker;
                    y && (x += 1);
                    for (var w = 0; w < i.effects.length; w++) {
                        var _ = i.effects[w];
                        _.time >= a && _.time < x && this[_.fn].apply(this, [t, _.args])
                    }
                    y && this.playAnim(p.None, this.anim.seq)
                }
            },
            animPlaySound: function(e, t) {
                var a = c.items[this.N.curWeapType]
                  , i = a.sound[t.sound];
                void 0 !== i && e.audioManager.playSound(i, {
                    channel: "sfx",
                    soundPos: this.pos,
                    fallOff: 3,
                    layer: this.layer,
                    muffled: !0
                })
            },
            animSetThrowableState: function(e, t) {
                this.throwableState = t.state
            },
            animThrowableParticles: function(e, t) {
                var a = y.rotate(y.create(.75, .75), Math.atan2(this.dir.y, this.dir.x));
                e.particleBarn.addParticle("fragPin", this.layer, y.add(this.pos, a), y.mul(y.rotate(this.dir, .5 * Math.PI), 4.5));
                var i = y.rotate(y.create(.75, -.75), Math.atan2(this.dir.y, this.dir.x));
                e.particleBarn.addParticle("fragLever", this.layer, y.add(this.pos, i), y.mul(y.rotate(this.dir, .25 * -Math.PI), 3.5))
            },
            animMeleeCollision: function(e, t) {
                var a = c.items[this.N.curWeapType];
                if (a && "melee" == a.type && a.attackOffset) {
                    for (var i = Math.atan2(this.dir.y, this.dir.x), r = y.add(this.pos, y.rotate(a.attackOffset, i)), o = a.attackRad, n = [], s = null, l = null, m = 0, d = e.map.Y.m(), p = 0; p < d.length; p++) {
                        var h = d[p];
                        if (!(!h.active || h.dead || h.height < c.player.meleeHeight) && g.sameLayer(h.layer, 1 & this.layer)) {
                            var b = w.intersectCircle(h.collider, r, o);
                            b && b.pen > m && (s = h,
                            l = b,
                            m = b.pen)
                        }
                    }
                    if (s) {
                        var v = u.Defs[s.type]
                          , S = y.add(r, y.mul(y.neg(l.dir), o - l.pen))
                          , k = y.mul(l.dir, 7.5);
                        k = y.rotate(k, (Math.random() - .5) * Math.PI / 3),
                        n.push({
                            pos: S,
                            vel: k,
                            particle: v.hitParticle,
                            sound: v.sound.punch,
                            soundFn: "playGroup"
                        })
                    }
                    for (var z = e.playerBarn.tt.m(), M = 0; M < z.length; M++) {
                        var T = z[M];
                        if (T.active && T.__id != this.__id && !T.N.dead && g.sameLayer(T.layer, this.layer)) {
                            var P = y.normalizeSafe(y.sub(T.pos, this.pos), y.create(1, 0))
                              , C = o + y.length(a.attackOffset);
                            if (x.testCircleCircle(r, o, T.pos, c.player.radius) && f.eqAbs(C, _.intersectSegment(e.map.Y.m(), this.pos, P, C, c.player.meleeHeight, this.layer, !1))) {
                                var A = y.rotate(P, (Math.random() - .5) * Math.PI / 3);
                                n.push({
                                    pos: T.pos,
                                    vel: A,
                                    particle: "bloodSplat",
                                    sound: a.sound.playerHit,
                                    soundFn: "playSound"
                                });
                                break
                            }
                        }
                    }
                    for (var I = 0; I < n.length; I++) {
                        var D = n[I];
                        e.particleBarn.addParticle(D.particle, this.layer, D.pos, D.vel),
                        e.audioManager[D.soundFn](D.sound, {
                            channel: "hits",
                            soundPos: D.pos,
                            layer: this.layer,
                            muffled: !0
                        })
                    }
                }
            },
            initSubmergeSprites: function() {
                var e = function(e, t) {
                    e.texture = m.Texture.fromImage(t),
                    e.anchor.set(.5, .5),
                    e.tint = 2854052,
                    e.alpha = 0,
                    e.visible = !1
                };
                e(this.bodySubmergeSprite, "player-wading-01.img"),
                e(this.handLSubmergeSprite, "player-hands-01.img"),
                e(this.handRSubmergeSprite, "player-hands-01.img"),
                e(this.footLSubmergeSprite, "player-feet-01.img"),
                e(this.footRSubmergeSprite, "player-feet-01.img");
                var t = new m.Graphics;
                t.beginFill(16711680, .5),
                t.drawCircle(0, 0, 76),
                t.position.set(0, 0),
                this.bodySubmergeSprite.addChild(t),
                this.bodySubmergeSprite.mask = t,
                this.bodySubmergeSprite.scale.set(.5, .5)
            },
            updateSubmersion: function(e, t, a) {
                var i = 0;
                t && (i = f.remap(a.distanceToShore(this.pos), 0, 16, .6, 1)),
                this.submersion = f.lerp(4 * e, this.submersion, i);
                var r = .8 * this.submersion
                  , o = 2 * (.9 - .4 * this.submersion);
                this.bodySubmergeSprite.scale.set(o, o),
                this.bodySubmergeSprite.mask.scale.set(1 / o, 1 / o),
                this.bodySubmergeSprite.alpha = r,
                this.bodySubmergeSprite.visible = r > .001;
                for (var n = [this.handLSubmergeSprite, this.handRSubmergeSprite, this.footLSubmergeSprite, this.footRSubmergeSprite], s = 0; s < n.length; s++)
                    n[s].alpha = this.downed ? r : 0,
                    n[s].visible = n[s].alpha > .001
            },
            addRecoil: function(e, t, a) {
                t && (this.gunRecoilL += e),
                a && (this.gunRecoilR += e)
            }
        },
        s.prototype = {
            l: function(e, t, a, i, r, o, n, s, l, m, d) {
                for (var p = this.tt.m(), u = 0; u < p.length; u++) {
                    var g = p[u];
                    g.active && g.l(e, this, o, s, i, n, a, t, l, m, d)
                }
                for (var f = this.H(t).teamId, x = this.getTeamInfo(f), w = 0; w < x.playerIds.length; w++) {
                    var b = x.playerIds[w]
                      , _ = this.se(b);
                    _ && b == t && this.setTeammateData(b, {
                        pos: y.copy(_.N.pos),
                        health: _.U.health,
                        disconnected: !1,
                        dead: _.N.dead,
                        downed: _.N.downed
                    });
                    var v = this.teammateData[b];
                    if (v)
                        if (_) {
                            var S = this.teammateData[b];
                            S.pos = y.copy(_.N.pos),
                            S.posTarget = y.copy(_.N.pos)
                        } else if (v) {
                            var k = (c.player.moveSpeed,
                            y.sub(v.posTarget, v.pos))
                              , z = y.length(k)
                              , M = z > 1e-4 ? y.div(k, z) : y.create(1, 0)
                              , T = Math.min(z, v.posDelta * e / h.kTeamUpdateRate);
                            v.pos = y.add(v.pos, y.mul(M, T))
                        }
                }
            },
            render: function(e) {
                for (var t = this.tt.m(), a = 0; a < t.length; a++) {
                    var i = t[a];
                    i.active && i.ht(e)
                }
            },
            se: function(e) {
                for (var t = this.tt.m(), a = 0; a < t.length; a++) {
                    var i = t[a];
                    if (i.active && i.__id === e)
                        return i
                }
                return null
            },
            xt: function(e) {
                this.St[e.id] = {
                    playerId: e.id,
                    teamId: e.teamId,
                    name: e.name,
                    anonName: "Player" + (e.id - 2750)
                }
            },
            H: function(e) {
                return this.St[e] || {
                    name: "unknown",
                    teamId: 0
                }
            },
            setTeamInfo: function(e) {
                this.teamInfo[e.teamId] = e
            },
            getTeamInfo: function(e) {
                return this.teamInfo[e]
            },
            setTeammateData: function(e, t) {
                var a = this.teammateData[e]
                  , i = a ? a.pos : y.copy(t.pos)
                  , r = a || {};
                r.pos = i,
                r.posTarget = y.copy(t.pos),
                r.posDelta = y.length(y.sub(t.pos, i)),
                r.health = t.health,
                r.disconnected = t.disconnected,
                r.dead = t.dead,
                r.downed = t.downed,
                this.teammateData[e] = r
            },
            getTeammateData: function(e) {
                return this.teammateData[e]
            }
        },
        e.exports = {
            Ce: s
        }
    },
    a5bf0544: function(e, t, a) {
        "use strict";
        var i = {
            "@metadata": {
                "last-updated": "2018-01-28",
                locale: "es"
            },
            "word-order": "svo",
            "index-create-account": "Crear cuenta",
            "index-set-account-name": "Configurar su nombre",
            "index-enter-name": "Ingrese su nombre",
            "index-finish": "Terminar",
            "index-delete-account": "Borrar cuenta",
            "index-delete-account-desc": 'Ingresa "DELETE" para eliminar tu cuenta:',
            "index-confirm": "Confirmar",
            "index-customize-avatar": "Personalizar avatar",
            "index-done": "Hecho",
            "index-account": "Cuenta",
            "index-log-in-with": "Inicia sesión con",
            "index-facebook": "Facebook",
            "index-google": "Google",
            "index-twitch": "Twitch",
            "index-discord": "Discord",
            "index-my-stats": "Mis estadísticas",
            "index-link-account": "Enlazar cuentas",
            "index-log-out": "Cerrar sesión",
            "index-change-avatar": "Cambiar avatar",
            "index-change-account-name": "Cambiar el nombre",
            "index-back": "Atrás",
            "index-link-account-to": "Enlace con",
            "index-log-in-desc": "Iniciar sesión!",
            "index-logging-in": "Iniciando sección",
            "index-leaderboards": "Ránking",
            "index-slogan": "2d Battle Royale",
            "index-region": "Región",
            "index-north-america": "Norteamérica",
            "index-europe": "Europa",
            "index-asia": "Asia",
            "index-players": "Jugadores",
            "index-play-solo": "Jugar Solo",
            "index-play-duo": "Jugar Dúo",
            "index-play-squad": "Jugar Squad",
            "index-join-team": "Entrar equipo",
            "index-create-team": "Crear equipo",
            "index-how-to-play": "Como Jugar",
            "index-leave-team": "Dejar el equipo",
            "index-joining-team": "Uniendose al equipo",
            "index-creating-team": "Creando equipo",
            "index-invite-link": "Enlace de invitación",
            "index-invite-code": "Codigo de invitacion",
            "index-join-team-help": "Tienes un enlace de equipo?  Pegalo aqui:",
            "index-solo": "Solo",
            "index-duo": "Dúo",
            "index-squad": "Squad",
            "index-auto-fill": "Emparejar",
            "index-no-fill": "No Emparejar",
            "index-waiting-for-leader": "Esperando al Líder para comenzar el juego",
            "index-play": "Jugar",
            "index-featured-youtuber": "YouTuber Destacado",
            "index-streaming-live": "¡En Directo!",
            "index-settings": "Configuración",
            "index-high-resolution": "Resolución alta (activar para mejorar la calidad visual)",
            "index-screen-shake": "Temblor de la pantalla",
            "index-master-volume": "Volumen principal",
            "index-sfx-volume": "Volumen de efectos de sonido",
            "index-music-volume": "Volumen de la música",
            "index-mobile-announce": "Ahora disponible para móvil!",
            "index-mobile-tooltip": "¡Visita <span>surviv.io</span> en tu dispositivo móvil para jugar en el camino!",
            "index-team-is-full": "¡El equipo esta lleno!",
            "index-failed-joining-team": "Fallo al unirse al equipo.",
            "index-failed-creating-team": "Fallo al crear el equipo.",
            "index-failed-finding-game": "Fallo al encontrar una partida.",
            "index-failed-joining-game": "Fallo al unirse a la partida.",
            "index-lost-connection": "Se perdio la conección al equipo.",
            "index-host-closed": "El servidor cerro la conexion.",
            "index-view-more": "Ver más",
            "index-back-to-main": "Volver al menú principal",
            "index-most-kills": "Mas Muertes",
            "index-total-kills": "Total de muertes",
            "index-total-wins": "Total de Victorias",
            "index-top-5-percent": "% De top 5",
            "index-kill-death-ratio": "Proporcion de K/D",
            "index-for": "Por",
            "index-today": "Hoy",
            "index-this-week": "Esta semana",
            "index-all-time": "Siempre",
            "index-top-100": "TOP 100",
            "index-rank": "Posición",
            "index-player": "Jugador",
            "index-total-games": "Partidas Jugadas",
            "index-controls": "Controles",
            "index-movement": "Movimiento",
            "index-movement-ctrl": "W, A, S, D",
            "index-aim": "Apuntar",
            "index-aim-ctrl": "Ratón",
            "index-punch": "Golpear",
            "index-shoot": "Disparar",
            "index-shoot-ctrl": "Click Izquierdo",
            "index-change-weapons": "Cambiar arma",
            "index-change-weapons-ctrl": "1 hasta 4 ó Rueda del Ratón",
            "index-stow-weapons": "Guardar arma (Puños)",
            "index-stow-weapons-ctrl": "3 o E",
            "index-swap-weapons": "Cambiar a arma anterior",
            "index-swap-weapons-ctrl": "Q",
            "index-reload": "Recargar",
            "index-reload-ctrl": "R",
            "index-scope-zoom": "Zoom de la mirilla",
            "index-scope-zoom-ctrl": "Click Izquierdo en la mirilla",
            "index-pickup": "Recoger",
            "index-loot": "Agarrar",
            "index-revive": "Revivir",
            "index-pickup-ctrl": "F",
            "index-use-medical": "Usar objeto medico",
            "index-use-medical-ctrl": "Click izquierdo en el objeto ó 7 hasta 0",
            "index-drop-item": "Soltar objeto",
            "index-drop-item-ctrl": "Click derecho en el objeto",
            "index-cancel-action": "Cancelar acción",
            "index-cancel-action-ctrl": "X",
            "index-view-map": "Vér el mapa",
            "index-view-map-ctrl": "M ó G",
            "index-toggle-minimap": "Desactivar minimapa",
            "index-toggle-minimap-ctrl": "V",
            "index-use-ping": "Usar la rueda comunicacion de equipo",
            "index-use-ping-ctrl": "Presiona C, despues manten apretado click derecho y mueve el mouse, despues suelta el click derecho",
            "index-use-emote": "Usar la rueda de emoticonos",
            "index-use-emote-ctrl": "Manten presionado click derecho y mueve el mouse, despues suelta el click derecho",
            "index-tips-1-desc": "La meta de surviv.io es ser el ultimo jugador vivo. Solo tienes una vida - no reapareces!",
            "index-tips-2": "2D PUBG",
            "index-tips-2-desc": "Si has jugado otros juegos del estilo Battle Royale como PUBG, Fortnite o H1Z1, entonces sabes un poco como funcionan las cosas! Piensa que surviv.io es PUBG en 2D.",
            "index-tips-3": "Encuentra suministros y mata",
            "index-tips-3-desc": "Comenzaras el juego con una bolsa. Muevete por el mapa para encontrar suministros: Armas, municion, mirillas, y objetos medicos. Elimina los otros jugadores y puedes tomar sus suministros!",
            "index-tips-4": "Rojo-Malo!",
            "index-tips-4-desc": "Los otros jugadores no son,los unicos que pueden lastimarte. La mortal zona roja se mueve hacia dentro desde los lados del mapa y reparte daño cada vez mas fuerte. Manten un ojo en el mapa y quedate asalvo.",
            "game-alive": "Vivos",
            "game-reloading": "Recargando",
            "game-using": "Usando",
            "game-reviving": "Reviviendo",
            "game-revive-teammate": "Revive Teammate",
            "game-equip": "Equipar",
            "game-cancel": "Cancelar",
            "game-You": "Tu",
            "game-you": "tu",
            "game-themselves": "a si mismo",
            "game-yourself": "a ti mismo",
            "game-you-died": "has muerto",
            "game-player-died": "ha muerto",
            "game-with": "con",
            "game-knocked-out": "dejo fuera de combate a",
            "game-killed": "mato",
            "game-finally-killed": "finalmente mato a",
            "game-finally-bled-out": "se desangro",
            "game-died-outside": "murió fuera de la zona segura",
            "game-the-red-zone": "la zona roja",
            "game-crushed": "aplastó a",
            "game-the-air-drop": "Un air drop",
            "game-waiting-for-players": "Esperando jugadores",
            "game-spectating": "Espectando a",
            "game-red-zone-advances": "La zona roja se mueve en",
            "game-red-zone-advancing": "La zona roja se mueve, ve a la zona segura!",
            "game-seconds": "segundos",
            "game-minutes": "minutos",
            "game-minute": "minuto",
            "game-m": "m",
            "game-s": "s",
            "game-not-enough-space": "¡No hay sufficiente espacio!",
            "game-item-already-owned": "¡Objeto ya adquirido!",
            "game-item-already-equipped": "¡Objeto ya esta equipado!",
            "game-better-item-equipped": "¡Mejor objeto equipado!",
            "game-gun-cannot-fire": "¡La pistola no dispara aquí!",
            "game-play-new-game": "Jugar otra partida",
            "game-spectate": "Espectar",
            "game-full-screen": "Pantalla completa",
            "game-sound": "Sonido",
            "game-quit-game": "Salir de la partida",
            "game-return-to-game": "Volver a la partida",
            "game-hide-match-stats": "Esconder tus resultados de la partida",
            "game-view-match-stats": "Ver tus resultados de la partida",
            "game-previous-teammate": "Miembro del equipo anterior",
            "game-next-teammate": "Miembro del equipo siguiente",
            "game-spectate-previous": "",
            "game-spectate-next": "",
            "game-leave-game": "Salir de la partida",
            "game-your-results": "Tus resultados",
            "game-chicken": "¡A ganar a ganar pollo para cenar!",
            "game-won-the-game": "ganó la partida.",
            "game-team-eliminated": "Tu equipo ha sido eliminado.",
            "game-rank": "Posición",
            "game-team-rank": "Posición del equipo",
            "game-team-kills": "Muertes de equipo",
            "game-kill": "Muerte",
            "game-kills": "Muertes",
            "game-damage-dealt": "Daño repartido",
            "game-damage-taken": "Daño recibido",
            "game-survived": "Sobreviviste",
            "game-backpack00": "Bolsa",
            "game-backpack01": "Mochila pequeña",
            "game-backpack02": "Mochila mediana",
            "game-backpack03": "Mochila militar",
            "game-bandage": "Vendas",
            "game-bandage-tooltip": "Click izquierdo para curar 15 de salud.",
            "game-healing-tooltip": "No puede curar mas cuando estas a 75 de salud.",
            "game-healthkit": "Botiquín",
            "game-healthkit-tooltip": "Click izquierdo para curar 100 de salud.",
            "game-soda": "Soda",
            "game-soda-tooltip": "Click izquierdo para aumentar 25 de adrenalina.",
            "game-adrenaline-tooltip": "La adrenalina te cura mientras pasa el tiempo.",
            "game-painkiller": "Píldora",
            "game-painkiller-tooltip": "Click izquierdo para aumentar 50 de adrenalina.",
            "game-9mm": "9mm",
            "game-9mm-tooltip": "Munición para la M9, G18C, MP5, MAC-10, UMP9 y Vector.",
            "game-12gauge": "Calibre 12",
            "game-12gauge-tooltip": "Munición para la M870, SPAS-12, Saiga-12 y MP220.",
            "game-762mm": "7,62mm",
            "game-762mm-tooltip": "Munición para AK-47, SCAR-H, M39, Mosin-Nagant, SV-98, M1, OT-38 y DP-28.",
            "game-556mm": "5,56mm",
            "game-556mm-tooltip": "Munición para FAMAS, M416, QBB-97, Mk 12 y M249.",
            "game-308sub": ".308 Subsonic",
            "game-308sub-tooltip": "Munición para AWM-S.",
            "game-flare": "Bengalas",
            "game-flare-tooltip": "Munición para Pistola de bengalas.",
            "game-chest01": "Chaleco de nivel 1",
            "game-chest02": "Chaleco de nivel 2",
            "game-chest03": "Chaleco de nivel 3",
            "game-helmet01": "Casco de nivel 1",
            "game-helmet02": "Casco de nivel 2",
            "game-helmet03": "Casco de nivel 3",
            "game-1xscope": "1x Mira",
            "game-2xscope": "2x Mira",
            "game-4xscope": "4x Mira",
            "game-8xscope": "8x Mira",
            "game-15xscope": "15x Mira",
            "game-level-1": "Nvl. 1",
            "game-level-2": "Nvl. 2",
            "game-level-3": "Nvl. 3",
            "game-outfitBase": "Traje Básico",
            "game-outfitRoyalFortune": "Fortuna Real",
            "game-outfitKeyLime": "Limero",
            "game-outfitCobaltShell": "Armadura de Cobalto",
            "game-outfitCarbonFiber": "Fibra de Carbono",
            "game-outfitDarkGloves": "El Profesional",
            "game-outfitGhillie": "Traje Ghillie",
            "game-outfitCamo": "Camuflaje de Bosque ",
            "game-outfitRed": "Práctica de Tiro",
            "game-outfitWhite": "Vengador del Ártico",
            "game-fists": "Puños",
            "game-karambit_rugged": "Karambit Básico",
            "game-hud-karambit_rugged": "Karambit",
            "game-karambit_prismatic": "Karambit Prismático",
            "game-hud-karambit_prismatic": "Karambit",
            "game-bayonet_rugged": "Bayoneta Básico",
            "game-hud-bayonet_rugged": "Bayoneta",
            "game-bayonet_woodland": "Bayoneta Bosque",
            "game-hud-bayonet_woodland": "Bayoneta",
            "game-huntsman_rugged": "Cazador Básico",
            "game-hud-huntsman_rugged": "Cazador",
            "game-huntsman_burnished": "Cazador Bruñido",
            "game-hud-huntsman_burnished": "Cazador",
            "game-woodaxe": "Hacha",
            "game-hook": "Gancho",
            "game-pan": "Sartén",
            "game-ak47": "AK-47",
            "game-dp28": "DP-28",
            "game-mosin": "Mosin-Nagant",
            "game-m39": "M39 EMR",
            "game-mp5": "MP5",
            "game-mac10": "MAC-10",
            "game-ump9": "UMP9",
            "game-m870": "M870",
            "game-mp220": "MP220",
            "game-saiga": "Saiga-12",
            "game-m9": "M9",
            "game-glock": "G18C",
            "game-ot38": "OT-38",
            "game-flare_gun": "Pistola de bengalas",
            "game-hud-flare_gun": "P. de bengalas",
            "game-frag": "Granada de Fragmentacion",
            "game-hud-frag": "Fragmen.",
            "game-smoke": "Granada de Humo",
            "game-hud-smoke": "Humo",
            "game-barrel_01": "un barril",
            "game-silo_01": "un silo",
            "game-oven_01": "un horno",
            "game-control_panel_01": "Panel de control",
            "game-control_panel_02": "Panel de control",
            "game-control_panel_03": "un terminal de computadora",
            "game-power_box_01": "una caja de poder",
            "game-airdrop_crate_01": "Air Drop",
            "game-airdrop_crate_02": "Air Drop"
        };
        e.exports = i
    },
    a68e9107: function(e, t, a) {
        "use strict";
        function i(e, t) {
            if (!(e instanceof t))
                throw new TypeError("Cannot call a class as a function")
        }
        function r(e) {
            return e && e.length > 4 ? "img/emotes/" + e.slice(0, -4) + ".svg" : ""
        }
        function o(e, t, a) {
            "function" == typeof t && (a = t,
            t = null);
            var i = {
                url: e,
                type: "POST",
                timeout: 1e4,
                headers: {
                    "x-surviv": Date.now()
                }
            };
            t && (i.contentType = "application/json; charset=utf-8",
            i.data = JSON.stringify(t)),
            s.ajax(i).done(function(e, t) {
                a(null, e)
            }).fail(function(e) {
                a(e)
            })
        }
        var n = function() {
            function e(e, t) {
                for (var a = 0; a < t.length; a++) {
                    var i = t[a];
                    i.enumerable = i.enumerable || !1,
                    i.configurable = !0,
                    "value"in i && (i.writable = !0),
                    Object.defineProperty(e, i.key, i)
                }
            }
            return function(t, a, i) {
                return a && e(t.prototype, a),
                i && e(t, i),
                t
            }
        }()
          , s = a("8ee62bea")
          , l = a("ce29f17f")
          , m = a("b78cf179")
          , c = (m.EmoteType,
        m.EmoteData)
          , d = a("26be8056")
          , p = a("f398b7c7")
          , u = a("484b3444")
          , h = function() {
            function e(t) {
                i(this, e),
                this.selector = t,
                this.enabled = !0,
                this.onToggle = function() {}
            }
            return n(e, [{
                key: "onToggle",
                value: function(e) {
                    this.onToggle = e
                }
            }, {
                key: "isVisible",
                value: function() {
                    return "none" != this.selector.css("display")
                }
            }, {
                key: "show",
                value: function() {
                    this.selector.css("display", "block"),
                    this.onToggle(this.isVisible()),
                    u.addModalCloseListener()
                }
            }, {
                key: "hide",
                value: function() {
                    this.selector.css("display", "none"),
                    this.onToggle(this.isVisible()),
                    u.removeModalCloseListener()
                }
            }]),
            e
        }()
          , g = function() {
            function e(t) {
                var a = this;
                i(this, e),
                this.profile = {},
                this.loading = !1,
                this.nameChangeEnabled = !1,
                this.setNamePrompt = new h(s("#modal-account-name-change")),
                this.setNamePrompt.onToggle(function() {
                    s("#modal-body-warning").css("display", "none"),
                    s("#modal-account-name-title").html("Change name"),
                    s("#modal-account-name-input").val("")
                }),
                s("#modal-account-name-finish").click(function(e) {
                    e.stopPropagation();
                    var i = s("#modal-account-name-input").val();
                    t.setUsername(i, function(e) {
                        a.onSetUsername(e)
                    })
                }),
                s("#modal-account-name-input").on("keypress", function(e) {
                    13 === (e.which || e.keyCode) && s("#modal-account-name-finish").trigger("click")
                }),
                this.changeAvatarPrompt = new h(s("#modal-account-avatar")),
                u.addModalCloseCallback(function(e, a) {
                    if (a.parents("#modal-account-avatar").length > 0) {
                        e.stopPropagation();
                        var i = s("#customize-account-avatar").find(".customize-emote-image").data("id");
                        t.setAvatar(i)
                    }
                }),
                this.delAccountPrompt = new h(s("#modal-account-delete")),
                s("#modal-account-delete-finish").click(function(e) {
                    e.stopPropagation(),
                    "DELETE" == s("#modal-account-delete-input").val() && t.deleteUser(),
                    a.hideModals()
                }),
                s("#modal-account-delete-input").on("keypress", function(e) {
                    13 === (e.which || e.keyCode) && s("#modal-account-delete-finish").trigger("click")
                }),
                this.modals = [this.setNamePrompt, this.changeAvatarPrompt, this.delAccountPrompt];
                var r = s(".account-loggedin-stats")
                  , o = s(".account-loggedin-buttons-main")
                  , n = s(".account-loggedin-buttons-settings")
                  , l = s(".account-loggedin-buttons-link-account");
                s(".account-details-user").click(function(e) {
                    e.stopPropagation(),
                    a.activeMenu != r ? a.setMenu(r) : a.setMenu(o)
                }),
                s(".btn-account-settings").click(function(e) {
                    e.stopPropagation(),
                    a.setMenu(n)
                }),
                s(".btn-account-link").click(function(e) {
                    e.stopPropagation(),
                    a.setMenu(l)
                }),
                s(".btn-account-back").click(function(e) {
                    e.stopPropagation(),
                    a.setMenu(o)
                }),
                s(".btn-account-change-name").click(function(e) {
                    e.stopPropagation(),
                    a.profile.usernameChangeTime <= 0 && (a.showModal(a.setNamePrompt),
                    s("#modal-account-name-title").html("Change name"),
                    a.setMenu(r))
                }),
                s(".btn-account-change-avatar, .account-avatar").click(function(e) {
                    e.stopPropagation(),
                    void 0 != a.profile.avatar && (a.showModal(a.changeAvatarPrompt),
                    a.setMenu(r))
                }),
                s(".btn-account-delete").click(function(e) {
                    e.stopPropagation(),
                    s("#modal-account-delete-input").val(""),
                    a.showModal(a.delAccountPrompt),
                    a.setMenu(r)
                }),
                this.menus = [r, o, n, l],
                this.activeMenu = r,
                this.statsButtons = r,
                this.menuListener = function(e) {
                    s(e.target).closest(s(".account-loggedin-block")).length || a.setMenu(r)
                }
            }
            return n(e, [{
                key: "setMenu",
                value: function(e) {
                    for (var t = 0; t < this.menus.length; t++)
                        this.menus[t].css("display", "none");
                    e.css("display", "block"),
                    this.activeMenu = e,
                    e != this.statsButtons ? s(document).on("click touchend", this.menuListener) : s(document).off("click touchend", this.menuListener)
                }
            }, {
                key: "showModal",
                value: function(e) {
                    this.hideModals(),
                    e.show()
                }
            }, {
                key: "hideModals",
                value: function() {
                    for (var e = 0; e < this.modals.length; e++)
                        this.modals[e].hide()
                }
            }, {
                key: "onSetUsername",
                value: function(e) {
                    var t = {
                        failed: "Failed setting username.",
                        invalid: "Invalid username.",
                        taken: "Name already taken!",
                        change_time_not_expired: "Username has already been set recently."
                    }
                      , a = t[e] || t.failed;
                    s("#modal-body-warning").hide(),
                    s("#modal-body-warning div").html(a),
                    s("#modal-body-warning").fadeIn()
                }
            }, {
                key: "show",
                value: function(e) {
                    s(".account-loggedin-block").css("display", "block"),
                    this.setMenu(this.statsButtons);
                    var t = d.htmlEscape(this.profile.username);
                    s(".account-player-name").html(t);
                    var a = s(".btn-player-stats-link");
                    this.profile.slug ? (a.attr("href", "/stats/" + this.profile.slug),
                    a.css("display", "block")) : a.css("display", "none");
                    var i = this.profile.avatar
                      , o = c[i]
                      , n = o && o.texture
                      , l = n ? r(o.texture) : "../img/gui/player-gui.svg";
                    s(".account-details-user .account-avatar").css("background-image", e ? "none" : "url(" + l + ")").addClass(e ? "" : "account-avatar-hover"),
                    s(".account-details-user .account-avatar-loading").css("display", e ? "block" : "none"),
                    s(".account-avatar-pulsate").css("display", n || e ? "none" : "block"),
                    this.nameChangeEnabled = this.profile.usernameChangeTime <= 0,
                    this.nameChangeEnabled ? s(".btn-account-change-name").removeClass("btn-account-disabled") : s(".btn-account-change-name").addClass("btn-account-disabled"),
                    s(".btn-account-change-name").html(this.profile.usernameSet ? "Change Account Name" : "Set Account Name"),
                    e || this.profile.usernameSet ? this.setNamePrompt.hide() : (this.showModal(this.setNamePrompt),
                    u.removeModalCloseListener());
                    var m = function(e) {
                        e.addClass("btn-login-linked"),
                        e.find("span.login-button-name").html('<div class="icon"></div>'),
                        e.off("click")
                    };
                    this.profile.linkedFacebook && m(s(".btn-login-facebook")),
                    this.profile.linkedGoogle && m(s(".btn-login-google")),
                    this.profile.linkedTwitch && m(s(".btn-login-twitch")),
                    this.profile.linkedDiscord && m(s(".btn-login-discord"))
                }
            }, {
                key: "hide",
                value: function() {
                    s(".account-loggedin-block").css("display", "none"),
                    this.setMenu(this.statsButtons),
                    this.hideModals()
                }
            }]),
            e
        }()
          , y = function() {
            function e(t) {
                var a = this;
                i(this, e),
                this.leaderboard = s(".account-login-leaderboard"),
                this.loginButtons = s(".account-login-buttons"),
                this.localization = t,
                this.loginVisible = !1,
                this.clickListener = function(e) {
                    s(e.target).closest(a.loginButtons).length || a.showLogin(!1)
                }
                ,
                s(".account-details-guest").click(function(e) {
                    e.stopPropagation(),
                    a.showLogin(!a.loginVisible)
                })
            }
            return n(e, [{
                key: "showLogin",
                value: function(e) {
                    this.loginButtons.css("display", e || l.mobile ? "block" : "none"),
                    this.leaderboard.css("display", e ? "none" : "block"),
                    this.loginVisible = e,
                    e && !l.mobile ? s(document).on("click touchend", this.clickListener) : s(document).off("click touchend", this.clickListener)
                }
            }, {
                key: "show",
                value: function(e) {
                    s(".account-login-block").css("display", "block");
                    var t = s(".account-login-block");
                    t.find(".account-avatar-loading").css("display", e ? "block" : "none"),
                    t.find(".account-avatar").css("background-image", e ? "none" : 'url("../img/gui/player-gui.svg")'),
                    t.find(".account-name").html(e ? this.localization.translate("index-logging-in") + "..." : this.localization.translate("index-log-in-desc")),
                    this.loginButtons.enabled = !e
                }
            }, {
                key: "hide",
                value: function() {
                    s(".account-login-block").css("display", "none"),
                    this.showLogin(!1)
                }
            }]),
            e
        }()
          , f = function() {
            function e(t, a) {
                var r = this;
                i(this, e),
                this.config = t,
                this.loading = !1,
                this.loggedIn = !1,
                this.profile = {},
                this.loginMenu = new y(a),
                this.profileMenu = new g(this),
                this.errorModal = new h(s("#modal-notification")),
                s(".btn-login-facebook").click(function(e) {
                    window.location.href = "/api/user/auth/facebook"
                }),
                s(".btn-login-google").click(function(e) {
                    window.location.href = "/api/user/auth/google"
                }),
                s(".btn-login-twitch").click(function(e) {
                    window.location.href = "/api/user/auth/twitch"
                }),
                s(".btn-login-discord").click(function(e) {
                    window.location.href = "/api/user/auth/discord"
                }),
                s(".btn-account-logout").click(function(e) {
                    r.logout()
                })
            }
            return n(e, [{
                key: "load",
                value: function() {
                    var e = this;
                    !this.loading && d.getCookie("app-data") && (this.loading = !0,
                    this.render(),
                    o("/api/user/profile", function(t, a) {
                        if (e.profile = {},
                        e.loggedIn = !1,
                        t)
                            p.storeGeneric("account", "load_error");
                        else if (a.banned)
                            e.displayError("account_banned");
                        else if (e.loggedIn = void 0 !== a.profile,
                        e.loggedIn) {
                            e.profile = a.profile;
                            var i = e.config.get("profile") || {};
                            i.slug = a.profile.slug,
                            e.config.set("profile", i)
                        }
                        e.loading = !1,
                        e.render()
                    }))
                }
            }, {
                key: "logout",
                value: function() {
                    this.config.set("profile", null),
                    o("/api/user/logout", function(e, t) {
                        window.location.href = "/"
                    })
                }
            }, {
                key: "deleteUser",
                value: function() {
                    var e = this;
                    this.config.set("profile", null),
                    o("/api/user/delete", function(t, a) {
                        if (t)
                            return p.storeGeneric("account", "delete_error"),
                            void e.displayError("server_error");
                        window.location.href = "/"
                    })
                }
            }, {
                key: "setUsername",
                value: function(e, t) {
                    var a = this;
                    o("/api/user/username", {
                        username: e
                    }, function(e, i) {
                        if (e)
                            return p.storeGeneric("account", "set_username_error"),
                            void t("Failed setting username.");
                        "success" == i.result ? a.load() : t(i.result)
                    })
                }
            }, {
                key: "setAvatar",
                value: function(e) {
                    var t = this;
                    this.loggedIn && e != this.profile.avatar && o("/api/user/avatar", {
                        avatar: e
                    }, function(e, a) {
                        if (e)
                            return p.storeGeneric("account", "set_avatar_error"),
                            void t.displayError("server_error");
                        t.load()
                    })
                }
            }, {
                key: "displayError",
                value: function(e) {
                    var t = {
                        server_error: "Internal server error, please try again later.",
                        facebook_account_in_use: "Failed linking Facebook account.<br/>Account already in use!",
                        google_account_in_use: "Failed linking Google account.<br/>Account already in use!",
                        twitch_account_in_use: "Failed linking Twitch account.<br/>Account already in use!",
                        discord_account_in_use: "Failed linking Discord account.<br/>Account already in use!",
                        account_banned: "Account banned."
                    };
                    t[e] && (s("#modal-notification").find(".modal-settings-text").html(t[e]),
                    this.errorModal.show())
                }
            }, {
                key: "render",
                value: function() {
                    this.profileMenu.profile = this.profile,
                    this.loggedIn ? (this.profileMenu.show(this.loading),
                    this.loginMenu.hide(),
                    this.profile.errorFlash.length > 0 && this.displayError(this.profile.errorFlash[0])) : (this.profileMenu.hide(),
                    this.loginMenu.show(this.loading))
                }
            }]),
            e
        }();
        e.exports = f
    },
    a7f094a3: function(e, t, a) {
        "use strict";
        function i(e, t) {
            if (!(e instanceof t))
                throw new TypeError("Cannot call a class as a function")
        }
        var r = function() {
            function e(e, t) {
                for (var a = 0; a < t.length; a++) {
                    var i = t[a];
                    i.enumerable = i.enumerable || !1,
                    i.configurable = !0,
                    "value"in i && (i.writable = !0),
                    Object.defineProperty(e, i.key, i)
                }
            }
            return function(t, a, i) {
                return a && e(t.prototype, a),
                i && e(t, i),
                t
            }
        }()
          , o = a("80ac57a6")
          , n = a("989ad62a")
          , s = n.GasMode
          , l = a("10899aea")
          , m = a("1901e2d9")
          , c = a("c2a798c8")
          , d = 1e5
          , p = 720
          , u = function() {
            function e(t, a) {
                if (i(this, e),
                this.gasColorDOMString = "",
                this.display = null,
                this.canvas = null,
                t)
                    this.canvas = document.createElement("canvas"),
                    this.canvas.width = window.innerWidth,
                    this.canvas.height = window.innerHeight,
                    this.display = new o.Sprite(o.Texture.fromCanvas(this.canvas)),
                    this.gasColorDOMString = m.colorToDOMString(a, .6);
                else {
                    this.display = new o.Graphics;
                    var r = this.display;
                    r.clear(),
                    r.beginFill(a, .6),
                    r.moveTo(-d, -d),
                    r.lineTo(d, -d),
                    r.lineTo(d, d),
                    r.lineTo(-d, d),
                    r.closePath(),
                    r.moveTo(0, 1);
                    for (var n = 1; n < p; n++) {
                        var s = n / p
                          , l = Math.sin(2 * Math.PI * s)
                          , c = Math.cos(2 * Math.PI * s);
                        r.lineTo(l, c)
                    }
                    r.closePath(),
                    r.addHole()
                }
                this.display.visible = !1
            }
            return r(e, [{
                key: "free",
                value: function() {
                    this.display.destroy(!0)
                }
            }, {
                key: "resize",
                value: function() {
                    null != this.canvas && (this.canvas.width = window.innerWidth,
                    this.canvas.height = window.innerHeight,
                    this.display.texture.update())
                }
            }, {
                key: "render",
                value: function(e, t, a) {
                    if (null != this.canvas) {
                        var i = this.canvas
                          , r = i.getContext("2d");
                        r.clearRect(0, 0, i.width, i.height),
                        r.beginPath(),
                        r.fillStyle = this.gasColorDOMString,
                        r.rect(0, 0, i.width, i.height),
                        r.arc(e.x, e.y, t, 0, 2 * Math.PI, !0),
                        r.fill()
                    } else {
                        var o = c.copy(e)
                          , n = t;
                        n < .1 && (n = 1,
                        o.x += .5 * d);
                        var s = this.display;
                        s.position.set(o.x, o.y),
                        s.scale.set(n, n)
                    }
                    this.display.visible = a
                }
            }]),
            e
        }()
          , h = function() {
            function e() {
                i(this, e),
                this.display = new o.Container,
                this.circleGfx = new o.Graphics,
                this.lineGfx = new o.Graphics,
                this.display.addChild(this.circleGfx),
                this.display.addChild(this.lineGfx),
                this.circleGfx.visible = !1,
                this.lineGfx.visible = !1,
                this.safePos = c.create(0, 0),
                this.safeRad = 0,
                this.playerPos = c.create(0, 0)
            }
            return r(e, [{
                key: "render",
                value: function(e, t, a, i, r) {
                    if (this.circleGfx.visible = i,
                    this.lineGfx.visible = r,
                    i || r) {
                        var o = !c.eq(this.safePos, e, 1e-4)
                          , n = Math.abs(this.safeRad - t) > 1e-4
                          , s = !c.eq(this.playerPos, a, 1e-4);
                        if (o && (this.safePos.x = e.x,
                        this.safePos.y = e.y),
                        n && (this.safeRad = t),
                        s && (this.playerPos.x = a.x,
                        this.playerPos.y = a.y),
                        o && this.circleGfx.position.set(this.safePos.x, this.safePos.y),
                        n && (this.circleGfx.clear(),
                        this.circleGfx.lineStyle(1.5, 16777215),
                        this.circleGfx.drawCircle(0, 0, t)),
                        o || n || s) {
                            var l = c.length(c.sub(a, e)) < t
                              , m = l ? .5 : 1;
                            this.lineGfx.clear(),
                            this.lineGfx.lineStyle(2, 65280, m),
                            this.lineGfx.moveTo(a.x, a.y),
                            this.lineGfx.lineTo(e.x, e.y)
                        }
                    }
                }
            }]),
            e
        }()
          , g = function() {
            function e(t) {
                i(this, e);
                var a = 1024 * (Math.sqrt(2) + .01);
                this.mode = s.Inactive,
                this.circleT = 0,
                this.duration = 0,
                this.circleOld = {
                    pos: c.create(0, 0),
                    rad: a
                },
                this.circleNew = {
                    pos: c.create(0, 0),
                    rad: a
                },
                this.gasRenderer = new u(t,16711680)
            }
            return r(e, [{
                key: "free",
                value: function() {
                    this.gasRenderer.free()
                }
            }, {
                key: "resize",
                value: function() {
                    this.gasRenderer.resize()
                }
            }, {
                key: "isActive",
                value: function() {
                    return this.mode != s.Inactive
                }
            }, {
                key: "getCircle",
                value: function() {
                    var e = this.mode == s.Moving ? this.circleT : 0;
                    return {
                        pos: c.lerp(e, this.circleOld.pos, this.circleNew.pos),
                        rad: l.lerp(e, this.circleOld.rad, this.circleNew.rad)
                    }
                }
            }, {
                key: "setProgress",
                value: function(e) {
                    this.circleT = e
                }
            }, {
                key: "setFullState",
                value: function(e, t, a, i) {
                    if (t.mode != this.mode) {
                        var r = Math.ceil(t.duration * (1 - e));
                        i.setWaitingForPlayers(!1),
                        i.displayAnnouncement(t.mode, r)
                    }
                    this.mode = t.mode,
                    this.duration = t.duration,
                    this.circleT = e,
                    this.circleOld.pos = c.copy(t.posOld),
                    this.circleOld.rad = t.radOld,
                    this.circleNew.pos = c.copy(t.posNew),
                    this.circleNew.rad = t.radNew
                }
            }, {
                key: "render",
                value: function(e) {
                    var t = this.getCircle()
                      , a = e.pointToScreen(t.pos)
                      , i = e.scaleToScreen(t.rad);
                    this.gasRenderer.render(a, i, this.isActive())
                }
            }]),
            e
        }();
        e.exports = {
            GasRenderer: u,
            GasSafeZoneRenderer: h,
            We: g
        }
    },
    af8ba00f: function(e, t, a) {
        "use strict";
        function i(e, t) {
            if (!(e instanceof t))
                throw new TypeError("Cannot call a class as a function")
        }
        var r = function() {
            function e(e, t) {
                for (var a = 0; a < t.length; a++) {
                    var i = t[a];
                    i.enumerable = i.enumerable || !1,
                    i.configurable = !0,
                    "value"in i && (i.writable = !0),
                    Object.defineProperty(e, i.key, i)
                }
            }
            return function(t, a, i) {
                return a && e(t.prototype, a),
                i && e(t, i),
                t
            }
        }()
          , o = a("6b42806d")
          , n = a("819695aa")
          , s = n.Shape
          , l = (a("10899aea"),
        a("c2a798c8"))
          , m = {
            Line: 0,
            Ray: 1,
            Circle: 2,
            Aabb: 3
        }
          , c = function() {
            function e() {
                i(this, e),
                this.shapes = []
            }
            return r(e, [{
                key: "addLine",
                value: function(e, t, a, i) {
                    this.shapes.push({
                        type: m.Line,
                        start: l.copy(e),
                        end: l.copy(t),
                        color: a,
                        fill: i
                    })
                }
            }, {
                key: "addRay",
                value: function(e, t, a, i, r) {
                    this.shapes.push({
                        type: m.Ray,
                        pos: l.copy(e),
                        dir: l.copy(t),
                        len: a,
                        color: i,
                        fill: r
                    })
                }
            }, {
                key: "addCircle",
                value: function(e, t, a, i) {
                    this.shapes.push({
                        type: m.Circle,
                        pos: l.copy(e),
                        rad: t,
                        color: a,
                        fill: i
                    })
                }
            }, {
                key: "addAabb",
                value: function(e, t, a, i) {
                    this.shapes.push({
                        type: m.Aabb,
                        min: l.copy(e),
                        max: l.copy(t),
                        color: a,
                        fill: i
                    })
                }
            }, {
                key: "addCollider",
                value: function(e, t, a) {
                    e.type == o.Type.Aabb ? this.addAabb(e.min, e.max, t, a) : this.addCircle(e.pos, e.rad, t, a)
                }
            }, {
                key: "addShape",
                value: function(e, t, a) {
                    e.type == s.Type.Aabb ? this.addAabb(e.min, e.max, t, a) : this.addCircle(e.pos, e.rad, t, a)
                }
            }, {
                key: "render",
                value: function(e, t) {}
            }, {
                key: "flush",
                value: function() {
                    this.shapes = []
                }
            }]),
            e
        }()
          , d = new c;
        e.exports = d
    },
    b198b546: function(e, t, a) {
        "use strict";
        function i(e, t, a) {
            return t in e ? Object.defineProperty(e, t, {
                value: a,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = a,
            e
        }
        var r, o = {
            None: 0,
            Danger: 1,
            Coming: 2,
            Help: 3,
            Ammo: 4,
            Medical: 5,
            Airdrop: 6
        }, n = (r = {},
        i(r, o.None, {}),
        i(r, o.Danger, {
            texture: "ping-team-danger.img",
            sound: "ping_danger_01",
            pingMap: !0,
            mapLife: 4,
            mapEvent: !1
        }),
        i(r, o.Coming, {
            texture: "ping-team-coming.img",
            sound: "ping_coming_01",
            pingMap: !0,
            mapLife: 300,
            mapEvent: !1
        }),
        i(r, o.Help, {
            texture: "ping-team-help.img",
            sound: "ping_help_01",
            pingMap: !0,
            mapLife: 4,
            mapEvent: !1
        }),
        i(r, o.Emote, {}),
        i(r, o.Airdrop, {
            texture: "ping-team-airdrop.img",
            sound: "ping_airdrop_01",
            pingMap: !0,
            mapLife: 10,
            mapEvent: !0,
            tint: 16737792
        }),
        r);
        e.exports = {
            PingType: o,
            PingData: n
        }
    },
    b4f03d8a: function(e, t, a) {
        t = e.exports = a("95cc1214")(!1),
        t.push([e.i, 'img{-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-user-drag:none;-khtml-user-drag:none;-moz-user-drag:none;-o-user-drag:none;user-drag:none}#cvs{-webkit-filter:none;filter:none}.click-through{pointer-events:none}#game-area-wrapper{cursor:crosshair;left:0;position:absolute!important;top:0;-webkit-tap-highlight-color:rgba(0,0,0,0)}#ui-game{-webkit-filter:none;filter:none;height:100%;left:0;position:absolute;top:0;width:100%}#ui-center{color:#fff;pointer-events:all;position:absolute;left:50%;top:50%;-webkit-transform:translateX(-50%) translateY(-50%) scale(1);transform:translateX(-50%) translateY(-50%) scale(1);z-index:10}@media (max-width:1200px),screen and (min-width:851px) and (max-height:768px){#ui-center{-webkit-transform:translateX(-50%) translateY(-50%) scale(.85);transform:translateX(-50%) translateY(-50%) scale(.85)}}@media screen and (max-width:850px){#ui-center{pointer-events:all;-webkit-transform:translateX(-50%) translateY(-50%) scale(.85);transform:translateX(-50%) translateY(-50%) scale(.85);z-index:10}}@media (max-width:850px) and (max-height:300px){#ui-center{-webkit-transform:translateX(-50%) translateY(-50%) scale(.775);transform:translateX(-50%) translateY(-50%) scale(.775)}}.btns-game-double-row{display:flex;position:relative}.btns-game-double-row>.btn-game-container{position:relative;width:100%}.btns-game-double-row>.btn-game-container>.btn-double-row{display:inline-block}.btns-game-double-row>div:not(:last-child){margin-right:2px}.game-menu-icon{background-size:22px;background-position:50%;background-repeat:no-repeat;bottom:13px;display:inline-block;height:22px;left:60%;pointer-events:none;position:absolute;-webkit-transform:translateX(-50%);transform:translateX(-50%);width:22px}.btn-game-touch-style{background-color:#50afab;background-position:4px 4px;background-repeat:no-repeat;background-size:20px;border:0;border-bottom:none;border-radius:5px;box-shadow:inset 0 -2px #387c79;box-sizing:border-box;color:#fff;cursor:pointer;display:block;font-size:14px;height:30px;line-height:30px;margin:auto;margin-top:2px;margin-bottom:4px;position:relative;text-align:center;text-shadow:0 1px 2px rgba(0,0,0,.25);width:100%}.movement-icon{background-image:url(../img/gui/movement.svg)}.target-icon{background-image:url(../img/gui/target.svg)}#ui-game-menu{background-color:rgba(0,0,0,.5);border-radius:5px;box-sizing:border-box;display:none;margin:10px auto;padding:10px 15px;width:250px}@media screen and (max-width:850px){#ui-game-menu{padding:4px 10px;width:190px}}@media (max-width:850px) and (max-height:300px){#ui-game-menu{margin-top:0}}#ui-game-menu p{bottom:4px;display:inline-block;font-size:14px;position:relative}@media screen and (max-width:850px){#ui-game-menu p{bottom:0;font-size:12px;margin-bottom:8px;margin-top:6px}}#ui-alive-info{position:absolute;color:#fff;width:80px;height:36px;top:174px;left:106px;background:rgba(0,0,0,.4);border-radius:5px}#ui-map-expand-mobile{height:190px;width:190px;left:-4px;top:-22px;z-index:0;background-color:transparent}#ui-map-expand img{display:none}#ui-map-minimize{left:124px}.ui-map-wrapper-mobile{bottom:auto;color:#fff;display:block;font-size:16px;left:6px;top:46px}.ui-map-wrapper-mobile .ui-players-alive{left:4px}.ui-map-wrapper-mobile .ui-map-counter{position:relative;display:inline-block;font-size:24px;text-align:center;bottom:9px;left:2px}.ui-map-wrapper-mobile .ui-map-icon{padding:6px;display:inline-block;height:24px;width:24px;margin-left:2px;background-size:24px;background-repeat:no-repeat;background-position:6px 6px}.ui-map-wrapper-mobile #ui-map-info{position:absolute;color:#fff;width:100px;height:36px;top:174px;left:0;background:rgba(0,0,0,.4);border-radius:5px}.ui-map-wrapper-mobile #ui-spec-counter{position:absolute;color:#fff;width:68px;height:28px;top:135px;left:60px;background:rgba(0,0,0,.4);border-radius:5px}.ui-map-wrapper-mobile #ui-spec-counter-icon{padding:6px;display:inline-block;height:24px;width:18px;margin-left:2px;background-size:20px;background-repeat:no-repeat;background-position:6px 4px;background-image:url(../img/gui/eye.svg)}.ui-map-wrapper-mobile #ui-spec-counter-number{position:relative;display:inline-block;font-size:20px;width:24px;text-align:center;bottom:15px;left:0}.ui-map-wrapper-mobile .gas-icon{background-image:url(../img/gui/gas.svg)}.ui-map-wrapper-mobile .danger-icon{background-image:url(../img/gui/danger.svg)}.ui-map-wrapper-mobile .alive-icon{background-image:url(../img/gui/player-gui.svg)}.ui-map-wrapper-mobile .icon-pulse{-webkit-animation:pulse 2s linear infinite;animation:pulse 2s linear infinite}.ui-map-wrapper-mobile .ui-settings-button{position:absolute;color:#fff;border-radius:5px;pointer-events:all}.ui-map-wrapper-mobile .ui-settings-button img{position:absolute;left:6px;top:6px;height:36px;width:36px;background-size:36px;background-repeat:no-repeat;transform:scale(1);-webkit-transition:all .1s ease-in;-webkit-transform:scale(1);-ms-transition:all .1s ease-in;-ms-transform:scale(1);-moz-transition:all .1s ease-in;-moz-transform:scale(1);transition:all .1s ease-in;transition:opacity .25s ease-out;-moz-transition:opacity .25s ease-out;-webkit-transition:opacity .25s ease-out;-o-transition:opacity .25s ease-out}.ui-map-wrapper-mobile .ui-settings-button .map-img-after{display:none}.ui-map-wrapper-mobile .ui-settings-button:hover{-webkit-transform:scale(1);transform:scale(1)}.ui-map-wrapper-desktop{position:absolute;bottom:12px;left:12px}#ui-map-wrapper{position:absolute;z-index:1}#ui-settings-container-mobile{position:relative}#ui-menu-display{cursor:pointer;left:2px;top:-18px;height:48px;width:48px;opacity:.8;background-color:rgba(0,0,0,.4);background-size:48px;background-repeat:no-repeat;background-position:50%;background-image:url(../img/gui/cog.svg);z-index:1}#big-map{display:none;height:100%;width:100%}#big-map-collision{height:100%;left:50%;margin:auto;pointer-events:all;position:fixed;top:0;-webkit-transform:translateX(-50%);transform:translateX(-50%)}#big-map-close{display:none;position:absolute;margin-left:auto;height:64px;width:64px;right:6px;top:6px;border-radius:6px;background-color:rgba(0,0,0,.5);background-repeat:no-repeat;background-size:48px;background-position:50%;background-image:url(../img/gui/close.svg);pointer-events:all}#ui-right-center{position:absolute;color:#fff;opacity:.75;transition:opacity .25s ease-out;-moz-transition:opacity .25s ease-out;-webkit-transition:opacity .25s ease-out;-o-transition:opacity .25s ease-out}.ui-right-center-desktop{top:40%;-webkit-transform:translateY(-50%);transform:translateY(-50%);right:12px}.ui-right-center-mobile{top:30px;-webkit-transform-origin:top right;transform-origin:top right;-webkit-transform:translateY(-50%) scale(.8);transform:translateY(-50%) scale(.8);right:6px}@media (max-height:360px),(max-width:640px){.ui-right-center-mobile{-webkit-transform-origin:top right;transform-origin:top right;-webkit-transform:scale(.85);transform:scale(.85);top:16px}}.ui-right-center-tablet{top:12px!important;-webkit-transform:scale(.8);transform:scale(.8)}@media (max-height:600px){.ui-right-center-tablet{-webkit-transform:scale(.55);transform:scale(.55)}}.ui-bottom-right-tablet{bottom:25%!important;-webkit-transform:scale(.8)!important;transform:scale(.8)!important;-webkit-transform-origin:right!important;transform-origin:right!important}@media (max-height:600px){.ui-bottom-right-tablet{bottom:25%!important;-webkit-transform:scale(.7)!important;transform:scale(.7)!important;-webkit-transform-origin:right!important;transform-origin:right!important}}.ui-bottom-center-right-tablet{left:72%!important;-webkit-transform:scale(.65)!important;transform:scale(.65)!important}#ui-emote-button{background:rgba(0,0,0,.4);background-image:url(../img/gui/emote.svg);background-position:50%;background-repeat:no-repeat;background-size:28px;border-radius:21px;display:none;height:42px;position:absolute;right:108px;top:0;width:42px}@media screen and (max-width:850px){#ui-emote-button{background-size:20px;border-radius:14px;height:28px;left:-35px;top:0;width:28px}}.ui-top-left-tablet{left:120px!important}.ui-spectate-options-wrapper-tablet{bottom:12px!important;top:auto!important}.ui-killfeed-wrapper-tablet{top:60px!important}@media (max-width:850px) and (max-height:320px){.ui-slider-container{margin-bottom:0}}@media (max-width:850px) and (max-height:320px){.ui-slider-container>p{width:75px}}@media (max-width:850px) and (max-height:320px){.ui-slider-container>.slider{bottom:3px;width:85px}}@media (max-width:850px) and (max-height:320px){.ui-slider-container>.slider::-webkit-slider-thumb{width:20px;height:20px}}@media (max-width:850px) and (max-height:320px){.ui-slider-container>.slider::-moz-range-thumb{width:20px;height:20px}}.ui-hidden{display:none}.btn-game-menu{text-align:center;line-height:38px;display:block;width:100%;height:40px;border:0;border-radius:5px;box-sizing:border-box;position:relative;margin:auto;margin-top:5px;margin-bottom:5px;color:#fff;font-size:16px;text-shadow:0 1px 2px rgba(0,0,0,.25);background-color:#50afab;border-bottom:2px solid #387c79;box-shadow:inset 0 -2px #387c79;background-repeat:no-repeat;cursor:pointer}#btn-game-fullscreen{background-size:34px;background-position:4px 2px;background-image:url(../img/gui/minimize.svg)}#btn-game-sound{background-size:44px;background-position:2px -3px}#btn-game-quit{margin-top:40px;background-image:url(../img/gui/quit.svg)}#btn-game-quit,#btn-game-resume{background-size:44px;background-position:-2px -3px}#btn-game-resume{margin-top:30px;background-image:url(../img/gui/resume.svg)}#ui-top-center{position:absolute;color:#fff;top:80px;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%)}#ui-top-center .top-center-text{text-align:center;width:100vw;padding:8px}#ui-waiting-text{display:none;color:#fff;text-shadow:2px 2px 0 #000}#ui-waiting-text,#ui-waiting-text span{font-size:32px;font-weight:700}.top-center-text .spectate-text{display:inline-block;text-shadow:2px 2px 0 #000;font-size:24px;font-weight:700;overflow:hidden;height:32px}@media (max-width:1024px){.top-center-text .spectate-text{font-size:18px}}.top-center-text .spectate-desc{color:#fff;margin-right:8px}.ui-spectate-mode{display:none}#ui-spectate-text{position:relative}#spectate-player{max-width:250px;white-space:nowrap;text-overflow:ellipsis;color:cyan}#ui-top-center-scopes-wrapper{position:absolute;color:#fff;top:0;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%);width:100%}#ui-top-center-scopes{margin-top:12px;text-align:center}@media (max-height:768px),(max-width:1200px){#ui-top-center-scopes{-webkit-transform:scale(.85);transform:scale(.85)}}.ui-zoom{background:rgba(0,0,0,.3);border-radius:36px;width:64px;height:64px;opacity:.6;display:inline-block}.ui-zoom-hover:hover{opacity:1}.ui-zoom-active{vertical-align:baseline;opacity:1;transform:scale(1);-webkit-transition:all .1s ease-in;-webkit-transform:scale(1);-ms-transition:all .1s ease-in;-ms-transform:scale(1);-moz-transition:all .1s ease-in;-moz-transform:scale(1);transition:all .1s ease-in;transition:opacity .25s ease-out;-moz-transition:opacity .25s ease-out;-webkit-transition:opacity .25s ease-out;-o-transition:opacity .25s ease-out}.ui-zoom .ui-zoom-image{width:64px;height:64px;opacity:.4;padding:2px}.ui-zoom .ui-zoom-text{margin-top:14px;width:100%}.ui-zoom .ui-zoom-level{font-size:32px;text-align:center;width:100%}.ui-zoom .ui-zoom-append{font-size:24px}.ui-zoom-inactive{display:none;margin-left:-8px;margin-right:-8px;-webkit-transition:all .1s ease-in;-webkit-transform:scale(.5);-ms-transition:all .1s ease-in;-ms-transform:scale(.5);-moz-transition:all .1s ease-in;-moz-transform:scale(.5);transition:all .1s ease-in;transform:scale(.5)}.ui-zoom-inactive:hover{cursor:pointer!important;opacity:1}.ui-emote-wheel{z-index:3;display:none;position:fixed}.ui-emote-parent{opacity:.75}.ui-emote-hl{z-index:2;display:none}.ui-emote{position:fixed;width:256px;height:256px;background-size:256px;background-repeat:no-repeat;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.ui-emote-bg-circle{opacity:.5;background-image:url(../img/gui/ping-part-circle.svg)}.ui-emote-bg-quarter{opacity:.5;background-image:url(../img/gui/ping-part-quarter.svg)}.ui-emote-bg-eighth{opacity:.5;background-image:url(../img/gui/ping-part-eighth.svg)}.ui-emote-middle .ui-emote-image{width:24px!important;height:24px!important;background-size:24px!important;background-image:url(../img/gui/close.svg)}.ui-emote-top .ui-emote-image{margin-top:-78px;background-image:url(../img/gui/ping-team-danger.svg)}.ui-emote-right .ui-emote{-webkit-transform:translate(-50%,-50%) rotate(90deg);transform:translate(-50%,-50%) rotate(90deg)}.ui-emote-right .ui-emote-image{margin-left:78px;background-image:url(../img/gui/ping-team-coming.svg)}.ui-emote-bottom .ui-emote{-webkit-transform:translate(-50%,-50%) rotate(180deg);transform:translate(-50%,-50%) rotate(180deg)}.ui-emote-bottom .ui-emote-image{margin-top:78px;background-image:url(../img/gui/ping-team-help.svg)}.ui-emote-left .ui-emote{-webkit-transform:translate(-50%,-50%) rotate(270deg);transform:translate(-50%,-50%) rotate(270deg)}.ui-emote-left .ui-emote-image{margin-left:-78px;background-image:url(../img/gui/ping-team-help.svg)}.ui-emote-top-left .ui-emote-image{margin-left:-80px;margin-top:-30px;background-image:url(../img/loot/loot-ammo-box.svg)}.ui-emote-bottom-left .ui-emote{-webkit-transform:translate(-50%,-50%) rotate(-45deg);transform:translate(-50%,-50%) rotate(-45deg)}.ui-emote-bottom-left .ui-emote-image{margin-left:-80px;margin-top:30px;background-image:url(../img/loot/loot-medical-healthkit.svg)}.ui-emote-circle .ui-emote-hl{background-image:url(../img/gui/ping-part-circle-highlight.svg)}.ui-emote-quarter .ui-emote-hl{background-image:url(../img/gui/ping-part-quarter-highlight.svg)}.ui-emote-eighth .ui-emote-hl{background-image:url(../img/gui/ping-part-eighth-highlight.svg)}.ui-emote-image{z-index:1;position:fixed;background-repeat:no-repeat;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.ui-emote-image-large{width:64px;height:64px;background-size:64px}.ui-emote-image-small{width:35px;height:35px;background-size:35px}.ui-team-indicator{z-index:2;display:none;position:fixed;top:0;left:0;border-radius:32px;width:64px;height:64px;background-size:64px;background-repeat:no-repeat;background-image:url(../img/gui/indicator.svg)}.ui-team-indicator,.ui-team-indicator-pos{-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.ui-team-indicator-pos{opacity:.75;position:relative;border-radius:24px;width:32px;height:32px;top:23px;left:32px}.ui-team-indicator-image{width:32px;height:32px;background-size:32px;background-repeat:no-repeat;background-image:url(../img/gui/ping-team-danger.svg)}.ui-indicator-ping-border{z-index:0;display:none;position:fixed;top:0;left:0;width:160px;height:160px;position:relative;background-size:160px;background-repeat:no-repeat;background-image:url(../img/gui/ping-border.svg);-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}#ui-top-left{position:absolute;color:#fff;font-size:16px;top:12px;left:12px;display:block}@media (max-height:768px),(max-width:1200px){#ui-top-left{-webkit-transform-origin:top left;transform-origin:top left;-webkit-transform:scale(.85);transform:scale(.85)}}.ui-bg-standard{background:rgba(0,0,0,.24);border-radius:5px}.ui-team-member{display:none;position:relative;width:200px;height:32px;padding:4px;margin-bottom:8px}.ui-team-member-name{font-weight:700;text-shadow:1px 1px 0 #000;font-size:16px;max-width:180px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.ui-team-member-color{position:absolute;top:5px;right:5px;border-radius:7px;width:14px;height:14px}.ui-background-yellow{background-color:#ff0}.ui-background-blue{background-color:blue}.ui-background-red{background-color:red}.ui-background-purple{background-color:purple}.ui-background-cyan{background-color:cyan}.ui-team-member-status{display:none;position:absolute;top:4px;right:-38px;width:32px;height:32px;background-size:32px;background-repeat:no-repeat}.ui-team-member-status-downed{border-radius:16px;display:block!important;background-image:url(../img/gui/down.svg)!important}.ui-team-member-status-dead{display:block!important;background-image:url(../img/gui/skull-team.svg)!important;opacity:.5!important}.ui-team-member-status-disconnected{display:block!important;background-image:url(../img/gui/close.svg)!important;opacity:.5!important}.ui-team-member-health{margin-top:4px}.ui-team-member-health .ui-bar-inner{background-color:#fff;z-index:1;position:absolute;border-radius:4px;width:200px;height:10px;transition:width 0s;transition-property:width;transition-duration:0s;transition-timing-function:ease-out;transition-delay:0s}.ui-team-member-health .ui-bar-danger{background:rgba(255,0,0,.8);-webkit-animation-name:pulse;animation-name:pulse;-webkit-animation-duration:.5s;animation-duration:.5s;-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out;-webkit-animation-delay:0;animation-delay:0;-webkit-animation-direction:alternate;animation-direction:alternate;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;-webkit-animation-fill-mode:none;animation-fill-mode:none;-webkit-animation-play-state:running;animation-play-state:running}.ui-team-member-health .ui-health-depleted{z-index:0;background:#fff;transition:width 1s;transition-property:width;transition-duration:1s;transition-timing-function:ease-out;transition-delay:0s}#ui-spectate-options-wrapper{color:#fff;display:block;left:12px;position:absolute;top:12px}@media (max-height:768px),(max-width:1200px){#ui-spectate-options-wrapper{-webkit-transform:scale(.85);transform:scale(.85);-webkit-transform-origin:top left;transform-origin:top left}}#ui-spectate-options{position:relative;pointer-events:all;width:100%}#ui-spectate-buttons{display:inline-block;padding:8px 8px 0;text-align:center;width:192px}#ui-spectate-options a{position:relative;color:#fff;font-size:16px;text-shadow:0 1px 2px rgba(0,0,0,.25);background:#50afab;border-bottom:2px solid #387c79;box-shadow:inset 0 -2px #387c79;cursor:pointer}#btn-spectate-prev-player{margin-bottom:24px}#ui-spectate-stats{vertical-align:top;display:none}#ui-spectate-stats-header{text-align:center;font-size:24px;font-weight:700;padding:8px}#ui-spectate-stats-table{width:100%;background-color:transparent;margin:auto;margin-right:0;border-collapse:collapse}#ui-spectate-stats tbody,#ui-spectate-stats td,#ui-spectate-stats th{padding:0 8px 8px 16px;font-size:18px}.ui-spectate-stats-category{width:130px;color:hsla(0,0%,100%,.75)}.ui-spectate-stats-value{width:75px;color:#fff}#ui-leaderboard-wrapper{position:absolute;color:#fff;font-size:16px;top:12px;right:12px;display:flex;font-weight:700;text-align:center;width:85px;display:inline-block}@media (max-height:768px),(max-width:1200px){#ui-leaderboard-wrapper{-webkit-transform-origin:top right;transform-origin:top right;-webkit-transform:scale(.85);transform:scale(.85)}}#ui-leaderboard-alive{background:rgba(0,0,0,.4);border-radius:5px;margin-bottom:8px;padding:8px;height:64px;width:72px}.ui-players-alive{position:relative;font-size:54px}.ui-leaderboard-header{font-size:24px;margin-bottom:8px}#ui-kill-counter-wrapper{display:none;margin-top:32px}#ui-kill-counter{background:rgba(0,0,0,.4);border-radius:5px;margin-bottom:8px;padding:8px;height:64px;width:72px}.ui-player-kills{position:relative;font-size:54px}.ui-kill-counter-header{font-size:24px;margin-bottom:8px}#ui-killfeed-wrapper{position:absolute;color:#fff;font-size:16px;top:12px;right:12px;display:flex}@media (max-width:1200px),screen and (min-width:851px) and (max-height:768px){#ui-killfeed-wrapper{-webkit-transform-origin:top right;transform-origin:top right;-webkit-transform:scale(.85);transform:scale(.85)}}#ui-killfeed{display:inline-block;margin-left:24px;height:100px}#ui-killfeed-contents{width:800px}#ui-killfeed-contents .killfeed-div{position:absolute;right:100px;background-color:rgba(0,0,0,.4);padding:4px 8px;border-radius:2px;height:22px;line-height:24px}.killfeed-div div{float:left;font-size:16px;font-weight:700;color:#efeeee}#ui-killfeed .killfeed-text{max-width:550px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}#ui-right-center:hover{opacity:1}#ui-ammo-interactive{width:90px}.ui-ammo{background:rgba(0,0,0,.4);border-radius:5px;display:inline-block;height:52px;margin-bottom:5px;margin-left:3px;margin-right:3px;width:35px}.ui-ammo>.ui-loot-count{position:absolute;font-size:20px;font-weight:700;top:28px;text-align:center;width:100%}.ui-ammo-row{display:flex}.ui-ammo-row>div:not(:last-child){margin-right:10px}.ui-ammo>.ui-loot-image,.ui-ammo>.ui-loot-overlay{bottom:0;height:22px;margin-top:5px;position:absolute;right:6px;top:0;width:22px}#ui-loot-ph1{opacity:0!important}#ui-medical-interactive{margin-bottom:32px}.ui-medical>.ui-loot-image{position:absolute;height:30px;width:30px;background-size:30px;background-repeat:no-repeat;right:5px;margin-top:1px;top:0;bottom:0}.ui-medical:hover{cursor:pointer!important}.ui-loot{background:rgba(0,0,0,.4);border-radius:5px;width:85px;height:32px;margin-left:auto;margin-bottom:5px}.ui-loot:hover{opacity:1!important}.ui-outline-hover{border:2px solid rgba(0,255,0,0)}.ui-outline-hover:hover{-webkit-transition:border .1s ease-out;-moz-transition:border .1s ease-out;-o-transition:border .1s ease-out;border:2px solid #0f0}.ui-scale-hover{transform:scale(1);-webkit-transform:scale(1);-ms-transform:scale(1);-moz-transform:scale(1)}.ui-scale-hover,.ui-scale-hover:hover{-webkit-transition:all .1s ease-in;-ms-transition:all .1s ease-in;-moz-transition:all .1s ease-in;transition:all .1s ease-in}.ui-scale-hover:hover{-webkit-transform:scale(1.1);-ms-transform:scale(1.1);-moz-transform:scale(1.1);transform:scale(1.1)}.ui-loot>.ui-loot-count{position:absolute;font-size:24px;font-weight:700;left:10px;top:2px;text-align:center}@media (max-height:864px),(max-width:1024px){.ui-right-center-desktop{top:42%;-webkit-transform-origin:right;transform-origin:right;-webkit-transform:translateY(-50%) scale(.8);transform:translateY(-50%) scale(.8)}#ui-medical-interactive{margin-bottom:8px}}@media (max-height:640px){.ui-right-center-desktop{top:42%;-webkit-transform-origin:right;transform-origin:right;-webkit-transform:translateY(-50%) scale(.7);transform:translateY(-50%) scale(.7)}#ui-medical-interactive{margin-bottom:8px}}#ui-upper-center{position:absolute;display:flex;color:#fff;top:180px;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%)}#ui-announcement{display:none;color:#ff0;text-shadow:2px 2px 0 #000;font-size:32px;font-weight:700;text-align:center;width:100vw}#ui-lower-center{position:absolute;color:#fff;bottom:40%;left:50%}@media (max-width:1200px),screen and (min-width:851px) and (max-height:768px){#ui-lower-center{-webkit-transform-origin:left bottom;transform-origin:left bottom;-webkit-transform:scale(.85);transform:scale(.85);bottom:33%}}#ui-interaction{display:flex}#ui-interaction-press{background:rgba(0,0,0,.4);border-radius:5px;margin-left:-24px;width:48px;height:48px;font-size:42px;font-weight:700;text-align:center;background-size:80%;background-position:50%;background-repeat:no-repeat}#ui-interaction-outer{background:rgba(0,0,0,.4);border-radius:5px;margin-left:10px;padding:0 15px;height:48px}#ui-interaction-outer #ui-interaction-description{margin-top:10px;font-size:24px;text-align:center}#ui-map-container{position:absolute;bottom:52px}#ui-map-info{position:absolute;color:#fff;width:100px;height:36px;bottom:218px;left:82px;background:rgba(0,0,0,.4);border-radius:5px}#ui-gas-icon{padding:6px;display:inline-block;height:24px;width:24px;margin-left:2px;background-size:24px;background-repeat:no-repeat;background-position:6px 6px}.gas-icon{background-image:url(../img/gui/gas.svg)}.danger-icon{background-image:url(../img/gui/danger.svg)}.icon-pulse{-webkit-animation:pulse 2s linear infinite;animation:pulse 2s linear infinite}#ui-gas-timer{position:relative;display:inline-block;font-size:24px;text-align:center;bottom:10px;left:2px}#ui-spec-counter{position:absolute;color:#fff;width:68px;height:28px;bottom:218px;left:6px;background:rgba(0,0,0,.4);border-radius:5px}#ui-spec-counter-icon{padding:6px;display:inline-block;height:24px;width:18px;margin-left:2px;background-size:20px;background-repeat:no-repeat;background-position:6px 4px;background-image:url(../img/gui/eye.svg)}#ui-spec-counter-number{position:relative;display:inline-block;font-size:20px;width:24px;text-align:center;bottom:15px;left:0}#ui-settings-container-desktop{position:relative;left:16px;bottom:12px}#ui-settings-container-desktop div{cursor:pointer}.ui-settings-button{position:absolute;color:#fff;border-radius:5px;height:48px;width:48px;pointer-events:all;opacity:.5;background:rgba(0,0,0,.4)}#ui-map-minimize{left:185px}.ui-settings-button img{position:absolute;left:6px;top:6px;height:36px;width:36px;background-size:36px;background-repeat:no-repeat;transform:scale(1);-webkit-transition:all .1s ease-in;-webkit-transform:scale(1);-ms-transition:all .1s ease-in;-ms-transform:scale(1);-moz-transition:all .1s ease-in;-moz-transform:scale(1);transition:all .1s ease-in;transition:opacity .25s ease-out;-moz-transition:opacity .25s ease-out;-webkit-transition:opacity .25s ease-out;-o-transition:opacity .25s ease-out}.ui-settings-button .map-img-after{display:none}.ui-settings-button:hover{opacity:1;-webkit-transition:all .1s ease-in;-webkit-transform:scale(1.1);-ms-transition:all .1s ease-in;-ms-transform:scale(1.1);-moz-transition:all .1s ease-in;-moz-transform:scale(1.1);transition:all .1s ease-in;transform:scale(1.1)}#ui-bottom-center-0{position:absolute;color:#fff;bottom:12px;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%)}@media (max-height:768px),(max-width:1200px){#ui-bottom-center-0{-webkit-transform-origin:bottom;transform-origin:bottom;-webkit-transform:translateX(-50%) scale(.85);transform:translateX(-50%) scale(.85)}}#ui-equipped-ammo-wrapper{position:absolute;color:#fff;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%);bottom:62px}#ui-equipped-ammo{margin-bottom:12px;text-align:center;opacity:1}#ui-bullet-counter{display:inline-block;width:175px;height:56px;text-align:center;text-shadow:2px 2px #000}#ui-bullet-counter #ui-current-clip{background:rgba(0,0,0,.4);border-radius:5px;font-size:44px;font-weight:700;width:100px;height:50px;-webkit-transform:translateX(-50%);transform:translateX(-50%);left:50%;position:relative;text-align:center}#ui-bullet-counter #ui-ammo-divider{font-size:22px;left:53%;position:absolute;text-align:center;top:20px}#ui-bullet-counter #ui-remaining-ammo{background:rgba(0,0,0,.4);border-radius:5px;font-size:24px;font-weight:700;line-height:32px;width:65px;height:32px;left:82%;position:absolute;text-align:center;top:18px}#ui-boost-counter{display:inline-flex;width:412px}#ui-boost-counter .ui-boost-base{background:rgba(0,0,0,.4);height:10px;margin-bottom:8px}#ui-boost-counter-0{border-top-left-radius:3px;border-bottom-left-radius:3px;width:100px;margin-right:3px}#ui-boost-counter-0 .ui-bar-inner{background:#ff901a}#ui-boost-counter-1{width:100px;margin-left:3px;margin-right:3px}#ui-boost-counter-1 .ui-bar-inner{background:#ff751a}#ui-boost-counter-2{width:150px;margin-left:3px;margin-right:3px}#ui-boost-counter-2 .ui-bar-inner{background:#ff6616}#ui-boost-counter-3{border-top-right-radius:3px;border-bottom-right-radius:3px;width:50px;margin-left:3px}#ui-boost-counter-3 .ui-bar-inner{background:#ff5600}.ui-boost-base .ui-bar-inner{border-radius:inherit;width:0;height:10px}#ui-health-counter{background:rgba(0,0,0,.4);border-radius:5px;width:400px;height:32px;padding:6px}#ui-health-counter .ui-bar-inner{z-index:1;position:absolute;border-radius:5px;width:100%;height:32px;transition:width 0s;transition-property:width;transition-duration:0s;transition-timing-function:ease-out;transition-delay:0s}#ui-health-container{width:400px;position:relative}#ui-health-counter .ui-bar-danger{background:rgba(255,0,0,.8);-webkit-animation-name:pulse;animation-name:pulse;-webkit-animation-duration:.5s;animation-duration:.5s;-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out;-webkit-animation-delay:0;animation-delay:0;-webkit-animation-direction:alternate;animation-direction:alternate;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;-webkit-animation-fill-mode:none;animation-fill-mode:none;-webkit-animation-play-state:running;animation-play-state:running}#ui-health-counter #ui-health-depleted{z-index:0;background:#fff;transition:width 1s;transition-property:width;transition-duration:1s;transition-timing-function:ease-out;transition-delay:0s}.health-bar-pulse{-webkit-animation:pulsewhite 1s linear infinite;animation:pulsewhite 1s linear infinite}@-webkit-keyframes pulsewhite{0%{background-color:rgba(0,0,0,.6)}50%{background-color:hsla(0,0%,100%,.6)}to{background-color:rgba(0,0,0,.6)}}@keyframes pulsewhite{0%{background-color:rgba(0,0,0,.6)}50%{background-color:hsla(0,0%,100%,.6)}to{background-color:rgba(0,0,0,.6)}}@-webkit-keyframes pulse{0%{background-color:rgba(0,0,0,.8)}50%{background-color:rgba(255,0,0,.8)}to{background-color:rgba(0,0,0,.8)}}@keyframes pulse{0%{background-color:rgba(0,0,0,.8)}50%{background-color:rgba(255,0,0,.8)}to{background-color:rgba(0,0,0,.8)}}#ui-bottom-center-1{z-index:3;position:absolute;color:#fff;bottom:220px;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%)}@media (max-height:768px),(max-width:1200px){#ui-bottom-center-1{-webkit-transform-origin:bottom;transform-origin:bottom;-webkit-transform:translateX(-50%) scale(.85);transform:translateX(-50%) scale(.85);bottom:138px}}#ui-kills{display:none;text-align:center;background:rgba(0,0,0,.4);color:#fff;border-radius:5px;padding:8px}#ui-kill-text{font-size:18px}#ui-kill-count{font-weight:700;color:#ff4100;font-size:32px;text-shadow:1px 1px 1px rgba(0,0,0,.3)}#ui-bottom-center-2{position:absolute;color:#fff;bottom:160px;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%)}#ui-pickup-message{color:#fff;opacity:0;text-shadow:2px 2px 0 #000;font-size:32px;font-weight:700;text-align:center;width:100vw}#ui-bottom-center-right{position:absolute;color:#fff;bottom:12px;left:75%}@media (max-height:768px),(max-width:1200px){#ui-bottom-center-right{-webkit-transform:scale(.8);transform:scale(.8)}}.ui-armor-counter{position:absolute;bottom:0;display:block;width:48px;height:60px;background:rgba(0,0,0,.4);border-radius:5px;margin-left:4px}#ui-armor-helmet{right:4px}#ui-armor-backpack{left:60px;border:2px solid transparent}.ui-armor-level{position:relative;font-size:16px;font-weight:700;bottom:24px;text-align:center;text-shadow:1px 1px #000}.ui-armor-counter-inner{z-index:1;position:absolute;background:rgba(0,255,0,.5);border-radius:5px;width:100%;height:0;bottom:0;transition:height .5s;transition-property:height;transition-duration:.5s;transition-timing-function:ease-out;transition-delay:0s}.ui-armor-counter .ui-armor-count{z-index:2;text-shadow:2px 2px #000;position:relative;font-size:18px;font-weight:700;margin-top:-28px;text-align:center}.ui-armor-counter .ui-armor-image{margin:auto;left:0;right:0;bottom:0;top:0;z-index:0;position:absolute;height:36px;width:36px}#ui-bottom-right{position:absolute;color:#fff;bottom:12px;right:12px}@media (max-height:768px),(max-width:1200px){#ui-bottom-right{-webkit-transform-origin:bottom right;transform-origin:bottom right;-webkit-transform:scale(.7);transform:scale(.7)}}#ui-weapon-container{width:192px}.ui-weapon-info{margin-bottom:5px}.ui-weapon-info,.ui-weapon-switch{border-radius:5px;border:2px solid transparent}.ui-weapon-switch{position:absolute;right:0;opacity:.6;width:160px;height:60px;margin-left:auto;pointer-events:all;cursor:pointer!important}#ui-weapon-id-1{bottom:210px}#ui-weapon-id-2{bottom:140px}#ui-weapon-id-3{bottom:70px}#ui-weapon-id-4{bottom:0}.ui-weapon-name{font-size:18px;margin-top:38px}.ui-weapon-name,.ui-weapon-number{position:absolute;font-weight:700;right:8px;text-align:center}.ui-weapon-number{font-size:24px}.ui-weapon-exp{display:none;position:absolute;height:32px;width:32px;font-size:18px;font-weight:700;line-height:34px;right:78px;margin-top:26px;text-align:center}.ui-weapon-image{display:none;position:relative;height:60px;width:60px;left:4px;background-size:60px;background-repeat:no-repeat}#ui-weapon-id-4 .ui-weapon-image{height:52px;width:52px;left:4px;top:4px;background-size:52px}.ui-weapon-dragged{position:fixed!important;width:160px!important;right:auto!important;bottom:auto!important;pointer-events:none!important}#ui-stats{display:none}#ui-stats-bg{display:none;opacity:0;position:absolute;top:0;left:0;width:100vw;height:100vh;background:rgba(0,0,0,.75);pointer-events:none;z-index:2}#ui-stats-contents{position:absolute;width:100%;top:10%;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%);text-align:center;color:#fff;border-radius:5px;z-index:3}@media (max-height:860px){#ui-stats-contents{top:0}}@media (max-width:1024px){#ui-stats-contents{-webkit-transform:translateX(-50%) scale(.8);transform:translateX(-50%) scale(.8);-webkit-transform-origin:top;transform-origin:top}}@media (max-height:768px){#ui-stats-header{-webkit-transform:scale(.75);transform:scale(.75);-webkit-transform-origin:top;transform-origin:top}}.ui-stats-header-title{font-weight:700;font-size:48px;margin:20px;color:gold}.ui-stats-header-reason{font-size:24px}.ui-stats-header-overview{display:inline;margin:10px}.ui-stats-header-overview div{display:inline;padding-bottom:12px;border-bottom:2px solid hsla(0,0%,100%,.25)}.ui-stats-header-overview div:not(:first-child){margin-left:100px}span.ui-stats-header-stat{font-size:32px}span.ui-stats-header-value{margin-left:24px;font-size:48px;font-weight:700}#ui-stats-info-box{position:relative;left:50%;margin:auto;margin-top:50px;height:190px;display:flex}@media (max-height:768px){#ui-stats-info-box{margin-top:-30px;-webkit-transform:scale(.9);transform:scale(.9);-webkit-transform-origin:left;transform-origin:left}}@media (max-width:1024px){#ui-stats-info-box{-webkit-transform:scale(.85);transform:scale(.85);-webkit-transform-origin:left;transform-origin:left}}.ui-stats-info-player{position:relative;width:250px;background-color:rgba(0,0,0,.75);border-radius:4px;border:2px solid #000;-webkit-transform:translateX(-50%);transform:translateX(-50%)}.ui-stats-info-status:after{content:"";display:block;position:absolute;top:15%;left:25%;background-image:url(../img/gui/skull.svg);background-repeat:no-repeat;background-size:128px;width:100%;height:100%;opacity:.1;z-index:-1}.ui-stats-info-player-name{color:gold;font-size:24px;font-weight:700;font-style:italic;margin:8px auto;max-width:240px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.ui-stats-info{display:flex;height:36px;margin:auto}.ui-stats-info>div{padding:8px;font-size:18px;line-height:12px;text-align:left;font-weight:700}.ui-stats-info>div:first-child{width:55%;margin-right:4px;text-align:right;font-weight:400}.ui-stats-reason{display:flex;height:72px;margin:auto}.ui-stats-reason div{padding:8px;margin:auto;width:100%;text-align:center;font-size:16px}.ui-stats-reason .ui-stats-reason-dead{color:red}.ui-stats-reason .ui-stats-reason-alive{color:#7cfc00}#ui-stats-options{position:absolute;left:50%;margin-top:20px;min-height:60px;z-index:1}@media (max-height:768px){#ui-stats-options{margin-top:8px;-webkit-transform:scale(.9);transform:scale(.9);-webkit-transform-origin:top;transform-origin:top}}.ui-stats-restart{width:200px;margin:auto;margin-bottom:20px}#ui-stats-spectate,.ui-stats-restart{position:absolute;-webkit-transform:translateX(-50%);transform:translateX(-50%)}#ui-stats-spectate{left:102px;width:125px;background:#50afab;border-bottom:2px solid #387c79;box-shadow:inset 0 -2px #387c79}.ui-stats-ad-container{display:none;margin-top:80px}@media (max-height:768px){.ui-stats-ad-container{margin-top:70px}}#ui-spec-ad-container{z-index:1;position:absolute;top:0;left:50%}.tooltip{position:relative}.tooltip .tooltip-text{visibility:hidden;width:240px;background-color:#000;color:#fff;text-align:center;padding:5px 0;border-radius:6px;position:absolute;z-index:1;right:110%;opacity:.75;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.tooltip .tooltip-text:after{content:" ";position:absolute;top:50%;left:100%;margin-top:-5px;border-width:5px;border-style:solid;border-color:transparent transparent transparent #000}.tooltip-title{font-size:18px;font-weight:700;padding:4px;color:#ff0}.tooltip-description{font-size:16px;padding:4px}.tooltip-description span{font-size:16px}.tooltip:hover .tooltip-text{visibility:visible}#ui-editor-top-center{position:absolute;color:#fff;top:0;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%)}#ui-editor-top-right{position:absolute;color:#fff;font-size:16px;top:12px;right:12px}.ui-editor-header{text-align:center;font-weight:700;font-size:16px;padding:8px}.ui-editor-info{background:rgba(0,0,0,.4);border-radius:5px;font-size:36px;margin-bottom:8px;padding:8px}.ui-editor-list{margin:0;padding:0;list-style:none}.ui-editor-list li div{font-family:monospace;font-size:14px}#ui-profiler-top-left{position:absolute;color:#fff;font-size:16px;top:12px;left:12px;text-align:center;display:flex}.ui-profiler-list{background:rgba(0,0,0,.4);border-radius:5px;margin-right:16px;padding:8px}.ui-profiler-list-header{font-size:16px;font-weight:700;margin-bottom:8px}.ui-profiler-list ul{list-style:none;text-align:left;padding:0;margin:0}.ui-profiler-list li{display:flex}.kv{font-family:monospace;font-size:14px;font-weight:400}.kv:last-child{width:100%;text-align:right}#ui-settings-container-mobile{display:none}@media screen and (max-width:850px){*{-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.ui-touch-down{display:none;position:fixed;background-color:rgba(0,0,0,.5);-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.ui-touch-down-landscape{width:112px;height:112px;border-radius:56px}.ui-touch-down-portrait{width:96px;height:96px;border-radius:48px}.ui-touch-pos{display:none;position:fixed;background-color:rgba(0,0,0,.5);-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.ui-touch-pos-landscape{width:64px;height:64px;border-radius:32px}.ui-touch-pos-portrait{width:48px;height:48px;border-radius:24px}.btn-game-menu{position:relative;margin:auto;margin-top:2px;margin-bottom:4px;color:#fff;font-size:14px;text-shadow:0 1px 2px rgba(0,0,0,.25);background-color:#50afab;border-bottom:2px solid #387c79;box-shadow:inset 0 -2px #387c79;background-repeat:no-repeat;cursor:pointer;text-align:center;line-height:30px;display:block;width:100%;height:30px;border:0;border-radius:5px;-moz-border-radius:5px;-webkit-border-radius:5px;box-sizing:border-box}#btn-game-fullscreen{background-size:22px;background-position:4px 2px;background-image:url(../img/gui/minimize.svg)}#btn-game-sound{background-size:30px;background-position:3px 0;margin-bottom:8px}#btn-game-quit{background-position:-2px -3px;background-image:url(../img/gui/quit.svg)}#btn-game-quit,#btn-game-resume{margin-top:20px;background-size:34px}#btn-game-resume{background-position:-1px -1px;background-image:url(../img/gui/resume.svg)}#ui-top-center{position:absolute;color:#fff;top:15%;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%)}#ui-top-center .top-center-text{text-align:center;width:100vw;padding:4px}#ui-waiting-text{display:none;color:#fff;text-shadow:1px 1px 0 #000}#ui-waiting-text,#ui-waiting-text span{font-size:16px;font-weight:700}.top-center-text .spectate-text{display:inline-block;text-shadow:1px 1px 0 #000;font-size:16px;font-weight:700;overflow:hidden;height:32px}.top-center-text .spectate-desc{color:#fff;margin-right:8px}.ui-spectate-mode{display:none}#ui-spectate-text{position:relative}#spectate-player{max-width:250px;white-space:nowrap;text-overflow:ellipsis;color:cyan}#ui-top-center-scopes{margin-top:6px;text-align:center;color:#fff}.ui-zoom{display:inline-block;margin-left:-12px;margin-right:-12px;-webkit-transform:scale(.6);transform:scale(.6);background:rgba(0,0,0,.3);border-radius:32px;width:42px;height:42px;opacity:.6;pointer-events:all}.ui-zoom-active{vertical-align:baseline;opacity:1;margin-left:0;margin-right:0;-webkit-transition:all .1s ease-in;-webkit-transform:scale(1);-ms-transition:all .1s ease-in;-ms-transform:scale(1);-moz-transition:all .1s ease-in;-moz-transform:scale(1);transition:all .1s ease-in;transition:opacity .25s ease-out;-moz-transition:opacity .25s ease-out;-webkit-transition:opacity .25s ease-out;-o-transition:opacity .25s ease-out}.ui-zoom .ui-zoom-image{width:48px;height:48px;opacity:.4;padding:2px}.ui-zoom .ui-zoom-text{margin-top:14px;width:100%}.ui-zoom .ui-zoom-level{font-size:24px;line-height:16px;text-align:center;width:100%}.ui-zoom .ui-zoom-append{font-size:24px}.ui-zoom-inactive{display:none;margin-left:-8px;margin-right:-8px;transition:all .1s ease-in;-webkit-transform:scale(.6);transform:scale(.6)}.ui-emote-wheel{z-index:3;display:none;position:fixed}.ui-emote-parent{opacity:1}.ui-emote-hl{z-index:2;display:none}.ui-emote{position:fixed;width:256px;height:256px;background-size:256px;background-repeat:no-repeat;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.ui-emote-bg-circle{opacity:.65;background-image:url(../img/gui/ping-part-circle.svg)}.ui-emote-bg-quarter{opacity:.65;background-image:url(../img/gui/ping-part-quarter.svg)}.ui-emote-bg-eighth{opacity:.65;background-image:url(../img/gui/ping-part-eighth.svg)}.ui-emote-middle .ui-emote-image{width:24px!important;height:24px!important;background-size:24px!important;background-image:none!important}.ui-emote-top .ui-emote-image{margin-top:-78px;background-image:url(../img/gui/ping-team-danger.svg)}.ui-emote-right .ui-emote{-webkit-transform:translate(-50%,-50%) rotate(90deg);transform:translate(-50%,-50%) rotate(90deg)}.ui-emote-right .ui-emote-image{margin-left:78px;background-image:url(../img/gui/ping-team-coming.svg)}.ui-emote-bottom .ui-emote{-webkit-transform:translate(-50%,-50%) rotate(180deg);transform:translate(-50%,-50%) rotate(180deg)}.ui-emote-bottom .ui-emote-image{margin-top:78px;background-image:url(../img/gui/ping-team-help.svg)}.ui-emote-left .ui-emote{-webkit-transform:translate(-50%,-50%) rotate(270deg);transform:translate(-50%,-50%) rotate(270deg)}.ui-emote-left .ui-emote-image{margin-left:-78px;background-image:url(../img/gui/ping-team-help.svg)}.ui-emote-top-left .ui-emote-image{margin-left:-80px;margin-top:-30px;background-image:url(../img/loot/loot-ammo-box.svg)}.ui-emote-bottom-left .ui-emote{-webkit-transform:translate(-50%,-50%) rotate(-45deg);transform:translate(-50%,-50%) rotate(-45deg)}.ui-emote-bottom-left .ui-emote-image{margin-left:-80px;margin-top:30px;background-image:url(../img/loot/loot-medical-healthkit.svg)}.ui-emote-circle .ui-emote-hl{background-image:url(../img/gui/ping-part-circle-highlight.svg)}.ui-emote-quarter .ui-emote-hl{background-image:url(../img/gui/ping-part-quarter-highlight.svg)}.ui-emote-eighth .ui-emote-hl{background-image:url(../img/gui/ping-part-eighth-highlight.svg)}.ui-emote-image{z-index:1;position:fixed;background-repeat:no-repeat;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.ui-emote-image-large{width:80px;height:80px;background-size:64px;background-position:50%}.ui-emote-image-small{width:35px;height:35px;background-size:35px}.ui-team-indicator{z-index:2;display:none;position:fixed;top:0;left:0;border-radius:32px;width:64px;height:64px;background-size:64px;background-repeat:no-repeat;background-image:url(../img/gui/indicator.svg)}.ui-team-indicator,.ui-team-indicator-pos{-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.ui-team-indicator-pos{opacity:.75;position:relative;border-radius:24px;width:32px;height:32px;top:23px;left:32px}.ui-team-indicator-image{width:32px;height:32px;background-size:32px;background-repeat:no-repeat;background-image:url(../img/gui/ping-team-danger.svg)}.ui-indicator-ping-border{z-index:0;display:none;position:fixed;top:0;left:0;width:160px;height:160px;position:relative;background-size:160px;background-repeat:no-repeat;background-image:url(../img/gui/ping-border.svg);-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}#ui-top-left{position:absolute;color:#fff;font-size:16px;top:6px;left:6px;display:block}.ui-bg-standard{background:rgba(0,0,0,.24);border-radius:5px}#ui-team{position:fixed;left:128px}.ui-team-member{display:none;position:relative;width:110px;height:20px;padding:4px;margin-bottom:4px}.ui-team-member-name{font-weight:700;text-shadow:1px 1px 0 #000;font-size:10px;max-width:100px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.ui-team-member-color{position:absolute;top:4px;right:4px;border-radius:9px;width:9px;height:9px}.ui-background-yellow{background-color:#ff0}.ui-background-blue{background-color:blue}.ui-background-red{background-color:red}.ui-background-purple{background-color:purple}.ui-background-cyan{background-color:cyan}.ui-team-member-status{display:none;position:absolute;top:2px;right:-24px;width:20px;height:20px;background-size:20px;background-repeat:no-repeat}.ui-team-member-status-downed{border-radius:16px;display:block!important;background-image:url(../img/gui/down.svg)!important}.ui-team-member-status-dead{display:block!important;background-image:url(../img/gui/skull-team.svg)!important;opacity:.5!important}.ui-team-member-status-disconnected{display:block!important;background-image:url(../img/gui/close.svg)!important;opacity:.5!important}.ui-team-member-health{margin-top:2px}.ui-team-member-health .ui-bar-inner{background-color:#fff;z-index:1;position:absolute;border-radius:4px;width:110px;height:5px;transition:width 0s;transition-property:width;transition-duration:0s;transition-timing-function:ease-out;transition-delay:0s}.ui-team-member-health .ui-bar-danger{background:rgba(255,0,0,.8);-webkit-animation-name:pulse;animation-name:pulse;-webkit-animation-duration:.5s;animation-duration:.5s;-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out;-webkit-animation-delay:0;animation-delay:0;-webkit-animation-direction:alternate;animation-direction:alternate;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;-webkit-animation-fill-mode:none;animation-fill-mode:none;-webkit-animation-play-state:running;animation-play-state:running}.ui-team-member-health .ui-health-depleted{z-index:0;background:#fff;transition:width 1s;transition-property:width;transition-duration:1s;transition-timing-function:ease-out;transition-delay:0s}#ui-spectate-options-wrapper{bottom:6px;position:fixed;left:6px;top:auto!important}#ui-spectate-options{bottom:0;z-index:1;position:absolute;pointer-events:all;width:100%}#ui-spectate-buttons{display:inline-block;width:124px;padding:8px 8px 4px;text-align:center}#ui-spectate-options a{position:relative;color:#fff;height:24px;margin-bottom:2px;line-height:22px;font-size:12px;text-shadow:0 1px 2px rgba(0,0,0,.25);background:#50afab;border-bottom:2px solid #387c79;box-shadow:none;cursor:pointer}#btn-spectate-prev-player,#btn-spectate-view-stats{margin-bottom:12px!important}#ui-spectate-stats{position:absolute;top:0;left:146px;width:160px;display:none}#ui-spectate-stats-header{text-align:center;font-size:16px;font-weight:700;padding:6px;color:#fff}#ui-spectate-stats-table{width:100%;background-color:transparent;margin:auto;margin-right:0;margin-bottom:4px;border-collapse:collapse}#ui-spectate-stats tbody,#ui-spectate-stats td,#ui-spectate-stats th{padding:0 2px 2px 14px;font-size:10px}.ui-spectate-stats-category{width:75px;color:hsla(0,0%,100%,.75)}.ui-spectate-stats-value{width:75px;color:#fff}#ui-top-right{position:absolute;color:#fff;font-size:16px;top:6px;left:6px;display:flex}#ui-leaderboard{font-weight:700;text-align:center;width:56px;display:inline-block}#ui-leaderboard-alive{background:rgba(0,0,0,.4);border-radius:5px;margin-bottom:-16px;padding:8px;height:32px;width:40px}.ui-players-alive-pulse{-webkit-animation-name:pulseAlive;animation-name:pulseAlive;-webkit-animation-duration:2s;animation-duration:2s;-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out;-webkit-animation-delay:0s;animation-delay:0s;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;-webkit-animation-fill-mode:none;animation-fill-mode:none;-webkit-animation-play-state:running;animation-play-state:running}@-webkit-keyframes pulseAlive{0%{color:#fff}20%{color:red}40%{color:#fff}to{color:#fff}}@keyframes pulseAlive{0%{color:#fff}20%{color:red}40%{color:#fff}to{color:#fff}}.ui-leaderboard-header{font-size:12px}#ui-killfeed-wrapper{top:24px;left:6px;right:auto}#ui-killfeed{position:absolute;margin:initial;top:135px}#ui-killfeed-contents{width:800px}#ui-killfeed-contents .killfeed-div{position:absolute;background-color:rgba(0,0,0,.4);padding:3px;border-radius:2px;height:8px;line-height:8px;right:auto}.killfeed-div div,.killfeed-div span{float:left;font-size:8px;line-height:8px;font-weight:700;color:#efeeee}.killfeed-red div,.killfeed-red span{color:#d1777c!important}.killfeed-blue div,.killfeed-blue span{color:#00bfff!important}#ui-killfeed-contents .killfeed-red{color:#d1777c}#ui-killfeed-contents .killfeed-blue{color:#00bfff}#ui-killfeed .killfeed-name{max-width:180px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}#ui-ammo-interactive{position:absolute;right:0;top:25px;width:auto}.ui-ammo>.ui-loot-image,.ui-ammo>.ui-loot-overlay{position:absolute;height:11px;width:11px;right:2px;margin-top:2px}.ui-ammo{background:rgba(0,0,0,.4);border-radius:5px;width:85px;height:32px;margin-left:auto;margin-bottom:5px}.ui-ammo>.ui-loot-count{font-size:24px;left:10px;top:2px}.ui-ammo-row{display:flex}.ui-ammo-row>div:not(:last-child){margin-right:10px}#ui-loot-ph1{opacity:0!important}#ui-ammo-interactive>.ui-ammo{display:inline-block;background:rgba(0,0,0,.4);border-radius:5px;width:38px;height:14px;margin-left:auto;margin-bottom:2px}.ui-ammo>.ui-loot-count{position:absolute;font-size:12px;font-weight:700;width:16px;left:3px;margin-top:-1px;text-align:center}#ui-medical-interactive>.ui-loot{display:inline-block;background:rgba(0,0,0,.4);border-radius:5px;width:44px;height:16px;margin-left:auto;margin-bottom:2px}.ui-medical>.ui-loot-image{position:absolute;height:16px;width:16px;background-size:16px;background-repeat:no-repeat;right:2px;margin-top:0}.ui-medical>.ui-loot-count{position:absolute;font-size:16px;font-weight:700;left:4px;width:16px;margin-top:-3px;text-align:center}.ui-loot{background:rgba(0,0,0,.4);border-radius:5px;width:85px;height:32px;margin-left:auto;margin-bottom:5px}.ui-loot:hover{opacity:1!important}.ui-outline-hover,.ui-outline-hover:hover{border:2px solid rgba(0,255,0,0)}.ui-outline-hover:hover{-webkit-transition:border .1s ease-out;-moz-transition:border .1s ease-out;-o-transition:border .1s ease-out}.ui-scale-hover{transform:scale(1);-webkit-transform:scale(1);-ms-transform:scale(1);-moz-transform:scale(1)}.ui-scale-hover,.ui-scale-hover:hover{-webkit-transition:all .1s ease-in;-ms-transition:all .1s ease-in;-moz-transition:all .1s ease-in;transition:all .1s ease-in}.ui-scale-hover:hover{-webkit-transform:scale(1.1);-ms-transform:scale(1.1);-moz-transform:scale(1.1);transform:scale(1.1)}#ui-debug-button{display:none;background:rgba(0,0,0,.4);position:absolute;border-radius:13px;height:26px;width:26px;background-size:18px;bottom:4px;right:4px;background-position:50%;background-image:url(../img/gui/mag-glass.svg);background-repeat:no-repeat;pointer-events:auto;z-index:1}#ui-upper-center{position:absolute;display:flex;color:#fff;top:84px;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%)}#ui-announcement{display:none;color:#ff0;text-shadow:1px 1px 0 #000;font-size:16px;font-weight:700;text-align:center;width:100vw}#ui-lower-center{position:absolute;color:#fff;bottom:44%;left:60%}#ui-interaction{display:flex}#ui-interaction-press{background:rgba(0,0,0,.4);border-radius:5px;margin-left:-20px;font-size:34px;width:44px;height:44px;background-size:36px;background-position:50%;background-repeat:no-repeat}#ui-interaction-outer{background:rgba(0,0,0,.4);border-radius:5px;margin-left:6px;padding:0 6px;height:28px}#ui-interaction-outer #ui-interaction-description{margin-top:5px;font-size:16px;text-align:center}#ui-bottom-center-0{bottom:6px}#ui-bottom-center-0,#ui-equipped-ammo-wrapper{position:absolute;color:#fff;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%)}#ui-equipped-ammo-wrapper{bottom:78px}#ui-equipped-ammo{position:absolute;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%);text-align:center;opacity:1}#ui-bullet-counter{display:inline-block;width:175px;height:28px;text-align:center;text-shadow:1px 1px #000}#ui-bullet-counter #ui-current-clip{background:rgba(0,0,0,.4);border-radius:5px;font-size:28px;font-weight:700;line-height:30px;width:60px;height:32px;-webkit-transform:translateX(-50%);transform:translateX(-50%);left:50%;position:relative;text-align:center}#ui-bullet-counter #ui-ammo-divider{font-size:22px;left:53%;position:absolute;text-align:center;top:20px}#ui-bullet-counter #ui-remaining-ammo{background:rgba(0,0,0,.4);border-radius:5px;font-size:16px;font-weight:700;line-height:22px;width:44px;height:22px;left:122px;position:absolute;text-align:center;top:10px}#ui-bullet-counter #ui-reload-button{background:rgba(0,0,0,.4);position:absolute;border-radius:11px;height:22px;width:22px;background-size:14px;top:10px;left:170px;background-position:4px 3px;background-image:url(../img/gui/bullets.svg);background-repeat:no-repeat}#ui-boost-counter{display:inline-flex;width:206px}#ui-boost-counter .ui-boost-base{background:rgba(0,0,0,.4);height:6px;margin-bottom:0}#ui-boost-counter-0{border-top-left-radius:3px;border-bottom-left-radius:3px;width:50px;margin-right:3px}#ui-boost-counter-0 .ui-bar-inner{background:#ff901a}#ui-boost-counter-1{width:50px;margin-left:3px;margin-right:3px}#ui-boost-counter-1 .ui-bar-inner{background:#ff751a}#ui-boost-counter-2{width:75px;margin-left:3px;margin-right:3px}#ui-boost-counter-2 .ui-bar-inner{background:#ff6616}#ui-boost-counter-3{border-top-right-radius:3px;border-bottom-right-radius:3px;width:25px;margin-left:3px}#ui-boost-counter-3 .ui-bar-inner{background:#ff5600}.ui-boost-base .ui-bar-inner{border-radius:inherit;width:0;height:6px}#ui-health-counter{background:rgba(0,0,0,.4);border-radius:5px;width:200px;height:18px;padding:4px}#ui-health-counter .ui-bar-inner{z-index:1;position:absolute;border-radius:5px;width:100%;height:18px;transition:width 0s;transition-property:width;transition-duration:0s;transition-timing-function:ease-out;transition-delay:0s}#ui-health-container{width:200px;position:relative}#ui-health-counter .ui-bar-danger{background:rgba(255,0,0,.8);-webkit-animation-name:pulse;animation-name:pulse;-webkit-animation-duration:.5s;animation-duration:.5s;-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out;-webkit-animation-delay:0;animation-delay:0;-webkit-animation-direction:alternate;animation-direction:alternate;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;-webkit-animation-fill-mode:none;animation-fill-mode:none;-webkit-animation-play-state:running;animation-play-state:running}#ui-health-counter #ui-health-depleted{z-index:0;background:#fff;transition:width 1s;transition-property:width;transition-duration:1s;transition-timing-function:ease-out;transition-delay:0s}.health-bar-pulse{-webkit-animation:pulsewhite 1s linear infinite;animation:pulsewhite 1s linear infinite}@-webkit-keyframes pulsewhite{0%{background-color:rgba(0,0,0,.6)}50%{background-color:hsla(0,0%,100%,.6)}to{background-color:rgba(0,0,0,.6)}}@keyframes pulsewhite{0%{background-color:rgba(0,0,0,.6)}50%{background-color:hsla(0,0%,100%,.6)}to{background-color:rgba(0,0,0,.6)}}@-webkit-keyframes pulse{0%{background-color:rgba(0,0,0,.8)}50%{background-color:rgba(255,0,0,.8)}to{background-color:rgba(0,0,0,.8)}}@keyframes pulse{0%{background-color:rgba(0,0,0,.8)}50%{background-color:rgba(255,0,0,.8)}to{background-color:rgba(0,0,0,.8)}}#ui-bottom-center-1{z-index:3;position:absolute;color:#fff;bottom:23%;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%)}#ui-kills{display:none;text-align:center;background:rgba(0,0,0,.4);color:#fff;border-radius:5px;padding:6px}#ui-kill-text{font-size:10px}#ui-kill-count{font-weight:700;color:#ff4100;font-size:18px;margin-bottom:-3px;text-shadow:1px 1px 1px rgba(0,0,0,.3)}#ui-bottom-center-2{position:absolute;color:#fff;bottom:82px;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%)}#ui-pickup-message{color:#fff;text-shadow:1px 1px 0 #000;font-size:16px;font-weight:700;text-align:center;width:100vw}#ui-bottom-center-right{position:absolute;color:#fff;bottom:6px;left:75%}.ui-armor-counter{position:absolute;bottom:0;display:block;width:20px;height:24px;background:rgba(0,0,0,.4);border-radius:5px;margin-left:2px}#ui-armor-helmet{right:0}#ui-armor-backpack{left:26px}.ui-armor-level{position:relative;font-size:8px;font-weight:700;bottom:12px;text-align:center;text-shadow:1px 1px #000}.ui-armor-counter-inner{z-index:1;position:absolute;background:rgba(0,255,0,.5);border-radius:5px;width:100%;height:0;bottom:0;transition:height .5s;transition-property:height;transition-duration:.5s;transition-timing-function:ease-out;transition-delay:0s}.ui-armor-counter .ui-armor-count{z-index:2;text-shadow:1px 1px #000;position:relative;font-size:18px;font-weight:700;margin-top:-28px;text-align:center}.ui-armor-counter .ui-armor-image{margin:auto;left:0;right:0;bottom:0;top:0;z-index:0;position:absolute;height:18px;width:18px}#ui-bottom-right{bottom:auto;color:#fff;position:absolute;right:6px;top:55%;-webkit-transform-origin:bottom right;transform-origin:bottom right;-webkit-transform:scale(1);transform:scale(1)}#ui-weapon-container{width:84px}.ui-weapon-info{margin-bottom:5px}.ui-weapon-info,.ui-weapon-switch{border-radius:5px;border:2px solid transparent}.ui-weapon-switch{position:absolute;right:0;opacity:.6;width:68px;height:24px;margin-left:auto;pointer-events:all}#ui-weapon-id-1{bottom:90px}#ui-weapon-id-2{bottom:60px}#ui-weapon-id-3{bottom:30px}#ui-weapon-id-4{bottom:0}.ui-weapon-name{position:absolute;font-size:10px;font-weight:700;right:4px;width:48px;margin-top:12px;text-align:right;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.ui-weapon-number{font-size:24px;right:8px}.ui-weapon-exp,.ui-weapon-number{display:none;position:absolute;font-weight:700;text-align:center}.ui-weapon-exp{height:16px;width:16px;font-size:8px;line-height:18px;right:34px;margin-top:10px}.ui-weapon-image{display:none;position:relative;height:28px;width:28px;left:0;bottom:3px;-webkit-transform:rotate(10deg);transform:rotate(10deg)}#ui-weapon-id-4 .ui-weapon-image{height:24px;width:24px;left:0;top:0;background-size:24px}#ui-stats-contents{position:absolute;width:100%;top:0;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%);text-align:center;color:#fff;border-radius:5px}#ui-stats-header{margin-top:14px}.ui-stats-header-title{font-weight:700;font-size:24px;margin:6px;color:gold}.ui-stats-header-reason{font-size:12px}.ui-stats-header-overview{position:fixed;top:4px;right:12px;margin:5px}.ui-stats-header-overview div{display:block;padding-bottom:6px;border-bottom:2px solid hsla(0,0%,100%,.25)}.ui-stats-header-overview div:not(:first-child){margin:initial}span.ui-stats-header-stat{font-size:22px}span.ui-stats-header-value{margin-left:12px;font-size:28px;font-weight:700}#ui-stats-info-box{position:relative;left:50%;margin:auto;margin-top:0;height:100px;display:flex}.ui-stats-info-player{position:relative;width:125px;background-color:rgba(0,0,0,.75);border-radius:4px;border:2px solid #000;-webkit-transform:translateX(-50%);transform:translateX(-50%)}.ui-stats-info-status:after{background-image:url(../img/gui/skull.svg);background-position:50%;background-repeat:no-repeat;background-size:70px;content:"";display:block;height:100%;left:auto;opacity:.1;position:absolute;top:0;width:100%;z-index:-1}.ui-stats-info-player-name{color:gold;font-size:12px;font-weight:700;font-style:italic;margin:4px auto;max-width:120px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.ui-stats-info{display:flex;height:18px;margin:auto}.ui-stats-info>div{padding:4px;font-size:9px;line-height:6px;text-align:left;font-weight:700}.ui-stats-info>div:first-child{width:55%;margin-right:4px;text-align:right;font-weight:400}.ui-stats-reason{display:flex;height:72px;margin:auto}.ui-stats-reason div{padding:8px;margin:auto;width:100%;text-align:center;font-size:16px}.ui-stats-reason .ui-stats-reason-dead{color:red}.ui-stats-reason .ui-stats-reason-alive{color:#7cfc00}#ui-stats-options{position:absolute;left:50%;margin-top:10px;min-height:30px;z-index:1}.ui-stats-restart{width:130px;margin:auto;margin-bottom:20px}#ui-stats-spectate,.ui-stats-restart{position:absolute;-webkit-transform:translateX(-50%);transform:translateX(-50%)}#ui-stats-spectate{left:68px;width:88px;background:#50afab;border-bottom:2px solid #387c79;box-shadow:none}.ui-stats-ad-container{display:none;margin-top:8px;-webkit-transform:scale(.7);transform:scale(.7)}#ui-spec-ad-container{z-index:1;position:absolute;top:0;left:50%}#ad-block-stats-bottom{-webkit-transform:scale(.6);transform:scale(.6);-webkit-transform-origin:center;transform-origin:center;position:static}.tooltip{position:relative}.tooltip .tooltip-text{visibility:hidden!important;width:240px;background-color:#000;color:#fff;text-align:center;padding:5px 0;border-radius:6px;position:absolute;z-index:1;right:110%;opacity:.75;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.tooltip .tooltip-text:after{content:" ";position:absolute;top:50%;left:100%;margin-top:-5px;border-width:5px;border-style:solid;border-color:transparent transparent transparent #000}.tooltip-title{font-size:18px;font-weight:700;padding:4px;color:#ff0}.tooltip-description{font-size:16px;padding:4px}.tooltip-description span{font-size:16px}#ui-editor-top-center{position:absolute;color:#fff;top:0;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%)}#ui-editor-top-right{position:absolute;color:#fff;font-size:16px;top:6px;right:6px}.ui-editor-header{text-align:center;font-weight:700;font-size:16px;padding:8px}.ui-editor-info{background:rgba(0,0,0,.4);border-radius:5px;font-size:36px;margin-bottom:8px;padding:8px}.ui-editor-list{margin:0;padding:0;list-style:none}.ui-editor-list li div{font-family:monospace;font-size:14px}#ui-profiler-top-left{position:absolute;color:#fff;font-size:16px;top:6px;left:6px;text-align:center;display:flex}.ui-profiler-list{background:rgba(0,0,0,.4);border-radius:5px;margin-right:16px;padding:8px}.ui-profiler-list-header{font-size:16px;font-weight:700;margin-bottom:8px}.ui-profiler-list ul{list-style:none;text-align:left;padding:0;margin:0}.ui-profiler-list li{display:flex}.kv{font-family:monospace;font-size:14px;font-weight:400}.kv:last-child{width:100%;text-align:right}#ui-leaderboard-wrapper,#ui-settings-container-desktop{display:none}#ui-settings-container-mobile{display:block}}@media screen and (max-width:850px) and (max-height:360px),screen and (max-width:850px) and (max-width:640px){#ui-top-center{-webkit-transform-origin:top;transform-origin:top;-webkit-transform:translateX(-50%) scale(.85);transform:translateX(-50%) scale(.85)}}@media screen and (max-width:850px) and screen and (max-width:850px){#ui-lower-center{-webkit-transform:scale(1);transform:scale(1)}}@media screen and (max-width:850px) and (max-height:360px),screen and (max-width:850px) and (max-width:640px){#ui-bottom-center-0{-webkit-transform-origin:bottom;transform-origin:bottom;-webkit-transform:translateX(-50%) scale(.85);transform:translateX(-50%) scale(.85)}}@media screen and (max-width:850px) and (max-height:360px),screen and (max-width:850px) and (max-width:640px){#ui-bottom-right{-webkit-transform-origin:top right;transform-origin:top right;-webkit-transform:scale(.8);transform:scale(.8)}}@media screen and (max-width:850px) and (max-width:850px) and (orientation:landscape){.ui-stats-header-overview .ui-stats-header-left{position:fixed;top:6px;left:12px}.ui-stats-header-overview .ui-stats-header-right{position:fixed;top:6px;right:12px}}@media screen and (max-width:850px) and (max-height:360px) and (max-width:640px){.ui-stats-ad-container{margin-top:0;-webkit-transform:scale(.6);transform:scale(.6)}}@media screen and (max-width:850px) and (max-width:850px) and (max-height:320px){.ui-stats-ad-container{position:fixed;right:10px;top:24px;-webkit-transform:scale(.5);transform:scale(.5);-webkit-transform-origin:bottom right;transform-origin:bottom right}}@media screen and (max-width:850px) and (orientation:portrait){#ui-stats-contents{margin-top:32px;margin-bottom:16px}#ui-stats-header-overview{position:static}#ui-stats-info-box{display:inline-block;left:auto;-webkit-transform:scale(.9);transform:scale(.9);-webkit-transform-origin:initial;transform-origin:initial;margin-top:2px;width:100%}.ui-stats-ad-container{width:100%}.ui-stats-info-player{display:inline-block;left:auto!important;margin:8px;-webkit-transform:none;transform:none}.ui-stats-header-overview{display:inline-block;position:static;width:175px}.ui-stats-header-overview div{position:static;margin-bottom:8px}#ui-top-center{top:134px;left:50%}#ui-top-center-scopes-wrapper{display:none;bottom:42px;top:auto}#ui-team{top:40px}.ui-team-member{height:18px;margin-bottom:4px}#ui-upper-center{top:180px}#ui-bottom-center-0{top:-15px;bottom:auto;left:100px;-webkit-transform:scale(.85);transform:scale(.85)}#ui-bottom-center-1{bottom:28%}#ui-bottom-center-2{bottom:218px}#ui-lower-center{bottom:38%;left:38%}#ui-boost-counter{position:relative;top:40px;left:2px}#ui-bottom-right{bottom:20px;right:6px;top:auto}#ui-weapon-id-1{right:240px;bottom:auto}#ui-weapon-id-2{right:160px;bottom:auto}#ui-weapon-id-3{right:80px;bottom:auto}#ui-weapon-id-4{bottom:auto}.ui-weapon-info{display:inline-block}#ui-bottom-center-right{bottom:9px;left:30px}.ui-right-center-mobile{top:6px}#ui-emote-button{left:auto;right:0;top:246px}#ui-debug-button{top:242px}#ui-ammo-interactive{left:8px;margin-top:4px;top:88px}#ui-ammo-interactive>.ui-ammo,#ui-medical-interactive>.ui-loot{display:block}#ui-equipped-ammo{position:static}#ui-equipped-ammo,#ui-equipped-ammo-wrapper{left:auto;-webkit-transform:none;transform:none}#ui-equipped-ammo-wrapper{bottom:auto;color:#fff;position:absolute;right:6px;top:44%}#ui-bullet-counter{width:auto}#ui-bullet-counter #ui-current-clip{left:50%}#ui-bullet-counter #ui-remaining-ammo{left:auto;right:0;top:36px}#ui-bullet-counter #ui-reload-button{left:auto;right:0;top:62px}#big-map-collision{left:auto;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%)}#big-map-close{bottom:auto;top:12px}#ui-spectate-options-wrapper{bottom:42px;-webkit-transform:scale(.7);transform:scale(.7)}#ui-spectate-options{position:absolute;bottom:12px}#ui-spectate-stats{bottom:0;top:auto}#ui-ammo-interactive{top:90px}#ui-ammo-interactive>.ui-ammo{margin-bottom:2px}}@media screen and (max-width:850px) and (orientation:portrait) and (min-height:668px){#ui-stats-contents{margin-top:32px}#ui-stats-info-box,.ui-stats-ad-container{-webkit-transform:scale(1);transform:scale(1)}.ui-stats-ad-container{margin-top:20px}#ui-stats-options{display:block;left:auto;position:static;margin:auto;margin-top:24px;width:100%}.ui-stats-restart{margin-bottom:0}#ui-stats-spectate,.ui-stats-restart{display:block;position:static;-webkit-transform:initial;transform:none}#ui-stats-spectate{margin:auto;margin-top:6px}}@media screen and (max-width:850px) and (orientation:portrait) and (max-height:667px){#ui-stats-contents{margin-top:0;-webkit-transform:translateX(-50%) scale(.9);transform:translateX(-50%) scale(.9);-webkit-transform-origin:top;transform-origin:top}.ui-stats-ad-container{margin-top:20px}}@media screen and (max-width:850px) and (orientation:portrait) and (max-height:568px) and (max-width:375px){#ui-bottom-center-right{left:22px;-webkit-transform:scale(.8);transform:scale(.8)}#ui-bottom-right{right:0}#ui-bottom-center-0{top:-20px;left:84px;-webkit-transform:scale(.7);transform:scale(.7)}}', ""])
    },
    b58076b1: function(e, t, a) {
        "use strict";
        var i = a("6b42806d")
          , r = a("1901e2d9")
          , o = a("c2a798c8")
          , n = a("ce29f17f")
          , s = a("af8ba00f")
          , l = {
            intersectSegment: function(e, t, a, n, s, l, m) {
                for (var c = n, d = o.add(t, o.mul(a, n)), p = 0; p < e.length; p++) {
                    var u = e[p];
                    if (!(!u.active || u.dead || !u.collidable || u.isWindow || u.height < s) && r.sameLayer(u.layer, l) && !(m && 2 & l && 0 == u.layer)) {
                        var h = i.intersectSegment(u.collider, t, d);
                        h && (c = Math.min(c, o.length(o.sub(h.point, t))))
                    }
                }
                return c
            },
            scanCollider: function(e, t, a, r, m, c, d, p) {
                var u = i.intersectCircle(e, a, d);
                if (!u)
                    return !1;
                if (u.pen >= d)
                    return !0;
                for (var h = o.perp(u.dir), g = [], y = 0; y < p; y++) {
                    var f = y / Math.max(p - 1, 1)
                      , x = (f - .5) * c;
                    g.push(o.add(a, o.mul(h, x)))
                }
                for (var w = m, b = 0; b < g.length; b++) {
                    var _ = g[b]
                      , v = o.sub(_, a)
                      , S = o.length(v);
                    v = S > 1e-4 ? o.div(v, S) : o.create(1, 0);
                    var k = l.intersectSegment(t, a, v, S, 0, r, !1);
                    _ = o.add(a, o.mul(v, k));
                    var z = i.intersectCircle(e, _, d);
                    if (z) {
                        var M = o.neg(z.dir)
                          , T = l.intersectSegment(t, _, M, d, w, r, !0)
                          , P = i.intersectSegment(e, _, o.add(_, o.mul(M, d)))
                          , C = P && o.length(o.sub(P.point, _)) <= T;
                        if (n.debug) {
                            var A = C ? 65280 : 16711680;
                            s.addRay(_, M, d, A)
                        }
                        if (C)
                            return !0
                    }
                }
                return !1
            }
        };
        e.exports = l
    },
    b78cf179: function(e, t, a) {
        "use strict";
        function i(e, t, a) {
            return t in e ? Object.defineProperty(e, t, {
                value: a,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = a,
            e
        }
        var r, o = {
            None: 0,
            Top: 1,
            Right: 2,
            Bottom: 3,
            Left: 4,
            Win: 5,
            Death: 6,
            Count: 7
        }, n = {
            Locked: 0,
            Default: 1,
            Account: 5,
            Twitter: 6,
            YouTube: 7,
            Facebook: 8
        }, s = {
            None: 0,
            Empty: 1,
            Medical: 2,
            Ammo: 3,
            ThumbsUp: 4,
            SadFace: 5,
            HappyFace: 6,
            Surviv: 7,
            Ammo9mm: 8,
            Ammo12Gauge: 9,
            Ammo762mm: 10,
            Ammo556mm: 11,
            GG: 12,
            Question: 13,
            Tombstone: 14,
            JoyFace: 15,
            SobFace: 16,
            ThinkingFace: 17,
            FlagUS: 18,
            FlagThailand: 19,
            FlagGermany: 20,
            FlagFrance: 21,
            FlagSouthKorea: 22,
            FlagBrazil: 23,
            FlagCanada: 24,
            FlagSpain: 25,
            FlagRussia: 26,
            FlagMexico: 27,
            FlagPoland: 28,
            FlagUK: 29,
            FlagColombia: 30,
            FlagUkraine: 31,
            FlagTurkey: 32,
            FlagPhilippines: 33,
            FlagCzechia: 34,
            FlagPeru: 35,
            FlagAustria: 36,
            FlagArgentina: 37,
            FlagJapan: 38,
            FlagVenezuela: 39,
            FlagVietnam: 40,
            FlagSwitzerland: 41,
            FlagNetherlands: 42,
            FlagChina: 43,
            FlagTaiwan: 44,
            FlagChile: 45,
            FlagAustralia: 46,
            FlagDenmark: 47,
            FlagItaly: 48,
            FlagSweden: 49,
            FlagEcuador: 50,
            FlagSlovakia: 51,
            FlagHungary: 52,
            FlagRomania: 53,
            FlagHongKong: 54,
            FlagIndonesia: 55,
            FlagFinland: 56,
            FlagNorway: 57,
            Heart: 58,
            Sleepy: 59,
            Flex: 60,
            AngryFace: 61,
            UpsideDownFace: 62,
            Teabag: 63,
            AlienFace: 64,
            FlagBelarus: 65,
            FlagBelgium: 66,
            FlagKazakhstan: 67,
            Egg: 68,
            Police: 69,
            DabFace: 70,
            FlagMalaysia: 71,
            FlagNewZealand: 72,
            LogoSurviv: 73,
            LogoEgg: 74,
            LogoSwine: 75,
            LogoHydra: 76,
            LogoStorm: 77,
            FlagHonduras: 78,
            LogoCaduceus: 79,
            ImpFace: 80,
            MonocleFace: 81,
            SunglassFace: 82,
            HeadshotFace: 83,
            Potato: 84,
            Leek: 85,
            Eggplant: 86,
            Baguette: 87,
            Chick: 88,
            Ammo50AE: 89,
            FlagBolivia: 90,
            FlagBosnia: 91,
            FlagCroatia: 92,
            FlagIndia: 93,
            FlagIsrael: 94,
            FlagGeorgia: 95,
            FlagGreece: 96,
            FlagGuatemala: 97,
            FlagPortugal: 98,
            FlagSerbia: 99,
            FlagSingapore: 100,
            FlagTrinidad: 101,
            FlagUruguay: 102,
            LogoConch: 103,
            Pineapple: 104,
            Coconut: 105,
            Crab: 106,
            Whale: 107,
            LogoMeteor: 108,
            Ammo308sub: 109,
            AmmoFlare: 110,
            Salt: 111,
            DisappointFace: 112
        }, l = (r = {},
        i(r, s.None, {
            texture: "",
            teamOnly: !1,
            noCustom: !0,
            category: n.Locked
        }),
        i(r, s.Medical, {
            texture: "emote-medical-healthkit.img",
            sound: "emote_01",
            teamOnly: !0,
            category: n.Locked
        }),
        i(r, s.Ammo, {
            texture: "ammo-box.img",
            sound: "emote_01",
            teamOnly: !0,
            category: n.Locked
        }),
        i(r, s.ThumbsUp, {
            texture: "thumbs-up.img",
            sound: "emote_01",
            teamOnly: !1,
            category: n.Default
        }),
        i(r, s.SadFace, {
            texture: "sad-face.img",
            sound: "emote_01",
            teamOnly: !1,
            category: n.Default
        }),
        i(r, s.HappyFace, {
            texture: "happy-face.img",
            sound: "emote_01",
            teamOnly: !1,
            category: n.Default
        }),
        i(r, s.Surviv, {
            texture: "surviv.img",
            sound: "emote_01",
            teamOnly: !1,
            category: n.Default
        }),
        i(r, s.Ammo9mm, {
            texture: "ammo-9mm.img",
            sound: "emote_01",
            teamOnly: !0,
            category: n.Locked
        }),
        i(r, s.Ammo12Gauge, {
            texture: "ammo-12gauge.img",
            sound: "emote_01",
            teamOnly: !0,
            category: n.Locked
        }),
        i(r, s.Ammo762mm, {
            texture: "ammo-762mm.img",
            sound: "emote_01",
            teamOnly: !0,
            category: n.Locked
        }),
        i(r, s.Ammo556mm, {
            texture: "ammo-556mm.img",
            sound: "emote_01",
            teamOnly: !0,
            category: n.Locked
        }),
        i(r, s.GG, {
            texture: "gg.img",
            sound: "emote_01",
            teamOnly: !1,
            twitterFollow: !0,
            category: n.Twitter
        }),
        i(r, s.Question, {
            texture: "question.img",
            sound: "emote_01",
            teamOnly: !1,
            twitterFollow: !0,
            category: n.Twitter
        }),
        i(r, s.Tombstone, {
            texture: "tombstone.img",
            sound: "emote_01",
            teamOnly: !1,
            twitterFollow: !0,
            category: n.Twitter
        }),
        i(r, s.JoyFace, {
            texture: "joy-face.img",
            sound: "emote_01",
            teamOnly: !1,
            youtubeSubscribe: !0,
            category: n.YouTube
        }),
        i(r, s.SobFace, {
            texture: "sob-face.img",
            sound: "emote_01",
            teamOnly: !1,
            youtubeSubscribe: !0,
            category: n.YouTube
        }),
        i(r, s.ThinkingFace, {
            texture: "thinking-face.img",
            sound: "emote_01",
            teamOnly: !1,
            youtubeSubscribe: !0,
            category: n.YouTube
        }),
        i(r, s.FlagUS, {
            texture: "united-states-of-america.img",
            sound: "emote_01",
            teamOnly: !1,
            facebookLike: !0,
            category: n.Facebook
        }),
        i(r, s.FlagThailand, {
            texture: "thailand.img",
            sound: "emote_01",
            teamOnly: !1,
            facebookLike: !0,
            category: n.Facebook
        }),
        i(r, s.FlagGermany, {
            texture: "germany.img",
            sound: "emote_01",
            teamOnly: !1,
            facebookLike: !0,
            category: n.Facebook
        }),
        i(r, s.FlagFrance, {
            texture: "france.img",
            sound: "emote_01",
            teamOnly: !1,
            facebookLike: !0,
            category: n.Facebook
        }),
        i(r, s.FlagSouthKorea, {
            texture: "south-korea.img",
            sound: "emote_01",
            teamOnly: !1,
            facebookLike: !0,
            category: n.Facebook
        }),
        i(r, s.FlagBrazil, {
            texture: "brazil.img",
            sound: "emote_01",
            teamOnly: !1,
            facebookLike: !0,
            category: n.Facebook
        }),
        i(r, s.FlagCanada, {
            texture: "canada.img",
            sound: "emote_01",
            teamOnly: !1,
            facebookLike: !0,
            category: n.Facebook
        }),
        i(r, s.FlagSpain, {
            texture: "spain.img",
            sound: "emote_01",
            teamOnly: !1,
            facebookLike: !0,
            category: n.Facebook
        }),
        i(r, s.FlagRussia, {
            texture: "russia.img",
            sound: "emote_01",
            teamOnly: !1,
            facebookLike: !0,
            category: n.Facebook
        }),
        i(r, s.FlagMexico, {
            texture: "mexico.img",
            sound: "emote_01",
            teamOnly: !1,
            facebookLike: !0,
            category: n.Facebook
        }),
        i(r, s.FlagPoland, {
            texture: "republic-of-poland.img",
            sound: "emote_01",
            teamOnly: !1,
            facebookLike: !0,
            category: n.Facebook
        }),
        i(r, s.FlagUK, {
            texture: "united-kingdom.img",
            sound: "emote_01",
            teamOnly: !1,
            facebookLike: !0,
            category: n.Facebook
        }),
        i(r, s.FlagColombia, {
            texture: "colombia.img",
            sound: "emote_01",
            teamOnly: !1,
            facebookLike: !0,
            category: n.Facebook
        }),
        i(r, s.FlagUkraine, {
            texture: "ukraine.img",
            sound: "emote_01",
            teamOnly: !1,
            facebookLike: !0,
            category: n.Facebook
        }),
        i(r, s.FlagTurkey, {
            texture: "turkey.img",
            sound: "emote_01",
            teamOnly: !1,
            facebookLike: !0,
            category: n.Facebook
        }),
        i(r, s.FlagPhilippines, {
            texture: "philippines.img",
            sound: "emote_01",
            teamOnly: !1,
            facebookLike: !0,
            category: n.Facebook
        }),
        i(r, s.FlagCzechia, {
            texture: "czech-republic.img",
            sound: "emote_01",
            teamOnly: !1,
            facebookLike: !0,
            category: n.Facebook
        }),
        i(r, s.FlagPeru, {
            texture: "peru.img",
            sound: "emote_01",
            teamOnly: !1,
            facebookLike: !0,
            category: n.Facebook
        }),
        i(r, s.FlagAustria, {
            texture: "austria.img",
            sound: "emote_01",
            teamOnly: !1,
            facebookLike: !0,
            category: n.Facebook
        }),
        i(r, s.FlagArgentina, {
            texture: "argentina.img",
            sound: "emote_01",
            teamOnly: !1,
            facebookLike: !0,
            category: n.Facebook
        }),
        i(r, s.FlagJapan, {
            texture: "japan.img",
            sound: "emote_01",
            teamOnly: !1,
            facebookLike: !0,
            category: n.Facebook
        }),
        i(r, s.FlagVenezuela, {
            texture: "venezuela.img",
            sound: "emote_01",
            teamOnly: !1,
            facebookLike: !0,
            category: n.Facebook
        }),
        i(r, s.FlagVietnam, {
            texture: "vietnam.img",
            sound: "emote_01",
            teamOnly: !1,
            facebookLike: !0,
            category: n.Facebook
        }),
        i(r, s.FlagSwitzerland, {
            texture: "switzerland.img",
            sound: "emote_01",
            teamOnly: !1,
            facebookLike: !0,
            category: n.Facebook
        }),
        i(r, s.FlagNetherlands, {
            texture: "netherlands.img",
            sound: "emote_01",
            teamOnly: !1,
            facebookLike: !0,
            category: n.Facebook
        }),
        i(r, s.FlagChina, {
            texture: "china.img",
            sound: "emote_01",
            teamOnly: !1,
            facebookLike: !0,
            category: n.Facebook
        }),
        i(r, s.FlagTaiwan, {
            texture: "taiwan.img",
            sound: "emote_01",
            teamOnly: !1,
            facebookLike: !0,
            category: n.Facebook
        }),
        i(r, s.FlagChile, {
            texture: "chile.img",
            sound: "emote_01",
            teamOnly: !1,
            facebookLike: !0,
            category: n.Facebook
        }),
        i(r, s.FlagAustralia, {
            texture: "australia.img",
            sound: "emote_01",
            teamOnly: !1,
            facebookLike: !0,
            category: n.Facebook
        }),
        i(r, s.FlagDenmark, {
            texture: "denmark.img",
            sound: "emote_01",
            teamOnly: !1,
            facebookLike: !0,
            category: n.Facebook
        }),
        i(r, s.FlagItaly, {
            texture: "italy.img",
            sound: "emote_01",
            teamOnly: !1,
            facebookLike: !0,
            category: n.Facebook
        }),
        i(r, s.FlagSweden, {
            texture: "sweden.img",
            sound: "emote_01",
            teamOnly: !1,
            facebookLike: !0,
            category: n.Facebook
        }),
        i(r, s.FlagEcuador, {
            texture: "ecuador.img",
            sound: "emote_01",
            teamOnly: !1,
            facebookLike: !0,
            category: n.Facebook
        }),
        i(r, s.FlagSlovakia, {
            texture: "slovakia.img",
            sound: "emote_01",
            teamOnly: !1,
            facebookLike: !0,
            category: n.Facebook
        }),
        i(r, s.FlagHungary, {
            texture: "hungary.img",
            sound: "emote_01",
            teamOnly: !1,
            facebookLike: !0,
            category: n.Facebook
        }),
        i(r, s.FlagRomania, {
            texture: "romania.img",
            sound: "emote_01",
            teamOnly: !1,
            facebookLike: !0,
            category: n.Facebook
        }),
        i(r, s.FlagHongKong, {
            texture: "hong-kong.img",
            sound: "emote_01",
            teamOnly: !1,
            facebookLike: !0,
            category: n.Facebook
        }),
        i(r, s.FlagIndonesia, {
            texture: "indonesia.img",
            sound: "emote_01",
            teamOnly: !1,
            facebookLike: !0,
            category: n.Facebook
        }),
        i(r, s.FlagFinland, {
            texture: "finland.img",
            sound: "emote_01",
            teamOnly: !1,
            facebookLike: !0,
            category: n.Facebook
        }),
        i(r, s.FlagNorway, {
            texture: "norway.img",
            sound: "emote_01",
            teamOnly: !1,
            facebookLike: !0,
            category: n.Facebook
        }),
        i(r, s.Heart, {
            texture: "heart.img",
            sound: "emote_01",
            teamOnly: !1,
            category: n.Default
        }),
        i(r, s.Sleepy, {
            texture: "sleepy.img",
            sound: "emote_01",
            teamOnly: !1,
            twitterFollow: !0,
            category: n.Twitter
        }),
        i(r, s.Flex, {
            texture: "flex.img",
            sound: "emote_01",
            teamOnly: !1,
            twitterFollow: !0,
            category: n.Twitter
        }),
        i(r, s.AngryFace, {
            texture: "angry-face.img",
            sound: "emote_01",
            teamOnly: !1,
            youtubeSubscribe: !0,
            category: n.YouTube
        }),
        i(r, s.UpsideDownFace, {
            texture: "upsidedown-face.img",
            sound: "emote_01",
            teamOnly: !1,
            youtubeSubscribe: !0,
            category: n.YouTube
        }),
        i(r, s.Teabag, {
            texture: "teabag.img",
            sound: "emote_01",
            teamOnly: !1,
            twitterFollow: !0,
            category: n.Twitter
        }),
        i(r, s.AlienFace, {
            texture: "alien-face.img",
            sound: "emote_01",
            teamOnly: !1,
            youtubeSubscribe: !0,
            category: n.YouTube
        }),
        i(r, s.FlagBelarus, {
            texture: "belarus.img",
            sound: "emote_01",
            teamOnly: !1,
            facebookLike: !0,
            category: n.Facebook
        }),
        i(r, s.FlagBelgium, {
            texture: "belgium.img",
            sound: "emote_01",
            teamOnly: !1,
            facebookLike: !0,
            category: n.Facebook
        }),
        i(r, s.FlagKazakhstan, {
            texture: "kazakhstan.img",
            sound: "emote_01",
            teamOnly: !1,
            facebookLike: !0,
            category: n.Facebook
        }),
        i(r, s.Egg, {
            texture: "egg.img",
            sound: "emote_01",
            teamOnly: !1,
            twitterFollow: !0,
            category: n.Twitter
        }),
        i(r, s.Police, {
            texture: "police.img",
            sound: "emote_01",
            teamOnly: !1,
            twitterFollow: !0,
            category: n.Twitter
        }),
        i(r, s.DabFace, {
            texture: "dab-face.img",
            sound: "emote_01",
            teamOnly: !1,
            youtubeSubscribe: !0,
            category: n.YouTube
        }),
        i(r, s.FlagMalaysia, {
            texture: "malaysia.img",
            sound: "emote_01",
            teamOnly: !1,
            facebookLike: !0,
            category: n.Facebook
        }),
        i(r, s.FlagNewZealand, {
            texture: "new-zealand.img",
            sound: "emote_01",
            teamOnly: !1,
            facebookLike: !0,
            category: n.Facebook
        }),
        i(r, s.LogoSurviv, {
            texture: "logo-surviv.img",
            sound: "emote_01",
            teamOnly: !1,
            category: n.Default
        }),
        i(r, s.LogoEgg, {
            texture: "logo-egg.img",
            sound: "emote_01",
            teamOnly: !1,
            category: n.Default
        }),
        i(r, s.LogoSwine, {
            texture: "logo-swine.img",
            sound: "emote_01",
            teamOnly: !1,
            category: n.Default
        }),
        i(r, s.LogoHydra, {
            texture: "logo-hydra.img",
            sound: "emote_01",
            teamOnly: !1,
            category: n.Default
        }),
        i(r, s.LogoStorm, {
            texture: "logo-storm.img",
            sound: "emote_01",
            teamOnly: !1,
            category: n.Default
        }),
        i(r, s.FlagHonduras, {
            texture: "honduras.img",
            sound: "emote_01",
            teamOnly: !1,
            facebookLike: !0,
            category: n.Facebook
        }),
        i(r, s.LogoCaduceus, {
            texture: "logo-caduceus.img",
            sound: "emote_01",
            teamOnly: !1,
            accountLogin: !0,
            category: n.Account
        }),
        i(r, s.ImpFace, {
            texture: "imp-face.img",
            sound: "emote_01",
            teamOnly: !1,
            accountLogin: !0,
            category: n.Account
        }),
        i(r, s.MonocleFace, {
            texture: "monocle-face.img",
            sound: "emote_01",
            teamOnly: !1,
            accountLogin: !0,
            category: n.Account
        }),
        i(r, s.SunglassFace, {
            texture: "sunglass-face.img",
            sound: "emote_01",
            teamOnly: !1,
            accountLogin: !0,
            category: n.Account
        }),
        i(r, s.HeadshotFace, {
            texture: "headshot-face.img",
            sound: "emote_01",
            teamOnly: !1,
            accountLogin: !0,
            category: n.Account
        }),
        i(r, s.Potato, {
            texture: "potato.img",
            sound: "emote_01",
            teamOnly: !1,
            accountLogin: !0,
            category: n.Account
        }),
        i(r, s.Leek, {
            texture: "leek.img",
            sound: "emote_01",
            teamOnly: !1,
            accountLogin: !0,
            category: n.Account
        }),
        i(r, s.Eggplant, {
            texture: "eggplant.img",
            sound: "emote_01",
            teamOnly: !1,
            accountLogin: !0,
            category: n.Account
        }),
        i(r, s.Baguette, {
            texture: "baguette.img",
            sound: "emote_01",
            teamOnly: !1,
            accountLogin: !0,
            category: n.Account
        }),
        i(r, s.Chick, {
            texture: "chick.img",
            sound: "emote_01",
            teamOnly: !1,
            accountLogin: !0,
            category: n.Account
        }),
        i(r, s.Ammo50AE, {
            texture: "ammo-50AE.img",
            sound: "emote_01",
            teamOnly: !0,
            category: n.Locked
        }),
        i(r, s.FlagBolivia, {
            texture: "bolivia.img",
            sound: "emote_01",
            teamOnly: !1,
            facebookLike: !0,
            category: n.Facebook
        }),
        i(r, s.FlagCroatia, {
            texture: "croatia.img",
            sound: "emote_01",
            teamOnly: !1,
            facebookLike: !0,
            category: n.Facebook
        }),
        i(r, s.FlagIndia, {
            texture: "india.img",
            sound: "emote_01",
            teamOnly: !1,
            facebookLike: !0,
            category: n.Facebook
        }),
        i(r, s.FlagIsrael, {
            texture: "israel.img",
            sound: "emote_01",
            teamOnly: !1,
            facebookLike: !0,
            category: n.Facebook
        }),
        i(r, s.FlagGeorgia, {
            texture: "georgia.img",
            sound: "emote_01",
            teamOnly: !1,
            facebookLike: !0,
            category: n.Facebook
        }),
        i(r, s.FlagGreece, {
            texture: "greece.img",
            sound: "emote_01",
            teamOnly: !1,
            facebookLike: !0,
            category: n.Facebook
        }),
        i(r, s.FlagGuatemala, {
            texture: "guatemala.img",
            sound: "emote_01",
            teamOnly: !1,
            facebookLike: !0,
            category: n.Facebook
        }),
        i(r, s.FlagPortugal, {
            texture: "portugal.img",
            sound: "emote_01",
            teamOnly: !1,
            facebookLike: !0,
            category: n.Facebook
        }),
        i(r, s.FlagSerbia, {
            texture: "serbia.img",
            sound: "emote_01",
            teamOnly: !1,
            facebookLike: !0,
            category: n.Facebook
        }),
        i(r, s.FlagSingapore, {
            texture: "singapore.img",
            sound: "emote_01",
            teamOnly: !1,
            facebookLike: !0,
            category: n.Facebook
        }),
        i(r, s.FlagTrinidad, {
            texture: "trinidad-and-tobago.img",
            sound: "emote_01",
            teamOnly: !1,
            facebookLike: !0,
            category: n.Facebook
        }),
        i(r, s.FlagUruguay, {
            texture: "uruguay.img",
            sound: "emote_01",
            teamOnly: !1,
            facebookLike: !0,
            category: n.Facebook
        }),
        i(r, s.LogoConch, {
            texture: "logo-conch.img",
            sound: "emote_01",
            teamOnly: !1,
            category: n.Default
        }),
        i(r, s.Pineapple, {
            texture: "pineapple.img",
            sound: "emote_01",
            teamOnly: !1,
            accountLogin: !0,
            category: n.Account
        }),
        i(r, s.Coconut, {
            texture: "coconut.img",
            sound: "emote_01",
            teamOnly: !1,
            accountLogin: !0,
            category: n.Account
        }),
        i(r, s.Crab, {
            texture: "crab.img",
            sound: "emote_01",
            teamOnly: !1,
            accountLogin: !0,
            category: n.Account
        }),
        i(r, s.Whale, {
            texture: "whale.img",
            sound: "emote_01",
            teamOnly: !1,
            accountLogin: !0,
            category: n.Account
        }),
        i(r, s.LogoMeteor, {
            texture: "logo-meteor.img",
            sound: "emote_01",
            teamOnly: !1,
            category: n.Default
        }),
        i(r, s.Ammo308sub, {
            texture: "ammo-308sub.img",
            sound: "emote_01",
            teamOnly: !0,
            category: n.Locked
        }),
        i(r, s.AmmoFlare, {
            texture: "ammo-flare.img",
            sound: "emote_01",
            teamOnly: !0,
            category: n.Locked
        }),
        i(r, s.Salt, {
            texture: "salt.img",
            sound: "emote_01",
            teamOnly: !1,
            twitterFollow: !0,
            category: n.Twitter
        }),
        i(r, s.DisappointFace, {
            texture: "disappoint-face.img",
            sound: "emote_01",
            teamOnly: !1,
            youtubeSubscribe: !0,
            category: n.YouTube
        }),
        r);
        e.exports = {
            EmoteSlot: o,
            EmoteType: s,
            EmoteData: l
        }
    },
    bc83ef37: function(e, t, a) {
        "use strict";
        function i() {
            this.sprite = new o.Sprite,
            this.sprite.anchor.set(.5, .5),
            this.sprite.visible = !1
        }
        function r() {
            this.nt = new u.Pool(i)
        }
        var o = a("80ac57a6")
          , n = a("989ad62a")
          , s = a("ceee80d9")
          , l = a("6b42806d")
          , m = a("10899aea")
          , c = a("1901e2d9")
          , d = a("c2a798c8")
          , p = a("c73dee75")
          , u = (a("ce29f17f"),
        a("af8ba00f"),
        a("753d6e4b"))
          , h = {
            grass: "frag_grass",
            sand: "frag_sand",
            water: "frag_water"
        };
        i.prototype = {
            a: function() {},
            o: function() {
                this.sprite.visible = !1
            },
            n: function(e, t, a, i) {
                var r = this.sprite;
                if (t) {
                    var s = n.items[e.type];
                    this.layer = e.layer,
                    this.type = e.type,
                    this.rad = s.projRad
                }
                if (this.posOld = a ? d.copy(e.pos) : d.copy(this.pos),
                this.posZOld = a ? e.posZ : this.posZ,
                this.pos = d.copy(e.pos),
                this.posZ = e.posZ,
                a) {
                    var l = n.items[e.type]
                      , m = l.worldImg;
                    this.imgScale = m.scale,
                    this.rot = 0,
                    this.rotVel = 10 * Math.PI,
                    this.rotDrag = c.random(1, 2),
                    this.velZ = 0,
                    this.grounded = !1,
                    this.inWater = !1,
                    this.lastSoundObjId = 0,
                    r.texture = o.Texture.fromImage(m.sprite),
                    r.tint = m.tint,
                    r.alpha = 1,
                    r.visible = !0
                }
            }
        },
        r.prototype = {
            l: function(e, t, a, i, r, o, u) {
                for (var g = this.nt.m(), y = 0; y < g.length; y++) {
                    var f = g[y];
                    if (f.active) {
                        var x = (n.items[f.type],
                        f.rotDrag * (f.inWater ? 3 : 1));
                        f.rotVel *= 1 / (1 + e * x),
                        f.rot += f.rotVel * e;
                        for (var w = {
                            obj: null,
                            pen: 0
                        }, b = {
                            obj: null,
                            pen: 0
                        }, _ = l.createCircle(f.pos, f.rad), v = r.Y.m(), S = 0; S < v.length; S++) {
                            var k = v[S];
                            if (k.active && !k.dead && c.sameLayer(k.layer, f.layer)) {
                                var z = l.intersect(k.collider, _);
                                if (z) {
                                    var M = k.height > f.posZ ? w : b;
                                    z.pen > M.pen && (!M.obj || M.obj.height <= k.height) && (M.obj = k,
                                    M.pen = z.pen)
                                }
                            }
                        }
                        var T = d.div(d.sub(f.pos, f.posOld), e)
                          , P = d.length(T);
                        if (w.obj && w.obj.__id != f.lastSoundObjId && P > 7.5) {
                            f.lastSoundObjId = w.obj.__id;
                            var C = d.mul(d.normalizeSafe(T, d.create(1, 0)), -1)
                              , A = s.Defs[w.obj.type];
                            p.playHitFx(A.hitParticle, A.sound.bullet, f.pos, C, f.layer, t, a)
                        }
                        var I = r.getGroundSurface(f.pos, f.layer);
                        f.posZ <= .01 && !f.inWater && "water" == I && (r.addRipple(f.pos, f.layer, 0),
                        f.inWater = !0);
                        var D = f.velZ;
                        if (f.velZ = (f.posZ - f.posZOld) / e,
                        !f.isNew && !f.grounded && f.velZ >= 0 && D < 0) {
                            var O = {
                                fn: "playGroup",
                                channel: "hits",
                                name: ""
                            };
                            if (b.obj) {
                                if (f.lastSoundObjId != b.obj.__id) {
                                    f.lastSoundObjId = b.obj.__id;
                                    var E = s.Defs[b.obj.type];
                                    O.name = E.sound.bullet
                                }
                            } else
                                f.grounded = !0,
                                O.name = h[I],
                                void 0 === O.name && (O.name = "footstep_" + I,
                                O.fn = "playGroup",
                                O.channel = "sfx");
                            "" != O.name && a[O.fn](O.name, {
                                channel: O.channel,
                                soundPos: f.pos,
                                layer: f.layer,
                                muffled: !0
                            })
                        }
                        var L = f.layer
                          , B = f.posZ < .25 ? 14 : 25
                          , F = l.createCircle(f.pos, 3 * f.rad)
                          , R = r.insideStructureStairs(F)
                          , j = r.insideStructureMask(F);
                        !(f.posZ >= .25 && R && (1 & f.layer) == (1 & i.layer)) || j && 2 & i.layer || (L |= 2,
                        B += 100),
                        o.addPIXIObj(f.sprite, L, B);
                        var q = f.imgScale * m.remap(f.posZ, 0, n.projectile.maxHeight, 1, 2.5)
                          , N = u.pointToScreen(f.pos)
                          , G = u.pixels(q);
                        f.sprite.position.set(N.x, N.y),
                        f.sprite.scale.set(G, G),
                        f.sprite.rotation = f.rot,
                        f.sprite.alpha = f.inWater ? .3 : 1
                    }
                }
            }
        },
        e.exports = {
            Le: r
        }
    },
    bdd2570b: function(e, t, a) {
        "use strict";
        var i = {
            "@metadata": {
                "last-updated": "2018-02-12",
                locale: "nl"
            },
            "word-order": "sov",
            "index-create-account": "Maak een account",
            "index-set-account-name": "Stel je account naam vast",
            "index-enter-name": "Voer je naam in",
            "index-finish": "Voltooid",
            "index-delete-account": "Verwijder je account",
            "index-delete-account-desc": 'Voer "DELETE" in om je account te verwijderen:',
            "index-confirm": "Bevestig",
            "index-customize-avatar": "Pas je avatar aan",
            "index-done": "Klaar",
            "index-account": "Account",
            "index-log-in-with": "Log in met",
            "index-facebook": "Facebook",
            "index-google": "Google",
            "index-twitch": "Twitch",
            "index-discord": "Discord",
            "index-my-stats": "Mijn statistieken",
            "index-link-account": "Koppel Account",
            "index-log-out": "Log uit",
            "index-change-avatar": "Verander je avatar",
            "index-change-account-name": "Verander je account naam",
            "index-back": "Terug",
            "index-link-account-to": "Koppel account aan",
            "index-log-in-desc": "Log in!",
            "index-logging-in": "Aan het inloggen",
            "index-leaderboards": "Scoreborden",
            "index-slogan": "2d Battle Royale",
            "index-region": "Regio",
            "index-north-america": "Noord-Amerika",
            "index-europe": "Europa",
            "index-asia": "Azië",
            "index-players": "spelers",
            "index-play-solo": "Speel Alleen",
            "index-play-duo": "Team van 2",
            "index-play-squad": "Team van 4",
            "index-create-team": "Maak een Team",
            "index-how-to-play": "Hoe te spelen",
            "index-leave-team": "Verlaat Team",
            "index-joining-team": "Aansluiten bij een Team",
            "index-creating-team": "Team aan het maken",
            "index-invite-link": "Uitnodigings Link",
            "index-solo": "Solo",
            "index-duo": "Team van 2",
            "index-squad": "Team van 4",
            "index-auto-fill": "Vullen",
            "index-no-fill": "Niet vullen",
            "index-waiting-for-leader": "Wachten op de leider om te beginnen",
            "index-play": "Speel",
            "index-featured-youtuber": "Aanbevolen Youtuber",
            "index-settings": "Opties",
            "index-high-resolution": "Hoge resolutie (Controleer verhogen van kwaliteit)",
            "index-screen-shake": "Scherm schudden",
            "index-mobile-announce": "Nu beschikbaar op mobiel!",
            "index-team-is-full": "Team is vol!",
            "index-failed-joining-team": "Gefaald aan te sluiten tot team.",
            "index-failed-creating-team": "Gefaald om team aan te maken.",
            "index-failed-finding-game": "Gefaald om een team te vinden.",
            "index-failed-joining-game": "Gefaald aan te sluiten tot team.",
            "index-lost-connection": "Connectie verloren met team.",
            "index-host-closed": "Gastheer heeft de connectie gesloten.",
            "index-view-more": "Bekijk meer",
            "index-back-to-main": "Terug naar het hoofdmenu",
            "index-most-kills": "Meeste kills",
            "index-total-kills": "Totale kills",
            "index-total-wins": "Totaal keer gewonnen",
            "index-top-5-percent": "Top 5 procent",
            "index-kill-death-ratio": "Kill-dood verhouding",
            "index-for": "Van",
            "index-today": "Vandaag",
            "index-this-week": "Deze week",
            "index-all-time": "Altijd",
            "index-top-100": "TOP 100",
            "index-rank": "Rang",
            "index-player": "Speler",
            "index-total-games": "Totale spellen",
            "index-controls": "Besturing",
            "index-movement": "Beweging",
            "index-movement-ctrl": "W, A, S, D",
            "index-aim": "Richten",
            "index-aim-ctrl": "Muis",
            "index-punch": "Slaan",
            "index-shoot": "Schieten",
            "index-shoot-ctrl": "Linker Klik",
            "index-change-weapons": "Verander wapens",
            "index-change-weapons-ctrl": "1 - 4 of muis wieltje",
            "index-stow-weapons": "Verberg Wapens (Slaan modus)",
            "index-stow-weapons-ctrl": "3 of E",
            "index-swap-weapons": "Ruil naar vorig wapen",
            "index-swap-weapons-ctrl": "Q",
            "index-reload": "Herladen",
            "index-reload-ctrl": "R",
            "index-scope-zoom": "Zoombereik",
            "index-scope-zoom-ctrl": "Linker Klik op Zoom",
            "index-pickup": "Oppakken",
            "index-loot": "Buit",
            "index-revive": "Opknappen",
            "index-pickup-ctrl": "F",
            "index-use-medical": "Gebruik Medisch Item",
            "index-use-medical-ctrl": "Linker Klik op Item of 7 - 0",
            "index-drop-item": "Laat item vallen",
            "index-drop-item-ctrl": "Rechter klik op item",
            "index-cancel-action": "Annuleer Actie",
            "index-cancel-action-ctrl": "X",
            "index-view-map": "Bekijk kaart",
            "index-view-map-ctrl": "M of G",
            "index-toggle-minimap": "Verberg HUD",
            "index-toggle-minimap-ctrl": "V",
            "index-use-ping": "Gebruik Team ping-wiel",
            "index-use-ping-ctrl": "Houd C ingedrukt, houd daarna Recht klik ingedrukt en sleep muis, laat daarna Recht klik los",
            "index-use-emote": "Gebruik Gevoelens Wiel",
            "index-use-emote-ctrl": "Houd Recht klik ingedrukt en sleep muis, laat daarna Recht klik los",
            "index-tips-1-desc": "Het doel van surviv.io is het zijn van de laatste levende speler. Je leeft maar 1 keer per spel - er is geen respawn!",
            "index-tips-2": "2D PUBG",
            "index-tips-2-desc": "Als je andere battle royale spellen zoals PUBG, Fortnite of H1Z1 hebt gespeeld, dan ben je al halverwege! Denk maar dat surviv.io een 2D PUBG is.",
            "index-tips-3": "Pak spullen en kill",
            "index-tips-3-desc": "Je begint het spel met geen items behalve een simpele rugtas. Beweeg door de map om buit te vinden: wapens, ammunitie, scopes en medische items. Vermoord andere spelers en pak hun spullen!",
            "index-tips-4": "Rood = Slecht!",
            "index-tips-4-desc": "Spelers zijn niet de enige die je pijn kunnen doen. De dodelijke rode zone zal insluiten vanuit de zijkanten van de map en zal je enorm veel schade aanrichten als je er in staat. Houd een oog open op de kaart en blijf veilig.",
            "game-alive": "In leven",
            "game-reloading": "Herladen",
            "game-using": "aan het gebruiken",
            "game-reviving": "aan het bijbrengen",
            "game-revive-teammate": "Knap Teamgenoot op",
            "game-equip": "Uitrusten",
            "game-cancel": "Annuleren",
            "game-You": "You",
            "game-you": "you",
            "game-themselves": "themselves",
            "game-yourself": "yourself",
            "game-you-died": "died",
            "game-player-died": "died",
            "game-with": "with",
            "game-knocked-out": "knocked out",
            "game-killed": "killed",
            "game-finally-killed": "finally killed",
            "game-finally-bled-out": "finally bled out",
            "game-died-outside": "died outside the safe zone",
            "game-the-red-zone": "The red zone",
            "game-waiting-for-players": "Aan het wachten voor spelers",
            "game-spectating": "Toeschouwen,",
            "game-red-zone-advances": "Rode zone vordert in",
            "game-red-zone-advancing": "Rode zone vordert, ga naar de veilige zone!",
            "game-seconds": "seconden",
            "game-minutes": "minuten",
            "game-minute": "minuut",
            "game-m": "m",
            "game-s": "s",
            "game-not-enough-space": "Niet genoeg plaats!",
            "game-item-already-owned": "Item is al in bezit!",
            "game-item-already-equipped": "Item is al uitgerust!",
            "game-better-item-equipped": "Beter item uitgerust!",
            "game-play-new-game": "Speel nieuw spel",
            "game-spectate": "Toeschouwen",
            "game-full-screen": "Vol scherm",
            "game-sound": "Geluid",
            "game-quit-game": "Stop met spelen",
            "game-return-to-game": "Keer terug naar spel",
            "game-hide-match-stats": "Verberg wedstrijd statistieken",
            "game-view-match-stats": "Zie wedstrijd statistieken",
            "game-previous-teammate": "Vorige Teamgenoot",
            "game-next-teammate": "Volgende Teamgenoot",
            "game-spectate-previous": "",
            "game-spectate-next": "",
            "game-leave-game": "Verlaat spel",
            "game-your-results": "Jouw resultaten",
            "game-chicken": "Gewonnen! Vanavond eten we kip!",
            "game-won-the-game": "heeft het spel gewonnen.",
            "game-team-eliminated": "Jouw team is uitgeschakeld.",
            "game-rank": "Rang",
            "game-team-rank": "Team Rang",
            "game-team-kills": "Team Kills",
            "game-kill": "Kill",
            "game-kills": "Kills",
            "game-damage-dealt": "Schade aangericht",
            "game-damage-taken": "Schade opgelopen",
            "game-survived": "Overleefd",
            "game-backpack00": "Zak",
            "game-backpack01": "Kleine rugtas",
            "game-backpack02": "Normale rugtas",
            "game-backpack03": "Militaire rugtas",
            "game-bandage": "Verband",
            "game-bandage-tooltip": "Linker klik om 15 gezondheid te herstellen.",
            "game-healing-tooltip": "Kan niet meer dan 75 gezondheid herstellen.",
            "game-healthkit": "Verbandstrommel",
            "game-healthkit-tooltip": "Linker klik om 100 gezondheid te herstellen.",
            "game-soda": "Frisdrank",
            "game-soda-tooltip": "Linker klik om je adrenaline met 25 te stimuleren.",
            "game-adrenaline-tooltip": "Adrenaline herstelt gezondheid na een tijdje.",
            "game-painkiller": "Pillen",
            "game-painkiller-tooltip": "Linker klik om je adrenaline met 50 te stimuleren.",
            "game-9mm": "9mm",
            "game-9mm-tooltip": "Ammunitie voor M9, G18C, MP5, MAC-10, UMP9 en Vector.",
            "game-12gauge": "12 gauge",
            "game-12gauge-tooltip": "Ammunitie voor M870, SPAS-12, Saiga-12 en MP220.",
            "game-762mm": "7.62mm",
            "game-762mm-tooltip": "Ammunitie voor AK-47, SCAR-H, M39, Mosin-Nagant, SV-98, M1, OT-38 en DP-28.",
            "game-556mm": "5.56mm",
            "game-556mm-tooltip": "Ammunitie voor FAMAS, M416, QBB-97, Mk 12 en M249.",
            "game-50AE": ".50 AE",
            "game-50AE-tooltip": "Ammunitie voor Desert Eagle.",
            "game-308sub": ".308 Subsonic",
            "game-308sub-tooltip": "Ammunitie voor AWM-S.",
            "game-flare": "Flare",
            "game-flare-tooltip": "Ammunitie voor Flare Gun.",
            "game-chest01": "Level 1 Armor",
            "game-chest02": "Level 2 Armor",
            "game-chest03": "Level 3 Armor",
            "game-helmet01": "Level 1 Helm",
            "game-helmet02": "Level 2 Helm",
            "game-helmet03": "Level 3 Helm",
            "game-1xscope": "1x Scope",
            "game-2xscope": "2x Scope",
            "game-4xscope": "4x Scope",
            "game-8xscope": "8x Scope",
            "game-15xscope": "15x Scope",
            "game-level-1": "Lvl. 1",
            "game-level-2": "Lvl. 2",
            "game-level-3": "Lvl. 3",
            "game-outfitBase": "Basis Outfit",
            "game-outfitRoyalFortune": "Koninklijk Fortuin",
            "game-outfitKeyLime": "Limoen",
            "game-outfitCobaltShell": "Kobalt schelp",
            "game-outfitCarbonFiber": "Koolstofvezel",
            "game-outfitDarkGloves": "De Professional",
            "game-outfitGhillie": "Ghillie Kostuum",
            "game-outfitCamo": "Bos Camouflage",
            "game-outfitRed": "Doelpraktijk",
            "game-outfitWhite": "Arctische Wreker",
            "game-fists": "Punch",
            "game-ak47": "AK-47",
            "game-dp28": "DP-28",
            "game-mosin": "Mosin-Nagant",
            "game-m39": "M39 EMR",
            "game-mp5": "MP5",
            "game-mac10": "MAC-10",
            "game-ump9": "UMP9",
            "game-m870": "M870",
            "game-mp220": "MP220",
            "game-saiga": "Saiga-12",
            "game-m9": "M9",
            "game-glock": "G18C",
            "game-ot38": "OT-38",
            "game-frag": "Frag Granaat",
            "game-hud-frag": "Frag",
            "game-smoke": "Smoke Grenade",
            "game-hud-smoke": "Smoke",
            "game-barrel_01": "een vat",
            "game-silo_01": "een silo",
            "game-oven_01": "een oven"
        };
        e.exports = i
    },
    c2a798c8: function(e, t, a) {
        "use strict";
        var i = {
            create: function(e, t) {
                return {
                    x: e,
                    y: void 0 !== t ? t : e
                }
            },
            copy: function(e) {
                return {
                    x: e.x,
                    y: e.y
                }
            },
            set: function(e, t) {
                e.x = t.x,
                e.y = t.y
            },
            add: function(e, t) {
                return {
                    x: e.x + t.x,
                    y: e.y + t.y
                }
            },
            sub: function(e, t) {
                return {
                    x: e.x - t.x,
                    y: e.y - t.y
                }
            },
            mul: function(e, t) {
                return {
                    x: e.x * t,
                    y: e.y * t
                }
            },
            div: function(e, t) {
                return {
                    x: e.x / t,
                    y: e.y / t
                }
            },
            neg: function(e) {
                return {
                    x: -e.x,
                    y: -e.y
                }
            },
            lengthSqr: function(e) {
                return e.x * e.x + e.y * e.y
            },
            length: function(e) {
                return Math.sqrt(i.lengthSqr(e))
            },
            normalize: function(e) {
                var t = i.length(e);
                return {
                    x: t > 1e-6 ? e.x / t : e.x,
                    y: t > 1e-6 ? e.y / t : e.y
                }
            },
            normalizeSafe: function(e, t) {
                t = t || i.create(1, 0);
                var a = i.length(e);
                return {
                    x: a > 1e-6 ? e.x / a : t.x,
                    y: a > 1e-6 ? e.y / a : t.y
                }
            },
            dot: function(e, t) {
                return e.x * t.x + e.y * t.y
            },
            perp: function(e) {
                return {
                    x: -e.y,
                    y: e.x
                }
            },
            proj: function(e, t) {
                return i.mul(t, i.dot(e, t) / i.dot(t, t))
            },
            rotate: function(e, t) {
                var a = Math.cos(t)
                  , i = Math.sin(t);
                return {
                    x: e.x * a - e.y * i,
                    y: e.x * i + e.y * a
                }
            },
            mulElems: function(e, t) {
                return {
                    x: e.x * t.x,
                    y: e.y * t.y
                }
            },
            divElems: function(e, t) {
                return {
                    x: e.x / t.x,
                    y: e.y / t.y
                }
            },
            minElems: function(e, t) {
                return {
                    x: Math.min(e.x, t.x),
                    y: Math.min(e.y, t.y)
                }
            },
            maxElems: function(e, t) {
                return {
                    x: Math.max(e.x, t.x),
                    y: Math.max(e.y, t.y)
                }
            },
            randomUnit: function() {
                return i.normalizeSafe(i.create(Math.random() - .5, Math.random() - .5), i.create(1, 0))
            },
            lerp: function(e, t, a) {
                return i.add(i.mul(t, 1 - e), i.mul(a, e))
            },
            eq: function(e, t, a) {
                var i = void 0 !== a ? a : 1e-4;
                return Math.abs(e.x - t.x) <= i && Math.abs(e.y - t.y) <= i
            }
        };
        e.exports = i
    },
    c347b8dd: function(e, t, a) {
        "use strict";
        function i(e) {
            var t = o.Defs[e.type];
            if (void 0 !== t.terrain.waterEdge) {
                var a = t.terrain.waterEdge
                  , i = r.transform(o.getBoundingCollider(e.type), e.pos, e.rot, 1.15 * e.scale)
                  , l = n.add(i.min, n.mul(n.sub(i.max, i.min), .5))
                  , m = n.rotate(a.dir, e.rot)
                  , c = function(e, t, a) {
                    a < 0 && (t = n.neg(t)),
                    s.addRay(e, t, Math.abs(a), 16777215, 0)
                };
                c(l, m, a.distMin),
                c(n.add(l, n.mul(n.perp(m), .5)), m, a.distMax)
            }
        }
        var r = a("6b42806d")
          , o = a("ceee80d9")
          , n = a("c2a798c8")
          , s = a("af8ba00f");
        e.exports = {
            renderWaterEdge: i
        }
    },
    c4623452: function(e, t, a) {
        "use strict";
        function i(e, t) {
            if (!(e instanceof t))
                throw new TypeError("Cannot call a class as a function")
        }
        var r = function() {
            function e(e, t) {
                for (var a = 0; a < t.length; a++) {
                    var i = t[a];
                    i.enumerable = i.enumerable || !1,
                    i.configurable = !0,
                    "value"in i && (i.writable = !0),
                    Object.defineProperty(e, i.key, i)
                }
            }
            return function(t, a, i) {
                return a && e(t.prototype, a),
                i && e(t, i),
                t
            }
        }()
          , o = a("26be8056")
          , n = [{
            region: "na",
            zone: "sfo",
            url: "na-sfo-p1.surviv.io"
        }, {
            region: "na",
            zone: "mia",
            url: "na-mia-p1.surviv.io"
        }, {
            region: "na",
            zone: "nyc",
            url: "na-nyc-p1.surviv.io"
        }, {
            region: "na",
            zone: "chi",
            url: "na-chi-p1.surviv.io"
        }, {
            region: "na",
            zone: "sao",
            url: "na-sao-p1.surviv.io"
        }, {
            region: "eu",
            zone: "fra",
            url: "eu-fra-p1.surviv.io"
        }, {
            region: "eu",
            zone: "waw",
            url: "eu-waw-p1.surviv.io"
        }, {
            region: "as",
            zone: "sgp",
            url: "as-sgp-p1.surviv.io"
        }, {
            region: "as",
            zone: "nrt",
            url: "as-nrt-p1.surviv.io"
        }, {
            region: "as",
            zone: "hkg",
            url: "as-hkg-p1.surviv.io"
        }]
          , s = function() {
            function e() {
                i(this, e),
                this.ptcDataBuf = new ArrayBuffer(1),
                this.tests = n.map(function(e) {
                    return {
                        region: e.region,
                        zone: e.zone,
                        url: e.url,
                        ping: 9999,
                        active: !1,
                        ws: null,
                        sendDelay: 0,
                        sendTime: 0,
                        sendCount: 0,
                        recvCount: 0
                    }
                })
            }
            return r(e, [{
                key: "start",
                value: function(e) {
                    if ("WebSocket"in window)
                        for (var t = 0; t < this.tests.length; t++) {
                            var a = this.tests[t];
                            a.active = a.region == e
                        }
                }
            }, {
                key: "update",
                value: function(e) {
                    for (var t = this, a = 0; a < this.tests.length; a++)
                        !function(a) {
                            var i = t.tests[a];
                            if (!i.active)
                                return "continue";
                            if (!i.ws) {
                                var r = "https:" == window.location.protocol ? "wss://" : "ws://"
                                  , n = new WebSocket(r + i.url + "/ptc");
                                n.binaryType = "arraybuffer",
                                n.onopen = function() {}
                                ,
                                n.onmessage = function(e) {
                                    var t = (Date.now() - i.sendTime) / 1e3;
                                    i.ping = Math.min(i.ping, t),
                                    i.recvCount++,
                                    i.sendDelay = .125,
                                    o.logDebug() && console.log("Ptc recv", i.url, t)
                                }
                                ,
                                n.onerror = function(e) {
                                    n.close()
                                }
                                ,
                                n.onclose = function() {
                                    o.logDebug() && console.log("Ptc complete", i.url, i.ping),
                                    i.active = !1,
                                    i.ws = null
                                }
                                ,
                                i.ws = n,
                                i.sendDelay = 0,
                                i.sendCount = 0,
                                i.recvCount = 0
                            }
                            i.ws.readyState == i.ws.OPEN && (i.sendDelay -= e,
                            i.sendCount == i.recvCount && i.sendDelay < 0 && (i.sendTime = Date.now(),
                            i.sendCount++,
                            i.ws.send(t.ptcDataBuf)),
                            i.recvCount >= 6 && i.ws.close())
                        }(a)
                }
            }, {
                key: "getZones",
                value: function(e) {
                    for (var t = this.tests.sort(function(e, t) {
                        return e.ping - t.ping
                    }), a = [], i = 0; i < t.length; i++) {
                        var r = t[i];
                        r.region == e && a.push(r.zone)
                    }
                    return a
                }
            }]),
            e
        }();
        e.exports = s
    },
    c60b5e9f: function(e, t, a) {
        "use strict";
        function i(e, t) {
            if (!(e instanceof t))
                throw new TypeError("Cannot call a class as a function")
        }
        function r(e, t) {
            if (!e)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !t || "object" != typeof t && "function" != typeof t ? e : t
        }
        function o(e, t) {
            if ("function" != typeof t && null !== t)
                throw new TypeError("Super expression must either be null or a function, not " + typeof t);
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
        }
        function n(e, t, a) {
            var i = t - e
              , r = i * a;
            return Math.abs(r) < .01 ? i : r
        }
        function s(e) {
            this.canvasMode = e,
            this.zIdx = 0,
            this.layer = 0,
            this.layerAlpha = 0,
            this.groundAlpha = 0,
            this.layers = [];
            for (var t = 0; t < 4; t++)
                this.layers.push(new u("layer_" + t));
            this.ground = new c.Graphics,
            this.ground.alpha = 0,
            this.layerMask = new c.Graphics,
            this.layerMask.position.set(0, 0),
            this.layerMask.scale.set(1, 1),
            this.layerMask.__zOrd = 0,
            this.layerMask.__zIdx = 0,
            this.layerMaskDirty = !0,
            this.layerMaskActive = !1
        }
        var l = function() {
            function e(e, t) {
                for (var a = 0; a < t.length; a++) {
                    var i = t[a];
                    i.enumerable = i.enumerable || !1,
                    i.configurable = !0,
                    "value"in i && (i.writable = !0),
                    Object.defineProperty(e, i.key, i)
                }
            }
            return function(t, a, i) {
                return a && e(t.prototype, a),
                i && e(t, i),
                t
            }
        }()
          , m = function e(t, a, i) {
            null === t && (t = Function.prototype);
            var r = Object.getOwnPropertyDescriptor(t, a);
            if (void 0 === r) {
                var o = Object.getPrototypeOf(t);
                return null === o ? void 0 : e(o, a, i)
            }
            if ("value"in r)
                return r.value;
            var n = r.get;
            return void 0 !== n ? n.call(i) : void 0
        }
          , c = (a("0e566746"),
        a("80ac57a6"))
          , d = (a("6b42806d"),
        a("2bb110d0"))
          , p = (a("ceee80d9"),
        a("10899aea"),
        a("1901e2d9"),
        a("c2a798c8"))
          , u = function(e) {
            function t(e) {
                i(this, t);
                var a = r(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this));
                return a.debugName = e || "",
                a.dirty = !0,
                a
            }
            return o(t, e),
            l(t, [{
                key: "addSortedChild",
                value: function(e) {
                    m(t.prototype.__proto__ || Object.getPrototypeOf(t.prototype), "addChild", this).call(this, e),
                    this.dirty = !0
                }
            }, {
                key: "checkSort",
                value: function() {
                    return !!this.dirty && (this.children.sort(function(e, t) {
                        return e.__zOrd == t.__zOrd ? e.__zIdx - t.__zIdx : e.__zOrd - t.__zOrd
                    }),
                    this.dirty = !1,
                    !0)
                }
            }]),
            t
        }(c.Container);
        s.prototype = {
            o: function() {
                this.layerMask.parent && this.layerMask.parent.removeChild(this.layerMark),
                this.layerMask.destroy(!0)
            },
            addPIXIObj: function(e, t, a, i) {
                void 0 === e.__layerIdx && (e.__layerIdx = -1,
                e.__zOrd = -1,
                e.__zIdx = -1);
                var r = t;
                2 & t && (r = a >= 100 ? 3 : 2),
                (e.parent != this.layers[r] || e.__zOrd != a || void 0 !== i && e.__zIdx != i) && (e.__layerIdx = r,
                e.__zOrd = a,
                e.__zIdx = void 0 !== i ? i : this.zIdx++,
                this.layers[r].addSortedChild(e))
            },
            setActiveLayer: function(e) {
                this.layer = e
            },
            resize: function(e) {
                this.ground.clear(),
                this.ground.beginFill(d.underground),
                this.ground.drawRect(0, 0, e.screenWidth, e.screenHeight),
                this.ground.endFill(),
                this.layerMaskDirty = !0
            },
            redrawLayerMask: function(e, t) {
                var a = this.layerMask;
                if (this.canvasMode) {
                    if (a.clear(),
                    this.layerMaskActive) {
                        a.beginFill(16777215, 1),
                        a.drawRect(0, 0, e.screenWidth, e.screenHeight);
                        for (var i = t.ot.m(), r = 0; r < i.length; r++) {
                            var o = i[r];
                            if (o.active)
                                for (var n = 0; n < o.mask.length; n++) {
                                    var s = o.mask[n]
                                      , l = p.mul(p.sub(s.max, s.min), .5)
                                      , m = p.add(s.min, l)
                                      , c = e.pointToScreen(p.sub(m, l))
                                      , d = e.pointToScreen(p.add(m, l));
                                    a.drawRect(c.x, c.y, d.x - c.x, d.y - c.y)
                                }
                        }
                        a.endFill()
                    }
                } else {
                    if (this.layerMaskDirty) {
                        this.layerMaskDirty = !1,
                        a.clear(),
                        a.beginFill(16777215, 1),
                        a.drawRect(0, 0, e.screenWidth, e.screenHeight),
                        a.beginFill(0, 1);
                        for (var u = t.ot.m(), h = 0; h < u.length; h++) {
                            var g = u[h];
                            if (g.active)
                                for (var y = 0; y < g.mask.length; y++) {
                                    var f = g.mask[y]
                                      , x = p.mul(p.sub(f.max, f.min), .5)
                                      , w = p.add(f.min, x);
                                    a.drawRect(w.x - x.x, w.y - x.y, 2 * x.x, 2 * x.y)
                                }
                        }
                        a.endFill()
                    }
                    var b = e.pointToScreen(p.create(0, 0))
                      , _ = (e.pointToScreen(p.create(1, 0)),
                    e.scaleToScreen(1));
                    a.position.set(b.x, b.y),
                    a.scale.set(_, -_)
                }
            },
            l: function(e, t, a) {
                var i = this.layer > 0 ? 1 : 0;
                this.layerAlpha += n(this.layerAlpha, i, 12 * e);
                var r = 1 == this.layer ? 1 : 0;
                this.groundAlpha += n(this.groundAlpha, r, 12 * e),
                this.layers[0].alpha = 1,
                this.layers[1].alpha = this.layerAlpha,
                this.layers[2].alpha = 1,
                this.layers[3].alpha = 1,
                this.ground.alpha = this.groundAlpha,
                this.layers[0].visible = this.groundAlpha < 1,
                this.layers[1].visible = this.layerAlpha > 0,
                this.ground.visible = this.groundAlpha > 0,
                this.redrawLayerMask(t, a);
                var o = 0 == this.layer;
                o && !this.layerMaskActive ? (this.layers[2].mask = this.layerMask,
                this.layers[2].addChild(this.layerMask),
                this.layerMaskActive = !0) : !o && this.layerMaskActive && (this.layers[2].mask = null,
                this.layers[2].removeChild(this.layerMask),
                this.layerMaskActive = !1);
                for (var s = 0, l = 0; l < this.layers.length; l++)
                    this.layers[l].checkSort() && s++
            }
        },
        e.exports = {
            RenderGroup: u,
            ke: s
        }
    },
    c73dee75: function(e, t, a) {
        "use strict";
        function i(e, t, a, i) {
            var r = Math.atan2(i.y, i.x);
            return {
                p0: u.add(a, u.rotate(e, r)),
                p1: u.add(a, u.rotate(t, r))
            }
        }
        function r(e, t, a, i, r, o, n) {
            for (var s = Math.floor(p.random(1, 2)), l = u.mul(i, 9.5), m = 0; m < s; m++)
                l = u.rotate(l, (Math.random() - .5) * Math.PI / 3),
                o.addParticle(e, r, a, l);
            n.playGroup(t, {
                channel: "hits",
                soundPos: a,
                layer: r,
                muffled: !0
            })
        }
        function o() {
            this.bullets = []
        }
        var n = a("80ac57a6")
          , s = a("34e32c48")
          , l = a("6b42806d")
          , m = a("989ad62a")
          , c = (a("8649e148"),
        a("ceee80d9"))
          , d = a("10899aea")
          , p = a("1901e2d9")
          , u = a("c2a798c8");
        a("ce29f17f"),
        a("af8ba00f"),
        o.prototype = {
            addBullet: function(e, t, a) {
                for (var i = null, r = 0; r < this.bullets.length; r++)
                    if (!this.bullets[r].alive && !this.bullets[r].collided) {
                        i = this.bullets[r];
                        break
                    }
                i || (i = {},
                i.alive = !1,
                i.container = new n.Container,
                i.container.pivot.set(14.5, 0),
                i.container.visible = !1,
                i.bulletTrail = n.Sprite.fromImage("player-bullet-trail-02.img"),
                i.bulletTrail.anchor.set(.5, .5),
                i.container.addChild(i.bulletTrail),
                this.bullets.push(i));
                var o = m.bullets[e.bulletType]
                  , s = 1 + e.varianceT * o.variance
                  , l = d.remap(e.distAdjIdx, 0, 32, -1, 1)
                  , c = o.distance / Math.pow(m.bullet.reflectDistDecay, e.reflectCount);
                i.alive = !0,
                i.isNew = !0,
                i.collided = !1,
                i.scale = 1,
                i.playerId = e.playerId,
                i.startPos = u.copy(e.pos),
                i.pos = u.copy(e.pos),
                i.dir = u.copy(e.dir),
                i.layer = e.layer,
                i.speed = o.speed * s,
                i.distance = c * s + l,
                i.damageSelf = o.shrapnel || e.reflectCount > 0,
                i.reflectCount = e.reflectCount,
                i.reflectObjId = e.reflectObjId,
                i.whizHeard = !1,
                i.whizInstance = null;
                var p = Math.atan2(i.dir.x, i.dir.y);
                i.container.rotation = p - Math.PI / 2,
                i.layer = e.layer;
                var h = t.se(i.playerId);
                h && 2 & h.layer && (i.layer |= 2);
                var g = m.tracerColors[o.tracerColor]
                  , y = g.regular;
                h && h.isOnBrightSurface && (y = g.saturated),
                i.bulletTrail.scale.set(.8, o.tracerWidth),
                i.tracerLength = o.tracerLength,
                i.bulletTrail.tint = y,
                i.tracerAlphaRate = g.alphaRate,
                i.tracerAlphaMin = g.alphaMin,
                i.bulletTrail.alpha = 1,
                i.reflectCount > 0 && (i.bulletTrail.alpha *= .5),
                i.container.visible = !0,
                a.addPIXIObj(i.container, i.layer, 19)
            },
            l: function(e, t, a, o, n, h, g, y) {
                for (var f = t.tt.m(), x = 0; x < this.bullets.length; x++) {
                    var w = this.bullets[x];
                    if (w.collided && (w.scale = Math.max(w.scale - 6 * e, 0),
                    w.scale <= 0 && (w.collided = !1,
                    w.container.visible = !1)),
                    w.alive) {
                        var b = w.distance - u.length(u.sub(w.startPos, w.pos))
                          , _ = Math.min(b, e * w.speed)
                          , v = u.copy(w.pos);
                        if (w.pos = u.add(w.pos, u.mul(w.dir, _)),
                        !n.N.dead && p.sameAudioLayer(n.layer, w.layer)) {
                            var S = u.length(u.sub(o.pos, w.pos));
                            w.whizHeard && w.whizInstance || S < 7.5 && !w.whizHeard && w.playerId != n.__id && (w.whizInstance = y.playGroup("bullet_whiz", {
                                soundPos: w.pos,
                                fallOff: 4
                            }),
                            w.whizHeard = !0)
                        }
                        if (w.tracerAlphaRate) {
                            var k = (n.__id,
                            w.playerId,
                            n.__id == w.playerId ? w.tracerAlphaRate : .9 * w.tracerAlphaRate);
                            w.bulletTrail.alpha = Math.max(w.tracerAlphaMin, w.bulletTrail.alpha * k)
                        }
                        for (var z = [], M = a.Y.m(), T = 0; T < M.length; T++) {
                            var P = M[T];
                            if (!(!P.active || P.dead || !p.sameLayer(P.layer, w.layer) || P.height < m.bullet.height || w.reflectCount > 0 && P.__id == w.reflectObjId)) {
                                var C = l.intersectSegment(P.collider, v, w.pos);
                                C && z.push({
                                    type: "obstacle",
                                    obstacleType: P.type,
                                    collidable: P.collidable,
                                    point: C.point,
                                    normal: C.normal
                                })
                            }
                        }
                        for (var A = 0; A < f.length; A++) {
                            var I = f[A];
                            if (I.active && !I.N.dead && (p.sameLayer(I.N.layer, w.layer) || 2 & I.N.layer) && (I.__id != w.playerId || w.damageSelf)) {
                                var D = null;
                                if (I.hasActivePan()) {
                                    var O = I
                                      , E = O.getPanSegment()
                                      , L = i(E.p0, E.p1, O.posOld, O.dirOld)
                                      , B = i(E.p0, E.p1, O.pos, O.dir)
                                      , F = s.intersectSegmentSegment(v, w.pos, L.p0, L.p1)
                                      , R = s.intersectSegmentSegment(v, w.pos, B.p0, B.p1)
                                      , j = R || F;
                                    if (j) {
                                        var q = u.normalize(u.perp(u.sub(B.p1, B.p0)));
                                        D = {
                                            point: j.point,
                                            normal: q
                                        }
                                    }
                                }
                                var N = s.intersectSegmentCircle(v, w.pos, I.pos, m.player.radius);
                                if (N && (!D || u.length(u.sub(N.point, w.startPos)) < u.length(u.sub(D.point, w.startPos))) ? z.push({
                                    type: "player",
                                    player: I,
                                    point: N.point,
                                    normal: N.normal
                                }) : D && z.push({
                                    type: "pan",
                                    collidable: !0,
                                    point: D.point,
                                    normal: D.normal,
                                    layer: I.layer
                                }),
                                N || D)
                                    break
                            }
                        }
                        for (var G = 0; G < z.length; G++) {
                            var U = z[G];
                            U.dist = u.length(u.sub(U.point, v))
                        }
                        z.sort(function(e, t) {
                            return e.dist - t.dist
                        });
                        var V = !1
                          , H = t.se(w.playerId);
                        H && (H.N.dead || H.N.downed) && (V = !0);
                        for (var W = !1, K = 0; K < z.length; K++) {
                            var X = z[K];
                            if ("obstacle" == X.type) {
                                var Y = c.Defs[X.obstacleType];
                                r(Y.hitParticle, Y.sound.bullet, X.point, X.normal, w.layer, g, y),
                                W = X.collidable
                            } else if ("player" == X.type) {
                                if (!V) {
                                    var Z = X.player
                                      , Q = u.sub(X.point, Z.pos);
                                    Q.y *= -1,
                                    g.addParticle("bloodSplat", Z.layer, u.mul(Q, o.ppu), u.create(0, 0), 1, 1, Z.container),
                                    y.playGroup("player_bullet_hit", {
                                        soundPos: Z.pos,
                                        fallOff: 1,
                                        layer: Z.layer,
                                        muffled: !0
                                    })
                                }
                                W = !0
                            } else
                                "pan" == X.type && (r("barrelChip", m.items.pan.sound.bullet, X.point, X.normal, X.layer, g, y),
                                W = !0);
                            if (W) {
                                w.pos = X.point;
                                break
                            }
                        }
                        if (!(2 & w.layer)) {
                            for (var J = a.ot.m(), $ = w.layer, ee = 0; ee < J.length; ee++) {
                                var te = J[ee];
                                if (te.active) {
                                    for (var ae = !1, ie = !1, re = 0; re < te.stairs.length; re++)
                                        if (l.intersectSegment(te.stairs[re].collision, w.pos, v)) {
                                            ae = !0;
                                            break
                                        }
                                    for (var oe = 0; oe < te.mask.length; oe++)
                                        if (l.intersectSegment(te.mask[oe], w.pos, v)) {
                                            ie = !0;
                                            break
                                        }
                                    ae && !ie && ($ |= 2)
                                }
                            }
                            $ != w.layer && (w.layer = $,
                            h.addPIXIObj(w.container, w.layer, 19))
                        }
                        (W || d.eqAbs(b, _)) && (w.collided = !0,
                        w.alive = !1),
                        w.isNew = !1
                    }
                }
            },
            createBulletHit: function(e, t, a) {
                var i = e.se(t);
                i && a.playGroup("player_bullet_hit", {
                    soundPos: i.pos,
                    fallOff: 1,
                    layer: i.layer,
                    muffled: !0
                })
            },
            render: function(e) {
                for (var t = (e.pixels(1),
                0); t < this.bullets.length; t++) {
                    var a = this.bullets[t];
                    if (a.alive || a.collided) {
                        var i = u.length(u.sub(a.pos, a.startPos))
                          , r = e.pointToScreen(a.pos);
                        a.container.position.set(r.x, r.y);
                        var o = e.pixels(1)
                          , n = Math.min(15 * a.tracerLength, i / 2);
                        a.container.scale.set(o * n * a.scale, o)
                    }
                }
            }
        },
        e.exports = {
            Ie: o,
            playHitFx: r
        }
    },
    c99e6613: function(e, t, a) {
        "use strict";
        function i(e, t) {
            if (!(e instanceof t))
                throw new TypeError("Cannot call a class as a function")
        }
        function r() {
            this.gameCanvas = n("#cvs"),
            this.nameInput = n("#player-name-input-solo"),
            this.serverSelect = n("#server-select-main"),
            this.playSoloBtn = n("#btn-start-solo"),
            this.playDuoBtn = n("#btn-start-duo"),
            this.playSquadBtn = n("#btn-start-squad"),
            this.createTeamBtn = n("#btn-create-team"),
            this.joinTeamBtn = n("#btn-team-mobile-link-join"),
            this.leaveTeamBtn = n("#btn-team-leave"),
            this.muteBtns = n(".btn-sound-toggle"),
            this.masterSliders = n(".sl-master-volume"),
            this.soundSliders = n(".sl-sound-volume"),
            this.musicSliders = n(".sl-music-volume"),
            this.fullscreenBtn = n(".btn-fullscreen-toggle"),
            this.serverWarning = n("#server-warning"),
            this.languageSelect = n(".language-select"),
            this.startMenuWrapper = n("#start-menu-wrapper"),
            this.gameAreaWrapper = n("#game-area-wrapper"),
            this.config = new S,
            this.config.onModified = this.onConfigModified.bind(this),
            this.localization = new x,
            this.localization.setLocale("en"),
            this.localization.localizeIndex(),
            this.account = new d(this.config,this.localization),
            this.loadoutMenu = new f(this.config),
            this.pingTest = new w,
            this.audioManager = new p,
            this.teamMenu = new _(this.config,this.pingTest,this.localization,this.joinGame.bind(this),this.audioManager),
            this.teamMenu.onLeave = this.onTeamMenuLeave.bind(this),
            this.pixi = null,
            this.game = null,
            this.initialized = !1,
            this.active = !1,
            this.contextListener = function(e) {
                e.preventDefault()
            }
            ,
            this.errorMessage = "",
            this.errorCount = 0,
            this.playEnabled = !1,
            this.quickPlayPendingMode = 0,
            this.findGameTimeout = 0,
            this.playTimeout = 0,
            this.menuMusicIdx = 0,
            this.config.load(),
            this.pingTest.start(this.config.get("region"))
        }
        var o = function() {
            function e(e, t) {
                for (var a = 0; a < t.length; a++) {
                    var i = t[a];
                    i.enumerable = i.enumerable || !1,
                    i.configurable = !0,
                    "value"in i && (i.writable = !0),
                    Object.defineProperty(e, i.key, i)
                }
            }
            return function(t, a, i) {
                return a && e(t.prototype, a),
                i && e(t, i),
                t
            }
        }()
          , n = a("8ee62bea")
          , s = a("80ac57a6");
        s.utils.skipHello();
        var l = a("989ad62a")
          , m = a("10899aea")
          , c = a("300e2704")
          , d = a("a68e9107")
          , p = a("4b528868")
          , u = a("ce29f17f")
          , h = (a("e5d16b4d"),
        a("f398b7c7"))
          , g = a("9b5f96fd")
          , y = a("26be8056")
          , f = a("153d9481")
          , x = a("7d64d541")
          , w = (a("484b3444"),
        a("c4623452"))
          , b = a("076760a2")
          , _ = a("61fc98e9")
          , v = a("d3da5587")
          , S = function() {
            function e() {
                i(this, e),
                this.useLocalStorage = !0,
                this.config = {},
                this.onModified = null
            }
            return o(e, [{
                key: "load",
                value: function() {
                    var e = {};
                    try {
                        e = JSON.parse(localStorage.getItem("surviv_config"))
                    } catch (e) {
                        this.useLocalStorage = !1
                    }
                    var t = y.detectLanguage();
                    this.config = Object.assign({}, {
                        muteAudio: !1,
                        masterVolume: 1,
                        soundVolume: 1,
                        musicVolume: 1,
                        highResTex: !0,
                        screenShake: !0,
                        anonPlayerNames: !1,
                        touchMoveStyle: "locked",
                        touchAimStyle: "locked",
                        profile: null,
                        playerName: "",
                        region: "na",
                        teamMode: 4,
                        teamAutoFill: !0,
                        language: t || "en",
                        emoteTop: 6,
                        emoteRight: 4,
                        emoteBottom: 7,
                        emoteLeft: 5,
                        emoteWin: 1,
                        emoteDeath: 1,
                        twitterFollow: !1,
                        youtubeSubscribe: !1,
                        facebookLike: !1
                    }, e),
                    this.config.teamAutoFill = !0,
                    this.onModified && this.onModified()
                }
            }, {
                key: "store",
                value: function() {
                    if (this.useLocalStorage)
                        try {
                            localStorage.setItem("surviv_config", JSON.stringify(this.config))
                        } catch (e) {}
                }
            }, {
                key: "set",
                value: function(e, t) {
                    this.config[e] = t,
                    this.store(),
                    this.onModified && this.onModified(e)
                }
            }, {
                key: "get",
                value: function(e) {
                    return this.config[e]
                }
            }]),
            e
        }();
        r.prototype = {
            a: function() {
                var e = this
                  , t = this.audioManager
                  , a = this.config
                  , i = this.createTeamBtn
                  , r = this.fullscreenBtn
                  , o = this.joinTeamBtn
                  , l = this.leaveTeamBtn
                  , m = this.languageSelect
                  , d = (this.loadoutMenu,
                this.localization)
                  , p = this.muteBtns
                  , f = this.masterSliders
                  , x = this.musicSliders
                  , w = this.nameInput
                  , _ = this.playSoloBtn
                  , S = this.playDuoBtn
                  , k = this.playSquadBtn
                  , z = this.serverSelect
                  , M = this.soundSliders
                  , T = this.teamMenu;
                if (!this.initialized) {
                    if (w.maxLength = c.kNameMaxLen,
                    _.on("click", function() {
                        e.tryQuickStartGame(1)
                    }),
                    S.on("click", function() {
                        e.tryQuickStartGame(2)
                    }),
                    k.on("click", function() {
                        e.tryQuickStartGame(4)
                    }),
                    z.change(function() {
                        var t = z.find(":selected").val();
                        e.pingTest.start(t)
                    }),
                    n.ajax("/api/site_info?language=" + this.localization.getLocale()).done(function(t, a) {
                        e.siteInfo = t,
                        e.teamMenu.siteInfo = t;
                        var i = t.pops;
                        if (i)
                            for (var r = Object.keys(i), o = 0; o < r.length; o++) {
                                var s = r[o]
                                  , l = i[s]
                                  , m = n("#server-opts").children('option[value="' + s + '"]');
                                m.text(m.data("label") + " [" + l + "]")
                            }
                        var c = !1
                          , d = n("#featured-streamers")
                          , p = n(".streamer-list");
                        if (!u.mobile && t.twitch)
                            for (var h = 0; h < t.twitch.length; h++) {
                                var g = t.twitch[h]
                                  , y = n("#featured-streamer-template").clone();
                                y.attr("class", "featured-streamer streamer-tooltip").attr("id", "");
                                var f = y.find("a")
                                  , x = e.localization.translate(1 == g.viewers ? "index-viewer" : "index-viewers");
                                f.html(g.name + " <span>" + g.viewers + " " + x + "</span>"),
                                f.css("background-image", "url(" + g.img + ")"),
                                f.attr("href", g.url),
                                p.append(y),
                                c = !0
                            }
                        d.css("display", c ? "block" : "none");
                        var w = n("#featured-youtuber")
                          , b = t.youtube;
                        b && n(".btn-youtuber").attr("href", t.youtube.link).html(t.youtube.name),
                        w.css("display", b ? "block" : "none")
                    }),
                    w.on("blur", function(t) {
                        e.setConfigFromDOM()
                    }),
                    p.on("click", function() {
                        a.set("muteAudio", !a.get("muteAudio"))
                    }),
                    f.on("input", function() {
                        var e = n(this).val() / 100;
                        t.setMasterVolume(e),
                        a.set("masterVolume", e)
                    }),
                    M.on("input", function() {
                        var e = n(this).val() / 100;
                        t.setSoundVolume(e),
                        a.set("soundVolume", e)
                    }),
                    x.on("input", function() {
                        var e = n(this).val() / 100;
                        t.setMusicVolume(e),
                        a.set("musicVolume", e)
                    }),
                    n(".modal-settings-item").children("input").each(function(e, t) {
                        var i = n(t);
                        i.prop("checked", a.get(i.prop("id")))
                    }),
                    n(".modal-settings-item > input:checkbox").change(function(e) {
                        var t = n(e.target);
                        a.set(t.prop("id"), t.is(":checked"))
                    }),
                    r.on("click", function() {
                        y.toggleFullScreen()
                    }),
                    m.on("change", function() {
                        this.value && a.set("language", this.value)
                    }),
                    i.on("click", function() {
                        e.tryJoinTeam(!0)
                    }),
                    o.on("click", function() {
                        var t = n("#team-link-input").val()
                          , a = t.indexOf("#");
                        a >= 0 && (t = t.slice(a + 1)),
                        t.length > 0 ? (n("#team-mobile-link").css("display", "none"),
                        e.tryJoinTeam(!1, t)) : (n("#team-mobile-link-desc").css("display", "none"),
                        n("#team-mobile-link-warning").css("display", "none").fadeIn(100))
                    }),
                    l.on("click", function() {
                        window.history && window.history.replaceState("", "", "/"),
                        e.game && e.game.o(),
                        T.leave()
                    }),
                    "WebSocket"in window)
                        if (y.authLocation()) {
                            if (y.detectIE()) {
                                var P = 'Please use the <a href="https://www.google.com/chrome/browser/desktop/index.html" target="_blank">Chrome browser</a> for a better playing experience!';
                                P += '<br><br>¡Usa el <a href="https://www.google.com/chrome/browser/desktop/index.html" target="_blank">navegador Chrome</a> para una mejor experiencia de juego!',
                                P += '<br><br><a href="https://www.google.com/chrome/browser/desktop/index.html" target="_blank">구글 크롬</a> 브라우저로이 게임을 즐겨보세요.';
                                var C = n("#modal-notification");
                                C.find(".modal-settings-text").html(P),
                                C.fadeIn(200)
                            }
                        } else {
                            h.storeGeneric("proxy", "used"),
                            h.logProxy(window.location.hostname);
                            var A = n("#modal-notification");
                            A.find(".modal-settings-text").html('Please use the <a href="https://surviv.io" target="_blank">official surviv.io site</a> for a better playing experience!'),
                            A.fadeIn(200)
                        }
                    else {
                        h.storeGeneric("error", "no_websocket");
                        var I = n("#modal-notification");
                        I.find(".modal-settings-text").html('WebSockets are required to play.<br><br>Please use the <a href="https://www.google.com/chrome/browser/desktop/index.html" target="_blank">Chrome browser</a> for a better playing experience!'),
                        I.fadeIn(200)
                    }
                    this.account.load(),
                    this.loadoutMenu.init(this.account),
                    this.playEnabled = !0,
                    this.setDOMFromConfig(),
                    this.setAppActive(!0);
                    var D = window.devicePixelRatio > 1 ? 2 : 1
                      , O = new s.Application({
                        width: window.innerWidth,
                        height: window.innerHeight,
                        view: this.gameCanvas[0],
                        antialias: !1,
                        resolution: D
                    });
                    O.renderer.plugins.interaction.destroy(),
                    O.ticker.add(this.update, this),
                    this.pixi = O;
                    var E = Math.min(window.screen.width, window.screen.height)
                      , L = Math.max(window.screen.width, window.screen.height);
                    E *= window.devicePixelRatio,
                    L *= window.devicePixelRatio;
                    var B = L < 1366 && E < 768
                      , F = B || !this.config.get("highResTex") ? "low" : "high";
                    b.loadAllTextures(O.renderer, F),
                    v.loadStaticDomImages();
                    var R = function() {
                        e.setAppActive(!1);
                        var t = void 0 != window.menu;
                        h.storeGeneric("socketOn", t)
                    }
                      , j = function(t) {
                        e.game.o(),
                        e.errorMessage = t || "",
                        e.teamMenu.onGameComplete(),
                        e.setAppActive(!0)
                    };
                    this.game = new g.bt(O,t,d,a,R,j),
                    this.onResize(),
                    this.tryJoinTeam(!1),
                    this.audioManager.preloadSounds(),
                    this.menuMusicIdx = t.queueSound("menu_music", {
                        channel: "music",
                        fadeIn: !0,
                        loop: !1,
                        forceStart: !0
                    }),
                    this.initialized = !0
                }
            },
            onResize: function() {
                var e = this.pixi
                  , t = this.game;
                if (y.detectMobileSafari())
                    if (window.navigator.standalone)
                        n("#ui-game").css({
                            height: "95%"
                        });
                    else {
                        var a = y.isLandscape() || y.detectiPhoneX() ? "86%" : "82%";
                        u.tablet && (a = "90%"),
                        n("#ui-game").css({
                            height: a
                        });
                        var i = n("#ui-right-center, #ui-top-center-scopes-wrapper, #ui-top-center, #ui-menu-display");
                        i.css({
                            "margin-top": "6px"
                        }),
                        y.isLandscape() || y.detectiPhoneX() ? (n("#start-main-center").attr("style", ""),
                        n("#modal-customize .modal-content").attr("style", "")) : n("#modal-customize .modal-content").css({
                            transform: "translate(-50%, -50%) scale(0.45)",
                            top: "38%"
                        })
                    }
                if (e) {
                    var r = y.getScreenDimensions();
                    e.renderer.resize(r.width, r.height)
                }
                t && t.initialized && t.dt(),
                this.refreshUi(!1)
            },
            setAppActive: function(e) {
                this.active = e,
                this.quickPlayPendingMode = 0,
                this.refreshUi()
            },
            onTeamMenuLeave: function(e) {
                e && "" != e && window.history && window.history.replaceState("", "", "/"),
                this.errorMessage = e,
                this.setDOMFromConfig(),
                this.refreshUi()
            },
            setConfigFromDOM: function() {
                var e = this.config
                  , t = this.nameInput
                  , a = this.serverSelect
                  , i = y.sanitizeNameInput(t.val());
                e.set("playerName", i);
                var r = a.find(":selected").val();
                e.set("region", r)
            },
            setDOMFromConfig: function() {
                var e = this.config
                  , t = this.nameInput
                  , a = this.serverSelect
                  , i = this.languageSelect;
                t.val(e.get("playerName")),
                a.find("option").each(function(t, a) {
                    a.selected = a.value == e.get("region")
                }),
                i.val(e.get("language"))
            },
            onConfigModified: function(e) {
                var t = this.config
                  , a = this.audioManager
                  , i = this.localization
                  , r = this.muteBtns
                  , o = this.masterSliders
                  , n = this.soundSliders
                  , s = this.musicSliders
                  , l = (this.pixi,
                t.get("muteAudio"));
                l != a.mute && (r.removeClass(l ? "audio-on-icon" : "audio-off-icon"),
                r.addClass(l ? "audio-off-icon" : "audio-on-icon"),
                a.setMute(l));
                var m = t.get("masterVolume");
                o.val(100 * m),
                a.setMasterVolume(m);
                var c = t.get("soundVolume");
                n.val(100 * c),
                a.setSoundVolume(c);
                var d = t.get("musicVolume");
                s.val(100 * d),
                a.setMusicVolume(d);
                var p = t.get("language");
                p != i.getLocale() && (i.setLocale(p),
                i.localizeIndex()),
                "highResTex" == e && location.reload()
            },
            refreshUi: function() {
                var e = (!(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0],
                this.nameInput,
                this.serverSelect,
                this.playSoloBtn)
                  , t = this.playDuoBtn
                  , a = this.playSquadBtn
                  , i = this.startMenuWrapper
                  , r = this.gameAreaWrapper
                  , o = this.serverWarning
                  , s = this.active
                  , l = this.quickPlayPendingMode
                  , m = (this.playArgs,
                this.errorMessage)
                  , c = this.teamMenu;
                i.css("display", s ? "flex" : "none"),
                r.css({
                    display: "block",
                    opacity: s ? 0 : 1
                }),
                s ? (n("body").removeClass("user-select-none"),
                document.removeEventListener("contextmenu", this.contextListener)) : (n("body").addClass("user-select-none"),
                n("#start-main").stop(!0),
                document.addEventListener("contextmenu", this.contextListener)),
                n("#ad-block-left").css("display", !y.isLandscape() && c.active ? "none" : "block");
                var d = s && "" != m;
                o.css({
                    display: "block",
                    opacity: d ? 1 : 0
                }),
                o.html(m),
                e.html(1 == l ? '<div class="ui-spinner"></div>' : e.attr("data-label")),
                t.html(2 == l ? '<div class="ui-spinner"></div>' : t.attr("data-label")),
                a.html(4 == l ? '<div class="ui-spinner"></div>' : a.attr("data-label"));
                var p = c.active
                  , u = window.innerHeight <= 768
                  , h = {
                    x: p && u ? "-180px" : 0,
                    y: p ? u ? 0 : "40px" : 0
                };
                n("#ad-block-main-leader-bot").css({
                    transform: "translate(" + h.x + ", " + h.y + ")"
                })
            },
            tryJoinTeam: function(e, t) {
                var a = this.active
                  , i = this.quickPlayPendingMode
                  , r = this.teamMenu;
                if (a && 0 === i) {
                    var o = t || window.location.hash.slice(1);
                    (e || "" != o) && (this.setConfigFromDOM(),
                    r.connect(e, o),
                    this.refreshUi())
                }
            },
            tryQuickStartGame: function(e) {
                var t = this
                  , a = this.config
                  , i = (this.localization,
                this.playEnabled)
                  , r = this.quickPlayPendingMode
                  , o = this.playTimeout
                  , n = (this.serverSelect,
                (new Date).getTime());
                if (i && 0 === r && !(n < o)) {
                    this.playTimeout = n + 1e3,
                    this.errorMessage = "",
                    this.quickPlayPendingMode = e,
                    this.setConfigFromDOM(),
                    this.refreshUi();
                    var s = l.protocolVersion
                      , m = a.get("region")
                      , c = y.getParameterByName("region");
                    void 0 !== c && c.length > 0 && (m = c);
                    var d = this.pingTest.getZones(m)
                      , p = y.getParameterByName("zone");
                    void 0 !== p && p.length > 0 && (d = [p]);
                    var u = {
                        version: s,
                        region: m,
                        zones: d,
                        teamMode: e,
                        playerCount: 1,
                        autoFill: !0
                    }
                      , h = (new Date).getTime()
                      , g = Math.max(0, this.findGameTimeout - h)
                      , f = Math.min(3500, 1e3 + 500 * this.errorCount);
                    this.findGameTimeout = h + g + f,
                    setTimeout(function() {
                        t.findGame(u)
                    }, g)
                }
            },
            findGame: function(e) {
                var t = this
                  , a = this.localization;
                this.config,
                y.findGame(e, function(e, i) {
                    if (e) {
                        var r = {
                            full: a.translate("index-failed-finding-game"),
                            invalid_protocol: a.translate("index-invalid-protocol")
                        };
                        "invalid_protocol" == e && n("#modal-refresh").fadeIn(200),
                        t.errorMessage = r[e] || r.full,
                        t.errorCount++,
                        t.quickPlayPendingMode = 0,
                        t.refreshUi()
                    } else
                        t.errorCount = 0,
                        t.joinGame(i, function() {
                            t.errorMessage = a.translate("index-failed-joining-game"),
                            t.quickPlayPendingMode = 0,
                            t.refreshUi()
                        })
                })
            },
            joinGame: function(e, t) {
                var a = this;
                if (!this.game)
                    return void setTimeout(function() {
                        a.joinGame(e, t)
                    }, 250);
                y.joinGame(this.game, e, t)
            },
            update: function() {
                var e = this.pingTest
                  , t = this.pixi
                  , a = this.game
                  , i = this.audioManager
                  , r = this.teamMenu
                  , o = this.menuMusicIdx
                  , n = this.windInst
                  , s = document.body
                  , l = m.clamp(t.ticker.elapsedMS / 1e3, .001, 1 / 8);
                e.update(l),
                i.l(l),
                r.update(l);
                var c = i.getQueuedInstance(o);
                !c || i.isSoundPlaying(c) || i.isSoundPlaying(n) || (this.windInst = this.audioManager.playSound("ambient_wind_01", {
                    channel: "ambient",
                    fadeIn: !0,
                    loop: !0,
                    forceStart: !0
                }),
                a.ambientSounds.windInst = this.windInst),
                i.isSoundPlaying(c) && a.playing && i.stopSound(c),
                a.initialized && a.playing ? a.l(l) : t.renderer.backgroundColor = 7378501,
                window.appk && (a.ws && a.ws.close(),
                s && s.parentNode && s.parentNode.removeChild(s),
                h.storeGeneric("error", "err"),
                h.enabled = !1,
                window.appk = 0)
            }
        },
        a("927ff3fc"),
        function() {
            var e = a("b4f03d8a");
            !function(e) {
                var t = document.createElement("style");
                t.innerHTML = e.toString(),
                document.body.appendChild(t)
            }(e)
        }();
        var k = new r;
        document.addEventListener("DOMContentLoaded", function(e) {
            setTimeout(function() {
                k.a()
            }, 0)
        }),
        window.addEventListener("load", function() {
            setTimeout(function() {
                k.a()
            }, 0)
        }),
        "#_=_" == window.location.hash && (window.location.hash = "",
        history.pushState("", document.title, window.location.pathname)),
        window.addEventListener("resize", function() {
            k.onResize()
        }),
        window.addEventListener("hashchange", function() {
            k.tryJoinTeam(!1)
        }),
        window.addEventListener("beforeunload", function(e) {
            if (k.game && k.game.pt()) {
                var t = "Do you want to reload the game?";
                return e.returnValue = t,
                t
            }
        }),
        window.onerror = function(e, t, a, i, r) {
            if (-1 != e.indexOf("getElementById('ui-stats-spectate').innerText"))
                return void (window.appk = !0);
            var o = {
                msg: e,
                id: h.instanceId,
                url: t,
                line: a,
                column: i,
                stacktrace: r.stack,
                browser: navigator.userAgent
            }
              , n = JSON.stringify(o);
            /surviv\.io\/js\/.*\.js/.test(n) && -1 == e.indexOf("chrome-extension://") && -1 == e.indexOf("cdn.rawgit.com") ? h.logWindowOnAppError(n) : h.logWindowOnError(n)
        }
    },
    ce089fd5: function(e, t, a) {
        "use strict";
        function i() {}
        var r = a("34e32c48")
          , o = a("6b42806d")
          , n = (a("10899aea"),
        a("ceee80d9"))
          , s = a("c2a798c8");
        a("ce29f17f"),
        a("c347b8dd"),
        a("af8ba00f"),
        i.prototype = {
            a: function() {},
            o: function() {},
            n: function(e, t, a, i) {
                if (t) {
                    this.type = e.type,
                    this.layer = 0,
                    this.pos = s.copy(e.pos),
                    this.rot = n.oriToRad(e.ori),
                    this.scale = 1,
                    this.aabb = o.transform(n.getBoundingCollider(this.type), this.pos, this.rot, this.scale),
                    this.stairs = [];
                    for (var l = n.Defs[this.type], m = 0; m < l.stairs.length; m++) {
                        var c = l.stairs[m]
                          , d = o.transform(c.collision, this.pos, this.rot, this.scale)
                          , p = s.rotate(c.downDir, this.rot)
                          , u = r.splitAabb(d, p);
                        this.stairs.push({
                            collision: d,
                            center: s.add(d.min, s.mul(s.sub(d.max, d.min), .5)),
                            downDir: p,
                            downAabb: o.createAabb(u[0].min, u[0].max),
                            upAabb: o.createAabb(u[1].min, u[1].max),
                            noCeilingReveal: !!c.noCeilingReveal
                        })
                    }
                    this.mask = [];
                    for (var h = 0; h < l.mask.length; h++)
                        this.mask.push(o.transform(l.mask[h], this.pos, this.rot, this.scale));
                    i.renderer.layerMaskDirty = !0
                }
            },
            l: function(e) {},
            insideStairs: function(e) {
                for (var t = 0; t < this.stairs.length; t++)
                    if (o.intersect(this.stairs[t].collision, e))
                        return !0;
                return !1
            },
            insideMask: function(e) {
                for (var t = 0; t < this.mask.length; t++)
                    if (o.intersect(this.mask[t], e))
                        return !0;
                return !1
            }
        },
        e.exports = i
    },
    ce29f17f: function(e, t, a) {
        "use strict";
        var i = function() {
            var e = !1;
            return function(t) {
                (/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(t) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0, 4))) && (e = !0)
            }(navigator.userAgent || navigator.vendor || window.opera),
            e
        }()
          , r = function() {
            var e = !1
              , t = navigator.userAgent.toLowerCase();
            return function(a) {
                /(ipad|tablet|(android(?!.*mobile))|(windows(?!.*phone)(.*touch))|kindle|playbook|silk|(puffin(?!.*(IP|AP|WP))))/.test(t) && (e = !0)
            }(navigator.userAgent || navigator.vendor || window.opera),
            e
        }()
          , o = {
            Lg: 0,
            Sm: 1
        }
          , n = {
            Layout: o,
            debug: !1,
            dev: !1,
            pixelRatio: window.devicePixelRatio,
            layout: i ? o.Sm : o.Lg,
            mobile: i,
            tablet: r,
            touch: i
        };
        e.exports = n
    },
    ceee80d9: function(e, t, a) {
        "use strict";
        function i(e, t, a) {
            return t in e ? Object.defineProperty(e, t, {
                value: a,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = a,
            e
        }
        function r(e) {
            return e % 4 * .5 * Math.PI
        }
        function o(e) {
            var t = q[e];
            if ("structure" == t.type) {
                for (var a = [], i = 0; i < t.layers.length; i++) {
                    var n = t.layers[i]
                      , s = r(n.ori)
                      , l = B.transform(o(n.type), n.pos, s, 1);
                    a.push(B.toAabb(l))
                }
                var m = L.boundingAabb(a);
                return B.createAabb(m.min, m.max)
            }
            if ("building" == t.type) {
                for (var c = [], d = 0; d < t.floor.surfaces.length; d++)
                    c = c.concat(t.floor.surfaces[d].collision);
                c = c.concat(t.ceiling.scopeIn),
                c = c.concat(t.ceiling.scopeOut);
                for (var p = 0; p < t.mapObjects.length; p++) {
                    var u = t.mapObjects[p]
                      , h = u.type;
                    if ("function" == typeof h && (h = h()),
                    "" != h) {
                        var g = r(u.ori)
                          , y = B.transform(o(h), u.pos, g, u.scale);
                        c.push(B.toAabb(y))
                    }
                }
                var f = L.boundingAabb(c);
                return B.createAabb(f.min, f.max)
            }
            return "decal" == t.type ? B.toAabb(t.collision) : (E(t.collision),
            t.collision)
        }
        function n(e, t, a) {
            return {
                tier: e,
                min: t,
                max: a
            }
        }
        function s(e, t) {
            return {
                name: e,
                count: t
            }
        }
        function l(e) {
            return e && "object" === (void 0 === e ? "undefined" : O(e)) && !Array.isArray(e)
        }
        function m(e) {
            for (var t = arguments.length, a = Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++)
                a[r - 1] = arguments[r];
            if (!a.length)
                return e;
            var o = a.shift();
            if (l(e) && l(o))
                for (var n in o)
                    l(o[n]) ? (e[n] || Object.assign(e, i({}, n, {})),
                    m(e[n], o[n])) : Object.assign(e, i({}, n, o[n]));
            return m.apply(void 0, [e].concat(a))
        }
        function c(e) {
            var t = [];
            for (var a in e)
                e.hasOwnProperty(a) && t.push({
                    type: a,
                    weight: e[a]
                });
            E(t.length > 0);
            for (var i = 0, r = 0; r < t.length; r++)
                i += t[r].weight;
            return function() {
                for (var e = F.random(0, i), a = 0; e > t[a].weight; )
                    e -= t[a].weight,
                    a++;
                return t[a].type
            }
        }
        function d(e, t) {
            return {
                sprite: e,
                scale: .5,
                alpha: 1,
                tint: t || 16777215,
                zIdx: 10
            }
        }
        function p(e) {
            return m({
                type: "obstacle",
                scale: {
                    createMin: 1,
                    createMax: 1,
                    destroy: .8
                },
                collision: B.createCircle(R.create(0, 0), 1.75),
                height: .5,
                collidable: !0,
                destructible: !0,
                health: 20,
                hitParticle: "outhouseChip",
                explodeParticle: "barrelPlank",
                reflectBullets: !1,
                loot: [n("tier_world", 1, 1)],
                map: {
                    display: !0,
                    color: 6697728,
                    scale: 1
                },
                terrain: {
                    grass: !0,
                    beach: !0
                },
                img: {
                    sprite: "map-barrel-02.img",
                    residue: "map-barrel-res-02.img",
                    scale: .4,
                    alpha: 1,
                    tint: 16777215,
                    zIdx: 10
                },
                sound: {
                    bullet: "wood_crate_bullet",
                    punch: "wood_crate_bullet",
                    explode: "barrel_break_02",
                    enter: "none"
                }
            }, e || {})
        }
        function u(e) {
            return m({
                type: "obstacle",
                scale: {
                    createMin: 1,
                    createMax: 1,
                    destroy: .75
                },
                collision: B.createAabbExtents(R.create(0, 0), R.create(3.5, 1)),
                height: .5,
                collidable: !0,
                destructible: !0,
                health: 75,
                hitParticle: "woodChip",
                explodeParticle: ["woodPlank", "book"],
                reflectBullets: !1,
                loot: [n("tier_world", 1, 1)],
                map: {
                    display: !1,
                    color: 6697728,
                    scale: .875
                },
                terrain: {
                    grass: !1,
                    beach: !0
                },
                img: {
                    sprite: "map-bookshelf-01.img",
                    residue: "map-drawers-res.img",
                    scale: .5,
                    alpha: 1,
                    tint: 16777215,
                    zIdx: 10
                },
                sound: {
                    bullet: "wood_prop_bullet",
                    punch: "wood_prop_bullet",
                    explode: "drawers_break_01",
                    enter: "none"
                }
            }, e || {})
        }
        function h(e) {
            return m({
                type: "obstacle",
                scale: {
                    createMin: 1.05,
                    createMax: 1.2,
                    destroy: 1
                },
                collision: B.createCircle(R.create(0, 0), 1.4),
                height: 10,
                collidable: !1,
                destructible: !0,
                health: 100,
                hitParticle: "leaf",
                explodeParticle: "leaf",
                reflectBullets: !1,
                isBush: !0,
                loot: [],
                map: {
                    display: !0,
                    color: 24320,
                    scale: 1.5
                },
                terrain: {
                    grass: !0,
                    beach: !1
                },
                img: {
                    sprite: "map-bush-01.img",
                    residue: "map-bush-res-01.img",
                    scale: .5,
                    alpha: .97,
                    tint: 16777215,
                    zIdx: 60
                },
                sound: {
                    bullet: "bush_bullet",
                    punch: "bush_bullet",
                    explode: "bush_break_01",
                    enter: "bush_enter_01"
                }
            }, e || {})
        }
        function g(e) {
            return m({
                type: "obstacle",
                scale: {
                    createMin: 1,
                    createMax: 1,
                    destroy: .9
                },
                collision: B.createAabbExtents(R.create(0, 0), R.create(2.25, 1.6)),
                height: .5,
                collidable: !0,
                destructible: !0,
                health: 75,
                hitParticle: "woodChip",
                explodeParticle: "woodPlank",
                reflectBullets: !1,
                loot: [],
                map: {
                    display: !1,
                    color: 6697728,
                    scale: .875
                },
                terrain: {
                    grass: !1,
                    beach: !0
                },
                img: {
                    sprite: "map-case-deagle-01.img",
                    residue: "map-crate-res-01.img",
                    scale: .5,
                    alpha: 1,
                    tint: 16777215,
                    zIdx: 10
                },
                sound: {
                    bullet: "wood_crate_bullet",
                    punch: "wood_crate_bullet",
                    explode: "crate_break_01",
                    enter: "none"
                }
            }, e || {})
        }
        function y(e) {
            return m({
                type: "obstacle",
                scale: {
                    createMin: 1,
                    createMax: 1,
                    destroy: .75
                },
                collision: B.createAabbExtents(R.create(0, 0), R.create(2.25, 1.6)),
                height: .5,
                collidable: !0,
                destructible: !0,
                health: 140,
                hitParticle: "woodChip",
                explodeParticle: "woodPlank",
                reflectBullets: !1,
                loot: [n("tier_chest", 3, 4)],
                map: {
                    display: !1,
                    color: 6697728,
                    scale: .875
                },
                terrain: {
                    grass: !1,
                    beach: !0
                },
                img: {
                    sprite: "map-chest-01.img",
                    residue: "map-crate-res-01.img",
                    scale: .5,
                    alpha: 1,
                    tint: 16777215,
                    zIdx: 10
                },
                sound: {
                    bullet: "wood_crate_bullet",
                    punch: "wood_crate_bullet",
                    explode: "crate_break_01",
                    enter: "none"
                }
            }, e || {})
        }
        function f(e) {
            var t = [{
                type: "container_wall_top",
                pos: R.create(0, 7.95),
                scale: 1,
                ori: 0
            }, {
                type: "container_wall_side",
                pos: R.create(2.35, 2.1),
                scale: 1,
                ori: 0
            }, {
                type: "container_wall_side",
                pos: R.create(-2.35, 2.1),
                scale: 1,
                ori: 0
            }, {
                type: e.loot_spawner_01 || "loot_tier_2",
                pos: R.create(0, 3.25),
                scale: 1,
                ori: 0
            }, {
                type: e.loot_spawner_02 || c({
                    loot_tier_1: 2,
                    "": 1
                }),
                pos: R.create(0, .05),
                scale: 1,
                ori: 0
            }]
              , a = [{
                type: "container_wall_side_open",
                pos: R.create(2.35, 0),
                scale: 1,
                ori: 0
            }, {
                type: "container_wall_side_open",
                pos: R.create(-2.35, 0),
                scale: 1,
                ori: 0
            }, {
                type: "loot_tier_2",
                pos: R.create(0, -.05),
                scale: 1,
                ori: 0
            }, {
                type: c({
                    loot_tier_1: 1,
                    "": 1
                }),
                pos: R.create(0, .05),
                scale: 1,
                ori: 0
            }];
            return {
                type: "building",
                map: {
                    display: !0,
                    color: e.mapTint || 2703694,
                    scale: 1
                },
                terrain: {
                    grass: !0,
                    beach: !0
                },
                zIdx: 1,
                floor: {
                    surfaces: [{
                        type: "container",
                        collision: [e.open ? B.createAabbExtents(R.create(0, 0), R.create(2.5, 11)) : B.createAabbExtents(R.create(0, 0), R.create(2.5, 8))]
                    }],
                    imgs: [{
                        sprite: e.open ? "map-building-container-open-floor.img" : "map-building-container-floor-01.img",
                        scale: .5,
                        alpha: 1,
                        tint: e.tint
                    }]
                },
                ceiling: {
                    scopeIn: [e.open ? B.createAabbExtents(R.create(0, 0), R.create(2.5, 5.75)) : B.createAabbExtents(R.create(0, 2.25), R.create(2.5, 5.5))],
                    scopeOut: [e.open ? B.createAabbExtents(R.create(0, 0), R.create(2.5, 11)) : B.createAabbExtents(R.create(0, -.5), R.create(2.5, 8.75))],
                    imgs: [{
                        sprite: e.ceilingSprite,
                        scale: .5,
                        alpha: 1,
                        tint: e.tint
                    }]
                },
                mapObjects: e.open ? a : t
            }
        }
        function x(e) {
            return m({
                type: "obstacle",
                scale: {
                    createMin: 1,
                    createMax: 1,
                    destroy: .5
                },
                collision: B.createAabbExtents(R.create(0, 0), R.create(2.25, 2.25)),
                height: .5,
                collidable: !0,
                destructible: !0,
                health: 75,
                hitParticle: "woodChip",
                explodeParticle: "woodPlank",
                reflectBullets: !1,
                loot: [n("tier_world", 1, 1)],
                map: {
                    display: !0,
                    color: 6697728,
                    scale: .875
                },
                terrain: {
                    grass: !0,
                    beach: !0
                },
                img: {
                    sprite: "map-crate-01.img",
                    residue: "map-crate-res-01.img",
                    scale: .5,
                    alpha: 1,
                    tint: 16777215,
                    zIdx: 10
                },
                sound: {
                    bullet: "wood_crate_bullet",
                    punch: "wood_crate_bullet",
                    explode: "crate_break_02",
                    enter: "none"
                }
            }, e || {})
        }
        function w(e) {
            return m({
                type: "obstacle",
                scale: {
                    createMin: 1,
                    createMax: 1,
                    destroy: 1
                },
                collision: B.createAabbExtents(R.create(0, .15), R.create(2.5, 1)),
                height: 10,
                collidable: !0,
                destructible: !0,
                health: 20,
                hitParticle: "barrelChip",
                explodeParticle: "depositBoxGreyFrag",
                reflectBullets: !0,
                loot: [n("tier_world", 1, 1)],
                lootSpawn: {
                    offset: R.create(0, -1),
                    spdMult: 0
                },
                map: {
                    display: !1,
                    color: 6697728,
                    scale: .875
                },
                terrain: {
                    grass: !1,
                    beach: !0
                },
                img: {
                    sprite: "map-deposit-box-01.img",
                    residue: "none",
                    scale: .5,
                    alpha: 1,
                    tint: 16777215,
                    zIdx: 10
                },
                sound: {
                    bullet: "wall_bullet",
                    punch: "metal_punch",
                    explode: "deposit_box_break_01",
                    enter: "none"
                }
            }, e || {})
        }
        function b(e) {
            var t = {
                type: "obstacle",
                scale: {
                    createMin: 1,
                    createMax: 1,
                    destroy: 1
                },
                collision: B.createAabbExtents(e.hinge, e.extents),
                height: 10,
                collidable: !0,
                destructible: !0,
                health: 150,
                hitParticle: "whiteChip",
                explodeParticle: "whitePlank",
                reflectBullets: !1,
                door: {
                    interactionRad: 1.75,
                    canUse: !0,
                    openSpeed: 2,
                    openOneWay: 0,
                    openDelay: 0,
                    openOnce: !1,
                    autoOpen: !1,
                    autoClose: !1,
                    autoCloseDelay: 1,
                    slideToOpen: !1,
                    slideOffset: 3.5,
                    spriteAnchor: R.create(.5, 1),
                    sound: {
                        open: e.soundOpen || "door_open_01",
                        close: e.soundClose || "door_close_01",
                        change: "",
                        error: ""
                    }
                },
                loot: [],
                img: {
                    sprite: "map-door-01.img",
                    residue: "none",
                    scale: .5,
                    alpha: 1,
                    tint: 14671839,
                    zIdx: 15
                },
                sound: {
                    bullet: "wall_wood_bullet",
                    punch: "wall_wood_bullet",
                    explode: "wall_wood_break_01",
                    enter: "none"
                }
            };
            return E(j[e.material]),
            m(t, j[e.material], e || {})
        }
        function _(e) {
            return m(b({
                material: "concrete",
                hinge: R.create(0, 2),
                extents: R.create(.3, 2),
                door: {
                    interactionRad: 3,
                    openOneWay: !1,
                    openSpeed: 7,
                    autoOpen: !0,
                    autoClose: !0,
                    autoCloseDelay: 1,
                    slideToOpen: !0,
                    slideOffset: 3.75,
                    sound: {
                        open: "door_open_03",
                        close: "door_close_03",
                        error: "door_error_01"
                    },
                    casingImg: {
                        sprite: "map-door-slot-01.img",
                        pos: R.create(-2, 0),
                        scale: .5,
                        alpha: 1,
                        tint: 1316379,
                        zIdx: 60
                    }
                },
                img: {
                    tint: 5373952
                }
            }), e || {})
        }
        function v(e) {
            return m({
                type: "obstacle",
                scale: {
                    createMin: 1,
                    createMax: 1,
                    destroy: .75
                },
                collision: B.createAabbExtents(R.create(0, .15), R.create(2.5, 1.25)),
                height: .5,
                collidable: !0,
                destructible: !0,
                health: 75,
                hitParticle: "woodChip",
                explodeParticle: "woodPlank",
                reflectBullets: !1,
                loot: [n("tier_container", 1, 1)],
                map: {
                    display: !1,
                    color: 6697728,
                    scale: .875
                },
                terrain: {
                    grass: !1,
                    beach: !0
                },
                img: {
                    sprite: "map-drawers-01.img",
                    residue: "map-drawers-res.img",
                    scale: .5,
                    alpha: 1,
                    tint: 16777215,
                    zIdx: 10
                },
                sound: {
                    bullet: "wood_prop_bullet",
                    punch: "wood_prop_bullet",
                    explode: "drawers_break_01",
                    enter: "none"
                }
            }, e || {})
        }
        function S(e) {
            return m({
                type: "obstacle",
                scale: {
                    createMin: 1,
                    createMax: 1,
                    destroy: 1
                },
                collision: B.createAabbExtents(R.create(0, .15), R.create(1.5, .6)),
                height: 10,
                collidable: !0,
                destructible: !0,
                health: 20,
                hitParticle: "barrelChip",
                explodeParticle: "lockerFrag",
                reflectBullets: !0,
                loot: [n("tier_world", 1, 1)],
                lootSpawn: {
                    offset: R.create(0, -1),
                    spdMult: 0
                },
                map: {
                    display: !1,
                    color: 6697728,
                    scale: .875
                },
                terrain: {
                    grass: !1,
                    beach: !0
                },
                img: {
                    sprite: "map-locker-01.img",
                    residue: "",
                    scale: .5,
                    alpha: 1,
                    tint: 16777215,
                    zIdx: 10
                },
                sound: {
                    bullet: "wall_bullet",
                    punch: "metal_punch",
                    explode: "deposit_box_break_01",
                    enter: "none"
                }
            }, e || {})
        }
        function k(e) {
            return m({
                type: "obstacle",
                scale: {
                    createMin: 1,
                    createMax: 1,
                    destroy: .8
                },
                collision: B.createAabbExtents(R.create(0, 0), R.create(1, 1)),
                height: .5,
                collidable: !0,
                destructible: !0,
                explosion: "explosion_barrel",
                health: 250,
                hitParticle: "barrelChip",
                explodeParticle: "depositBoxGreyFrag",
                reflectBullets: !0,
                loot: [],
                map: {
                    display: !1
                },
                terrain: {
                    grass: !1,
                    beach: !0
                },
                img: {
                    sprite: "map-power-box-01.img",
                    residue: "",
                    scale: .5,
                    alpha: 1,
                    tint: 16777215,
                    zIdx: 10
                },
                sound: {
                    bullet: "wall_bullet",
                    punch: "metal_punch",
                    explode: "deposit_box_break_01",
                    enter: "none"
                }
            }, e || {})
        }
        function z(e) {
            return m({
                type: "obstacle",
                scale: {
                    createMin: 1,
                    createMax: 1,
                    destroy: .8
                },
                collision: B.createCircle(R.create(0, 0), 1.5),
                height: .5,
                collidable: !0,
                destructible: !0,
                health: 50,
                hitParticle: "potChip",
                explodeParticle: "potFrag",
                reflectBullets: !1,
                loot: [n("tier_world", 1, 1)],
                map: {
                    display: !0,
                    color: 6697728,
                    scale: 1
                },
                terrain: {
                    grass: !0,
                    beach: !0
                },
                img: {
                    sprite: "map-pot-01.img",
                    residue: "map-pot-res-01.img",
                    scale: .5,
                    alpha: 1,
                    tint: 16777215,
                    zIdx: 10
                },
                sound: {
                    bullet: "toilet_porc_bullet",
                    punch: "toilet_porc_bullet",
                    explode: "toilet_break_01",
                    enter: "none"
                }
            }, e || {})
        }
        function M(e) {
            return m({
                type: "obstacle",
                scale: {
                    createMin: 1,
                    createMax: 1.2,
                    destroy: .5
                },
                collision: B.createCircle(R.create(0, 0), 1.6),
                height: .5,
                collidable: !0,
                destructible: !0,
                health: 250,
                reflectBullets: !1,
                hitParticle: "rockChip",
                explodeParticle: "rockFrag",
                loot: [],
                map: {
                    display: !0,
                    color: 11776947,
                    scale: 1
                },
                terrain: {
                    grass: !0,
                    beach: !1
                },
                img: {
                    sprite: "map-stone-01.img",
                    residue: "map-stone-res.img",
                    scale: .4,
                    alpha: 1,
                    tint: 16777215,
                    zIdx: 10
                },
                sound: {
                    bullet: "stone_bullet",
                    punch: "stone_bullet",
                    explode: "stone_break_01",
                    enter: "none"
                }
            }, e || {})
        }
        function T(e) {
            return m({
                type: "obstacle",
                scale: {
                    createMin: 1,
                    createMax: 1,
                    destroy: .8
                },
                collision: B.createCircle(R.create(0, .25), 1.18),
                height: .5,
                collidable: !0,
                destructible: !0,
                health: 100,
                reflectBullets: !1,
                hitParticle: "whiteChip",
                explodeParticle: "toiletFrag",
                loot: [n("tier_toilet", 2, 3)],
                map: {
                    display: !1,
                    color: 11776947,
                    scale: 1
                },
                img: {
                    sprite: "map-toilet-01.img",
                    residue: "map-toilet-res-01.img",
                    scale: .5,
                    alpha: 1,
                    tint: 16777215,
                    zIdx: 10
                },
                sound: {
                    bullet: "toilet_porc_bullet",
                    punch: "toilet_porc_bullet",
                    explode: "toilet_break_01",
                    enter: "none"
                },
                terrain: {
                    grass: !0,
                    beach: !1
                }
            }, e || {})
        }
        function P(e) {
            var t = {
                type: "obstacle",
                scale: {
                    createMin: 1,
                    createMax: 1,
                    destroy: 1
                },
                collision: B.createAabbExtents(R.create(0, 0), R.copy(e.extents)),
                height: 10,
                isWall: !0,
                collidable: !0,
                destructible: !0,
                health: 150,
                hitParticle: "woodChip",
                explodeParticle: "woodPlank",
                reflectBullets: !1,
                loot: [],
                map: {
                    display: !1
                },
                img: {},
                sound: {
                    bullet: "wall_bullet",
                    punch: "wall_bullet",
                    explode: "barrel_break_01",
                    enter: "none"
                }
            };
            return E(j[e.material]),
            m(t, j[e.material], e || {})
        }
        function C(e) {
            return m({
                type: "building",
                map: {
                    display: !0,
                    shapes: [{
                        collider: B.createAabbExtents(R.create(0, 0), R.create(7, 7)),
                        color: 15181895
                    }, {
                        collider: B.createAabbExtents(R.create(0, -18.9), R.create(2, 12)),
                        color: 6171907
                    }]
                },
                terrain: {
                    grass: !0,
                    beach: !0,
                    waterEdge: {
                        dir: R.create(0, 1),
                        distMin: -8.5,
                        distMax: 0
                    }
                },
                floor: {
                    surfaces: [{
                        type: "shack",
                        collision: [B.createAabbExtents(R.create(0, 0), R.create(7, 7)), B.createAabbExtents(R.create(0, -18.9), R.create(2, 12))]
                    }],
                    imgs: [{
                        sprite: "map-building-hut-floor-01.img",
                        pos: R.create(0, 0),
                        scale: .5,
                        alpha: 1,
                        tint: 16777215
                    }, {
                        sprite: "map-building-hut-floor-02.img",
                        pos: R.create(0, -18.9),
                        scale: .5,
                        alpha: 1,
                        tint: 16777215
                    }]
                },
                ceiling: {
                    scopeIn: [B.createAabbExtents(R.create(0, 0), R.create(6, 6))],
                    scopeOut: [B.createAabbExtents(R.create(0, 0), R.create(6, 6))],
                    vision: {
                        width: 4
                    },
                    imgs: [{
                        sprite: e.ceilingImg || "map-building-hut-ceiling-01.img",
                        scale: .5,
                        alpha: 1,
                        tint: 16777215
                    }],
                    destroy: {
                        wallCount: 2,
                        particle: "hutFrag",
                        particleCount: 25,
                        residue: "map-hut-res-01.img"
                    }
                },
                mapObjects: [{
                    type: "hut_wall_int_4",
                    pos: R.create(-4, -6.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "hut_wall_int_4",
                    pos: R.create(4, -6.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "hut_wall_int_5",
                    pos: R.create(-6.5, 4.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "hut_window_open_01",
                    pos: R.create(-6.75, .5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "hut_wall_int_6",
                    pos: R.create(-6.5, -4),
                    scale: 1,
                    ori: 0
                }, {
                    type: "hut_wall_int_12",
                    pos: R.create(0, 6.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "hut_wall_int_14",
                    pos: R.create(6.5, 0),
                    scale: 1,
                    ori: 0
                }, {
                    type: c({
                        pot_01: 2,
                        "": 1
                    }),
                    pos: R.create(4.5, 4.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: c({
                        pot_01: 2,
                        "": 1
                    }),
                    pos: R.create(4.5, -4.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: c({
                        pot_01: 2,
                        "": 1
                    }),
                    pos: R.create(-4.5, 4.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: c({
                        pot_01: 2,
                        "": 1
                    }),
                    pos: R.create(-4.5, -4.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: e.specialLoot || "pot_01",
                    pos: R.create(0, 0),
                    scale: 1,
                    ori: 0
                }]
            }, e || {})
        }
        function A(e) {
            return m({
                type: "obstacle",
                scale: {
                    createMin: .8,
                    createMax: 1,
                    destroy: .5
                },
                collision: B.createCircle(R.create(0, 0), 1.55),
                aabb: B.createAabbExtents(R.create(0, 0), R.create(5.75, 5.75)),
                height: 10,
                collidable: !0,
                destructible: !0,
                health: 175,
                hitParticle: "woodChip",
                explodeParticle: "woodLog",
                reflectBullets: !1,
                loot: [],
                map: {
                    display: !0,
                    color: 4083758,
                    scale: 2.5
                },
                terrain: {
                    grass: !0,
                    beach: !1
                },
                img: {
                    sprite: "map-tree-03.img",
                    residue: "map-tree-res.img",
                    scale: .7,
                    alpha: 1,
                    tint: 16777215,
                    zIdx: 200
                },
                sound: {
                    bullet: "tree_bullet",
                    punch: "tree_bullet",
                    explode: "tree_break_01",
                    enter: "none"
                }
            }, e || {})
        }
        function I(e) {
            return m({
                type: "obstacle",
                scale: {
                    createMin: 1,
                    createMax: 1,
                    destroy: 1
                },
                collision: B.createAabbExtents(R.create(0, 0), R.create(.4, 2)),
                height: 10,
                collidable: !0,
                destructible: !0,
                isWindow: !0,
                health: 1,
                hitParticle: "glassChip",
                explodeParticle: "windowFrag",
                reflectBullets: !1,
                loot: [],
                destroyType: "house_window_broken_01",
                img: {
                    sprite: "map-building-house-window-01.img",
                    residue: "none",
                    scale: .5,
                    alpha: 1,
                    tint: 16777215,
                    zIdx: 10
                },
                sound: {
                    bullet: "glass_bullet",
                    punch: "glass_bullet",
                    explode: "window_break_01",
                    enter: "none"
                }
            }, e || {})
        }
        function D(e) {
            return m({
                type: "obstacle",
                scale: {
                    createMin: 1,
                    createMax: 1,
                    destroy: 1
                },
                collision: B.createAabbExtents(R.create(0, 0), R.create(.4, 2)),
                height: .2,
                isWall: !0,
                collidable: !0,
                destructible: !1,
                health: 100,
                hitParticle: "woodChip",
                explodeParticle: "woodPlank",
                reflectBullets: !1,
                loot: [],
                img: {
                    sprite: "map-building-house-window-res-01.img",
                    scale: .5,
                    alpha: 1,
                    tint: 4456448,
                    zIdx: 10
                },
                sound: {
                    bullet: "wall_wood_bullet",
                    punch: "wall_wood_bullet",
                    explode: "wall_wood_break_01",
                    enter: "none"
                }
            }, e || {})
        }
        var O = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
            return typeof e
        }
        : function(e) {
            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
        }
          , E = a("0e566746")
          , L = a("34e32c48")
          , B = a("6b42806d")
          , F = a("1901e2d9")
          , R = a("c2a798c8")
          , j = {
            metal: {
                destructible: !1,
                reflectBullets: !0,
                hitParticle: "barrelChip",
                explodeParticle: "barrelFrag",
                sound: {
                    bullet: "wall_bullet",
                    punch: "metal_punch",
                    explode: "barrel_break_01",
                    enter: "none"
                }
            },
            wood: {
                destructible: !0,
                reflectBullets: !1,
                sound: {
                    bullet: "wall_wood_bullet",
                    punch: "wall_wood_bullet",
                    explode: "wall_break_01",
                    enter: "none"
                }
            },
            brick: {
                destructible: !1,
                reflectBullets: !1,
                hitParticle: "brickChip",
                sound: {
                    bullet: "wall_brick_bullet",
                    punch: "wall_brick_bullet",
                    explode: "wall_break_01",
                    enter: "none"
                }
            },
            concrete: {
                destructible: !1,
                reflectBullets: !1,
                hitParticle: "barrelChip",
                sound: {
                    bullet: "concrete_hit",
                    punch: "concrete_hit",
                    explode: "wall_break_01",
                    enter: "none"
                }
            },
            glass: {
                destructible: !0,
                reflectBullets: !1,
                hitParticle: "glassChip",
                explodeParticle: "windowFrag",
                sound: {
                    bullet: "glass_bullet",
                    punch: "glass_bullet",
                    explode: "window_break_01",
                    enter: "none"
                }
            }
        }
          , q = {
            barrel_01: {
                type: "obstacle",
                name: "a barrel",
                scale: {
                    createMin: 1,
                    createMax: 1,
                    destroy: .6
                },
                collision: B.createCircle(R.create(0, 0), 1.75),
                height: .5,
                collidable: !0,
                destructible: !0,
                explosion: "explosion_barrel",
                health: 150,
                hitParticle: "barrelChip",
                explodeParticle: "barrelFrag",
                reflectBullets: !0,
                loot: [],
                map: {
                    display: !0,
                    color: 6447714,
                    scale: 1
                },
                terrain: {
                    grass: !0,
                    beach: !0
                },
                img: {
                    sprite: "map-barrel-01.img",
                    scale: .4,
                    alpha: 1,
                    tint: 16777215,
                    zIdx: 10
                },
                sound: {
                    bullet: "barrel_bullet",
                    punch: "barrel_bullet",
                    explode: "barrel_break_01",
                    enter: "none"
                }
            },
            barrel_02: p({
                health: 60
            }),
            barrel_03: p({
                collision: B.createAabbExtents(R.create(0, 0), R.create(1.25, .5)),
                health: 20,
                img: {
                    sprite: "map-barrel-03.img",
                    residue: "map-barrel-res-03.img",
                    scale: .45
                }
            }),
            barrel_04: p({
                collision: B.createAabbExtents(R.create(0, 0), R.create(1.25, .5)),
                health: 20,
                loot: [n("tier_soviet", 2, 3)],
                img: {
                    sprite: "map-barrel-04.img",
                    residue: "map-barrel-res-03.img",
                    scale: .45
                }
            }),
            bollard_01: {
                type: "obstacle",
                scale: {
                    createMin: 1,
                    createMax: 1,
                    destroy: 1
                },
                collision: B.createCircle(R.create(0, 0), 1.25),
                height: .5,
                collidable: !0,
                destructible: !1,
                health: 300,
                hitParticle: "barrelChip",
                explodeParticle: "barrelFrag",
                reflectBullets: !0,
                loot: [],
                map: {
                    display: !0,
                    color: 6310464,
                    scale: 1
                },
                terrain: {
                    grass: !0,
                    beach: !1
                },
                img: {
                    sprite: "map-bollard-01.img",
                    scale: .5,
                    alpha: 1,
                    tint: 16777215,
                    zIdx: 10
                },
                sound: {
                    bullet: "silo_bullet",
                    punch: "silo_bullet",
                    explode: "barrel_break_01",
                    enter: "none"
                }
            },
            bookshelf_01: u({
                img: {
                    sprite: "map-bookshelf-01.img"
                },
                loot: [n("tier_world", 1, 1)]
            }),
            bookshelf_02: u({
                img: {
                    sprite: "map-bookshelf-02.img"
                },
                loot: [n("tier_soviet", 2, 3)]
            }),
            bush_01: h({}),
            bush_02: h({
                img: {
                    residue: "map-bush-res-02.img"
                }
            }),
            bush_03: h({
                img: {
                    sprite: "map-bush-03.img",
                    alpha: 1
                }
            }),
            case_01: g({
                loot: [s("deagle", 1)]
            }),
            case_02: g({
                img: {
                    sprite: "map-case-deagle-02.img"
                },
                loot: [s("deagle", 1), s("deagle", 1)]
            }),
            case_03: g({
                health: 140,
                img: {
                    sprite: "map-case-hatchet-01.img",
                    residue: "map-crate-res-02.img"
                },
                loot: [n("tier_hatchet", 1, 1)]
            }),
            chest_01: y({
                loot: [n("tier_chest", 3, 4), n("tier_pirate_melee", 1, 1), s("outfitRoyalFortune", 1)]
            }),
            chest_02: y({
                img: {
                    sprite: "map-chest-02.img"
                },
                loot: [n("tier_chest", 2, 2)]
            }),
            control_panel_01: k({
                collision: B.createAabbExtents(R.create(0, 0), R.create(2.25, 1.7)),
                button: {
                    interactionRad: 1.75,
                    interactionText: "game-use",
                    useOnce: !0,
                    useType: "cell_door_01",
                    useDelay: 1.1,
                    useDir: R.create(-1, 0),
                    useImg: "map-control-panel-02.img",
                    sound: "cell_control_01"
                },
                img: {
                    sprite: "map-control-panel-01.img"
                }
            }),
            control_panel_02: k({
                collision: B.createAabbExtents(R.create(0, 0), R.create(2.25, 1.7)),
                health: 175,
                img: {
                    sprite: "map-control-panel-02.img"
                }
            }),
            control_panel_03: k({
                collision: B.createAabbExtents(R.create(0, 0), R.create(1.25, 1.2)),
                health: 150,
                img: {
                    sprite: "map-control-panel-03.img"
                }
            }),
            crate_01: x(),
            crate_02: x({
                health: 140,
                loot: [n("tier_soviet", 3, 5)],
                map: {
                    display: !1
                },
                terrain: {
                    grass: !0,
                    beach: !1
                },
                img: {
                    sprite: "map-crate-02.img"
                },
                sound: {
                    explode: "crate_break_01"
                }
            }),
            crate_03: x({
                health: 100,
                collision: B.createAabbExtents(R.create(0, 0), R.create(1.575, 1.575)),
                loot: [n("tier_throwables", 2, 4)],
                map: {
                    color: 5066014,
                    scale: .875
                },
                terrain: {
                    grass: !0,
                    beach: !1
                },
                img: {
                    sprite: "map-crate-03.img",
                    scale: .35
                },
                sound: {
                    explode: "crate_break_01"
                }
            }),
            crate_04: x({
                health: 225,
                destructible: !0,
                armorPlated: !0,
                hitParticle: "greenChip",
                loot: [n("tier_ammo_crate", 1, 1)],
                map: {
                    display: !1
                },
                img: {
                    sprite: "map-crate-04.img"
                },
                sound: {
                    bullet: "ammo_crate_bullet",
                    punch: "ammo_crate_bullet",
                    explode: "crate_break_01"
                }
            }),
            crate_05: x({
                collision: B.createAabbExtents(R.create(0, 0), R.create(2, 2)),
                destructible: !1,
                hitParticle: "goldChip",
                loot: [],
                map: {
                    display: !1
                },
                img: {
                    sprite: "map-crate-05.img"
                },
                sound: {
                    bullet: "wall_brick_bullet",
                    punch: "wall_brick_bullet"
                }
            }),
            crate_06: x({
                collision: B.createAabbExtents(R.create(0, 0), R.create(2.25, 1.1)),
                health: 175,
                destructible: !0,
                armorPlated: !0,
                hitParticle: "greenChip",
                loot: [n("tier_ammo", 1, 1)],
                map: {
                    display: !1
                },
                img: {
                    sprite: "map-crate-06.img"
                },
                sound: {
                    bullet: "ammo_crate_bullet",
                    punch: "ammo_crate_bullet"
                }
            }),
            crate_07: x({
                health: 140,
                loot: [n("tier_surviv", 2, 3), s("ak47", 1), s("outfitKhaki", 1), s("outfitKhaki", 1), s("outfitKhaki", 1), s("outfitKhaki", 1)],
                img: {
                    sprite: "map-crate-07.img"
                },
                sound: {
                    explode: "crate_break_01"
                }
            }),
            crate_08: x({
                health: 140,
                loot: [n("tier_surviv", 2, 3)],
                map: {
                    display: !1
                },
                terrain: {
                    grass: !0,
                    beach: !1
                },
                img: {
                    sprite: "map-crate-08.img"
                },
                sound: {
                    explode: "crate_break_01"
                }
            }),
            crate_09: x({
                health: 140,
                loot: [n("tier_chest", 1, 2), n("tier_conch", 1, 1)],
                map: {
                    display: !1
                },
                terrain: {
                    grass: !0,
                    beach: !1
                },
                img: {
                    sprite: "map-crate-09.img"
                },
                sound: {
                    explode: "crate_break_01"
                }
            }),
            crate_10: x({
                health: 200,
                scale: {
                    destroy: .75
                },
                loot: [n("tier_airdrop_uncommon", 1, 1), n("tier_airdrop_armor", 1, 1), n("tier_medical", 2, 2), n("tier_airdrop_scopes", 1, 1), n("tier_airdrop_skins", 1, 1), n("tier_airdrop_melee", 1, 1), n("tier_airdrop_ammo", 3, 3)],
                map: {
                    display: !1
                },
                terrain: {
                    grass: !0,
                    beach: !1
                },
                img: {
                    sprite: "map-crate-10.img",
                    residue: "map-crate-res-03.img"
                },
                sound: {
                    explode: "crate_break_01"
                }
            }),
            crate_11: x({
                collision: B.createAabbExtents(R.create(0, 0), R.create(2.5, 2.5)),
                scale: {
                    destroy: .75
                },
                health: 200,
                loot: [n("tier_airdrop_rare", 1, 1), n("tier_medical", 2, 2), n("tier_airdrop_scopes", 1, 1), n("tier_airdrop_skins", 1, 1), n("tier_airdrop_melee", 1, 1), n("tier_airdrop_ammo", 3, 3)],
                map: {
                    display: !1
                },
                terrain: {
                    grass: !0,
                    beach: !1
                },
                img: {
                    sprite: "map-crate-11.img",
                    residue: "map-crate-res-03.img"
                },
                sound: {
                    explode: "crate_break_01"
                }
            }),
            crate_14: x({
                collision: B.createAabbExtents(R.create(0, 0), R.create(2.7, 1.25)),
                health: 100,
                loot: [n("tier_knives", 1, 1)],
                map: {
                    display: !1
                },
                terrain: {
                    grass: !0,
                    beach: !0
                },
                img: {
                    sprite: "map-crate-14.img"
                },
                sound: {
                    explode: "crate_break_01"
                }
            }),
            crate_15: x({
                collision: B.createAabbExtents(R.create(0, 0), R.create(2.7, 1.25)),
                health: 100,
                loot: [n("tier_knives", 2, 2)],
                map: {
                    display: !1
                },
                terrain: {
                    grass: !0,
                    beach: !0
                },
                img: {
                    sprite: "map-crate-14.img"
                },
                sound: {
                    explode: "crate_break_01"
                }
            }),
            crate_16: x({
                collision: B.createAabbExtents(R.create(0, 0), R.create(2.7, 1.25)),
                health: 100,
                loot: [n("tier_knives", 4, 4)],
                map: {
                    display: !1
                },
                terrain: {
                    grass: !0,
                    beach: !0
                },
                img: {
                    sprite: "map-crate-14.img"
                },
                sound: {
                    explode: "crate_break_01"
                }
            }),
            airdrop_crate_01: x({
                collision: B.createAabbExtents(R.create(0, 0), R.create(2.5, 2.5)),
                button: {
                    interactionRad: 2,
                    interactionText: "game-unlock",
                    useOnce: !0,
                    destroyOnUse: !0,
                    useDelay: 2.5,
                    useDir: R.create(-1, 0),
                    useImg: "map-crate-13.img",
                    useParticle: "airdropCrate01",
                    sound: "airdrop_open_01"
                },
                health: 200,
                destructible: !1,
                loot: [],
                map: {
                    display: !1
                },
                img: {
                    sprite: "map-crate-12.img",
                    residue: "none"
                },
                sound: {
                    bullet: "wall_bullet",
                    punch: "metal_punch",
                    explode: "airdrop_open_02"
                },
                destroyType: "crate_10",
                scale: {
                    destroy: 1
                },
                hitParticle: "barrelChip",
                explodeParticle: "airdropCrate02",
                reflectBullets: !0
            }),
            airdrop_crate_02: x({
                collision: B.createAabbExtents(R.create(0, 0), R.create(2.5, 2.5)),
                button: {
                    interactionRad: 2,
                    interactionText: "game-unlock",
                    useOnce: !0,
                    destroyOnUse: !0,
                    useDelay: 2.5,
                    useDir: R.create(-1, 0),
                    useImg: "map-crate-13.img",
                    useParticle: "airdropCrate01",
                    sound: "airdrop_open_01"
                },
                health: 200,
                destructible: !1,
                loot: [],
                map: {
                    display: !1
                },
                img: {
                    sprite: "map-crate-12.img",
                    residue: "none"
                },
                sound: {
                    bullet: "wall_bullet",
                    punch: "metal_punch",
                    explode: "airdrop_open_02"
                },
                destroyType: "crate_11",
                scale: {
                    destroy: 1
                },
                hitParticle: "barrelChip",
                explodeParticle: "airdropCrate02",
                reflectBullets: !0
            }),
            deposit_box_01: w({
                img: {
                    sprite: "map-deposit-box-01.img"
                },
                loot: [n("tier_world", 1, 1)]
            }),
            deposit_box_02: w({
                explodeParticle: "depositBoxGoldFrag",
                img: {
                    sprite: "map-deposit-box-02.img"
                },
                loot: [n("tier_soviet", 2, 3)]
            }),
            drawers_01: v({
                img: {
                    sprite: "map-drawers-01.img"
                },
                loot: [n("tier_container", 1, 1)]
            }),
            drawers_02: v({
                img: {
                    sprite: "map-drawers-02.img"
                },
                loot: [n("tier_soviet", 2, 3)]
            }),
            fire_ext_01: {
                type: "obstacle",
                scale: {
                    createMin: 1,
                    createMax: 1,
                    destroy: .8
                },
                collision: B.createCircle(R.create(.35, 0), 1),
                height: .5,
                collidable: !0,
                destructible: !0,
                createSmoke: !0,
                health: 75,
                hitParticle: "redChip",
                explodeParticle: "redFrag",
                reflectBullets: !0,
                loot: [],
                map: {
                    display: !1,
                    color: 6697728,
                    scale: .875
                },
                terrain: {
                    grass: !1,
                    beach: !0
                },
                img: {
                    sprite: "map-fire-ext-01.img",
                    residue: "map-fire-ext-res.img",
                    scale: .5,
                    alpha: 1,
                    tint: 16777215,
                    zIdx: 10
                },
                sound: {
                    bullet: "barrel_bullet",
                    punch: "barrel_bullet",
                    explode: "explosion_smoke_01",
                    enter: "none"
                }
            },
            locker_01: S({
                img: {
                    sprite: "map-locker-01.img"
                },
                loot: [n("tier_world", 1, 1)]
            }),
            locker_02: S({
                img: {
                    sprite: "map-locker-02.img"
                },
                loot: [n("tier_police", 1, 1)]
            }),
            oven_01: {
                type: "obstacle",
                name: "an oven",
                scale: {
                    createMin: 1,
                    createMax: 1,
                    destroy: .75
                },
                collision: B.createAabbExtents(R.create(0, .15), R.create(1.7, 1.3)),
                height: .5,
                collidable: !0,
                destructible: !0,
                explosion: "explosion_barrel",
                health: 200,
                hitParticle: "barrelChip",
                explodeParticle: "barrelFrag",
                reflectBullets: !0,
                loot: [],
                map: {
                    display: !1,
                    color: 6697728,
                    scale: .875
                },
                terrain: {
                    grass: !1,
                    beach: !0
                },
                img: {
                    sprite: "map-oven-01.img",
                    scale: .5,
                    alpha: 1,
                    tint: 16777215,
                    zIdx: 10
                },
                sound: {
                    bullet: "barrel_bullet",
                    punch: "barrel_bullet",
                    explode: "oven_break_01",
                    enter: "none"
                }
            },
            pot_01: z({}),
            pot_02: z({
                img: {
                    sprite: "map-pot-02.img"
                },
                loot: [s("spas12", 1), s("outfitIslander", 1)]
            }),
            power_box_01: k(),
            refrigerator_01: {
                type: "obstacle",
                scale: {
                    createMin: 1,
                    createMax: 1,
                    destroy: .75
                },
                collision: B.createAabbExtents(R.create(0, .15), R.create(1.7, 1.25)),
                height: .5,
                collidable: !0,
                destructible: !1,
                health: 100,
                hitParticle: "redChip",
                explodeParticle: "woodPlank",
                reflectBullets: !0,
                loot: [],
                map: {
                    display: !1,
                    color: 6697728,
                    scale: .875
                },
                terrain: {
                    grass: !1,
                    beach: !0
                },
                img: {
                    sprite: "map-refrigerator-01.img",
                    residue: "map-crate-res-01.img",
                    scale: .5,
                    alpha: 1,
                    tint: 16777215,
                    zIdx: 10
                },
                sound: {
                    bullet: "wall_bullet",
                    punch: "metal_punch",
                    explode: "barrel_break_01",
                    enter: "none"
                }
            },
            sandbags_01: {
                type: "obstacle",
                map: {
                    display: !0,
                    color: 13278307,
                    scale: 1
                },
                scale: {
                    createMin: 1,
                    createMax: 1,
                    destroy: .5
                },
                collision: B.createAabbExtents(R.create(0, 0), R.create(3.1, 1.4)),
                height: .5,
                collidable: !0,
                destructible: !1,
                health: 150,
                hitParticle: "goldChip",
                explodeParticle: "barrelFrag",
                reflectBullets: !1,
                loot: [],
                img: {
                    sprite: "map-sandbags-01.img",
                    scale: .5,
                    alpha: 1,
                    tint: 16777215,
                    zIdx: 10
                },
                sound: {
                    bullet: "wall_brick_bullet",
                    punch: "wall_brick_bullet",
                    explode: "crate_break_02",
                    enter: "none"
                }
            },
            container_05_collider: P({
                material: "metal",
                extents: R.create(2.75, 6)
            }),
            container_05: {
                type: "building",
                scale: {
                    createMin: 1,
                    createMax: 1,
                    destroy: .5
                },
                zIdx: 1,
                map: {
                    display: !0,
                    color: 11485762,
                    scale: 1
                },
                terrain: {
                    grass: !1,
                    beach: !1
                },
                floor: {
                    surfaces: [{
                        type: "container",
                        collision: [B.createAabbExtents(R.create(0, 0), R.create(0, 0))]
                    }],
                    imgs: [{
                        sprite: "",
                        scale: .5,
                        alpha: 1,
                        tint: 16777215
                    }]
                },
                ceiling: {
                    scopeIn: [B.createAabbExtents(R.create(0, 2.4), R.create(2.5, 5.75))],
                    scopeOut: [B.createAabbExtents(R.create(0, 2.4), R.create(2.5, 5.75))],
                    imgs: [{
                        sprite: "map-building-container-ceiling-05.img",
                        scale: .5,
                        alpha: 1,
                        tint: 11485762
                    }]
                },
                mapObjects: [{
                    type: "container_05_collider",
                    pos: R.create(0, 2.4),
                    scale: 1,
                    ori: 0
                }]
            },
            silo_01: {
                type: "obstacle",
                scale: {
                    createMin: 1,
                    createMax: 1,
                    destroy: 1
                },
                collision: B.createCircle(R.create(0, 0), 7.75),
                height: 10,
                collidable: !0,
                destructible: !1,
                health: 300,
                hitParticle: "barrelChip",
                explodeParticle: "barrelFrag",
                reflectBullets: !0,
                loot: [],
                map: {
                    display: !0,
                    color: 4079166,
                    scale: 1
                },
                terrain: {
                    grass: !0,
                    beach: !1
                },
                img: {
                    sprite: "map-silo-01.img",
                    scale: .5,
                    alpha: 1,
                    tint: 16777215,
                    zIdx: 10
                },
                sound: {
                    bullet: "silo_bullet",
                    punch: "silo_bullet",
                    explode: "barrel_break_01",
                    enter: "none"
                }
            },
            stairs_01: {
                type: "obstacle",
                scale: {
                    createMin: 1,
                    createMax: 1,
                    destroy: 1
                },
                collision: B.createAabbExtents(R.create(0, 0), R.create(2.5, 2)),
                height: .5,
                collidable: !1,
                destructible: !0,
                health: 100,
                hitParticle: "woodChip",
                explodeParticle: "woodPlank",
                reflectBullets: !1,
                loot: [],
                map: {
                    display: !1,
                    color: 6697728,
                    scale: .875
                },
                terrain: {
                    grass: !1,
                    beach: !0
                },
                img: {
                    sprite: "map-stairs-broken-01.img",
                    residue: "map-table-res.img",
                    scale: .5,
                    alpha: 1,
                    tint: 16777215,
                    zIdx: 60
                },
                sound: {
                    bullet: "wood_prop_bullet",
                    punch: "wood_prop_bullet",
                    explode: "crate_break_01",
                    enter: "none"
                }
            },
            stand_01: {
                type: "obstacle",
                scale: {
                    createMin: 1,
                    createMax: 1,
                    destroy: .75
                },
                collision: B.createAabbExtents(R.create(0, .15), R.create(1.25, 1.25)),
                height: .5,
                collidable: !0,
                destructible: !0,
                health: 75,
                hitParticle: "woodChip",
                explodeParticle: "woodPlank",
                reflectBullets: !1,
                loot: [n("tier_world", 1, 1)],
                map: {
                    display: !1,
                    color: 6697728,
                    scale: .875
                },
                terrain: {
                    grass: !1,
                    beach: !0
                },
                img: {
                    sprite: "map-stand-01.img",
                    residue: "map-drawers-res.img",
                    scale: .5,
                    alpha: 1,
                    tint: 16777215,
                    zIdx: 10
                },
                sound: {
                    bullet: "wood_prop_bullet",
                    punch: "wood_prop_bullet",
                    explode: "drawers_break_01",
                    enter: "none"
                }
            },
            stone_01: M({}),
            stone_02: M({
                img: {
                    tint: 15066597
                },
                loot: [n("tier_surviv", 2, 3), s("ak47", 1), s("outfitKhaki", 1)]
            }),
            table_01: {
                type: "obstacle",
                scale: {
                    createMin: 1,
                    createMax: 1,
                    destroy: .75
                },
                collision: B.createAabbExtents(R.create(0, 0), R.create(2.5, 2)),
                height: .5,
                collidable: !1,
                destructible: !0,
                health: 100,
                hitParticle: "woodChip",
                explodeParticle: "woodPlank",
                reflectBullets: !1,
                loot: [],
                map: {
                    display: !1,
                    color: 6697728,
                    scale: .875
                },
                terrain: {
                    grass: !1,
                    beach: !0
                },
                img: {
                    sprite: "map-table-01.img",
                    residue: "map-table-res.img",
                    scale: .5,
                    alpha: 1,
                    tint: 16777215,
                    zIdx: 60
                },
                sound: {
                    bullet: "wood_prop_bullet",
                    punch: "wood_prop_bullet",
                    explode: "crate_break_01",
                    enter: "none"
                }
            },
            table_02: {
                type: "obstacle",
                scale: {
                    createMin: 1,
                    createMax: 1,
                    destroy: .75
                },
                collision: B.createAabbExtents(R.create(0, 0), R.create(4.5, 2.5)),
                height: .5,
                collidable: !1,
                destructible: !0,
                health: 125,
                hitParticle: "woodChip",
                explodeParticle: "woodPlank",
                reflectBullets: !1,
                loot: [],
                map: {
                    display: !1,
                    color: 6697728,
                    scale: .875
                },
                terrain: {
                    grass: !1,
                    beach: !0
                },
                img: {
                    sprite: "map-table-02.img",
                    residue: "map-table-res.img",
                    scale: .5,
                    alpha: 1,
                    tint: 16777215,
                    zIdx: 60
                },
                sound: {
                    bullet: "wood_prop_bullet",
                    punch: "wood_prop_bullet",
                    explode: "crate_break_01",
                    enter: "none"
                }
            },
            toilet_01: T({
                img: {
                    sprite: "map-toilet-01.img"
                },
                loot: [n("tier_toilet", 2, 3)]
            }),
            toilet_02: T({
                img: {
                    sprite: "map-toilet-02.img"
                },
                loot: [n("tier_soviet", 3, 4)]
            }),
            toilet_03: T({
                reflectBullets: !0,
                hitParticle: "barrelChip",
                explodeParticle: "toiletMetalFrag",
                img: {
                    sprite: "map-toilet-03.img",
                    residue: "map-toilet-res-02.img"
                },
                loot: [n("tier_world", 1, 2)],
                sound: {
                    bullet: "toilet_metal_bullet",
                    punch: "toilet_metal_bullet",
                    explode: "toilet_break_02"
                }
            }),
            toilet_04: T({
                reflectBullets: !0,
                hitParticle: "barrelChip",
                explodeParticle: "toiletMetalFrag",
                img: {
                    sprite: "map-toilet-04.img",
                    residue: "map-toilet-res-02.img"
                },
                loot: [n("tier_soviet", 2, 3)],
                sound: {
                    bullet: "toilet_metal_bullet",
                    punch: "toilet_metal_bullet",
                    explode: "toilet_break_02"
                }
            }),
            tree_01: A(),
            tree_02: A({
                health: 120,
                collision: B.createCircle(R.create(0, 0), 1.6),
                aabb: B.createAabbExtents(R.create(0, 0), R.create(1.6, 1.6)),
                height: .5,
                loot: [s("woodaxe", 1)],
                map: {
                    display: !1
                },
                scale: {
                    createMin: 1,
                    createMax: 1,
                    destroy: .9
                },
                terrain: {
                    grass: !0,
                    beach: !1
                },
                img: {
                    sprite: "map-tree-04.img",
                    scale: .5,
                    zIdx: 10
                }
            }),
            vat_01: {
                type: "obstacle",
                scale: {
                    createMin: 1,
                    createMax: 1,
                    destroy: .9
                },
                collision: B.createCircle(R.create(0, 0), 2),
                height: .5,
                collidable: !0,
                destructible: !0,
                health: 250,
                reflectBullets: !1,
                hitParticle: "glassChip",
                explodeParticle: "windowFrag",
                loot: [],
                map: {
                    display: !0,
                    color: 11776947,
                    scale: 1
                },
                terrain: {
                    grass: !1,
                    beach: !1
                },
                img: {
                    sprite: "map-vat-01.img",
                    residue: "map-vat-res.img",
                    scale: .5,
                    alpha: 1,
                    tint: 16777215,
                    zIdx: 10
                },
                sound: {
                    bullet: "glass_bullet",
                    punch: "glass_bullet",
                    explode: "window_break_01",
                    enter: "none"
                }
            },
            vat_02: {
                type: "obstacle",
                scale: {
                    createMin: 1,
                    createMax: 1,
                    destroy: .95
                },
                collision: B.createCircle(R.create(0, 0), 3.1),
                height: .5,
                collidable: !0,
                destructible: !1,
                health: 1e3,
                reflectBullets: !1,
                hitParticle: "glassChip",
                explodeParticle: "windowFrag",
                loot: [],
                map: {
                    display: !0,
                    color: 11776947,
                    scale: 1
                },
                terrain: {
                    grass: !0,
                    beach: !1
                },
                img: {
                    sprite: "map-vat-02.img",
                    residue: "map-vat-res.img",
                    scale: .5,
                    alpha: 1,
                    tint: 16777215,
                    zIdx: 10
                },
                sound: {
                    bullet: "glass_bullet",
                    punch: "glass_bullet",
                    explode: "window_break_01",
                    enter: "none"
                }
            },
            vending_01: {
                type: "obstacle",
                scale: {
                    createMin: 1,
                    createMax: 1,
                    destroy: .75
                },
                collision: B.createAabbExtents(R.create(0, .15), R.create(1.7, 1.25)),
                height: .5,
                collidable: !0,
                destructible: !0,
                health: 150,
                hitParticle: "blueChip",
                explodeParticle: ["windowFrag", "lockerFrag"],
                reflectBullets: !0,
                loot: [n("tier_vending_soda", 1, 3), s("soda", 1)],
                map: {
                    display: !1,
                    color: 6697728,
                    scale: .875
                },
                terrain: {
                    grass: !1,
                    beach: !0
                },
                img: {
                    sprite: "map-vending-soda-01.img",
                    residue: "map-vending-res.img",
                    scale: .5,
                    alpha: 1,
                    tint: 16777215,
                    zIdx: 10
                },
                sound: {
                    bullet: "wall_bullet",
                    punch: "metal_punch",
                    explode: "vending_break_01",
                    enter: "none"
                }
            },
            bank_window_01: {
                type: "obstacle",
                scale: {
                    createMin: 1,
                    createMax: 1,
                    destroy: 1
                },
                collision: B.createAabbExtents(R.create(0, 0), R.create(.4, 2)),
                height: 10,
                collidable: !0,
                destructible: !0,
                isWindow: !0,
                health: 75,
                hitParticle: "glassChip",
                explodeParticle: ["windowFrag", "redPlank"],
                reflectBullets: !1,
                loot: [],
                img: {
                    sprite: "map-building-bank-window-01.img",
                    residue: "map-building-bank-window-res-01.img",
                    scale: .5,
                    alpha: 1,
                    tint: 16777215,
                    zIdx: 10
                },
                sound: {
                    bullet: "glass_bullet",
                    punch: "glass_bullet",
                    explode: "window_break_02",
                    enter: "none"
                }
            },
            house_door_01: b({
                material: "wood",
                hinge: R.create(0, 2),
                extents: R.create(.3, 2)
            }),
            house_door_02: b({
                material: "metal",
                hinge: R.create(0, 2),
                extents: R.create(.3, 2),
                door: {
                    sound: {
                        open: "door_open_02",
                        close: "door_close_02"
                    }
                },
                img: {
                    tint: 4934475
                }
            }),
            house_door_03: b({
                material: "wood",
                hinge: R.create(0, 2),
                extents: R.create(.5, 1.75),
                img: {
                    sprite: "map-door-03.img"
                }
            }),
            cell_door_01: b({
                material: "metal",
                hinge: R.create(0, 2),
                extents: R.create(.3, 2),
                door: {
                    canUse: !1,
                    openOnce: !0,
                    sound: {
                        open: "door_open_02",
                        close: "door_close_02"
                    }
                },
                img: {
                    tint: 1776411
                }
            }),
            lab_door_01: _(),
            lab_door_02: _({
                door: {
                    openOneWay: !0,
                    slideOffset: -3.75,
                    casingImg: {
                        pos: R.create(6, 0)
                    }
                }
            }),
            lab_door_03: _({
                door: {
                    openOneWay: !0
                }
            }),
            house_window_01: I(),
            house_window_broken_01: D(),
            lab_window_01: I({
                destroyType: "lab_window_broken_01"
            }),
            lab_window_broken_01: D({
                img: {
                    tint: 1316379
                }
            }),
            hedgehog_wall: P({
                material: "metal",
                extents: R.create(3, .5),
                height: .5,
                map: {
                    display: !0,
                    color: 5854285,
                    scale: 1
                }
            }),
            hedgehog_01: {
                type: "building",
                map: {
                    display: !1,
                    color: 6707790,
                    scale: 1
                },
                terrain: {
                    grass: !1,
                    beach: !0
                },
                floor: {
                    surfaces: [{
                        type: "grass",
                        collision: [B.createAabbExtents(R.create(0, 0), R.create(3, 3))]
                    }],
                    imgs: [{
                        sprite: "map-hedgehog-01.img",
                        scale: .5,
                        alpha: 1,
                        tint: 16777215
                    }]
                },
                ceiling: {
                    scopeIn: [B.createAabbExtents(R.create(0, 0), R.create(0, 0))],
                    scopeOut: [B.createAabbExtents(R.create(0, 0), R.create(0, 0))],
                    imgs: []
                },
                mapObjects: [{
                    type: "hedgehog_wall",
                    pos: R.create(0, 0),
                    scale: 1,
                    ori: 1
                }, {
                    type: "hedgehog_wall",
                    pos: R.create(0, 0),
                    scale: 1,
                    ori: 0
                }]
            },
            cache_01: {
                type: "building",
                map: {
                    display: !1,
                    color: 6707790,
                    scale: 1
                },
                terrain: {
                    grass: !0,
                    beach: !1
                },
                fixedOri: !0,
                floor: {
                    surfaces: [{
                        type: "grass",
                        collision: [B.createAabbExtents(R.create(0, 0), R.create(0, 0))]
                    }],
                    imgs: [{
                        sprite: "",
                        scale: .5,
                        alpha: 1,
                        tint: 16777215
                    }]
                },
                ceiling: {
                    scopeIn: [B.createAabbExtents(R.create(0, 0), R.create(0, 0))],
                    scopeOut: [B.createAabbExtents(R.create(0, 0), R.create(0, 0))],
                    imgs: []
                },
                mapObjects: [{
                    type: "stone_02",
                    pos: R.create(0, 0),
                    scale: 1,
                    ori: 0
                }, {
                    type: "decal_initiative_01",
                    pos: R.create(0, 0),
                    scale: 1,
                    ori: 0,
                    inheritOri: !1
                }]
            },
            hut_wall_int_4: P({
                material: "wood",
                extents: R.create(.5, 2),
                hitParticle: "tanChip",
                img: d("map-wall-04.img", 4608e3)
            }),
            hut_wall_int_5: P({
                material: "wood",
                extents: R.create(.5, 2.5),
                hitParticle: "tanChip",
                img: d("map-wall-05.img", 4608e3)
            }),
            hut_wall_int_6: P({
                material: "wood",
                extents: R.create(.5, 3),
                hitParticle: "tanChip",
                img: d("map-wall-06.img", 4608e3)
            }),
            hut_wall_int_12: P({
                material: "wood",
                extents: R.create(.5, 6),
                hitParticle: "tanChip",
                img: d("map-wall-12.img", 4608e3)
            }),
            hut_wall_int_14: P({
                material: "wood",
                extents: R.create(.5, 7),
                hitParticle: "tanChip",
                img: d("map-wall-14.img", 4608e3)
            }),
            hut_window_open_01: D({
                img: {
                    tint: 7681026
                }
            }),
            hut_01: C({}),
            hut_02: C({
                ceilingImg: "map-building-hut-ceiling-02.img",
                specialLoot: "pot_02"
            }),
            warehouse_wall_side: P({
                material: "metal",
                extents: R.create(25, .6)
            }),
            warehouse_wall_edge: P({
                material: "metal",
                extents: R.create(.6, 3.2)
            }),
            warehouse_01: function(e) {
                return m({
                    type: "building",
                    map: {
                        display: !0,
                        shapes: [{
                            collider: B.createAabbExtents(R.create(27, 0), R.create(3, 12.25)),
                            color: 10066329
                        }, {
                            collider: B.createAabbExtents(R.create(-27, 0), R.create(3, 12.25)),
                            color: 10066329
                        }, {
                            collider: B.createAabbExtents(R.create(0, 0), R.create(24.5, 12.25)),
                            color: 5915450
                        }]
                    },
                    zIdx: 1,
                    terrain: {
                        grass: !0,
                        beach: !1
                    },
                    floor: {
                        surfaces: [{
                            type: "warehouse",
                            collision: [B.createAabbExtents(R.create(0, 0), R.create(32, 12.5))]
                        }],
                        imgs: [{
                            sprite: "map-building-warehouse-floor-01.img",
                            scale: .5,
                            alpha: 1,
                            tint: 16777215
                        }]
                    },
                    ceiling: {
                        scopeIn: [B.createAabbExtents(R.create(0, 0), R.create(24.5, 12.25))],
                        scopeOut: [B.createAabbExtents(R.create(0, 0), R.create(32, 12.5))],
                        vision: {
                            dist: 8,
                            width: 5
                        },
                        imgs: [{
                            sprite: "map-building-warehouse-ceiling-01.img",
                            scale: 1,
                            alpha: 1,
                            tint: 16777215
                        }]
                    },
                    mapObjects: [{
                        type: "warehouse_wall_side",
                        pos: R.create(0, 11.9),
                        scale: 1,
                        ori: 0
                    }, {
                        type: "warehouse_wall_edge",
                        pos: R.create(-24.4, 8.2),
                        scale: 1,
                        ori: 0
                    }, {
                        type: "warehouse_wall_edge",
                        pos: R.create(24.4, 8.2),
                        scale: 1,
                        ori: 0
                    }, {
                        type: "warehouse_wall_side",
                        pos: R.create(0, -11.9),
                        scale: 1,
                        ori: 0
                    }, {
                        type: "warehouse_wall_edge",
                        pos: R.create(-24.4, -8.2),
                        scale: 1,
                        ori: 0
                    }, {
                        type: "warehouse_wall_edge",
                        pos: R.create(24.4, -8.2),
                        scale: 1,
                        ori: 0
                    }, {
                        type: e.topLeftObs,
                        pos: R.create(-21.25, 8.75),
                        scale: 1,
                        ori: 0,
                        inheritOri: !1
                    }, {
                        type: "crate_04",
                        pos: R.create(-16.25, 8.75),
                        scale: 1,
                        ori: 1
                    }, {
                        type: "crate_01",
                        pos: R.create(-21.25, -8.75),
                        scale: 1,
                        ori: 0,
                        inheritOri: !1
                    }, {
                        type: "barrel_01",
                        pos: R.create(-16.5, -8.75),
                        scale: .9,
                        ori: 0
                    }, {
                        type: e.topRightObs,
                        pos: R.create(21.25, 8.75),
                        scale: 1,
                        ori: 0,
                        inheritOri: !1
                    }, {
                        type: "barrel_01",
                        pos: R.create(16.5, 8.75),
                        scale: .9,
                        ori: 0
                    }, {
                        type: "crate_04",
                        pos: R.create(16.25, -8.75),
                        scale: 1,
                        ori: 1
                    }, {
                        type: e.botRightObs,
                        pos: R.create(21.25, -8.75),
                        scale: 1,
                        ori: 0,
                        inheritOri: !1
                    }, {
                        type: c({
                            crate_02: 1,
                            crate_01: 3
                        }),
                        pos: R.create(0, 0),
                        scale: 1,
                        ori: 0,
                        inheritOri: !1
                    }, {
                        type: "crate_01",
                        pos: R.create(5, 0),
                        scale: 1,
                        ori: 0,
                        inheritOri: !1
                    }, {
                        type: "crate_01",
                        pos: R.create(-5, 0),
                        scale: 1,
                        ori: 0,
                        inheritOri: !1
                    }, {
                        type: "crate_04",
                        pos: R.create(0, 5),
                        scale: 1,
                        ori: 0
                    }, {
                        type: "crate_04",
                        pos: R.create(0, -5),
                        scale: 1,
                        ori: 0
                    }]
                }, e || {})
            }({
                topLeftObs: "crate_01",
                topRightObs: "crate_01",
                botRightObs: "crate_01"
            }),
            warehouse_02: function(e) {
                return m({
                    type: "building",
                    map: {
                        display: !0,
                        shapes: [{
                            collider: B.createAabbExtents(R.create(25, 0), R.create(3, 12.25)),
                            color: 10066329
                        }, {
                            collider: B.createAabbExtents(R.create(-25, 0), R.create(3, 12.25)),
                            color: 10066329
                        }, {
                            collider: B.createAabbExtents(R.create(0, 0), R.create(22.5, 12.25)),
                            color: 2240064
                        }]
                    },
                    zIdx: 1,
                    terrain: {
                        grass: !0,
                        beach: !1
                    },
                    floor: {
                        surfaces: [{
                            type: "warehouse",
                            collision: [B.createAabbExtents(R.create(0, 0), R.create(27.5, 12.5))]
                        }],
                        imgs: [{
                            sprite: "map-building-warehouse-floor-02.img",
                            scale: .5,
                            alpha: 1,
                            tint: 16777215
                        }]
                    },
                    ceiling: {
                        scopeIn: [B.createAabbExtents(R.create(0, 0), R.create(22, 12.25))],
                        scopeOut: [B.createAabbExtents(R.create(0, 0), R.create(27.5, 12.5))],
                        vision: {
                            dist: 8,
                            width: 5
                        },
                        imgs: [{
                            sprite: "map-building-warehouse-ceiling-02.img",
                            scale: 1,
                            alpha: 1,
                            tint: 16777215
                        }]
                    },
                    mapObjects: [{
                        type: "metal_wall_ext_43",
                        pos: R.create(0, 12),
                        scale: 1,
                        ori: 1
                    }, {
                        type: "metal_wall_ext_8",
                        pos: R.create(-21.9, 8.5),
                        scale: 1,
                        ori: 0
                    }, {
                        type: "metal_wall_ext_8",
                        pos: R.create(21.9, 8.5),
                        scale: 1,
                        ori: 0
                    }, {
                        type: "metal_wall_ext_43",
                        pos: R.create(0, -12),
                        scale: 1,
                        ori: 1
                    }, {
                        type: "metal_wall_ext_8",
                        pos: R.create(-21.9, -8.5),
                        scale: 1,
                        ori: 0
                    }, {
                        type: "metal_wall_ext_8",
                        pos: R.create(21.9, -8.5),
                        scale: 1,
                        ori: 0
                    }, {
                        type: "crate_01",
                        pos: R.create(-18.75, 8.75),
                        scale: 1,
                        ori: 0,
                        inheritOri: !1
                    }, {
                        type: "barrel_01",
                        pos: R.create(-14, 8.75),
                        scale: .9,
                        ori: 0
                    }, {
                        type: "crate_06",
                        pos: R.create(-18.75, -6),
                        scale: 1,
                        ori: 0
                    }, {
                        type: c({
                            loot_tier_1: 1,
                            "": 1
                        }),
                        pos: R.create(-19.5, -9.5),
                        scale: 1,
                        ori: 0
                    }, {
                        type: "crate_06",
                        pos: R.create(18.75, 6),
                        scale: 1,
                        ori: 0
                    }, {
                        type: c({
                            loot_tier_1: 1,
                            "": 1
                        }),
                        pos: R.create(19.5, 9.5),
                        scale: 1,
                        ori: 0
                    }, {
                        type: "crate_01",
                        pos: R.create(18.75, -8.75),
                        scale: 1,
                        ori: 0,
                        inheritOri: !1
                    }, {
                        type: "barrel_01",
                        pos: R.create(14, -8.75),
                        scale: .9,
                        ori: 0
                    }, {
                        type: c({
                            crate_08: 24,
                            crate_09: 1
                        }),
                        pos: R.create(0, 0),
                        scale: 1,
                        ori: 0,
                        inheritOri: !1
                    }, {
                        type: "crate_01",
                        pos: R.create(0, 5),
                        scale: 1,
                        ori: 0,
                        inheritOri: !1
                    }, {
                        type: "crate_01",
                        pos: R.create(0, -5),
                        scale: 1,
                        ori: 0,
                        inheritOri: !1
                    }, {
                        type: "crate_06",
                        pos: R.create(4, -5),
                        scale: 1,
                        ori: 1
                    }, {
                        type: "crate_06",
                        pos: R.create(-4, 5),
                        scale: 1,
                        ori: 1
                    }, {
                        type: "barrel_01",
                        pos: R.create(4.5, 0),
                        scale: .9,
                        ori: 0,
                        inheritOri: !1
                    }, {
                        type: "barrel_01",
                        pos: R.create(-4.5, 0),
                        scale: .9,
                        ori: 0,
                        inheritOri: !1
                    }]
                }, e || {})
            }({}),
            warehouse_complex_01: {
                type: "building",
                map: {
                    display: !0,
                    shapes: [{
                        collider: B.createAabbExtents(R.create(26, 70.5), R.create(47, 7.5)),
                        color: 5855577
                    }, {
                        collider: B.createAabbExtents(R.create(15.5, 52.5), R.create(57.5, 10.5)),
                        color: 5855577
                    }, {
                        collider: B.createAabbExtents(R.create(33, 11), R.create(75, 31)),
                        color: 5855577
                    }, {
                        collider: B.createAabbExtents(R.create(5, -30), R.create(47, 10)),
                        color: 5855577
                    }, {
                        collider: B.createAabbExtents(R.create(-39.75, 11.25), R.create(2, 51)),
                        color: 16109568
                    }, {
                        collider: B.createCircle(R.create(-39, 55), 1.25),
                        color: 6310464
                    }, {
                        collider: B.createCircle(R.create(-39, 20.5), 1.25),
                        color: 6310464
                    }, {
                        collider: B.createCircle(R.create(-39, 2), 1.25),
                        color: 6310464
                    }, {
                        collider: B.createCircle(R.create(-39, -31.5), 1.25),
                        color: 6310464
                    }, {
                        collider: B.createAabbExtents(R.create(-28, -30), R.create(2, 2)),
                        color: 6697728
                    }, {
                        collider: B.createAabbExtents(R.create(-23, -33), R.create(2, 2)),
                        color: 6697728
                    }, {
                        collider: B.createAabbExtents(R.create(7, 70), R.create(2, 2)),
                        color: 6697728
                    }, {
                        collider: B.createAabbExtents(R.create(12, 72), R.create(2, 2)),
                        color: 6697728
                    }, {
                        collider: B.createCircle(R.create(-26.5, 54.75), 1.75),
                        color: 8026746
                    }, {
                        collider: B.createCircle(R.create(-23.5, 57), 1.75),
                        color: 8026746
                    }, {
                        collider: B.createCircle(R.create(84, -15.5), 1.75),
                        color: 8026746
                    }, {
                        collider: B.createCircle(R.create(40, -35), 1.5),
                        color: 8026746
                    }, {
                        collider: B.createCircle(R.create(65, 61), 1.5),
                        color: 8026746
                    }, {
                        collider: B.createAabbExtents(R.create(44.5, -25), R.create(1.4, 3.1)),
                        color: 13278307
                    }, {
                        collider: B.createAabbExtents(R.create(58, 47.5), R.create(1.4, 3.1)),
                        color: 13278307
                    }]
                },
                terrain: {
                    grass: !0,
                    beach: !0,
                    waterEdge: {
                        dir: R.create(-1, 0),
                        distMin: 72,
                        distMax: 72
                    }
                },
                mapObstacleBounds: [B.createAabbExtents(R.create(26, 70.5), R.create(47, 7.5)), B.createAabbExtents(R.create(15.5, 52.5), R.create(57.5, 10.5)), B.createAabbExtents(R.create(33, 11), R.create(75, 31)), B.createAabbExtents(R.create(5, -30), R.create(47, 10))],
                floor: {
                    surfaces: [{
                        type: "asphalt",
                        collision: [B.createAabbExtents(R.create(26, 70.5), R.create(47, 7.5)), B.createAabbExtents(R.create(15.5, 52.5), R.create(57.5, 10.5)), B.createAabbExtents(R.create(33, 11), R.create(75, 31)), B.createAabbExtents(R.create(5, -30), R.create(47, 10))]
                    }],
                    imgs: [{
                        sprite: "map-complex-warehouse-floor.img",
                        pos: R.create(33, 19),
                        scale: 1,
                        alpha: 1,
                        tint: 16777215
                    }]
                },
                ceiling: {
                    scopeIn: [B.createAabbExtents(R.create(0, 0), R.create(0, 0))],
                    scopeOut: [B.createAabbExtents(R.create(0, 0), R.create(0, 0))],
                    imgs: []
                },
                mapObjects: [{
                    type: "warehouse_02",
                    pos: R.create(5, 0),
                    scale: 1,
                    ori: 0
                }, {
                    type: "warehouse_02",
                    pos: R.create(70, 0),
                    scale: 1,
                    ori: 0
                }, {
                    type: "warehouse_02",
                    pos: R.create(18, 55),
                    scale: 1,
                    ori: 0
                }, {
                    type: "bollard_01",
                    pos: R.create(-39, 55),
                    scale: 1,
                    ori: 2
                }, {
                    type: c({
                        container_01: 1,
                        container_02: 1,
                        container_03: 1,
                        container_06: .12
                    }),
                    pos: R.create(-37.5, 38),
                    scale: 1,
                    ori: 0
                }, {
                    type: "bollard_01",
                    pos: R.create(-39, 20.5),
                    scale: 1,
                    ori: 2
                }, {
                    type: "bollard_01",
                    pos: R.create(-39, 2),
                    scale: 1,
                    ori: 2
                }, {
                    type: c({
                        container_01: 1,
                        container_02: 1,
                        container_03: 1,
                        container_06: .12
                    }),
                    pos: R.create(-37.5, -14),
                    scale: 1,
                    ori: 2
                }, {
                    type: "bollard_01",
                    pos: R.create(-39, -31.5),
                    scale: 1,
                    ori: 2
                }, {
                    type: "crate_01",
                    pos: R.create(-28, -30),
                    scale: 1,
                    ori: 0
                }, {
                    type: "crate_01",
                    pos: R.create(-23, -33),
                    scale: 1,
                    ori: 0
                }, {
                    type: "container_04",
                    pos: R.create(-11.5, -26.575),
                    scale: 1,
                    ori: 0
                }, {
                    type: c({
                        container_01: 1,
                        container_02: 1,
                        container_03: 1,
                        container_05: 2,
                        container_06: .12,
                        "": .75
                    }),
                    pos: R.create(-6, -29),
                    scale: 1,
                    ori: 0
                }, {
                    type: c({
                        container_01: 1,
                        container_02: 1,
                        container_03: 1,
                        container_05: 2,
                        container_06: .12,
                        "": .75
                    }),
                    pos: R.create(9.5, -29),
                    scale: 1,
                    ori: 0
                }, {
                    type: "container_04",
                    pos: R.create(15, -26.575),
                    scale: 1,
                    ori: 0
                }, {
                    type: "shack_02",
                    pos: R.create(37, -30),
                    scale: 1,
                    ori: 0
                }, {
                    type: "sandbags_01",
                    pos: R.create(44.5, -25),
                    scale: 1,
                    ori: 1
                }, {
                    type: "barrel_01",
                    pos: R.create(84, -15.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: c({
                        container_01: 1,
                        container_02: 1,
                        container_03: 1,
                        container_05: 2,
                        container_06: .12,
                        "": .75
                    }),
                    pos: R.create(-3, 22),
                    scale: 1,
                    ori: 1
                }, {
                    type: "container_04",
                    pos: R.create(-5.425, 27.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: c({
                        container_01: 1,
                        container_02: 1,
                        container_03: 1,
                        container_05: 2,
                        container_06: .12,
                        "": .75
                    }),
                    pos: R.create(-3, 33),
                    scale: 1,
                    ori: 1
                }, {
                    type: "container_04",
                    pos: R.create(28, 22),
                    scale: 1,
                    ori: 1
                }, {
                    type: "container_04",
                    pos: R.create(28, 27.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "container_04",
                    pos: R.create(28, 33),
                    scale: 1,
                    ori: 1
                }, {
                    type: c({
                        container_01: 1,
                        container_02: 1,
                        container_03: 1,
                        container_05: 2,
                        container_06: .12,
                        "": .75
                    }),
                    pos: R.create(53, 22),
                    scale: 1,
                    ori: 3
                }, {
                    type: "container_04",
                    pos: R.create(55.425, 27.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: c({
                        container_01: 1,
                        container_02: 1,
                        container_03: 1,
                        container_05: 2,
                        container_06: .12,
                        "": .75
                    }),
                    pos: R.create(53, 33),
                    scale: 1,
                    ori: 3
                }, {
                    type: "container_04",
                    pos: R.create(84, 22),
                    scale: 1,
                    ori: 3
                }, {
                    type: c({
                        container_01: 1,
                        container_02: 1,
                        container_03: 1,
                        container_05: 2,
                        container_06: .12,
                        "": .75
                    }),
                    pos: R.create(86.425, 27.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "barrel_01",
                    pos: R.create(-26.5, 54.75),
                    scale: 1,
                    ori: 0
                }, {
                    type: "barrel_01",
                    pos: R.create(-23.5, 57),
                    scale: 1,
                    ori: 0
                }, {
                    type: "crate_01",
                    pos: R.create(7, 70),
                    scale: 1,
                    ori: 0
                }, {
                    type: "crate_01",
                    pos: R.create(12, 72),
                    scale: 1,
                    ori: 0
                }, {
                    type: "shack_02",
                    pos: R.create(60, 58),
                    scale: 1,
                    ori: 1
                }, {
                    type: "sandbags_01",
                    pos: R.create(58, 47.5),
                    scale: 1,
                    ori: 1
                }]
            },
            shack_wall_top: P({
                material: "wood",
                extents: R.create(5.6, .35),
                height: 10,
                img: d("map-wall-shack-top.img")
            }),
            shack_wall_side_left: P({
                material: "wood",
                extents: R.create(.35, 3.43),
                height: 10,
                img: d("map-wall-shack-left.img")
            }),
            shack_wall_side_right: P({
                material: "wood",
                extents: R.create(.35, 3.8),
                height: 10,
                img: d("map-wall-shack-right.img")
            }),
            shack_wall_bot: P({
                material: "wood",
                extents: R.create(3.75, .35),
                height: 10,
                img: d("map-wall-shack-bot.img")
            }),
            shack_01: {
                type: "building",
                map: {
                    display: !0,
                    color: 6707790,
                    scale: 1
                },
                terrain: {
                    grass: !0,
                    beach: !1
                },
                floor: {
                    surfaces: [{
                        type: "shack",
                        collision: [B.createAabbExtents(R.create(0, .9), R.create(5.6, 3.5)), B.createAabbExtents(R.create(3.75, -4), R.create(2.25, 1.5))]
                    }],
                    imgs: [{
                        sprite: "map-building-shack-floor-01.img",
                        scale: .5,
                        alpha: 1,
                        tint: 16777215
                    }]
                },
                ceiling: {
                    scopeIn: [B.createAabbExtents(R.create(0, .9), R.create(5.6, 3.5))],
                    scopeOut: [B.createAabbExtents(R.create(0, .8), R.create(5.9, 3.8))],
                    vision: {
                        width: 4
                    },
                    imgs: [{
                        sprite: "map-building-shack-ceiling-01.img",
                        scale: .5,
                        alpha: 1,
                        tint: 16777215
                    }],
                    destroy: {
                        wallCount: 2,
                        particle: "shackFrag",
                        particleCount: 25,
                        residue: "map-shack-res-01.img"
                    }
                },
                mapObjects: [{
                    type: "shack_wall_bot",
                    pos: R.create(-1.49, -2.4),
                    scale: 1,
                    ori: 0
                }, {
                    type: "shack_wall_side_left",
                    pos: R.create(-5.55, .69),
                    scale: 1,
                    ori: 0
                }, {
                    type: "shack_wall_top",
                    pos: R.create(-.3, 4.33),
                    scale: 1,
                    ori: 0
                }, {
                    type: "shack_wall_side_right",
                    pos: R.create(5.55, .95),
                    scale: 1,
                    ori: 0
                }, {
                    type: "crate_01",
                    pos: R.create(7.9, 2.85),
                    scale: .8,
                    ori: 0,
                    inheritOri: !1
                }, {
                    type: "barrel_01",
                    pos: R.create(7.45, -.9),
                    scale: .85,
                    ori: 0
                }, {
                    type: c({
                        loot_tier_2: 1
                    }),
                    pos: R.create(-2, .8),
                    scale: 1,
                    ori: 0
                }, {
                    type: c({
                        loot_tier_1: 1,
                        "": 1
                    }),
                    pos: R.create(2, .8),
                    scale: 1,
                    ori: 0
                }]
            },
            shack_02: {
                type: "building",
                map: {
                    display: !0,
                    color: 4014894,
                    scale: 1
                },
                terrain: {
                    grass: !0,
                    beach: !1
                },
                zIdx: 1,
                floor: {
                    surfaces: [{
                        type: "shack",
                        collision: [B.createAabbExtents(R.create(0, 1), R.create(5, 4)), B.createAabbExtents(R.create(3.75, -4), R.create(2.25, 1.5))]
                    }],
                    imgs: [{
                        sprite: "map-building-shack-floor-02.img",
                        scale: .5,
                        alpha: 1,
                        tint: 16777215
                    }]
                },
                ceiling: {
                    scopeIn: [B.createAabbExtents(R.create(0, 1), R.create(4.75, 3.75))],
                    scopeOut: [B.createAabbExtents(R.create(0, 1), R.create(0, 0))],
                    vision: {
                        width: 4
                    },
                    imgs: [{
                        sprite: "map-building-shack-ceiling-02.img",
                        scale: .5,
                        alpha: 1,
                        tint: 16777215
                    }],
                    destroy: {
                        wallCount: 2,
                        particle: "shackFrag",
                        particleCount: 25,
                        residue: "map-shack-res-02.img"
                    }
                },
                mapObjects: [{
                    type: "barn_wall_int_2",
                    pos: R.create(-3, -2.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "barn_wall_int_2",
                    pos: R.create(3, -2.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "barn_wall_int_8",
                    pos: R.create(-4.5, 1),
                    scale: 1,
                    ori: 0
                }, {
                    type: "barn_wall_int_8",
                    pos: R.create(4.5, 1),
                    scale: 1,
                    ori: 0
                }, {
                    type: "barn_wall_int_8",
                    pos: R.create(0, 4.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "barrel_01",
                    pos: R.create(4, -4.5),
                    scale: .8,
                    ori: 0
                }, {
                    type: c({
                        loot_tier_1: 1
                    }),
                    pos: R.create(0, 1),
                    scale: 1,
                    ori: 0
                }]
            },
            outhouse_wall_top: P({
                material: "wood",
                extents: R.create(3.2, .35),
                height: 10,
                hitParticle: "outhouseChip",
                explodeParticle: "outhousePlank",
                health: 100,
                img: d("map-wall-outhouse-top.img")
            }),
            outhouse_wall_side: P({
                material: "wood",
                extents: R.create(.35, 3.1),
                height: 10,
                hitParticle: "outhouseChip",
                explodeParticle: "outhousePlank",
                health: 100,
                img: d("map-wall-outhouse-side.img")
            }),
            outhouse_wall_bot: P({
                material: "wood",
                extents: R.create(1.15, .35),
                height: 10,
                hitParticle: "outhouseChip",
                explodeParticle: "outhousePlank",
                health: 100,
                img: d("map-wall-outhouse-bot.img")
            }),
            outhouse_01: {
                type: "building",
                map: {
                    display: !0,
                    color: 8145976,
                    scale: 1
                },
                terrain: {
                    grass: !0,
                    beach: !1
                },
                zIdx: 1,
                floor: {
                    surfaces: [{
                        type: "shack",
                        collision: [B.createAabbExtents(R.create(0, 0), R.create(3.8, 5))]
                    }],
                    imgs: [{
                        sprite: "map-building-outhouse-floor.img",
                        scale: .5,
                        alpha: 1,
                        tint: 16777215
                    }]
                },
                ceiling: {
                    scopeIn: [B.createAabbExtents(R.create(0, 1.45), R.create(3.6, 3.2))],
                    scopeOut: [B.createAabbExtents(R.create(0, 1.4), R.create(3.8, 3.4))],
                    imgs: [{
                        sprite: "map-building-outhouse-ceiling.img",
                        scale: .5,
                        alpha: 1,
                        tint: 16777215
                    }],
                    destroy: {
                        wallCount: 2,
                        particleCount: 15,
                        particle: "outhouseFrag",
                        residue: "map-outhouse-res.img"
                    }
                },
                mapObjects: [{
                    type: "outhouse_wall_top",
                    pos: R.create(0, 4.46),
                    scale: 1,
                    ori: 0
                }, {
                    type: "outhouse_wall_side",
                    pos: R.create(3.4, 1.73),
                    scale: 1,
                    ori: 0
                }, {
                    type: "outhouse_wall_side",
                    pos: R.create(-3.4, 1.73),
                    scale: 1,
                    ori: 0
                }, {
                    type: "outhouse_wall_bot",
                    pos: R.create(-2.65, -1.52),
                    scale: 1,
                    ori: 0
                }, {
                    type: "outhouse_wall_bot",
                    pos: R.create(2.65, -1.52),
                    scale: 1,
                    ori: 0
                }, {
                    type: c({
                        toilet_01: 5,
                        toilet_02: 1
                    }),
                    pos: R.create(0, 2),
                    scale: .95,
                    ori: 0
                }]
            },
            brick_wall_ext_1: P({
                material: "brick",
                extents: R.create(.5, .5)
            }),
            brick_wall_ext_2: P({
                material: "brick",
                extents: R.create(.5, 1)
            }),
            brick_wall_ext_3: P({
                material: "brick",
                extents: R.create(.5, 1.5)
            }),
            brick_wall_ext_4: P({
                material: "brick",
                extents: R.create(.5, 2)
            }),
            brick_wall_ext_5: P({
                material: "brick",
                extents: R.create(.5, 2.5)
            }),
            brick_wall_ext_6: P({
                material: "brick",
                extents: R.create(.5, 3)
            }),
            brick_wall_ext_7: P({
                material: "brick",
                extents: R.create(.5, 3.5)
            }),
            brick_wall_ext_8: P({
                material: "brick",
                extents: R.create(.5, 4)
            }),
            brick_wall_ext_9: P({
                material: "brick",
                extents: R.create(.5, 4.5)
            }),
            brick_wall_ext_10: P({
                material: "brick",
                extents: R.create(.5, 5)
            }),
            brick_wall_ext_11: P({
                material: "brick",
                extents: R.create(.5, 5.5)
            }),
            brick_wall_ext_12: P({
                material: "brick",
                extents: R.create(.5, 6)
            }),
            brick_wall_ext_13: P({
                material: "brick",
                extents: R.create(.5, 6.5)
            }),
            brick_wall_ext_14: P({
                material: "brick",
                extents: R.create(.5, 7)
            }),
            brick_wall_ext_16: P({
                material: "brick",
                extents: R.create(.5, 8)
            }),
            brick_wall_ext_17: P({
                material: "brick",
                extents: R.create(.5, 8.5)
            }),
            brick_wall_ext_18: P({
                material: "brick",
                extents: R.create(.5, 9)
            }),
            brick_wall_ext_19: P({
                material: "brick",
                extents: R.create(.5, 9.5)
            }),
            brick_wall_ext_20: P({
                material: "brick",
                extents: R.create(.5, 10)
            }),
            brick_wall_ext_21: P({
                material: "brick",
                extents: R.create(.5, 10.5)
            }),
            brick_wall_ext_23: P({
                material: "brick",
                extents: R.create(.5, 11.5)
            }),
            brick_wall_ext_33: P({
                material: "brick",
                extents: R.create(.5, 16.5)
            }),
            brick_wall_ext_41: P({
                material: "brick",
                extents: R.create(.5, 20.5)
            }),
            brick_wall_ext_short_7: P({
                material: "brick",
                extents: R.create(.5, 3.5),
                height: .5
            }),
            brick_wall_ext_thicker_5: P({
                material: "brick",
                extents: R.create(1.5, 2.5)
            }),
            brick_wall_ext_thicker_6: P({
                material: "brick",
                extents: R.create(1.5, 3)
            }),
            brick_wall_ext_thicker_7: P({
                material: "brick",
                extents: R.create(1.5, 3.5)
            }),
            brick_wall_ext_thicker_8: P({
                material: "brick",
                extents: R.create(1.5, 4)
            }),
            brick_wall_ext_thicker_9: P({
                material: "brick",
                extents: R.create(1.5, 4.5)
            }),
            brick_wall_ext_thicker_15: P({
                material: "brick",
                extents: R.create(1.5, 7.5)
            }),
            brick_wall_ext_thicker_16: P({
                material: "brick",
                extents: R.create(1.5, 8)
            }),
            brick_wall_ext_thicker_24: P({
                material: "brick",
                extents: R.create(1.5, 12)
            }),
            metal_wall_ext_3: P({
                material: "metal",
                extents: R.create(.5, 1.5)
            }),
            metal_wall_ext_4: P({
                material: "metal",
                extents: R.create(.5, 2)
            }),
            metal_wall_ext_6: P({
                material: "metal",
                extents: R.create(.5, 3)
            }),
            metal_wall_ext_7: P({
                material: "metal",
                extents: R.create(.5, 3.5)
            }),
            metal_wall_ext_8: P({
                material: "metal",
                extents: R.create(.5, 4)
            }),
            metal_wall_ext_9: P({
                material: "metal",
                extents: R.create(.5, 4.5)
            }),
            metal_wall_ext_10: P({
                material: "metal",
                extents: R.create(.5, 5)
            }),
            metal_wall_ext_12: P({
                material: "metal",
                extents: R.create(.5, 6)
            }),
            metal_wall_ext_18: P({
                material: "metal",
                extents: R.create(.5, 9)
            }),
            metal_wall_ext_43: P({
                material: "metal",
                extents: R.create(.5, 21.5)
            }),
            metal_wall_ext_short_6: P({
                material: "metal",
                extents: R.create(.5, 3),
                height: .5
            }),
            metal_wall_ext_short_7: P({
                material: "metal",
                extents: R.create(.5, 3.5),
                height: .5
            }),
            metal_wall_ext_thick_6: P({
                material: "metal",
                extents: R.create(1, 3)
            }),
            metal_wall_ext_thick_20: P({
                material: "metal",
                extents: R.create(1, 10)
            }),
            metal_wall_ext_thicker_4: P({
                material: "metal",
                extents: R.create(1.5, 2)
            }),
            metal_wall_ext_thicker_5: P({
                material: "metal",
                extents: R.create(1.5, 2.5)
            }),
            metal_wall_ext_thicker_6: P({
                material: "metal",
                extents: R.create(1.5, 3)
            }),
            metal_wall_ext_thicker_7: P({
                material: "metal",
                extents: R.create(1.5, 3.5)
            }),
            metal_wall_ext_thicker_8: P({
                material: "metal",
                extents: R.create(1.5, 4)
            }),
            metal_wall_ext_thicker_9: P({
                material: "metal",
                extents: R.create(1.5, 4.5)
            }),
            metal_wall_ext_thicker_10: P({
                material: "metal",
                extents: R.create(1.5, 5)
            }),
            metal_wall_ext_thicker_11: P({
                material: "metal",
                extents: R.create(1.5, 5.5)
            }),
            metal_wall_ext_thicker_13: P({
                material: "metal",
                extents: R.create(1.5, 6.5)
            }),
            metal_wall_ext_thicker_14: P({
                material: "metal",
                extents: R.create(1.5, 7)
            }),
            metal_wall_ext_thicker_15: P({
                material: "metal",
                extents: R.create(1.5, 7.5)
            }),
            metal_wall_ext_thicker_16: P({
                material: "metal",
                extents: R.create(1.5, 8)
            }),
            metal_wall_ext_thicker_17: P({
                material: "metal",
                extents: R.create(1.5, 8.5)
            }),
            metal_wall_ext_thicker_18: P({
                material: "metal",
                extents: R.create(1.5, 9)
            }),
            metal_wall_ext_thicker_19: P({
                material: "metal",
                extents: R.create(1.5, 9.5)
            }),
            metal_wall_ext_thicker_20: P({
                material: "metal",
                extents: R.create(1.5, 10)
            }),
            metal_wall_ext_thicker_21: P({
                material: "metal",
                extents: R.create(1.5, 10.5)
            }),
            metal_wall_ext_thicker_23: P({
                material: "metal",
                extents: R.create(1.5, 11.5)
            }),
            metal_wall_ext_thicker_24: P({
                material: "metal",
                extents: R.create(1.5, 12)
            }),
            metal_wall_ext_thicker_29: P({
                material: "metal",
                extents: R.create(1.5, 14.5)
            }),
            metal_wall_ext_thicker_42: P({
                material: "metal",
                extents: R.create(1.5, 21)
            }),
            glass_wall_10: P({
                material: "glass",
                extents: R.create(.5, 5),
                health: 50,
                img: d("map-wall-glass-10.img")
            }),
            glass_wall_12: P({
                material: "glass",
                extents: R.create(.5, 6),
                health: 50,
                img: d("map-wall-glass-12.img")
            }),
            concrete_wall_ext_2: P({
                material: "concrete",
                extents: R.create(.5, 1)
            }),
            concrete_wall_ext_6: P({
                material: "concrete",
                extents: R.create(.5, 3)
            }),
            concrete_wall_ext_7: P({
                material: "concrete",
                extents: R.create(.5, 3.5)
            }),
            concrete_wall_ext_8: P({
                material: "concrete",
                extents: R.create(.5, 4)
            }),
            concrete_wall_ext_11: P({
                material: "concrete",
                extents: R.create(.5, 5.5)
            }),
            concrete_wall_ext_13: P({
                material: "concrete",
                extents: R.create(.5, 6.5)
            }),
            concrete_wall_ext_17: P({
                material: "concrete",
                extents: R.create(.5, 8.5)
            }),
            panicroom_01: {
                type: "building",
                map: {
                    display: !1,
                    color: 6707790,
                    scale: 1
                },
                terrain: {
                    grass: !0,
                    beach: !1
                },
                zIdx: 2,
                floor: {
                    surfaces: [{
                        type: "container",
                        collision: [B.createAabbExtents(R.create(0, 0), R.create(4.5, 6))]
                    }],
                    imgs: [{
                        sprite: "map-building-panicroom-floor.img",
                        scale: .5,
                        alpha: 1,
                        tint: 6250335
                    }]
                },
                ceiling: {
                    scopeIn: [B.createAabbExtents(R.create(0, 0), R.create(4.5, 6))],
                    scopeOut: [B.createAabbExtents(R.create(0, 0), R.create(4.5, 6))],
                    imgs: [{
                        sprite: "map-building-panicroom-ceiling.img",
                        scale: .5,
                        alpha: 1,
                        tint: 6250335
                    }]
                },
                mapObjects: [{
                    type: "metal_wall_ext_12",
                    pos: R.create(-4, 0),
                    scale: 1,
                    ori: 0
                }, {
                    type: "metal_wall_ext_3",
                    pos: R.create(-2, 5.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "metal_wall_ext_7",
                    pos: R.create(0, -5.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "metal_wall_ext_12",
                    pos: R.create(4, 0),
                    scale: 1,
                    ori: 0
                }, {
                    type: "loot_tier_2",
                    pos: R.create(0, -.05),
                    scale: 1,
                    ori: 0
                }, {
                    type: c({
                        loot_tier_1: 1,
                        "": 1
                    }),
                    pos: R.create(0, .05),
                    scale: 1,
                    ori: 0
                }]
            },
            barn_wall_int_2: P({
                material: "wood",
                extents: R.create(.5, 1),
                hitParticle: "ltgreenChip",
                img: d("map-wall-02-rounded.img", 7173701)
            }),
            barn_wall_int_4: P({
                material: "wood",
                extents: R.create(.5, 2),
                hitParticle: "ltgreenChip",
                img: d("map-wall-04-rounded.img", 7173701)
            }),
            barn_wall_int_5: P({
                material: "wood",
                extents: R.create(.5, 2.5),
                hitParticle: "ltgreenChip",
                img: d("map-wall-05-rounded.img", 7173701)
            }),
            barn_wall_int_6: P({
                material: "wood",
                extents: R.create(.5, 3),
                hitParticle: "ltgreenChip",
                img: d("map-wall-06-rounded.img", 7173701)
            }),
            barn_wall_int_7: P({
                material: "wood",
                extents: R.create(.5, 3.5),
                hitParticle: "ltgreenChip",
                img: d("map-wall-07-rounded.img", 7173701)
            }),
            barn_wall_int_8: P({
                material: "wood",
                extents: R.create(.5, 4),
                hitParticle: "ltgreenChip",
                img: d("map-wall-08-rounded.img", 7173701)
            }),
            barn_wall_int_11: P({
                material: "wood",
                extents: R.create(.5, 5.5),
                hitParticle: "ltgreenChip",
                img: d("map-wall-11-rounded.img", 7173701)
            }),
            barn_wall_int_13: P({
                material: "wood",
                extents: R.create(.5, 6.5),
                hitParticle: "ltgreenChip",
                img: d("map-wall-13-rounded.img", 7173701)
            }),
            barn_column_1: P({
                material: "concrete",
                extents: R.create(1, 1),
                hitParticle: "ltgreenChip",
                img: d("map-column-01.img", 2764060)
            }),
            barn_01: {
                type: "building",
                map: {
                    display: !0,
                    shapes: [{
                        collider: B.createAabbExtents(R.create(0, 12), R.create(5, 2)),
                        color: 12300935
                    }, {
                        collider: B.createAabbExtents(R.create(0, -2), R.create(24.5, 12.8)),
                        color: 3816739
                    }]
                },
                terrain: {
                    grass: !0,
                    beach: !1
                },
                zIdx: 1,
                floor: {
                    surfaces: [{
                        type: "house",
                        collision: [B.createAabbExtents(R.create(0, -2), R.create(25, 13.2)), B.createAabbExtents(R.create(0, 12), R.create(5.5, 2.5))]
                    }],
                    imgs: [{
                        sprite: "map-building-barn-floor-01.img",
                        scale: .5,
                        alpha: 1,
                        tint: 16777215
                    }]
                },
                ceiling: {
                    scopeIn: [B.createAabbExtents(R.create(0, -2), R.create(24.5, 12.8)), B.createAabbExtents(R.create(0, 12), R.create(5.5, 2.5))],
                    scopeOut: [B.createAabbExtents(R.create(0, -14.5), R.create(5.5, 4)), B.createAabbExtents(R.create(0, 14.5), R.create(5.5, 4))],
                    vision: {
                        dist: 5.5,
                        width: 2.75,
                        linger: .5,
                        fadeRate: 6
                    },
                    imgs: [{
                        sprite: "map-building-barn-ceiling.img",
                        scale: .5,
                        alpha: 1,
                        tint: 16777215
                    }]
                },
                mapObjects: [{
                    type: "brick_wall_ext_4",
                    pos: R.create(-24.5, 9),
                    scale: 1,
                    ori: 0
                }, {
                    type: "brick_wall_ext_3",
                    pos: R.create(-22.5, 10.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "brick_wall_ext_12",
                    pos: R.create(-24.5, -2),
                    scale: 1,
                    ori: 0
                }, {
                    type: "brick_wall_ext_4",
                    pos: R.create(-24.5, -13),
                    scale: 1,
                    ori: 0
                }, {
                    type: "brick_wall_ext_3",
                    pos: R.create(-22.5, -14.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "house_window_01",
                    pos: R.create(-24.75, 5.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "house_window_01",
                    pos: R.create(-24.75, -9.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "house_window_01",
                    pos: R.create(-19.5, 10.75),
                    scale: 1,
                    ori: 1
                }, {
                    type: "house_window_01",
                    pos: R.create(-19.5, -14.75),
                    scale: 1,
                    ori: 1
                }, {
                    type: "brick_wall_ext_16",
                    pos: R.create(-10, 10.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "brick_wall_ext_16",
                    pos: R.create(10, 10.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "brick_wall_ext_16",
                    pos: R.create(-10, -14.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "brick_wall_ext_6",
                    pos: R.create(5, -14.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "brick_wall_ext_4",
                    pos: R.create(-5.5, 13),
                    scale: 1,
                    ori: 0
                }, {
                    type: "brick_wall_ext_4",
                    pos: R.create(5.5, 13),
                    scale: 1,
                    ori: 0
                }, {
                    type: "brick_wall_ext_3",
                    pos: R.create(-3.5, 14.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "brick_wall_ext_3",
                    pos: R.create(3.5, 14.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "house_window_01",
                    pos: R.create(9.5, -14.75),
                    scale: 1,
                    ori: 1
                }, {
                    type: "house_door_01",
                    pos: R.create(2, 14.75),
                    scale: 1,
                    ori: 1
                }, {
                    type: "house_door_01",
                    pos: R.create(-2, -14.75),
                    scale: 1,
                    ori: 3
                }, {
                    type: "brick_wall_ext_4",
                    pos: R.create(24.5, 9),
                    scale: 1,
                    ori: 0
                }, {
                    type: "brick_wall_ext_3",
                    pos: R.create(22.5, 10.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "brick_wall_ext_13",
                    pos: R.create(17.5, -14.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "brick_wall_ext_19",
                    pos: R.create(24.5, -5.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "brick_wall_ext_1",
                    pos: R.create(23.5, -1.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "house_window_01",
                    pos: R.create(24.75, 5.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "house_window_01",
                    pos: R.create(19.5, 10.75),
                    scale: 1,
                    ori: 1
                }, {
                    type: "panicroom_01",
                    pos: R.create(19.5, -8),
                    scale: 1,
                    ori: 0,
                    inheritOri: !0
                }, {
                    type: "barn_wall_int_6",
                    pos: R.create(-21, .5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "barn_wall_int_6",
                    pos: R.create(-21, -4.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "barn_wall_int_5",
                    pos: R.create(-11.5, .5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "barn_wall_int_2",
                    pos: R.create(-13, -4.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "barn_wall_int_7",
                    pos: R.create(-6.5, -4.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "barn_wall_int_8",
                    pos: R.create(-11.5, -10),
                    scale: 1,
                    ori: 0
                }, {
                    type: "barn_wall_int_8",
                    pos: R.create(-7.5, 6),
                    scale: 1,
                    ori: 0
                }, {
                    type: "barn_wall_int_5",
                    pos: R.create(-3.5, -11.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "barn_wall_int_7",
                    pos: R.create(10.5, .5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "barn_wall_int_5",
                    pos: R.create(14.5, 7.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "barn_wall_int_13",
                    pos: R.create(14.5, -7.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "barn_wall_int_4",
                    pos: R.create(17, -1.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "house_door_01",
                    pos: R.create(-18, -4.5),
                    scale: 1,
                    ori: 3
                }, {
                    type: "house_door_01",
                    pos: R.create(-18, .5),
                    scale: 1,
                    ori: 3
                }, {
                    type: "house_door_01",
                    pos: R.create(-3.5, -5),
                    scale: 1,
                    ori: 2
                }, {
                    type: "house_door_01",
                    pos: R.create(14.5, 1),
                    scale: 1,
                    ori: 0
                }, {
                    type: "house_door_02",
                    pos: R.create(23, -1.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "barn_column_1",
                    pos: R.create(-8, 1),
                    scale: 1,
                    ori: 0,
                    inheritOri: !0
                }, {
                    type: "barn_column_1",
                    pos: R.create(-11, -5),
                    scale: 1,
                    ori: 0,
                    inheritOri: !0
                }, {
                    type: "barn_column_1",
                    pos: R.create(15, 0),
                    scale: 1,
                    ori: 0,
                    inheritOri: !0
                }, {
                    type: c({
                        toilet_01: 5,
                        toilet_02: 1
                    }),
                    pos: R.create(-7.5, -12),
                    scale: 1,
                    ori: 2,
                    inheritOri: !0
                }, {
                    type: c({
                        drawers_01: 7,
                        drawers_02: 1
                    }),
                    pos: R.create(-12.5, 8.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: c({
                        drawers_01: 7,
                        drawers_02: 1
                    }),
                    pos: R.create(-5.5, 7.25),
                    scale: 1,
                    ori: 1
                }, {
                    type: c({
                        drawers_01: 7,
                        drawers_02: 1
                    }),
                    pos: R.create(-13.5, -9.5),
                    scale: 1,
                    ori: 3
                }, {
                    type: "stand_01",
                    pos: R.create(16.5, 8.5),
                    scale: 1,
                    ori: 0,
                    inheritOri: !0
                }, {
                    type: "stand_01",
                    pos: R.create(3.5, 12.5),
                    scale: 1,
                    ori: 3,
                    inheritOri: !0
                }, {
                    type: "table_01",
                    pos: R.create(8, -8),
                    scale: 1,
                    ori: 0,
                    inheritOri: !0
                }, {
                    type: "oven_01",
                    pos: R.create(12.25, -1.5),
                    scale: 1,
                    ori: 0,
                    inheritOri: !0
                }, {
                    type: "refrigerator_01",
                    pos: R.create(8.75, -1.5),
                    scale: 1,
                    ori: 0,
                    inheritOri: !0
                }, {
                    type: "bush_02",
                    pos: R.create(-22, -2),
                    scale: 1,
                    ori: 0,
                    inheritOri: !0
                }, {
                    type: "bush_02",
                    pos: R.create(12, 8),
                    scale: 1,
                    ori: 0,
                    inheritOri: !0
                }, {
                    type: c({
                        loot_tier_1: 1,
                        "": 1
                    }),
                    pos: R.create(-19, -9.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: c({
                        loot_tier_1: 1,
                        "": 1
                    }),
                    pos: R.create(-19, 5.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "loot_tier_1",
                    pos: R.create(0, 5.5),
                    scale: 1,
                    ori: 0
                }]
            },
            bank_wall_int_3: P({
                material: "wood",
                extents: R.create(.5, 1.5),
                img: d("map-wall-03-rounded.img", 7951934)
            }),
            bank_wall_int_4: P({
                material: "wood",
                extents: R.create(.5, 2),
                img: d("map-wall-04-rounded.img", 7951934)
            }),
            bank_wall_int_5: P({
                material: "wood",
                extents: R.create(.5, 2.5),
                img: d("map-wall-05-rounded.img", 7951934)
            }),
            bank_wall_int_8: P({
                material: "wood",
                extents: R.create(.5, 4),
                img: d("map-wall-08-rounded.img", 7951934)
            }),
            bank_01: {
                type: "building",
                map: {
                    display: !0,
                    shapes: [{
                        collider: B.createAabbExtents(R.create(-16, 7), R.create(10.75, 11)),
                        color: 7820585
                    }, {
                        collider: B.createAabbExtents(R.create(6, 0), R.create(11.5, 18.25)),
                        color: 9989427
                    }, {
                        collider: B.createAabbExtents(R.create(22, 4), R.create(4.5, 7.5)),
                        color: 7820585
                    }]
                },
                terrain: {
                    grass: !0,
                    beach: !1
                },
                zIdx: 1,
                floor: {
                    surfaces: [{
                        type: "tile",
                        collision: [B.createAabbExtents(R.create(6, -1), R.create(11.25, 18.25)), B.createAabbExtents(R.create(21.5, 4), R.create(4.75, 7.25))]
                    }],
                    imgs: [{
                        sprite: "map-building-bank-floor.img",
                        scale: .5,
                        alpha: 1,
                        tint: 16777215
                    }]
                },
                ceiling: {
                    scopeIn: [B.createAabbExtents(R.create(6, -1), R.create(11.25, 18.25)), B.createAabbExtents(R.create(21.5, 4), R.create(4.75, 7.25)), B.createAabbExtents(R.create(-16, 6), R.create(10.25, 11))],
                    scopeOut: [B.createAabbExtents(R.create(6, 1.25), R.create(15.25, 20))],
                    vision: {
                        dist: 5.5,
                        width: 2.75,
                        linger: .5,
                        fadeRate: 6
                    },
                    imgs: [{
                        sprite: "map-building-bank-ceiling.img",
                        scale: .5,
                        alpha: 1,
                        tint: 16777215
                    }]
                },
                mapObjects: [{
                    type: "brick_wall_ext_23",
                    pos: R.create(-14, 17),
                    scale: 1,
                    ori: 1
                }, {
                    type: "brick_wall_ext_23",
                    pos: R.create(-25.9, 6),
                    scale: 1,
                    ori: 0
                }, {
                    type: "brick_wall_ext_20",
                    pos: R.create(-15.5, -5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "brick_wall_ext_5",
                    pos: R.create(-5, -7),
                    scale: 1,
                    ori: 0
                }, {
                    type: "brick_wall_ext_6",
                    pos: R.create(-5, -16.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "brick_wall_ext_4",
                    pos: R.create(-2.5, -19),
                    scale: 1,
                    ori: 1
                }, {
                    type: "brick_wall_ext_7",
                    pos: R.create(6, -19),
                    scale: 1,
                    ori: 1
                }, {
                    type: "brick_wall_ext_4",
                    pos: R.create(14.5, -19),
                    scale: 1,
                    ori: 1
                }, {
                    type: "brick_wall_ext_6",
                    pos: R.create(17, -16.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "brick_wall_ext_7",
                    pos: R.create(17, -6),
                    scale: 1,
                    ori: 0
                }, {
                    type: "house_window_01",
                    pos: R.create(1, -19.25),
                    scale: 1,
                    ori: 1
                }, {
                    type: "house_window_01",
                    pos: R.create(11, -19.25),
                    scale: 1,
                    ori: 1
                }, {
                    type: "house_door_01",
                    pos: R.create(-5.25, -13.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "house_door_01",
                    pos: R.create(17.25, -13.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "brick_wall_ext_9",
                    pos: R.create(22, -3),
                    scale: 1,
                    ori: 1
                }, {
                    type: "brick_wall_ext_13",
                    pos: R.create(26, 4),
                    scale: 1,
                    ori: 0
                }, {
                    type: "brick_wall_ext_9",
                    pos: R.create(22, 11),
                    scale: 1,
                    ori: 1
                }, {
                    type: "brick_wall_ext_7",
                    pos: R.create(17, 14),
                    scale: 1,
                    ori: 0
                }, {
                    type: "brick_wall_ext_4",
                    pos: R.create(14.5, 17),
                    scale: 1,
                    ori: 1
                }, {
                    type: "brick_wall_ext_8",
                    pos: R.create(4.5, 17),
                    scale: 1,
                    ori: 1
                }, {
                    type: "house_window_01",
                    pos: R.create(-1, 17.25),
                    scale: 1,
                    ori: 1
                }, {
                    type: "vault_01",
                    pos: R.create(-12, 6),
                    scale: 1,
                    ori: 0,
                    inheritOri: !0
                }, {
                    type: "bank_wall_int_4",
                    pos: R.create(-2.5, -5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "bank_window_01",
                    pos: R.create(1, -5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "bank_wall_int_3",
                    pos: R.create(4, -5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "bank_wall_int_4",
                    pos: R.create(6, -3.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "bank_window_01",
                    pos: R.create(6, 0),
                    scale: 1,
                    ori: 0
                }, {
                    type: "bank_wall_int_4",
                    pos: R.create(6, 3.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "bank_wall_int_4",
                    pos: R.create(8.5, 5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "bank_window_01",
                    pos: R.create(12, 5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "bank_wall_int_3",
                    pos: R.create(15, 5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "bank_wall_int_5",
                    pos: R.create(17, 4),
                    scale: 1,
                    ori: 0
                }, {
                    type: "bank_wall_int_8",
                    pos: R.create(21.5, 4),
                    scale: 1,
                    ori: 1
                }, {
                    type: "house_door_01",
                    pos: R.create(17, -2.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "house_door_01",
                    pos: R.create(17, 10.5),
                    scale: 1,
                    ori: 2
                }, {
                    type: "house_door_01",
                    pos: R.create(12.5, 17.25),
                    scale: 1,
                    ori: 1
                }, {
                    type: "vending_01",
                    pos: R.create(4.5, -16.9),
                    scale: 1,
                    ori: 2
                }, {
                    type: "stand_01",
                    pos: R.create(7.65, -17),
                    scale: 1,
                    ori: 2
                }, {
                    type: c({
                        toilet_01: 5,
                        toilet_02: 1
                    }),
                    pos: R.create(23.5, .5),
                    scale: 1,
                    ori: 3,
                    inheritOri: !0
                }, {
                    type: c({
                        toilet_01: 5,
                        toilet_02: 1
                    }),
                    pos: R.create(23.5, 7.5),
                    scale: 1,
                    ori: 3,
                    inheritOri: !0
                }, {
                    type: "stand_01",
                    pos: R.create(15, 15),
                    scale: 1,
                    ori: 3,
                    inheritOri: !0
                }, {
                    type: "fire_ext_01",
                    pos: R.create(4.5, 16.15),
                    scale: 1,
                    ori: 3,
                    inheritOri: !0
                }, {
                    type: "bush_02",
                    pos: R.create(-2.5, -16.25),
                    scale: 1,
                    ori: 0,
                    inheritOri: !0
                }, {
                    type: "bush_02",
                    pos: R.create(14.5, -16.25),
                    scale: 1,
                    ori: 0,
                    inheritOri: !0
                }, {
                    type: "crate_01",
                    pos: R.create(19.75, 13.75),
                    scale: .9,
                    ori: 0,
                    inheritOri: !1
                }, {
                    type: c({
                        loot_tier_1: 1
                    }),
                    pos: R.create(12, 0),
                    scale: 1,
                    ori: 0
                }, {
                    type: c({
                        loot_tier_1: 1,
                        "": 1
                    }),
                    pos: R.create(1, 0),
                    scale: 1,
                    ori: 0
                }, {
                    type: "tree_01",
                    pos: R.create(-16.5, -12.5),
                    scale: 1.1,
                    ori: 0,
                    inheritOri: !0
                }, {
                    type: "barrel_01",
                    pos: R.create(-7.5, -7.25),
                    scale: .85,
                    ori: 0,
                    inheritOri: !0
                }, {
                    type: "tree_01",
                    pos: R.create(21, -7),
                    scale: .55,
                    ori: 0,
                    inheritOri: !0
                }, {
                    type: "tree_01",
                    pos: R.create(21, -16.25),
                    scale: .55,
                    ori: 0,
                    inheritOri: !0
                }]
            },
            vault_door_main: b({
                material: "metal",
                hinge: R.create(1, 3.5),
                extents: R.create(1, 3.5),
                img: {
                    sprite: "map-door-02.img"
                },
                door: {
                    interactionRad: 2.5,
                    openSpeed: .23,
                    openOneWay: -1,
                    openDelay: 4.1,
                    openOnce: !0,
                    spriteAnchor: R.create(.2, 1),
                    sound: {
                        open: "none",
                        close: "none",
                        change: "vault_change_01"
                    }
                }
            }),
            vault_01: {
                type: "building",
                map: {
                    display: !1,
                    color: 6707790,
                    scale: 1
                },
                terrain: {
                    grass: !0,
                    beach: !1
                },
                zIdx: 2,
                floor: {
                    surfaces: [{
                        type: "container",
                        collision: [B.createAabbExtents(R.create(-3.5, 0), R.create(10, 10.5))]
                    }],
                    imgs: [{
                        sprite: "map-building-vault-floor.img",
                        scale: .5,
                        alpha: 1,
                        tint: 16777215
                    }]
                },
                ceiling: {
                    scopeIn: [B.createAabbExtents(R.create(-3.5, 0), R.create(9.25, 10.5))],
                    scopeOut: [B.createAabbExtents(R.create(-3.5, 0), R.create(10, 10.5))],
                    vision: {
                        dist: 7.25,
                        width: 2.75,
                        linger: .5,
                        fadeRate: 6
                    },
                    imgs: [{
                        sprite: "map-building-vault-ceiling.img",
                        scale: .5,
                        alpha: 1,
                        tint: 6250335
                    }]
                },
                mapObjects: [{
                    type: "metal_wall_ext_thick_20",
                    pos: R.create(-12.5, 0),
                    scale: 1,
                    ori: 0
                }, {
                    type: "metal_wall_ext_thick_20",
                    pos: R.create(-3.5, -9.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "metal_wall_ext_thick_20",
                    pos: R.create(-3.5, 9.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "metal_wall_ext_thick_6",
                    pos: R.create(5.5, -6.45),
                    scale: 1,
                    ori: 0
                }, {
                    type: "metal_wall_ext_thick_6",
                    pos: R.create(5.5, 6.45),
                    scale: 1,
                    ori: 0
                }, {
                    type: "vault_door_main",
                    pos: R.create(6.5, 3.5),
                    scale: 1,
                    ori: 2
                }, {
                    type: c({
                        deposit_box_01: 7,
                        deposit_box_02: 1
                    }),
                    pos: R.create(-12.3, 5),
                    scale: 1,
                    ori: 1
                }, {
                    type: c({
                        deposit_box_01: 7,
                        deposit_box_02: 1
                    }),
                    pos: R.create(-12.3, -5),
                    scale: 1,
                    ori: 1
                }, {
                    type: c({
                        deposit_box_01: 7,
                        deposit_box_02: 1
                    }),
                    pos: R.create(-8, 9.3),
                    scale: 1,
                    ori: 0
                }, {
                    type: c({
                        deposit_box_01: 7,
                        deposit_box_02: 1
                    }),
                    pos: R.create(-8, -9.3),
                    scale: 1,
                    ori: 2
                }, {
                    type: c({
                        deposit_box_01: 7,
                        deposit_box_02: 1
                    }),
                    pos: R.create(1, 9.3),
                    scale: 1,
                    ori: 0
                }, {
                    type: c({
                        deposit_box_01: 7,
                        deposit_box_02: 1
                    }),
                    pos: R.create(1, -9.3),
                    scale: 1,
                    ori: 2
                }, {
                    type: "crate_05",
                    pos: R.create(-3.5, 6.5),
                    scale: 1,
                    ori: 0,
                    inheritOri: !0
                }, {
                    type: "crate_05",
                    pos: R.create(-3.5, -6.5),
                    scale: 1,
                    ori: 2,
                    inheritOri: !0
                }, {
                    type: c({
                        loot_tier_vault_floor: 1
                    }),
                    pos: R.create(-3.5, 0),
                    scale: 1,
                    ori: 0
                }]
            },
            police_wall_int_2: P({
                material: "wood",
                extents: R.create(.5, 1),
                img: d("map-wall-02-rounded.img", 1777447)
            }),
            police_wall_int_3: P({
                material: "wood",
                extents: R.create(.5, 1.5),
                img: d("map-wall-03-rounded.img", 1777447)
            }),
            police_wall_int_4: P({
                material: "wood",
                extents: R.create(.5, 2),
                img: d("map-wall-04-rounded.img", 1777447)
            }),
            police_wall_int_6: P({
                material: "wood",
                extents: R.create(.5, 3),
                img: d("map-wall-06-rounded.img", 1777447)
            }),
            police_wall_int_7: P({
                material: "wood",
                extents: R.create(.5, 3.5),
                img: d("map-wall-07-rounded.img", 1777447)
            }),
            police_wall_int_8: P({
                material: "wood",
                extents: R.create(.5, 4),
                img: d("map-wall-08-rounded.img", 1777447)
            }),
            police_wall_int_10: P({
                material: "wood",
                extents: R.create(.5, 5),
                img: d("map-wall-10-rounded.img", 1777447)
            }),
            police_01: {
                type: "building",
                map: {
                    display: !0,
                    shapes: [{
                        collider: B.createAabbExtents(R.create(-21, -8), R.create(21.25, 14)),
                        color: 5855577
                    }, {
                        collider: B.createAabbExtents(R.create(-24.5, 8.5), R.create(17.75, 9.75)),
                        color: 3355970
                    }, {
                        collider: B.createAabbExtents(R.create(-3.5, 12), R.create(3.5, 6.25)),
                        color: 4278620
                    }, {
                        collider: B.createAabbExtents(R.create(10.35, 0), R.create(10.5, 22)),
                        color: 3355970
                    }, {
                        collider: B.createAabbExtents(R.create(31.25, 12.5), R.create(10.75, 9.5)),
                        color: 3355970
                    }, {
                        collider: B.createAabbExtents(R.create(-3.5, 2.5), R.create(2.25, 2.25)),
                        color: 6310464
                    }, {
                        collider: B.createCircle(R.create(-30.5, -18), 1.5),
                        color: 8026746
                    }, {
                        collider: B.createCircle(R.create(-20.5, -10.5), 1.5),
                        color: 8026746
                    }, {
                        collider: B.createAabbExtents(R.create(-38.5, -7), R.create(1.4, 3.1)),
                        color: 13278307
                    }, {
                        collider: B.createAabbExtents(R.create(-7.5, -19.5), R.create(3.1, 1.4)),
                        color: 13278307
                    }]
                },
                terrain: {
                    grass: !0,
                    beach: !1
                },
                zIdx: 1,
                floor: {
                    surfaces: [{
                        type: "tile",
                        collision: [B.createAabbExtents(R.create(-24.5, 8.5), R.create(17.75, 9.75)), B.createAabbExtents(R.create(-3.5, 12), R.create(3.5, 6.25)), B.createAabbExtents(R.create(10.35, 0), R.create(10.5, 22)), B.createAabbExtents(R.create(31.25, 12.5), R.create(10.75, 9.5))]
                    }, {
                        type: "asphalt",
                        collision: [B.createAabbExtents(R.create(-21.5, -13), R.create(21, 11.5)), B.createAabbExtents(R.create(-3.5, 2), R.create(3, 3.5))]
                    }],
                    imgs: [{
                        sprite: "map-building-police-floor.img",
                        scale: .5,
                        alpha: 1,
                        tint: 16777215
                    }]
                },
                ceiling: {
                    scopeIn: [B.createAabbExtents(R.create(-24.5, 8.5), R.create(17.75, 9.75)), B.createAabbExtents(R.create(-3.5, 12), R.create(3.5, 6.25)), B.createAabbExtents(R.create(10.35, 0), R.create(10.5, 22)), B.createAabbExtents(R.create(31.25, 12.5), R.create(10.75, 9.5))],
                    scopeOut: [B.createAabbExtents(R.create(12, 0), R.create(12.75, 26))],
                    vision: {
                        dist: 5.5,
                        width: 2.75,
                        linger: .5,
                        fadeRate: 6
                    },
                    imgs: [{
                        sprite: "map-building-police-ceiling-01.img",
                        pos: R.create(-21.5, 8.5),
                        scale: .5,
                        alpha: 1,
                        tint: 16777215
                    }, {
                        sprite: "map-building-police-ceiling-02.img",
                        pos: R.create(21, 0),
                        scale: .5,
                        alpha: 1,
                        tint: 16777215
                    }]
                },
                mapObjects: [{
                    type: "brick_wall_ext_20",
                    pos: R.create(-42, 8.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "brick_wall_ext_41",
                    pos: R.create(-21, 18),
                    scale: 1,
                    ori: 1
                }, {
                    type: "brick_wall_ext_7",
                    pos: R.create(-38, -1),
                    scale: 1,
                    ori: 1
                }, {
                    type: "brick_wall_ext_21",
                    pos: R.create(-18, -1),
                    scale: 1,
                    ori: 1
                }, {
                    type: "brick_wall_ext_7",
                    pos: R.create(-7, 2),
                    scale: 1,
                    ori: 0
                }, {
                    type: "brick_wall_ext_7",
                    pos: R.create(-4, 6),
                    scale: 1,
                    ori: 1
                }, {
                    type: "brick_wall_ext_16",
                    pos: R.create(0, -1.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "house_window_01",
                    pos: R.create(-.5, -11),
                    scale: 1,
                    ori: 0
                }, {
                    type: "brick_wall_ext_10",
                    pos: R.create(0, -17.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "brick_wall_ext_6",
                    pos: R.create(3.5, -22),
                    scale: 1,
                    ori: 1
                }, {
                    type: "house_door_01",
                    pos: R.create(6.5, -22.5),
                    scale: 1,
                    ori: 3
                }, {
                    type: "house_door_01",
                    pos: R.create(14.5, -22.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "brick_wall_ext_6",
                    pos: R.create(17.5, -22),
                    scale: 1,
                    ori: 1
                }, {
                    type: "brick_wall_ext_11",
                    pos: R.create(21, -17),
                    scale: 1,
                    ori: 0
                }, {
                    type: "house_door_01",
                    pos: R.create(21.5, -11.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "brick_wall_ext_11",
                    pos: R.create(21, -2),
                    scale: 1,
                    ori: 0
                }, {
                    type: "brick_wall_ext_20",
                    pos: R.create(31.5, 3),
                    scale: 1,
                    ori: 1
                }, {
                    type: "brick_wall_ext_20",
                    pos: R.create(42, 12.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "brick_wall_ext_33",
                    pos: R.create(25, 22),
                    scale: 1,
                    ori: 1
                }, {
                    type: "house_door_01",
                    pos: R.create(4.5, 22.5),
                    scale: 1,
                    ori: 3
                }, {
                    type: "brick_wall_ext_4",
                    pos: R.create(2.5, 22),
                    scale: 1,
                    ori: 1
                }, {
                    type: "brick_wall_ext_5",
                    pos: R.create(0, 20),
                    scale: 1,
                    ori: 0
                }, {
                    type: "police_wall_int_2",
                    pos: R.create(-40.5, 8),
                    scale: 1,
                    ori: 1
                }, {
                    type: "police_wall_int_3",
                    pos: R.create(-34, 8),
                    scale: 1,
                    ori: 1
                }, {
                    type: "cell_door_01",
                    pos: R.create(-35.5, 8),
                    scale: 1,
                    ori: 1
                }, {
                    type: "police_wall_int_8",
                    pos: R.create(-35, 3.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "police_wall_int_3",
                    pos: R.create(-27, 8),
                    scale: 1,
                    ori: 1
                }, {
                    type: "police_wall_int_8",
                    pos: R.create(-28, 3.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "cell_door_01",
                    pos: R.create(-21.5, 8),
                    scale: 1,
                    ori: 1
                }, {
                    type: "police_wall_int_3",
                    pos: R.create(-20, 8),
                    scale: 1,
                    ori: 1
                }, {
                    type: "police_wall_int_8",
                    pos: R.create(-21, 3.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "cell_door_01",
                    pos: R.create(-14.5, 8),
                    scale: 1,
                    ori: 1
                }, {
                    type: "police_wall_int_3",
                    pos: R.create(-13, 8),
                    scale: 1,
                    ori: 1
                }, {
                    type: "police_wall_int_8",
                    pos: R.create(-14, 3.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "cell_door_01",
                    pos: R.create(-7.5, 8),
                    scale: 1,
                    ori: 1
                }, {
                    type: "police_wall_int_6",
                    pos: R.create(-7, 9.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "police_wall_int_7",
                    pos: R.create(-4, 13),
                    scale: 1,
                    ori: 1
                }, {
                    type: "house_door_02",
                    pos: R.create(-7, 17.5),
                    scale: 1,
                    ori: 2
                }, {
                    type: "police_wall_int_4",
                    pos: R.create(2.5, -1),
                    scale: 1,
                    ori: 1
                }, {
                    type: "bank_window_01",
                    pos: R.create(6, -1),
                    scale: 1,
                    ori: 1
                }, {
                    type: "police_wall_int_6",
                    pos: R.create(10.5, -1),
                    scale: 1,
                    ori: 1
                }, {
                    type: "bank_window_01",
                    pos: R.create(15, -1),
                    scale: 1,
                    ori: 1
                }, {
                    type: "police_wall_int_4",
                    pos: R.create(18.5, -1),
                    scale: 1,
                    ori: 1
                }, {
                    type: "house_door_01",
                    pos: R.create(21, 3.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "police_wall_int_10",
                    pos: R.create(21, 12.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "house_door_01",
                    pos: R.create(21, 21.5),
                    scale: 1,
                    ori: 2
                }, {
                    type: "metal_wall_ext_10",
                    pos: R.create(35.5, 4),
                    scale: 1,
                    ori: 1
                }, {
                    type: c({
                        locker_01: 8,
                        locker_02: 1
                    }),
                    pos: R.create(33, 4.15),
                    scale: 1,
                    ori: 2,
                    inheritOri: !0
                }, {
                    type: "metal_wall_ext_10",
                    pos: R.create(35.5, 21),
                    scale: 1,
                    ori: 1
                }, {
                    type: c({
                        locker_01: 8,
                        locker_02: 1
                    }),
                    pos: R.create(33, 20.85),
                    scale: 1,
                    ori: 0,
                    inheritOri: !0
                }, {
                    type: c({
                        locker_01: 8,
                        locker_02: 1
                    }),
                    pos: R.create(38, 20.85),
                    scale: 1,
                    ori: 0,
                    inheritOri: !0
                }, {
                    type: "metal_wall_ext_18",
                    pos: R.create(41, 12.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: c({
                        locker_01: 8,
                        locker_02: 1
                    }),
                    pos: R.create(40.85, 7.5),
                    scale: 1,
                    ori: 3,
                    inheritOri: !0
                }, {
                    type: c({
                        locker_01: 8,
                        locker_02: 1
                    }),
                    pos: R.create(40.85, 17.5),
                    scale: 1,
                    ori: 3,
                    inheritOri: !0
                }, {
                    type: "metal_wall_ext_thicker_10",
                    pos: R.create(35.5, 12.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: c({
                        locker_01: 8,
                        locker_02: 1
                    }),
                    pos: R.create(38, 11.35),
                    scale: 1,
                    ori: 0,
                    inheritOri: !0
                }, {
                    type: c({
                        locker_01: 8,
                        locker_02: 1
                    }),
                    pos: R.create(33, 13.65),
                    scale: 1,
                    ori: 2,
                    inheritOri: !0
                }, {
                    type: c({
                        toilet_03: 5,
                        toilet_04: 1
                    }),
                    pos: R.create(-37, 1),
                    scale: 1,
                    ori: 2,
                    inheritOri: !0
                }, {
                    type: c({
                        toilet_03: 5,
                        toilet_04: 1
                    }),
                    pos: R.create(-23, 1),
                    scale: 1,
                    ori: 2,
                    inheritOri: !0
                }, {
                    type: c({
                        toilet_03: 5,
                        toilet_04: 1
                    }),
                    pos: R.create(-16, 1),
                    scale: 1,
                    ori: 2,
                    inheritOri: !0
                }, {
                    type: c({
                        toilet_03: 5,
                        toilet_04: 1
                    }),
                    pos: R.create(-9, 1),
                    scale: 1,
                    ori: 2,
                    inheritOri: !0
                }, {
                    type: "control_panel_01",
                    pos: R.create(-4.5, 9.5),
                    scale: 1,
                    ori: 1,
                    inheritOri: !0
                }, {
                    type: "crate_06",
                    pos: R.create(-24.5, 20.25),
                    scale: 1,
                    ori: 0,
                    inheritOri: !0
                }, {
                    type: "crate_06",
                    pos: R.create(14.5, 12.5),
                    scale: 1,
                    ori: 0,
                    inheritOri: !0
                }, {
                    type: "crate_06",
                    pos: R.create(18.75, 12.5),
                    scale: 1,
                    ori: 1,
                    inheritOri: !0
                }, {
                    type: "fire_ext_01",
                    pos: R.create(21.85, 12.5),
                    scale: 1,
                    ori: 0,
                    inheritOri: !0
                }, {
                    type: "crate_06",
                    pos: R.create(10.5, 1.25),
                    scale: 1,
                    ori: 0,
                    inheritOri: !0
                }, {
                    type: "vending_01",
                    pos: R.create(2, -6.75),
                    scale: 1,
                    ori: 1,
                    inheritOri: !0
                }, {
                    type: "stand_01",
                    pos: R.create(2, -14.5),
                    scale: 1,
                    ori: 1,
                    inheritOri: !0
                }, {
                    type: "bush_01",
                    pos: R.create(2.5, -19.5),
                    scale: 1,
                    ori: 0,
                    inheritOri: !0
                }, {
                    type: "bush_01",
                    pos: R.create(18.5, -19.5),
                    scale: 1,
                    ori: 0,
                    inheritOri: !0
                }, {
                    type: c({
                        loot_tier_police_floor: 1
                    }),
                    pos: R.create(-38.5, 4),
                    scale: 1,
                    ori: 0
                }, {
                    type: c({
                        loot_tier_1: 1
                    }),
                    pos: R.create(-31.5, 4),
                    scale: 1,
                    ori: 0
                }, {
                    type: c({
                        loot_tier_1: 1
                    }),
                    pos: R.create(-24.5, 4),
                    scale: 1,
                    ori: 0
                }, {
                    type: c({
                        loot_tier_1: 1
                    }),
                    pos: R.create(-17.5, 4),
                    scale: 1,
                    ori: 0
                }, {
                    type: c({
                        loot_tier_1: 1
                    }),
                    pos: R.create(-10.5, 4),
                    scale: 1,
                    ori: 0
                }, {
                    type: "crate_01",
                    pos: R.create(-3.5, 2.5),
                    scale: 1,
                    ori: 0,
                    inheritOri: !1
                }, {
                    type: "sandbags_01",
                    pos: R.create(-38.5, -7),
                    scale: 1,
                    ori: 3,
                    inheritOri: !0
                }, {
                    type: "sandbags_01",
                    pos: R.create(-7.5, -19.5),
                    scale: 1,
                    ori: 0,
                    inheritOri: !0
                }, {
                    type: "barrel_01",
                    pos: R.create(-30.5, -18),
                    scale: .9,
                    ori: 0,
                    inheritOri: !0
                }, {
                    type: "barrel_01",
                    pos: R.create(-20.5, -10.5),
                    scale: .9,
                    ori: 0,
                    inheritOri: !0
                }, {
                    type: "tree_01",
                    pos: R.create(39, -6),
                    scale: .8,
                    ori: 0,
                    inheritOri: !0
                }, {
                    type: "tree_01",
                    pos: R.create(28, -17.5),
                    scale: .8,
                    ori: 0,
                    inheritOri: !0
                }, {
                    type: "hedgehog_01",
                    pos: R.create(39, -17.5),
                    scale: 1,
                    ori: 0,
                    inheritOri: !0
                }, {
                    type: "crate_01",
                    pos: R.create(24.5, -.5),
                    scale: 1,
                    ori: 0,
                    inheritOri: !0
                }]
            },
            house_wall_int_4: P({
                material: "wood",
                extents: R.create(.5, 2),
                hitParticle: "tanChip",
                img: d("map-wall-04-rounded.img", 10584424)
            }),
            house_wall_int_5: P({
                material: "wood",
                extents: R.create(.5, 2.5),
                hitParticle: "tanChip",
                img: d("map-wall-05-rounded.img", 10584424)
            }),
            house_wall_int_8: P({
                material: "wood",
                extents: R.create(.5, 4),
                hitParticle: "tanChip",
                img: d("map-wall-08-rounded.img", 10584424)
            }),
            house_wall_int_9: P({
                material: "wood",
                extents: R.create(.5, 4.5),
                hitParticle: "tanChip",
                img: d("map-wall-09-rounded.img", 10584424)
            }),
            house_column_1: P({
                material: "concrete",
                extents: R.create(1, 1),
                hitParticle: "tanChip",
                img: d("map-column-01.img", 5587506)
            }),
            house_red_01: {
                type: "building",
                map: {
                    display: !0,
                    color: 6429724,
                    scale: 1
                },
                terrain: {
                    grass: !0,
                    beach: !1
                },
                zIdx: 1,
                floor: {
                    surfaces: [{
                        type: "house",
                        collision: [B.createAabbExtents(R.create(0, 0), R.create(14.5, 13))]
                    }],
                    imgs: [{
                        sprite: "map-building-house-floor.img",
                        scale: .5,
                        alpha: 1,
                        tint: 16777215
                    }]
                },
                ceiling: {
                    scopeIn: [B.createAabbExtents(R.create(0, 0), R.create(14.5, 13))],
                    scopeOut: [B.createAabbExtents(R.create(0, 0), R.create(16.5, 15))],
                    vision: {
                        dist: 5.5,
                        width: 2.75,
                        linger: .5,
                        fadeRate: 6
                    },
                    imgs: [{
                        sprite: "map-building-house-ceiling.img",
                        scale: .5,
                        alpha: 1,
                        tint: 16777215
                    }]
                },
                mapObjects: [{
                    type: "brick_wall_ext_12",
                    pos: R.create(-9, 13),
                    scale: 1,
                    ori: 1
                }, {
                    type: "brick_wall_ext_14",
                    pos: R.create(8, 13),
                    scale: 1,
                    ori: 1
                }, {
                    type: "house_door_01",
                    pos: R.create(1, 13.25),
                    scale: 1,
                    ori: 1
                }, {
                    type: "brick_wall_ext_5",
                    pos: R.create(-14.5, 10.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "brick_wall_ext_10",
                    pos: R.create(-14.5, -.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "brick_wall_ext_4",
                    pos: R.create(-14.5, -10.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "house_window_01",
                    pos: R.create(-14.75, 6),
                    scale: 1,
                    ori: 0
                }, {
                    type: "house_window_01",
                    pos: R.create(-14.75, -7),
                    scale: 1,
                    ori: 0
                }, {
                    type: "brick_wall_ext_5",
                    pos: R.create(-12.5, -13),
                    scale: 1,
                    ori: 1
                }, {
                    type: "brick_wall_ext_5",
                    pos: R.create(-4.5, -13),
                    scale: 1,
                    ori: 1
                }, {
                    type: "brick_wall_ext_5",
                    pos: R.create(4.5, -13),
                    scale: 1,
                    ori: 1
                }, {
                    type: "brick_wall_ext_5",
                    pos: R.create(12.5, -13),
                    scale: 1,
                    ori: 1
                }, {
                    type: "house_window_01",
                    pos: R.create(-8.5, -13.25),
                    scale: 1,
                    ori: 3
                }, {
                    type: "house_window_01",
                    pos: R.create(8.5, -13.25),
                    scale: 1,
                    ori: 3
                }, {
                    type: "house_door_01",
                    pos: R.create(-2, -13.25),
                    scale: 1,
                    ori: 3
                }, {
                    type: "brick_wall_ext_8",
                    pos: R.create(14.5, 8.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "brick_wall_ext_9",
                    pos: R.create(14.5, -3),
                    scale: 1,
                    ori: 0
                }, {
                    type: "brick_wall_ext_2",
                    pos: R.create(14.5, -11.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "house_window_01",
                    pos: R.create(14.75, -9),
                    scale: 1,
                    ori: 2
                }, {
                    type: "house_window_01",
                    pos: R.create(14.75, 3),
                    scale: 1,
                    ori: 2
                }, {
                    type: "house_wall_int_9",
                    pos: R.create(-9.5, -1),
                    scale: 1,
                    ori: 1
                }, {
                    type: "house_wall_int_5",
                    pos: R.create(4.5, -6),
                    scale: 1,
                    ori: 0
                }, {
                    type: "house_wall_int_9",
                    pos: R.create(9.5, -4),
                    scale: 1,
                    ori: 1
                }, {
                    type: "house_wall_int_8",
                    pos: R.create(5.5, 8.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "house_wall_int_4",
                    pos: R.create(8, 7),
                    scale: 1,
                    ori: 1
                }, {
                    type: "house_door_01",
                    pos: R.create(4.5, -12.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "house_door_01",
                    pos: R.create(6, 2.5),
                    scale: 1,
                    ori: 2
                }, {
                    type: "house_door_01",
                    pos: R.create(14, 7),
                    scale: 1,
                    ori: 1
                }, {
                    type: "house_column_1",
                    pos: R.create(6, 3.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "house_column_1",
                    pos: R.create(6, -2.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: c({
                        toilet_01: 5,
                        toilet_02: 1
                    }),
                    pos: R.create(8, 10),
                    scale: 1,
                    ori: 1,
                    inheritOri: !0
                }, {
                    type: "stand_01",
                    pos: R.create(12.25, -2),
                    scale: 1,
                    ori: 3,
                    inheritOri: !0
                }, {
                    type: c({
                        drawers_01: 7,
                        drawers_02: 1
                    }),
                    pos: R.create(7.75, -6),
                    scale: 1,
                    ori: 0
                }, {
                    type: "stand_01",
                    pos: R.create(-12.25, -3),
                    scale: 1,
                    ori: 1,
                    inheritOri: !0
                }, {
                    type: "table_01",
                    pos: R.create(-11.25, 1.75),
                    scale: 1,
                    ori: 0,
                    inheritOri: !0
                }, {
                    type: "oven_01",
                    pos: R.create(-7, 11),
                    scale: 1,
                    ori: 0,
                    inheritOri: !0
                }, {
                    type: "refrigerator_01",
                    pos: R.create(-7, 1),
                    scale: 1,
                    ori: 2,
                    inheritOri: !0
                }, {
                    type: "bush_02",
                    pos: R.create(-12, -10.5),
                    scale: 1,
                    ori: 0,
                    inheritOri: !0
                }, {
                    type: "loot_tier_1",
                    pos: R.create(0, 4.5),
                    scale: 1,
                    ori: 0
                }]
            },
            mansion_wall_int_1: P({
                material: "wood",
                extents: R.create(.5, .5),
                hitParticle: "ltgreenChip",
                img: d("map-wall-01-rounded.img", 16768917)
            }),
            mansion_wall_int_5: P({
                material: "wood",
                extents: R.create(.5, 2.5),
                hitParticle: "ltgreenChip",
                img: d("map-wall-05-rounded.img", 16768917)
            }),
            mansion_wall_int_6: P({
                material: "wood",
                extents: R.create(.5, 3),
                hitParticle: "ltgreenChip",
                img: d("map-wall-06-rounded.img", 16768917)
            }),
            mansion_wall_int_7: P({
                material: "wood",
                extents: R.create(.5, 3.5),
                hitParticle: "ltgreenChip",
                img: d("map-wall-07-rounded.img", 16768917)
            }),
            mansion_wall_int_8: P({
                material: "wood",
                extents: R.create(.5, 4),
                hitParticle: "ltgreenChip",
                img: d("map-wall-08-rounded.img", 16768917)
            }),
            mansion_wall_int_9: P({
                material: "wood",
                extents: R.create(.5, 4.5),
                hitParticle: "ltgreenChip",
                img: d("map-wall-09-rounded.img", 16768917)
            }),
            mansion_wall_int_10: P({
                material: "wood",
                extents: R.create(.5, 5),
                hitParticle: "ltgreenChip",
                img: d("map-wall-10-rounded.img", 16768917)
            }),
            mansion_wall_int_11: P({
                material: "wood",
                extents: R.create(.5, 5.5),
                hitParticle: "ltgreenChip",
                img: d("map-wall-11-rounded.img", 16768917)
            }),
            mansion_wall_int_12: P({
                material: "wood",
                extents: R.create(.5, 6),
                hitParticle: "ltgreenChip",
                img: d("map-wall-12-rounded.img", 16768917)
            }),
            mansion_wall_int_13: P({
                material: "wood",
                extents: R.create(.5, 6.5),
                hitParticle: "ltgreenChip",
                img: d("map-wall-13-rounded.img", 16768917)
            }),
            mansion_column_1: P({
                material: "concrete",
                extents: R.create(1, 1),
                hitParticle: "tanChip",
                img: d("map-column-01.img", 7432016)
            }),
            saferoom_01: {
                type: "building",
                map: {
                    display: !1,
                    color: 6707790,
                    scale: 1
                },
                terrain: {
                    grass: !0,
                    beach: !1
                },
                zIdx: 2,
                floor: {
                    surfaces: [{
                        type: "container",
                        collision: [B.createAabbExtents(R.create(0, 0), R.create(6, 4))]
                    }],
                    imgs: [{
                        sprite: "map-building-saferoom-floor.img",
                        scale: .5,
                        alpha: 1,
                        tint: 6250335
                    }]
                },
                ceiling: {
                    scopeIn: [B.createAabbExtents(R.create(0, 0), R.create(5, 3))],
                    scopeOut: [B.createAabbExtents(R.create(0, 0), R.create(5, 3))],
                    imgs: [{
                        sprite: "map-building-saferoom-ceiling.img",
                        scale: .5,
                        alpha: 1,
                        tint: 6250335
                    }]
                },
                mapObjects: [{
                    type: "metal_wall_ext_7",
                    pos: R.create(-5, 0),
                    scale: 1,
                    ori: 0
                }, {
                    type: "metal_wall_ext_6",
                    pos: R.create(1.5, 3),
                    scale: 1,
                    ori: 1
                }, {
                    type: "metal_wall_ext_9",
                    pos: R.create(0, -3),
                    scale: 1,
                    ori: 1
                }, {
                    type: "metal_wall_ext_7",
                    pos: R.create(5, 0),
                    scale: 1,
                    ori: 0
                }, {
                    type: c({
                        case_01: 1,
                        case_02: .025,
                        chest_02: 1
                    }),
                    pos: R.create(2.5, 0),
                    scale: 1,
                    ori: 3
                }]
            },
            mansion_01: {
                type: "building",
                map: {
                    display: !0,
                    shapes: [{
                        collider: B.createAabbExtents(R.create(-1.5, 20.5), R.create(12.5, 4.5)),
                        color: 8671554
                    }, {
                        collider: B.createAabbExtents(R.create(-2, -23), R.create(3, 2.5)),
                        color: 8671554
                    }, {
                        collider: B.createAabbExtents(R.create(-20.5, -22.5), R.create(10, 2)),
                        color: 7750457
                    }, {
                        collider: B.createAabbExtents(R.create(28, 1.5), R.create(3.75, 3)),
                        color: 7237230
                    }, {
                        collider: B.createAabbExtents(R.create(-3.5, -2), R.create(28, 18.5)),
                        color: 6175023
                    }]
                },
                terrain: {
                    grass: !0,
                    beach: !1
                },
                zIdx: 1,
                floor: {
                    surfaces: [{
                        type: "tile",
                        collision: [B.createAabbExtents(R.create(-3.5, -2), R.create(28, 18.5)), B.createAabbExtents(R.create(-1.5, 20.5), R.create(12.5, 4.5)), B.createAabbExtents(R.create(0, 0), R.create(20, 20))]
                    }, {
                        type: "asphalt",
                        collision: [B.createAabbExtents(R.create(-21, -17), R.create(11, 8)), B.createAabbExtents(R.create(-23, -6), R.create(8, 3)), B.createAabbExtents(R.create(-2, -24), R.create(2, 3)), B.createAabbExtents(R.create(28, 1.5), R.create(3, 3))]
                    }, {
                        type: "grass",
                        collision: [B.createAabbExtents(R.create(-2, 4), R.create(5, 5))]
                    }, {
                        type: "house",
                        collision: [B.createAabbExtents(R.create(1, 13), R.create(2, 3.25))]
                    }],
                    imgs: [{
                        sprite: "map-building-mansion-floor.img",
                        scale: .5,
                        alpha: 1,
                        tint: 16777215
                    }]
                },
                ceiling: {
                    scopeIn: [B.createAabbExtents(R.create(-15, -22.4), R.create(17, 2.2)), B.createAabbExtents(R.create(-3.5, -2), R.create(28, 18.5)), B.createAabbExtents(R.create(-1.5, 20.6), R.create(12, 4.2))],
                    scopeOut: [B.createAabbExtents(R.create(-15, -24.4), R.create(21, 4.2)), B.createAabbExtents(R.create(-3.5, -2), R.create(28, 18.5)), B.createAabbExtents(R.create(-9, 23.1), R.create(5, 6.7))],
                    vision: {
                        dist: 5.5,
                        width: 2.75,
                        linger: .5,
                        fadeRate: 6
                    },
                    imgs: [{
                        sprite: "map-building-mansion-ceiling.img",
                        scale: 1,
                        alpha: 1,
                        tint: 16777215
                    }]
                },
                mapObjects: [{
                    type: "brick_wall_ext_9",
                    pos: R.create(-31.5, -16.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "house_window_01",
                    pos: R.create(-31.75, -10.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "brick_wall_ext_19",
                    pos: R.create(-31.5, .5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "house_window_01",
                    pos: R.create(-31.75, 11.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "brick_wall_ext_4",
                    pos: R.create(-31.5, 15),
                    scale: 1,
                    ori: 0
                }, {
                    type: "brick_wall_ext_17",
                    pos: R.create(-22.5, 16.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "brick_wall_ext_9",
                    pos: R.create(-13.5, 20.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "house_door_01",
                    pos: R.create(-13, 24.9),
                    scale: 1,
                    ori: 3
                }, {
                    type: "brick_wall_ext_19",
                    pos: R.create(.5, 24.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "brick_wall_ext_9",
                    pos: R.create(10.5, 20.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "brick_wall_ext_13",
                    pos: R.create(17.5, 16.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "brick_wall_ext_6",
                    pos: R.create(24.5, 14),
                    scale: 1,
                    ori: 0
                }, {
                    type: "house_window_01",
                    pos: R.create(24.75, 9.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "brick_wall_ext_18",
                    pos: R.create(24.5, -1),
                    scale: 1,
                    ori: 0
                }, {
                    type: "house_window_01",
                    pos: R.create(24.75, -11.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "brick_wall_ext_8",
                    pos: R.create(24.5, -17),
                    scale: 1,
                    ori: 0
                }, {
                    type: "brick_wall_ext_7",
                    pos: R.create(20.5, -20.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "house_window_01",
                    pos: R.create(15.5, -20.75),
                    scale: 1,
                    ori: 1
                }, {
                    type: "brick_wall_ext_14",
                    pos: R.create(7, -20.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "house_door_01",
                    pos: R.create(-4, -21),
                    scale: 1,
                    ori: 3
                }, {
                    type: "brick_wall_ext_6",
                    pos: R.create(-7, -20.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "brick_wall_ext_short_7",
                    pos: R.create(28.5, 4.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "brick_wall_ext_short_7",
                    pos: R.create(28.5, -1.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "brick_wall_ext_6",
                    pos: R.create(-7, -20.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "mansion_column_1",
                    pos: R.create(-5, -24),
                    scale: 1,
                    ori: 1
                }, {
                    type: "mansion_column_1",
                    pos: R.create(1, -24),
                    scale: 1,
                    ori: 1
                }, {
                    type: "saferoom_01",
                    pos: R.create(-25.5, 1.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "mansion_wall_int_12",
                    pos: R.create(-25, -2.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "house_door_01",
                    pos: R.create(-19, -2.5),
                    scale: 1,
                    ori: 3
                }, {
                    type: "mansion_wall_int_1",
                    pos: R.create(-30.5, 5.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "house_door_03",
                    pos: R.create(-30.25, 5.5),
                    scale: 1,
                    ori: 3
                }, {
                    type: "mansion_wall_int_13",
                    pos: R.create(-20.5, 5.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "mansion_wall_int_7",
                    pos: R.create(-19.5, 1.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "house_door_01",
                    pos: R.create(-14.5, 6),
                    scale: 1,
                    ori: 0
                }, {
                    type: "mansion_wall_int_6",
                    pos: R.create(-14.5, 13),
                    scale: 1,
                    ori: 0
                }, {
                    type: "mansion_wall_int_6",
                    pos: R.create(-14.5, -5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "mansion_wall_int_10",
                    pos: R.create(-10, -8.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "mansion_wall_int_11",
                    pos: R.create(-9.5, -14.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "brick_wall_ext_8",
                    pos: R.create(-7.5, 14),
                    scale: 1,
                    ori: 0
                }, {
                    type: "brick_wall_ext_8",
                    pos: R.create(-1.5, 14),
                    scale: 1,
                    ori: 0
                }, {
                    type: "brick_wall_ext_8",
                    pos: R.create(3.5, 14),
                    scale: 1,
                    ori: 0
                }, {
                    type: "brick_wall_ext_12",
                    pos: R.create(-2, 9.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "stairs_01",
                    pos: R.create(-4.5, 12),
                    scale: 1,
                    ori: 0
                }, {
                    type: "glass_wall_10",
                    pos: R.create(-7.5, 4),
                    scale: 1,
                    ori: 0
                }, {
                    type: "glass_wall_10",
                    pos: R.create(3.5, 4),
                    scale: 1,
                    ori: 0
                }, {
                    type: "glass_wall_12",
                    pos: R.create(-2, -1.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "house_door_01",
                    pos: R.create(10.5, 16),
                    scale: 1,
                    ori: 2
                }, {
                    type: "mansion_wall_int_9",
                    pos: R.create(10.5, 7.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "house_door_01",
                    pos: R.create(10.5, -1),
                    scale: 1,
                    ori: 0
                }, {
                    type: "mansion_wall_int_8",
                    pos: R.create(10.5, -5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "mansion_wall_int_9",
                    pos: R.create(15.5, 4.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "mansion_wall_int_9",
                    pos: R.create(15.5, -1.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "mansion_wall_int_5",
                    pos: R.create(19.5, 1.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "house_door_01",
                    pos: R.create(24, 1.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "mansion_wall_int_5",
                    pos: R.create(3.5, -8.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "house_door_01",
                    pos: R.create(6, -8.5),
                    scale: 1,
                    ori: 3
                }, {
                    type: "mansion_wall_int_11",
                    pos: R.create(5.5, -14.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: c({
                        bookshelf_01: 7,
                        bookshelf_02: 1
                    }),
                    pos: R.create(-27.25, 7.15),
                    scale: 1,
                    ori: 2
                }, {
                    type: c({
                        bookshelf_01: 7,
                        bookshelf_02: 1
                    }),
                    pos: R.create(-27.25, 14.85),
                    scale: 1,
                    ori: 0
                }, {
                    type: c({
                        drawers_01: 7,
                        drawers_02: 1
                    }),
                    pos: R.create(-11.5, -11.75),
                    scale: 1,
                    ori: 3
                }, {
                    type: "stand_01",
                    pos: R.create(-7.5, -10.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "stand_01",
                    pos: R.create(3.5, -10.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: c({
                        bookshelf_01: 7,
                        bookshelf_02: 1
                    }),
                    pos: R.create(7.25, -16.25),
                    scale: 1,
                    ori: 1
                }, {
                    type: c({
                        bookshelf_01: 7,
                        bookshelf_02: 1
                    }),
                    pos: R.create(14.75, -3.25),
                    scale: 1,
                    ori: 0
                }, {
                    type: "toilet_01",
                    pos: R.create(17, 1.5),
                    scale: 1,
                    ori: 3
                }, {
                    type: "refrigerator_01",
                    pos: R.create(22.15, 14.4),
                    scale: 1,
                    ori: 0
                }, {
                    type: "oven_01",
                    pos: R.create(12.75, 6.75),
                    scale: 1,
                    ori: 1
                }, {
                    type: "oven_01",
                    pos: R.create(12.75, 10.25),
                    scale: 1,
                    ori: 1
                }, {
                    type: "table_02",
                    pos: R.create(15.75, -14.25),
                    scale: 1,
                    ori: 0
                }, {
                    type: "loot_tier_mansion_floor",
                    pos: R.create(-2, -8.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "tree_01",
                    pos: R.create(-2, 4),
                    scale: .6,
                    ori: 0
                }, {
                    type: c({
                        bush_01: 25,
                        bush_03: 1
                    }),
                    pos: R.create(-4.75, 1.25),
                    scale: .9,
                    ori: 0
                }, {
                    type: c({
                        bush_01: 25,
                        bush_03: 1
                    }),
                    pos: R.create(.75, 1.25),
                    scale: .9,
                    ori: 0
                }, {
                    type: c({
                        bush_01: 25,
                        bush_03: 1
                    }),
                    pos: R.create(-4.75, 6.75),
                    scale: .9,
                    ori: 0
                }, {
                    type: c({
                        bush_01: 25,
                        bush_03: 1
                    }),
                    pos: R.create(.75, 6.75),
                    scale: .9,
                    ori: 0
                }, {
                    type: "bush_01",
                    pos: R.create(-8, -23),
                    scale: .95,
                    ori: 0
                }, {
                    type: "bush_01",
                    pos: R.create(4, -23),
                    scale: .95,
                    ori: 0
                }, {
                    type: "shack_01",
                    pos: R.create(-20.75, 22.5),
                    scale: 1,
                    ori: 2
                }, {
                    type: "crate_01",
                    pos: R.create(13.25, 19.25),
                    scale: .9,
                    ori: 0
                }, {
                    type: "tree_01",
                    pos: R.create(24, 24),
                    scale: 1,
                    ori: 0
                }, {
                    type: "barrel_02",
                    pos: R.create(27, -4),
                    scale: 1,
                    ori: 0
                }, {
                    type: "tree_01",
                    pos: R.create(29, -17.25),
                    scale: .7,
                    ori: 0
                }]
            },
            mansion_cellar_01: {
                type: "building",
                map: {
                    display: !1
                },
                terrain: {
                    grass: !0,
                    beach: !1
                },
                zIdx: 0,
                floor: {
                    surfaces: [{
                        type: "brick",
                        collision: [B.createAabbExtents(R.create(18, 3), R.create(7, 13)), B.createAabbExtents(R.create(5, 0), R.create(6, 10))]
                    }],
                    imgs: [{
                        sprite: "map-building-mansion-cellar-02.img",
                        pos: R.create(-3.75, .25),
                        scale: 2,
                        alpha: 1,
                        tint: 16777215
                    }, {
                        sprite: "map-building-mansion-cellar-01.img",
                        pos: R.create(15, 3.5),
                        scale: .5,
                        alpha: 1,
                        tint: 16777215
                    }]
                },
                ceiling: {
                    scopeIn: [B.createAabbExtents(R.create(18, 3), R.create(7, 13)), B.createAabbExtents(R.create(5, 1.5), R.create(6, 12))],
                    scopeOut: [B.createAabbExtents(R.create(18, 3), R.create(7, 13)), B.createAabbExtents(R.create(5, 1.5), R.create(6, 12))],
                    vision: {
                        dist: 5.5,
                        width: 2.75,
                        linger: .5,
                        fadeRate: 6
                    },
                    imgs: []
                },
                mapObjects: [{
                    type: "brick_wall_ext_thicker_24",
                    pos: R.create(-2.5, 6),
                    scale: 1,
                    ori: 0
                }, {
                    type: "brick_wall_ext_thicker_8",
                    pos: R.create(0, -7.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "brick_wall_ext_thicker_7",
                    pos: R.create(5.5, -9.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "brick_wall_ext_thicker_9",
                    pos: R.create(11.5, -11.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "brick_wall_ext_thicker_7",
                    pos: R.create(17.5, -9.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "brick_wall_ext_thicker_5",
                    pos: R.create(21.5, -7.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "brick_wall_ext_thicker_8",
                    pos: R.create(25.5, -5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "brick_wall_ext_thicker_15",
                    pos: R.create(25.5, 11.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "brick_wall_ext_thicker_16",
                    pos: R.create(16, 17.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "brick_wall_ext_thicker_7",
                    pos: R.create(9.5, 12.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "brick_wall_ext_thicker_5",
                    pos: R.create(5.5, 10.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "brick_wall_ext_thicker_5",
                    pos: R.create(29.5, 5.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "brick_wall_ext_thicker_5",
                    pos: R.create(29.5, -2.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "concrete_wall_ext_7",
                    pos: R.create(31.5, 1.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "brick_wall_ext_thicker_6",
                    pos: R.create(4.5, 15),
                    scale: 1,
                    ori: 0
                }, {
                    type: "brick_wall_ext_6",
                    pos: R.create(1, 17.6),
                    scale: 1,
                    ori: 1
                }, {
                    type: c({
                        barrel_03: 9,
                        barrel_04: 1
                    }),
                    pos: R.create(8.5, -9.53),
                    scale: 1,
                    ori: 2
                }, {
                    type: c({
                        barrel_03: 9,
                        barrel_04: 1
                    }),
                    pos: R.create(11.5, -9.53),
                    scale: 1,
                    ori: 2
                }, {
                    type: c({
                        barrel_03: 9,
                        barrel_04: 1
                    }),
                    pos: R.create(14.5, -9.53),
                    scale: 1,
                    ori: 2
                }, {
                    type: c({
                        barrel_03: 9,
                        barrel_04: 1
                    }),
                    pos: R.create(12.75, 15.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: c({
                        barrel_03: 9,
                        barrel_04: 1
                    }),
                    pos: R.create(15.75, 15.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: c({
                        barrel_03: 9,
                        barrel_04: 1
                    }),
                    pos: R.create(18.75, 15.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "crate_01",
                    pos: R.create(22.25, 14.25),
                    scale: .75,
                    ori: 0
                }, {
                    type: c({
                        bookshelf_01: 7,
                        bookshelf_02: 1
                    }),
                    pos: R.create(22.75, 8),
                    scale: 1,
                    ori: 3
                }, {
                    type: "mansion_column_1",
                    pos: R.create(5.5, 1.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "mansion_column_1",
                    pos: R.create(17.5, 1.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "barrel_02",
                    pos: R.create(8.5, 1.5),
                    scale: .8,
                    ori: 0
                }, {
                    type: "barrel_01",
                    pos: R.create(11.5, 1.5),
                    scale: .8,
                    ori: 0
                }, {
                    type: "barrel_02",
                    pos: R.create(14.5, 1.5),
                    scale: .8,
                    ori: 0
                }]
            },
            mansion_structure_01: {
                type: "structure",
                terrain: {
                    grass: !0,
                    beach: !1
                },
                layers: [{
                    type: "mansion_01",
                    pos: R.create(0, 0),
                    ori: 0
                }, {
                    type: "mansion_cellar_01",
                    pos: R.create(0, 0),
                    ori: 0
                }],
                stairs: [{
                    collision: B.createAabbExtents(R.create(28, 1.5), R.create(3, 2.55)),
                    downDir: R.create(-1, 0),
                    noCeilingReveal: !0
                }, {
                    collision: B.createAabbExtents(R.create(1, 13.5), R.create(2, 3.5)),
                    downDir: R.create(0, -1)
                }],
                mask: [B.createAabbExtents(R.create(10, -.1), R.create(15, 10.1)), B.createAabbExtents(R.create(17.5, 13.5), R.create(7.5, 3.5))]
            },
            bunker_egg_01: {
                type: "building",
                map: {
                    display: !1,
                    color: 6707790,
                    scale: 1
                },
                terrain: {
                    grass: !0,
                    beach: !1
                },
                zIdx: 2,
                floor: {
                    surfaces: [{
                        type: "container",
                        collision: [B.createAabbExtents(R.create(0, 7.75), R.create(2, 3.25))]
                    }],
                    imgs: [{
                        sprite: "map-bunker-generic-floor-01.img",
                        pos: R.create(0, 7.5),
                        scale: .5,
                        alpha: 1,
                        tint: 16777215
                    }]
                },
                ceiling: {
                    scopeIn: [B.createAabbExtents(R.create(0, 0), R.create(0, 0))],
                    scopeOut: [B.createAabbExtents(R.create(0, 0), R.create(0, 0))],
                    vision: {
                        dist: 5,
                        width: 2.75,
                        linger: .5,
                        fadeRate: 6
                    },
                    imgs: []
                },
                mapObjects: [{
                    type: "metal_wall_ext_short_6",
                    pos: R.create(0, 5.3),
                    scale: 1,
                    ori: 1
                }, {
                    type: "metal_wall_ext_short_7",
                    pos: R.create(-2.5, 8.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "metal_wall_ext_short_7",
                    pos: R.create(2.5, 8.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "tree_01",
                    pos: R.create(5, 8),
                    scale: 1.05,
                    ori: 0
                }, {
                    type: "tree_01",
                    pos: R.create(-5, 7.5),
                    scale: 1.1,
                    ori: 0
                }, {
                    type: "tree_01",
                    pos: R.create(-1.25, 15.75),
                    scale: 1,
                    ori: 0
                }, {
                    type: "decal_vent_01",
                    pos: R.create(-5, -0),
                    scale: 1,
                    ori: 0
                }, {
                    type: "stone_01",
                    pos: R.create(-5.75, -1.5),
                    scale: 1,
                    ori: 0,
                    inheritOri: !1
                }, {
                    type: "decal_vent_02",
                    pos: R.create(4.5, -8.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "bush_01",
                    pos: R.create(5.75, -6.75),
                    scale: 1,
                    ori: 0
                }]
            },
            bunker_egg_sublevel_01: {
                type: "building",
                map: {
                    display: !1,
                    color: 6707790,
                    scale: 1
                },
                terrain: {
                    grass: !0,
                    beach: !1
                },
                zIdx: 0,
                floor: {
                    surfaces: [{
                        type: "bunker",
                        collision: [B.createAabbExtents(R.create(0, -4.5), R.create(10, 9))]
                    }],
                    imgs: [{
                        sprite: "map-bunker-egg-chamber-floor-01.img",
                        scale: .5,
                        alpha: 1,
                        tint: 16777215
                    }]
                },
                ceiling: {
                    scopeIn: [B.createAabbExtents(R.create(0, -4.5), R.create(10, 9))],
                    scopeOut: [B.createAabbExtents(R.create(0, -4.5), R.create(10, 9))],
                    imgs: [{
                        sprite: "map-bunker-egg-chamber-ceiling-01.img",
                        scale: .5,
                        alpha: 1,
                        tint: 16777215
                    }],
                    vision: {
                        dist: 5,
                        width: 3
                    }
                },
                mapObjects: [{
                    type: "concrete_wall_ext_6",
                    pos: R.create(0, 11.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "metal_wall_ext_thicker_8",
                    pos: R.create(-3.5, 8),
                    scale: 1,
                    ori: 0
                }, {
                    type: "metal_wall_ext_thicker_8",
                    pos: R.create(3.5, 8),
                    scale: 1,
                    ori: 0
                }, {
                    type: "metal_wall_ext_thicker_4",
                    pos: R.create(-7, 5.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "metal_wall_ext_thicker_4",
                    pos: R.create(7, 5.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "metal_wall_ext_thicker_20",
                    pos: R.create(-10.5, -3),
                    scale: 1,
                    ori: 0
                }, {
                    type: "metal_wall_ext_thicker_20",
                    pos: R.create(10.5, -3),
                    scale: 1,
                    ori: 0
                }, {
                    type: "metal_wall_ext_thicker_24",
                    pos: R.create(0, -14.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "house_door_02",
                    pos: R.create(-2, 5),
                    scale: 1,
                    ori: 3
                }, {
                    type: "crate_07",
                    pos: R.create(0, -4.5),
                    scale: 1,
                    ori: 0,
                    inheritOri: !1
                }, {
                    type: "barrel_01",
                    pos: R.create(-7, -11),
                    scale: .9,
                    ori: 0
                }]
            },
            bunker_structure_01: {
                type: "structure",
                terrain: {
                    grass: !0,
                    beach: !1
                },
                mapObstacleBounds: [B.createAabbExtents(R.create(0, 5), R.create(7, 12))],
                layers: [{
                    type: "bunker_egg_01",
                    pos: R.create(0, 0),
                    ori: 0
                }, {
                    type: "bunker_egg_sublevel_01",
                    pos: R.create(0, 0),
                    ori: 0
                }],
                stairs: [{
                    collision: B.createAabbExtents(R.create(0, 8.4), R.create(2, 2.6)),
                    downDir: R.create(0, -1)
                }],
                mask: [B.createAabbExtents(R.create(0, -3.7), R.create(10, 9.5))]
            },
            bunker_hydra_01: {
                type: "building",
                map: {
                    display: !0,
                    shapes: [{
                        collider: B.createAabbExtents(R.create(20.25, 3.5), R.create(6.25, 5.5)),
                        color: 2894892
                    }, {
                        collider: B.createAabbExtents(R.create(32.25, 3.5), R.create(6.75, 9.25)),
                        color: 3815994
                    }]
                },
                terrain: {
                    grass: !0,
                    beach: !1
                },
                zIdx: 0,
                floor: {
                    surfaces: [{
                        type: "tile",
                        collision: [B.createAabbExtents(R.create(20.25, 3.5), R.create(6.25, 5.5)), B.createAabbExtents(R.create(32.25, 3.5), R.create(6.75, 9.25))]
                    }, {
                        type: "container",
                        collision: [B.createAabbExtents(R.create(16.25, 3.5), R.create(3.25, 2)), B.createAabbExtents(R.create(-16.5, -90.75), R.create(2, 3.25)), B.createAabbExtents(R.create(40, -50.5), R.create(2, 3.25))]
                    }],
                    imgs: [{
                        sprite: "map-bunker-hydra-floor-01.img",
                        pos: R.create(25.75, 3.5),
                        scale: .5,
                        alpha: 1,
                        tint: 16777215
                    }, {
                        sprite: "map-bunker-generic-floor-01.img",
                        pos: R.create(-16.5, -90),
                        scale: .5,
                        alpha: 1,
                        tint: 16777215,
                        rot: 2
                    }, {
                        sprite: "map-bunker-generic-floor-01.img",
                        pos: R.create(40, -51),
                        scale: .5,
                        alpha: 1,
                        tint: 16777215
                    }]
                },
                ceiling: {
                    scopeIn: [B.createAabbExtents(R.create(19.25, 3.5), R.create(6.25, 5.5)), B.createAabbExtents(R.create(32.25, 3.5), R.create(6.75, 9.25))],
                    scopeOut: [B.createAabbExtents(R.create(19.25, 3.5), R.create(6.25, 5.5)), B.createAabbExtents(R.create(32.25, 3.5), R.create(6.75, 9.25))],
                    imgs: [{
                        sprite: "map-bunker-hydra-ceiling-01.img",
                        pos: R.create(25.25, 3.5),
                        scale: .5,
                        alpha: 1,
                        tint: 16777215
                    }],
                    vision: {
                        dist: 5,
                        width: 2.75,
                        linger: .5,
                        fadeRate: 6
                    }
                },
                mapObjects: [{
                    type: "concrete_wall_ext_13",
                    pos: R.create(18.75, 9.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "concrete_wall_ext_13",
                    pos: R.create(18.75, -2.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "concrete_wall_ext_11",
                    pos: R.create(12.75, 3.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "concrete_wall_ext_7",
                    pos: R.create(25.75, 9),
                    scale: 1,
                    ori: 0
                }, {
                    type: "concrete_wall_ext_7",
                    pos: R.create(25.75, -2),
                    scale: 1,
                    ori: 0
                }, {
                    type: "concrete_wall_ext_2",
                    pos: R.create(26.25, 12.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "concrete_wall_ext_2",
                    pos: R.create(26.25, -5.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "concrete_wall_ext_8",
                    pos: R.create(35.25, 12.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "concrete_wall_ext_8",
                    pos: R.create(35.25, -5.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "concrete_wall_ext_17",
                    pos: R.create(38.75, 3.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "police_wall_int_7",
                    pos: R.create(32.75, 8.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "police_wall_int_2",
                    pos: R.create(33.25, 4.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "house_door_01",
                    pos: R.create(38.25, 4.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: c({
                        toilet_03: 5,
                        toilet_04: 1
                    }),
                    pos: R.create(35.75, 10.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "crate_08",
                    pos: R.create(35.75, -2.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "metal_wall_ext_short_6",
                    pos: R.create(13, 3.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "metal_wall_ext_short_7",
                    pos: R.create(17, 6),
                    scale: 1,
                    ori: 1
                }, {
                    type: "metal_wall_ext_short_7",
                    pos: R.create(17, 1),
                    scale: 1,
                    ori: 1
                }, {
                    type: "decal_vent_01",
                    pos: R.create(-1.5, 8),
                    scale: 1,
                    ori: 0
                }, {
                    type: "decal_vent_02",
                    pos: R.create(8, -.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "metal_wall_ext_short_6",
                    pos: R.create(-16.5, -87.75),
                    scale: 1,
                    ori: 1
                }, {
                    type: "metal_wall_ext_short_7",
                    pos: R.create(-19, -91),
                    scale: 1,
                    ori: 0
                }, {
                    type: "metal_wall_ext_short_7",
                    pos: R.create(-14, -91),
                    scale: 1,
                    ori: 0
                }, {
                    type: "decal_vent_01",
                    pos: R.create(-15.15, -79.55),
                    scale: 1,
                    ori: 0
                }, {
                    type: "metal_wall_ext_short_6",
                    pos: R.create(40, -53.25),
                    scale: 1,
                    ori: 1
                }, {
                    type: "metal_wall_ext_short_7",
                    pos: R.create(37.5, -50),
                    scale: 1,
                    ori: 0
                }, {
                    type: "metal_wall_ext_short_7",
                    pos: R.create(42.5, -50),
                    scale: 1,
                    ori: 0
                }, {
                    type: "decal_vent_02",
                    pos: R.create(40, -60.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "tree_01",
                    pos: R.create(-11.5, -92),
                    scale: 1.05,
                    ori: 0
                }, {
                    type: "tree_01",
                    pos: R.create(-21.5, -92.5),
                    scale: 1.1,
                    ori: 0
                }, {
                    type: "tree_01",
                    pos: R.create(-17.5, -83.25),
                    scale: 1,
                    ori: 0
                }, {
                    type: "tree_01",
                    pos: R.create(45, -50),
                    scale: 1.05,
                    ori: 0
                }, {
                    type: "tree_01",
                    pos: R.create(35, -50.5),
                    scale: 1.1,
                    ori: 0
                }, {
                    type: "tree_01",
                    pos: R.create(38.75, -42.25),
                    scale: 1,
                    ori: 0
                }, {
                    type: "decal_hydra_01",
                    pos: R.create(3.5, -48.5),
                    scale: 1,
                    ori: 0,
                    inheritOri: !1
                }]
            },
            bunker_hydra_sublevel_01: {
                type: "building",
                map: {
                    display: !1,
                    color: 6707790,
                    scale: 1
                },
                terrain: {
                    grass: !0,
                    beach: !1
                },
                zIdx: 1,
                floor: {
                    surfaces: [{
                        type: "bunker",
                        collision: [B.createAabbExtents(R.create(3.5, 3), R.create(9.5, 9))]
                    }, {
                        type: "tile",
                        collision: [B.createAabbExtents(R.create(-15.5, -79.5), R.create(3, 8)), B.createAabbExtents(R.create(40.5, -62), R.create(9.5, 8))]
                    }],
                    imgs: [{
                        sprite: "map-bunker-hydra-chamber-floor-01.img",
                        pos: R.create(7, 2.5),
                        scale: .5,
                        alpha: 1,
                        tint: 16777215
                    }, {
                        sprite: "map-bunker-hydra-chamber-floor-02.img",
                        pos: R.create(-15.5, -83),
                        scale: .5,
                        alpha: 1,
                        tint: 16777215
                    }, {
                        sprite: "map-bunker-hydra-chamber-floor-03.img",
                        pos: R.create(40.5, -58.5),
                        scale: .5,
                        alpha: 1,
                        tint: 16777215
                    }]
                },
                ceiling: {
                    scopeIn: [B.createAabbExtents(R.create(3.5, 2.25), R.create(10, 10)), B.createAabbExtents(R.create(-15, -77), R.create(5.5, 10.5)), B.createAabbExtents(R.create(38, -62), R.create(11.5, 8))],
                    scopeOut: [B.createAabbExtents(R.create(3.5, 2.25), R.create(10, 10)), B.createAabbExtents(R.create(-15, -77), R.create(5.5, 10.5)), B.createAabbExtents(R.create(38, -62), R.create(11.5, 8))],
                    imgs: [{
                        sprite: "map-bunker-hydra-chamber-ceiling-01.img",
                        pos: R.create(7, 2),
                        scale: .5,
                        alpha: 1,
                        tint: 6250335
                    }, {
                        sprite: "map-bunker-hydra-chamber-ceiling-02.img",
                        pos: R.create(-13.5, -76.5),
                        scale: .5,
                        alpha: 1,
                        tint: 6250335
                    }, {
                        sprite: "map-bunker-hydra-chamber-ceiling-03.img",
                        pos: R.create(38, -62),
                        scale: .5,
                        alpha: 1,
                        tint: 6250335
                    }],
                    vision: {
                        dist: 10,
                        width: 3
                    }
                },
                mapObjects: [{
                    type: "concrete_wall_ext_6",
                    pos: R.create(20, 3.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "metal_wall_ext_thicker_8",
                    pos: R.create(16.5, 7),
                    scale: 1,
                    ori: 1
                }, {
                    type: "metal_wall_ext_thicker_8",
                    pos: R.create(16.5, 0),
                    scale: 1,
                    ori: 1
                }, {
                    type: "metal_wall_ext_thicker_7",
                    pos: R.create(14, 12),
                    scale: 1,
                    ori: 0
                }, {
                    type: "metal_wall_ext_thicker_7",
                    pos: R.create(14, -5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "metal_wall_ext_thicker_21",
                    pos: R.create(2, 13.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "metal_wall_ext_thicker_21",
                    pos: R.create(-7, 2.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "metal_wall_ext_thicker_5",
                    pos: R.create(-3, -6.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "metal_wall_ext_thicker_5",
                    pos: R.create(10, -6.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "house_door_02",
                    pos: R.create(13.5, 5.5),
                    scale: 1,
                    ori: 2
                }, {
                    type: "lab_door_01",
                    pos: R.create(-.5, -7.5),
                    scale: 1,
                    ori: 3
                }, {
                    type: "lab_door_01",
                    pos: R.create(7.5, -7.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "sandbags_01",
                    pos: R.create(0, 7.25),
                    scale: 1,
                    ori: 1
                }, {
                    type: "crate_01",
                    pos: R.create(10.25, -2.75),
                    scale: .9,
                    ori: 0
                }, {
                    type: "crate_01",
                    pos: R.create(10.25, 9.75),
                    scale: .9,
                    ori: 0
                }, {
                    type: "barrel_01",
                    pos: R.create(-3.5, -3),
                    scale: .9,
                    ori: 0
                }, {
                    type: "metal_wall_ext_thicker_23",
                    pos: R.create(-20, -83),
                    scale: 1,
                    ori: 0
                }, {
                    type: "metal_wall_ext_thicker_19",
                    pos: R.create(-11, -79),
                    scale: 1,
                    ori: 0
                }, {
                    type: "metal_wall_ext_thicker_8",
                    pos: R.create(-13, -90.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "concrete_wall_ext_6",
                    pos: R.create(-16.5, -94),
                    scale: 1,
                    ori: 1
                }, {
                    type: "house_door_02",
                    pos: R.create(-18.5, -87.5),
                    scale: 1,
                    ori: 3
                }, {
                    type: "locker_01",
                    pos: R.create(-12.15, -79),
                    scale: 1,
                    ori: 3
                }, {
                    type: "locker_01",
                    pos: R.create(-12.15, -74.5),
                    scale: 1,
                    ori: 3
                }, {
                    type: "locker_01",
                    pos: R.create(-12.15, -83.5),
                    scale: 1,
                    ori: 3
                }, {
                    type: "concrete_wall_ext_6",
                    pos: R.create(40, -47),
                    scale: 1,
                    ori: 1
                }, {
                    type: "metal_wall_ext_thicker_8",
                    pos: R.create(36.5, -50.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "metal_wall_ext_thicker_8",
                    pos: R.create(43.5, -50.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "metal_wall_ext_thicker_4",
                    pos: R.create(33, -53),
                    scale: 1,
                    ori: 1
                }, {
                    type: "metal_wall_ext_thicker_7",
                    pos: R.create(30, -55),
                    scale: 1,
                    ori: 0
                }, {
                    type: "metal_wall_ext_thicker_7",
                    pos: R.create(30, -66),
                    scale: 1,
                    ori: 0
                }, {
                    type: "metal_wall_ext_thicker_16",
                    pos: R.create(36.5, -71),
                    scale: 1,
                    ori: 1
                }, {
                    type: "metal_wall_ext_thicker_8",
                    pos: R.create(48.25, -70),
                    scale: 1,
                    ori: 1
                }, {
                    type: "metal_wall_ext_thicker_13",
                    pos: R.create(50, -62),
                    scale: 1,
                    ori: 0
                }, {
                    type: "metal_wall_ext_thicker_8",
                    pos: R.create(48.25, -54),
                    scale: 1,
                    ori: 1
                }, {
                    type: "house_door_02",
                    pos: R.create(38, -53.5),
                    scale: 1,
                    ori: 3
                }, {
                    type: "crate_08",
                    pos: R.create(34, -67),
                    scale: 1,
                    ori: 2
                }, {
                    type: "locker_01",
                    pos: R.create(46.5, -55.15),
                    scale: 1,
                    ori: 0
                }, {
                    type: "locker_01",
                    pos: R.create(48.9, -57.5),
                    scale: 1,
                    ori: 3
                }, {
                    type: "locker_01",
                    pos: R.create(48.9, -62),
                    scale: 1,
                    ori: 3
                }, {
                    type: "locker_01",
                    pos: R.create(48.9, -66.5),
                    scale: 1,
                    ori: 3
                }, {
                    type: "locker_01",
                    pos: R.create(46.5, -68.85),
                    scale: 1,
                    ori: 2
                }, {
                    type: "bunker_hydra_compartment_01",
                    pos: R.create(3.5, -18.95),
                    scale: 1,
                    ori: 0,
                    inheritOri: !0
                }, {
                    type: "bunker_hydra_compartment_02",
                    pos: R.create(6, -50),
                    scale: 1,
                    ori: 0,
                    inheritOri: !0
                }, {
                    type: "bunker_hydra_compartment_03",
                    pos: R.create(10.5, -74.95),
                    scale: 1,
                    ori: 0,
                    inheritOri: !0
                }]
            },
            bunker_hydra_compartment_01: {
                type: "building",
                map: {
                    display: !1,
                    color: 6707790,
                    scale: 1
                },
                terrain: {
                    grass: !0,
                    beach: !1
                },
                zIdx: 2,
                floor: {
                    surfaces: [{
                        type: "tile",
                        collision: [B.createAabbExtents(R.create(0, 1.5), R.create(9.5, 12.5))]
                    }],
                    imgs: [{
                        sprite: "map-bunker-hydra-compartment-floor-01.img",
                        scale: .5,
                        alpha: 1,
                        tint: 16777215
                    }]
                },
                ceiling: {
                    scopeIn: [B.createAabbExtents(R.create(0, 1.25), R.create(10, 10))],
                    scopeOut: [B.createAabbExtents(R.create(0, 1.25), R.create(10, 10))],
                    imgs: [{
                        sprite: "map-bunker-hydra-compartment-ceiling-01.img",
                        pos: R.create(0, 1.25),
                        scale: .5,
                        alpha: 1,
                        tint: 6250335
                    }]
                },
                mapObjects: [{
                    type: "metal_wall_ext_thicker_17",
                    pos: R.create(-9.75, 3),
                    scale: 1,
                    ori: 0
                }, {
                    type: "metal_wall_ext_thicker_5",
                    pos: R.create(-6.5, 9.75),
                    scale: 1,
                    ori: 1
                }, {
                    type: "metal_wall_ext_thicker_5",
                    pos: R.create(6.5, 10.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "metal_wall_ext_thicker_18",
                    pos: R.create(10.5, 1.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "metal_wall_ext_thicker_7",
                    pos: R.create(-7.5, -6.75),
                    scale: 1,
                    ori: 1
                }, {
                    type: "metal_wall_ext_thicker_8",
                    pos: R.create(8, -7.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "crate_08",
                    pos: R.create(6.5, 6.5),
                    scale: 1,
                    ori: 2
                }, {
                    type: "sandbags_01",
                    pos: R.create(4.75, 1.5),
                    scale: 1,
                    ori: 0,
                    inheritOri: !0
                }, {
                    type: "lab_door_01",
                    pos: R.create(-4, -8.5),
                    scale: 1,
                    ori: 3
                }, {
                    type: "lab_door_01",
                    pos: R.create(4, -8.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "locker_01",
                    pos: R.create(-6, 8.4),
                    scale: 1,
                    ori: 0
                }, {
                    type: "locker_01",
                    pos: R.create(-8.35, 6),
                    scale: 1,
                    ori: 1
                }, {
                    type: "locker_01",
                    pos: R.create(-8.35, 1.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "locker_01",
                    pos: R.create(-8.35, -3),
                    scale: 1,
                    ori: 1
                }, {
                    type: "locker_01",
                    pos: R.create(-6, -5.4),
                    scale: 1,
                    ori: 2
                }]
            },
            metal_wall_column_5x12: P({
                material: "metal",
                extents: R.create(2.5, 6)
            }),
            bunker_hydra_compartment_02: {
                type: "building",
                map: {
                    display: !1,
                    color: 6707790,
                    scale: 1
                },
                terrain: {
                    grass: !0,
                    beach: !1
                },
                zIdx: 0,
                floor: {
                    surfaces: [{
                        type: "tile",
                        collision: [B.createAabbExtents(R.create(-2.5, 16), R.create(22, 4)), B.createAabbExtents(R.create(-2.5, 9.5), R.create(6, 2.5)), B.createAabbExtents(R.create(0, -4.5), R.create(25, 17))]
                    }],
                    imgs: [{
                        sprite: "map-bunker-hydra-compartment-floor-02.img",
                        pos: R.create(0, 0),
                        scale: .5,
                        alpha: 1,
                        tint: 16777215
                    }]
                },
                ceiling: {
                    scopeIn: [B.createAabbExtents(R.create(-2, 3), R.create(22.5, 19.5))],
                    scopeOut: [B.createAabbExtents(R.create(-2, 3), R.create(22.5, 19.5))],
                    imgs: [{
                        sprite: "map-bunker-hydra-compartment-ceiling-02.img",
                        pos: R.create(0, 1),
                        scale: .5,
                        alpha: 1,
                        tint: 6250335
                    }]
                },
                mapObjects: [{
                    type: "metal_wall_ext_thicker_21",
                    pos: R.create(-17, 21.75),
                    scale: 1,
                    ori: 1
                }, {
                    type: "metal_wall_ext_thicker_21",
                    pos: R.create(12, 21.75),
                    scale: 1,
                    ori: 1
                }, {
                    type: "metal_wall_ext_thicker_42",
                    pos: R.create(-26, -.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "metal_wall_ext_thicker_29",
                    pos: R.create(21, 6),
                    scale: 1,
                    ori: 0
                }, {
                    type: "metal_wall_ext_thicker_6",
                    pos: R.create(-19, -18.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "metal_wall_ext_thicker_4",
                    pos: R.create(-18.5, -14),
                    scale: 1,
                    ori: 1
                }, {
                    type: "metal_wall_ext_thicker_5",
                    pos: R.create(-15, -15),
                    scale: 1,
                    ori: 0
                }, {
                    type: "metal_wall_ext_thicker_9",
                    pos: R.create(-9, -16),
                    scale: 1,
                    ori: 1
                }, {
                    type: "metal_wall_ext_thicker_9",
                    pos: R.create(4, -16),
                    scale: 1,
                    ori: 1
                }, {
                    type: "metal_wall_ext_thicker_5",
                    pos: R.create(10, -15),
                    scale: 1,
                    ori: 0
                }, {
                    type: "metal_wall_ext_thicker_11",
                    pos: R.create(17, -14),
                    scale: 1,
                    ori: 1
                }, {
                    type: "metal_wall_column_5x12",
                    pos: R.create(-14.5, 13),
                    scale: 1,
                    ori: 1
                }, {
                    type: "metal_wall_column_5x12",
                    pos: R.create(9.5, 13),
                    scale: 1,
                    ori: 1
                }, {
                    type: "control_panel_03",
                    pos: R.create(-7, 12),
                    scale: 1,
                    ori: 1
                }, {
                    type: "control_panel_03",
                    pos: R.create(2, 12),
                    scale: 1,
                    ori: 3
                }, {
                    type: "lab_window_01",
                    pos: R.create(-7, 7),
                    scale: 1,
                    ori: 1
                }, {
                    type: "lab_window_01",
                    pos: R.create(-4, 7),
                    scale: 1,
                    ori: 1
                }, {
                    type: "lab_window_01",
                    pos: R.create(-1, 7),
                    scale: 1,
                    ori: 1
                }, {
                    type: "lab_window_01",
                    pos: R.create(2, 7),
                    scale: 1,
                    ori: 1
                }, {
                    type: "metal_wall_ext_4",
                    pos: R.create(-9, 8.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "metal_wall_ext_4",
                    pos: R.create(4, 8.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "lab_door_01",
                    pos: R.create(-20.5, 13),
                    scale: 1,
                    ori: 1
                }, {
                    type: "lab_door_01",
                    pos: R.create(15.5, 13),
                    scale: 1,
                    ori: 3
                }, {
                    type: "crate_01",
                    pos: R.create(-17.5, 7.75),
                    scale: 1,
                    ori: 0
                }, {
                    type: "vat_01",
                    pos: R.create(-12.25, 7.5),
                    scale: 1,
                    ori: 3
                }, {
                    type: "vat_01",
                    pos: R.create(-12, -2.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "vat_01",
                    pos: R.create(-18, -2.5),
                    scale: 1,
                    ori: 2
                }, {
                    type: "vat_02",
                    pos: R.create(-2.5, 1.5),
                    scale: 1,
                    ori: 2
                }, {
                    type: "power_box_01",
                    pos: R.create(-2.5, -3),
                    scale: 1,
                    ori: 2
                }, {
                    type: "crate_01",
                    pos: R.create(12.5, 7.75),
                    scale: 1,
                    ori: 0
                }, {
                    type: "vat_01",
                    pos: R.create(7.25, 7.5),
                    scale: 1,
                    ori: 3
                }, {
                    type: "vat_01",
                    pos: R.create(7, -2.5),
                    scale: 1,
                    ori: 2
                }, {
                    type: "vat_01",
                    pos: R.create(13, -2.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "vat_01",
                    pos: R.create(-10.75, -11.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "lab_door_01",
                    pos: R.create(-4.5, -16.5),
                    scale: 1,
                    ori: 3
                }, {
                    type: "vat_01",
                    pos: R.create(5.75, -11.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "fire_ext_01",
                    pos: R.create(1.5, -14.15),
                    scale: 1,
                    ori: 1
                }, {
                    type: "lab_door_03",
                    pos: R.create(-20.5, -16.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "lab_door_02",
                    pos: R.create(20.5, -8.5),
                    scale: 1,
                    ori: 2
                }]
            },
            bunker_hydra_compartment_03: {
                type: "building",
                map: {
                    display: !1,
                    color: 6707790,
                    scale: 1
                },
                terrain: {
                    grass: !0,
                    beach: !1
                },
                zIdx: 2,
                floor: {
                    surfaces: [{
                        type: "bunker",
                        collision: [B.createAabbExtents(R.create(0, 2), R.create(9, 8.75))]
                    }],
                    imgs: [{
                        sprite: "map-bunker-hydra-compartment-floor-03.img",
                        pos: R.create(0, -.5),
                        scale: .5,
                        alpha: 1,
                        tint: 16777215
                    }]
                },
                ceiling: {
                    scopeIn: [B.createAabbExtents(R.create(0, .75), R.create(10, 7.75))],
                    scopeOut: [B.createAabbExtents(R.create(0, .75), R.create(10, 7.75))],
                    imgs: [{
                        sprite: "map-bunker-hydra-compartment-ceiling-03.img",
                        pos: R.create(0, 1),
                        scale: .5,
                        alpha: 1,
                        tint: 6250335
                    }]
                },
                mapObjects: [{
                    type: "metal_wall_ext_thicker_17",
                    pos: R.create(-10.5, -1),
                    scale: 1,
                    ori: 0
                }, {
                    type: "metal_wall_ext_thicker_18",
                    pos: R.create(0, -8),
                    scale: 1,
                    ori: 1
                }, {
                    type: "metal_wall_ext_thicker_18",
                    pos: R.create(10.5, -1),
                    scale: 1,
                    ori: 0
                }, {
                    type: "metal_wall_ext_thicker_14",
                    pos: R.create(2, 6),
                    scale: 1,
                    ori: 1
                }, {
                    type: "crate_01",
                    pos: R.create(-6.5, -1.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "crate_01",
                    pos: R.create(-1.75, 2),
                    scale: 1,
                    ori: 0
                }, {
                    type: "barrel_01",
                    pos: R.create(-2, -2),
                    scale: .9,
                    ori: 0
                }, {
                    type: "case_03",
                    pos: R.create(7, -4),
                    scale: 1,
                    ori: 3
                }]
            },
            bunker_structure_02: {
                type: "structure",
                terrain: {
                    grass: !0,
                    beach: !1
                },
                mapObstacleBounds: [B.createAabbExtents(R.create(25.5, 3.5), R.create(16, 11.5)), B.createAabbExtents(R.create(-16.5, -89.5), R.create(7, 7.5)), B.createAabbExtents(R.create(40, -47.25), R.create(6.5, 7.25)), B.createAabbExtents(R.create(-5.75, -38.5), R.create(3, 3))],
                layers: [{
                    type: "bunker_hydra_01",
                    pos: R.create(0, 0),
                    ori: 0
                }, {
                    type: "bunker_hydra_sublevel_01",
                    pos: R.create(0, 0),
                    ori: 0
                }],
                stairs: [{
                    collision: B.createAabbExtents(R.create(16.4, 3.5), R.create(2.6, 2)),
                    downDir: R.create(-1, 0)
                }, {
                    collision: B.createAabbExtents(R.create(-16.5, -90.4), R.create(2, 3.1)),
                    downDir: R.create(0, 1)
                }, {
                    collision: B.createAabbExtents(R.create(40, -50.5), R.create(2, 3.1)),
                    downDir: R.create(0, -1)
                }],
                mask: [B.createAabbExtents(R.create(3.5, -7.2), R.create(10.5, 20)), B.createAabbExtents(R.create(-15, -79.75), R.create(5, 8.5)), B.createAabbExtents(R.create(39, -61.85), R.create(12, 9)), B.createAabbExtents(R.create(3.5, -49.2), R.create(23.5, 22)), B.createAabbExtents(R.create(10.5, -76.7), R.create(10, 5.5))]
            },
            bunker_storm_01: {
                type: "building",
                map: {
                    display: !0,
                    shapes: [{
                        collider: B.createAabbExtents(R.create(0, 10), R.create(3.6, 5.8)),
                        color: 6707790
                    }]
                },
                terrain: {
                    grass: !0,
                    beach: !1
                },
                zIdx: 0,
                floor: {
                    surfaces: [{
                        type: "container",
                        collision: [B.createAabbExtents(R.create(0, 7.75), R.create(2, 3.25))]
                    }, {
                        type: "shack",
                        collision: [B.createAabbExtents(R.create(0, 13.5), R.create(3.75, 2.5)), B.createAabbExtents(R.create(5, 13.75), R.create(1.25, 2.25))]
                    }],
                    imgs: [{
                        sprite: "map-bunker-storm-floor-02.img",
                        pos: R.create(1.25, 10),
                        scale: .5,
                        alpha: 1,
                        tint: 16777215
                    }]
                },
                ceiling: {
                    scopeIn: [B.createAabbExtents(R.create(0, 10), R.create(3.5, 5.6))],
                    scopeOut: [B.createAabbExtents(R.create(0, 10), R.create(3.8, 5.9))],
                    vision: {
                        dist: 5,
                        width: 2.75,
                        linger: .5,
                        fadeRate: 6
                    },
                    imgs: [{
                        sprite: "map-building-shack-ceiling-01.img",
                        pos: R.create(-1, 10),
                        scale: .5,
                        alpha: 1,
                        tint: 16777215,
                        rot: 1
                    }],
                    destroy: {
                        wallCount: 2,
                        particle: "shackFrag",
                        particleCount: 25,
                        residue: "none"
                    }
                },
                mapObjects: [{
                    type: "metal_wall_ext_short_6",
                    pos: R.create(0, 5.3),
                    scale: 1,
                    ori: 1
                }, {
                    type: "metal_wall_ext_short_7",
                    pos: R.create(-2.5, 8.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "metal_wall_ext_short_7",
                    pos: R.create(2.5, 8.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "shack_wall_bot",
                    pos: R.create(3.39, 8.6),
                    scale: 1,
                    ori: 1
                }, {
                    type: "shack_wall_side_left",
                    pos: R.create(.3, 4.52),
                    scale: 1,
                    ori: 1
                }, {
                    type: "shack_wall_top",
                    pos: R.create(-3.39, 9.73),
                    scale: 1,
                    ori: 1
                }, {
                    type: "shack_wall_side_right",
                    pos: R.create(0, 15.58),
                    scale: 1,
                    ori: 1
                }, {
                    type: "crate_01",
                    pos: R.create(-2, 17.9),
                    scale: .8,
                    ori: 0,
                    inheritOri: !1
                }, {
                    type: "barrel_01",
                    pos: R.create(1.45, 17.7),
                    scale: .85,
                    ori: 0
                }, {
                    type: "decal_vent_01",
                    pos: R.create(-5, -0),
                    scale: 1,
                    ori: 0
                }, {
                    type: "decal_vent_02",
                    pos: R.create(4.5, -8.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "stone_01",
                    pos: R.create(-4.25, -1.5),
                    scale: 1,
                    ori: 0,
                    inheritOri: !1
                }, {
                    type: "bush_01",
                    pos: R.create(3.75, -6.75),
                    scale: 1,
                    ori: 0
                }]
            },
            bunker_storm_sublevel_01: {
                type: "building",
                map: {
                    display: !1,
                    color: 6707790,
                    scale: 1
                },
                terrain: {
                    grass: !0,
                    beach: !1
                },
                zIdx: 1,
                floor: {
                    surfaces: [{
                        type: "bunker",
                        collision: [B.createAabbExtents(R.create(1, -4.4), R.create(10.5, 9))]
                    }, {
                        type: "tile",
                        collision: [B.createAabbExtents(R.create(19, -5.5), R.create(7.5, 8))]
                    }],
                    imgs: [{
                        sprite: "map-bunker-storm-chamber-floor-01.img",
                        pos: R.create(8.5, -1),
                        scale: .5,
                        alpha: 1,
                        tint: 16777215
                    }]
                },
                ceiling: {
                    scopeIn: [B.createAabbExtents(R.create(8.5, -4.5), R.create(18, 9.1))],
                    scopeOut: [B.createAabbExtents(R.create(8.5, -4.5), R.create(18, 9.1))],
                    imgs: [{
                        sprite: "map-bunker-storm-chamber-ceiling-01.img",
                        pos: R.create(8.5, -1),
                        scale: .5,
                        alpha: 1,
                        tint: 16777215
                    }],
                    vision: {
                        dist: 5,
                        width: 3
                    }
                },
                mapObjects: [{
                    type: "concrete_wall_ext_6",
                    pos: R.create(0, 11.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "metal_wall_ext_thicker_8",
                    pos: R.create(-3.5, 8),
                    scale: 1,
                    ori: 0
                }, {
                    type: "metal_wall_ext_thicker_8",
                    pos: R.create(3.5, 8),
                    scale: 1,
                    ori: 0
                }, {
                    type: "metal_wall_ext_thicker_4",
                    pos: R.create(-7, 5.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "metal_wall_ext_thicker_4",
                    pos: R.create(7, 5.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "metal_wall_ext_thicker_20",
                    pos: R.create(-10.5, -3),
                    scale: 1,
                    ori: 0
                }, {
                    type: "metal_wall_ext_thicker_21",
                    pos: R.create(-1.5, -14.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "metal_wall_ext_thicker_10",
                    pos: R.create(10.5, -11),
                    scale: 1,
                    ori: 0
                }, {
                    type: "metal_wall_ext_thicker_10",
                    pos: R.create(12.5, -11),
                    scale: 1,
                    ori: 0
                }, {
                    type: "metal_wall_ext_thicker_15",
                    pos: R.create(21.5, -14.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "metal_wall_ext_thicker_15",
                    pos: R.create(27.5, -5.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "metal_wall_ext_thicker_17",
                    pos: R.create(20.5, 3.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "metal_wall_ext_thicker_9",
                    pos: R.create(10.5, 2.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "metal_wall_ext_thicker_4",
                    pos: R.create(12.5, 0),
                    scale: 1,
                    ori: 0
                }, {
                    type: "house_door_02",
                    pos: R.create(-2, 5),
                    scale: 1,
                    ori: 3
                }, {
                    type: "crate_01",
                    pos: R.create(-6.5, 1.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "crate_04",
                    pos: R.create(6, -1.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "crate_04",
                    pos: R.create(4, -6.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "control_panel_03",
                    pos: R.create(16, -11.5),
                    scale: 1,
                    ori: 2
                }, {
                    type: "control_panel_02",
                    pos: R.create(20, -11.25),
                    scale: 1,
                    ori: 2
                }, {
                    type: "control_panel_03",
                    pos: R.create(24, -11.5),
                    scale: 1,
                    ori: 2
                }, {
                    type: "crate_08",
                    pos: R.create(23.5, -.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: c({
                        case_03: 1,
                        chest_02: 9
                    }),
                    pos: R.create(16.5, .25),
                    scale: 1,
                    ori: 0
                }, {
                    type: "lab_door_01",
                    pos: R.create(11.5, -2),
                    scale: 1,
                    ori: 2
                }, {
                    type: "barrel_01",
                    pos: R.create(-7, -11),
                    scale: .9,
                    ori: 0
                }]
            },
            bunker_structure_03: {
                type: "structure",
                terrain: {
                    grass: !0,
                    beach: !1
                },
                mapObstacleBounds: [B.createAabbExtents(R.create(1, 6), R.create(7, 13.5))],
                layers: [{
                    type: "bunker_storm_01",
                    pos: R.create(0, 0),
                    ori: 0
                }, {
                    type: "bunker_storm_sublevel_01",
                    pos: R.create(0, 0),
                    ori: 0
                }],
                stairs: [{
                    collision: B.createAabbExtents(R.create(0, 8.4), R.create(2, 2.6)),
                    downDir: R.create(0, -1)
                }],
                mask: [B.createAabbExtents(R.create(8.5, -3.7), R.create(18, 9.5))]
            },
            bunker_conch_01: {
                type: "building",
                map: {
                    display: !0,
                    shapes: [{
                        collider: B.createAabbExtents(R.create(20, 3.35), R.create(5.5, 2.5)),
                        color: 2703694
                    }, {
                        collider: B.createAabbExtents(R.create(46.5, -32.55), R.create(5.5, 2.5)),
                        color: 2703694
                    }]
                },
                terrain: {
                    grass: !0,
                    beach: !1
                },
                zIdx: 0,
                floor: {
                    surfaces: [{
                        type: "container",
                        collision: [B.createAabbExtents(R.create(16.25, 3.5), R.create(3.25, 2)), B.createAabbExtents(R.create(44.25, -32.5), R.create(3.25, 2)), B.createAabbExtents(R.create(22, 3.35), R.create(8, 2.5)), B.createAabbExtents(R.create(50.5, -32.55), R.create(8, 2.5))]
                    }],
                    imgs: [{
                        sprite: "map-bunker-conch-floor-01.img",
                        pos: R.create(20.75, 3.45),
                        scale: .5,
                        alpha: 1,
                        tint: 16777215
                    }, {
                        sprite: "map-bunker-conch-floor-01.img",
                        pos: R.create(48.75, -32.45),
                        scale: .5,
                        alpha: 1,
                        tint: 16777215
                    }]
                },
                ceiling: {
                    scopeIn: [B.createAabbExtents(R.create(19, 3.35), R.create(5.5, 2.5)), B.createAabbExtents(R.create(47.5, -32.55), R.create(5.5, 2.5))],
                    scopeOut: [B.createAabbExtents(R.create(22, 3.35), R.create(8, 2.5)), B.createAabbExtents(R.create(50.5, -32.55), R.create(8, 2.5))],
                    imgs: [{
                        sprite: "map-bunker-conch-ceiling-01.img",
                        pos: R.create(19.25, 3.35),
                        scale: .5,
                        alpha: 1,
                        tint: 16777215
                    }, {
                        sprite: "map-bunker-conch-ceiling-01.img",
                        pos: R.create(47.25, -32.55),
                        scale: .5,
                        alpha: 1,
                        tint: 16777215
                    }],
                    vision: {}
                },
                mapObjects: [{
                    type: "container_wall_top",
                    pos: R.create(13.7, 3.35),
                    scale: 1,
                    ori: 1
                }, {
                    type: "container_wall_side",
                    pos: R.create(19.6, 5.7),
                    scale: 1,
                    ori: 1
                }, {
                    type: "container_wall_side",
                    pos: R.create(19.6, 1),
                    scale: 1,
                    ori: 1
                }, {
                    type: "barrel_01",
                    pos: R.create(24, 9),
                    scale: 1,
                    ori: 0
                }, {
                    type: "crate_01",
                    pos: R.create(18, -2),
                    scale: 1,
                    ori: 0
                }, {
                    type: "container_wall_top",
                    pos: R.create(41.7, -32.55),
                    scale: 1,
                    ori: 1
                }, {
                    type: "container_wall_side",
                    pos: R.create(47.6, -34.9),
                    scale: 1,
                    ori: 1
                }, {
                    type: "container_wall_side",
                    pos: R.create(47.6, -30.2),
                    scale: 1,
                    ori: 1
                }, {
                    type: "crate_01",
                    pos: R.create(47, -27),
                    scale: 1,
                    ori: 0
                }, {
                    type: "barrel_01",
                    pos: R.create(40, -37),
                    scale: 1,
                    ori: 0
                }]
            },
            bunker_conch_sublevel_01: {
                type: "building",
                map: {
                    display: !1,
                    color: 6707790,
                    scale: 1
                },
                terrain: {
                    grass: !0,
                    beach: !1
                },
                zIdx: 1,
                floor: {
                    surfaces: [{
                        type: "tile",
                        collision: [B.createAabbExtents(R.create(1, 4), R.create(12.5, 3.5)), B.createAabbExtents(R.create(28, -30), R.create(13.5, 4.5))]
                    }],
                    imgs: [{
                        sprite: "map-bunker-conch-chamber-floor-01.img",
                        pos: R.create(4, 5),
                        scale: .5,
                        alpha: 1,
                        tint: 16777215
                    }, {
                        sprite: "map-bunker-conch-chamber-floor-02.img",
                        pos: R.create(34.75, -29.9),
                        scale: .5,
                        alpha: 1,
                        tint: 16777215
                    }]
                },
                ceiling: {
                    scopeIn: [B.createAabbExtents(R.create(1, 3.5), R.create(12.5, 5)), B.createAabbExtents(R.create(26.75, -30), R.create(14.75, 4.5))],
                    scopeOut: [B.createAabbExtents(R.create(1, 3.5), R.create(12.5, 5)), B.createAabbExtents(R.create(26.75, -30), R.create(14.75, 4.5))],
                    imgs: [{
                        sprite: "map-bunker-conch-chamber-ceiling-01.img",
                        pos: R.create(-2, 3.5),
                        scale: .5,
                        alpha: 1,
                        tint: 6250335
                    }, {
                        sprite: "map-bunker-conch-chamber-ceiling-02.img",
                        pos: R.create(26.25, -29.9),
                        scale: .5,
                        alpha: 1,
                        tint: 6250335
                    }],
                    vision: {
                        dist: 7,
                        width: 3
                    }
                },
                mapObjects: [{
                    type: "house_door_02",
                    pos: R.create(13.5, 1.35),
                    scale: 1,
                    ori: 0
                }, {
                    type: "concrete_wall_ext_6",
                    pos: R.create(20, 3.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "metal_wall_ext_thicker_8",
                    pos: R.create(16.5, 6.7),
                    scale: 1,
                    ori: 1
                }, {
                    type: "metal_wall_ext_thicker_29",
                    pos: R.create(7, 0),
                    scale: 1,
                    ori: 1
                }, {
                    type: "metal_wall_ext_thicker_16",
                    pos: R.create(5.5, 9),
                    scale: 1,
                    ori: 1
                }, {
                    type: "metal_wall_ext_thicker_9",
                    pos: R.create(-7, 7),
                    scale: 1,
                    ori: 1
                }, {
                    type: "metal_wall_ext_thicker_10",
                    pos: R.create(-13, 3.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "locker_01",
                    pos: R.create(9.5, 7.85),
                    scale: 1,
                    ori: 0
                }, {
                    type: "locker_01",
                    pos: R.create(5, 7.85),
                    scale: 1,
                    ori: 0
                }, {
                    type: "locker_01",
                    pos: R.create(.5, 7.85),
                    scale: 1,
                    ori: 0
                }, {
                    type: "decal_pipes_01",
                    pos: R.create(-4.5, 5),
                    scale: 1,
                    ori: 2
                }, {
                    type: "house_door_02",
                    pos: R.create(41.5, -34.55),
                    scale: 1,
                    ori: 0
                }, {
                    type: "concrete_wall_ext_6",
                    pos: R.create(48, -32.4),
                    scale: 1,
                    ori: 0
                }, {
                    type: "metal_wall_ext_thicker_20",
                    pos: R.create(38.5, -35.9),
                    scale: 1,
                    ori: 1
                }, {
                    type: "metal_wall_ext_thicker_13",
                    pos: R.create(42, -29.2),
                    scale: 1,
                    ori: 1
                }, {
                    type: "metal_wall_ext_thicker_8",
                    pos: R.create(34, -26.7),
                    scale: 1,
                    ori: 0
                }, {
                    type: "metal_wall_ext_thicker_8",
                    pos: R.create(27, -33.4),
                    scale: 1,
                    ori: 0
                }, {
                    type: "metal_wall_ext_thicker_11",
                    pos: R.create(20, -30.9),
                    scale: 1,
                    ori: 1
                }, {
                    type: "metal_wall_ext_thicker_18",
                    pos: R.create(23.5, -23.9),
                    scale: 1,
                    ori: 1
                }, {
                    type: "decal_pipes_04",
                    pos: R.create(22, -29.9),
                    scale: 1,
                    ori: 2
                }, {
                    type: "loot_tier_2",
                    pos: R.create(31, -30),
                    scale: 1,
                    ori: 0
                }, {
                    type: "bunker_conch_compartment_01",
                    pos: R.create(-1.5, -12.4),
                    scale: 1,
                    ori: 0,
                    inheritOri: !0
                }]
            },
            bunker_conch_compartment_01: {
                type: "building",
                map: {
                    display: !1,
                    color: 6707790,
                    scale: 1
                },
                terrain: {
                    grass: !0,
                    beach: !1
                },
                zIdx: 2,
                floor: {
                    surfaces: [{
                        type: "water",
                        collision: [B.createAabbExtents(R.create(1, -2.5), R.create(15, 15.5))]
                    }],
                    imgs: [{
                        sprite: "map-bunker-conch-compartment-floor-01.img",
                        pos: R.create(-1.25, -6.25),
                        scale: .5,
                        alpha: 1,
                        tint: 16777215,
                        waterRipples: !0
                    }]
                },
                ceiling: {
                    scopeIn: [B.createAabbExtents(R.create(-1.5, -1), R.create(12.5, 12)), B.createAabbExtents(R.create(9.5, -14.5), R.create(4, 2.5))],
                    scopeOut: [B.createAabbExtents(R.create(-1.5, -1), R.create(12.5, 12)), B.createAabbExtents(R.create(9.5, -14.5), R.create(4, 2.5))],
                    imgs: [{
                        sprite: "map-bunker-conch-compartment-ceiling-01.img",
                        pos: R.create(-.75, -5.5),
                        scale: .5,
                        alpha: 1,
                        tint: 6250335
                    }],
                    vision: {
                        dist: 7,
                        width: 3
                    }
                },
                mapObjects: [{
                    type: "metal_wall_ext_thicker_5",
                    pos: R.create(-11.5, 8.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "metal_wall_ext_thicker_4",
                    pos: R.create(-15, 7.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "metal_wall_ext_thicker_11",
                    pos: R.create(-15.5, .5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "metal_wall_ext_thicker_7",
                    pos: R.create(-13.5, -6.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "metal_wall_ext_thicker_7",
                    pos: R.create(-11.5, -11.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "metal_wall_ext_thicker_13",
                    pos: R.create(-3.5, -13.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "metal_wall_ext_thicker_5",
                    pos: R.create(4.5, -14.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "metal_wall_ext_thicker_13",
                    pos: R.create(9.5, -18.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "metal_wall_ext_thicker_7",
                    pos: R.create(13.5, -11.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "metal_wall_ext_thicker_19",
                    pos: R.create(11.5, -.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "metal_wall_ext_thicker_19",
                    pos: R.create(3.5, 10.5),
                    scale: 1,
                    ori: 1
                }, {
                    type: "lab_door_01",
                    pos: R.create(-10, 11),
                    scale: 1,
                    ori: 3
                }, {
                    type: "control_panel_03",
                    pos: R.create(-12.25, 4.25),
                    scale: 1,
                    ori: 1
                }, {
                    type: "control_panel_02",
                    pos: R.create(-12, .25),
                    scale: 1,
                    ori: 1
                }, {
                    type: "fire_ext_01",
                    pos: R.create(-3, 8.75),
                    scale: 1,
                    ori: 3,
                    inheritOri: !0
                }, {
                    type: "crate_09",
                    pos: R.create(2.75, 6.25),
                    scale: 1,
                    ori: 0,
                    inheritOri: !1
                }, {
                    type: "crate_01",
                    pos: R.create(7.5, 6.25),
                    scale: 1,
                    ori: 0
                }, {
                    type: "decal_pipes_02",
                    pos: R.create(7.25, 7.25),
                    scale: 1,
                    ori: 0
                }, {
                    type: "barrel_01",
                    pos: R.create(-3.75, -2),
                    scale: .8,
                    ori: 0,
                    inheritOri: !1
                }, {
                    type: "barrel_01",
                    pos: R.create(-1.25, -4.25),
                    scale: .8,
                    ori: 0,
                    inheritOri: !1
                }, {
                    type: "crate_01",
                    pos: R.create(-7.5, -9.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "crate_01",
                    pos: R.create(3.5, -9.5),
                    scale: 1,
                    ori: 0
                }, {
                    type: "decal_pipes_03",
                    pos: R.create(-5.25, -9.25),
                    scale: 1,
                    ori: 0
                }, {
                    type: "lab_door_01",
                    pos: R.create(13.5, -17),
                    scale: 1,
                    ori: 0
                }]
            },
            bunker_structure_04: {
                type: "structure",
                terrain: {
                    grass: !0,
                    beach: !1,
                    waterEdge: {
                        dir: R.create(-1, 0),
                        distMin: 15,
                        distMax: 16
                    }
                },
                mapObstacleBounds: [B.createAabbExtents(R.create(21, 3.5), R.create(9.5, 8)), B.createAabbExtents(R.create(48, -32.5), R.create(10, 8))],
                layers: [{
                    type: "bunker_conch_01",
                    pos: R.create(0, 0),
                    ori: 0
                }, {
                    type: "bunker_conch_sublevel_01",
                    pos: R.create(0, 0),
                    ori: 0
                }],
                stairs: [{
                    collision: B.createAabbExtents(R.create(16.9, 3.5), R.create(2.6, 2)),
                    downDir: R.create(-1, 0)
                }, {
                    collision: B.createAabbExtents(R.create(44.9, -32.5), R.create(2.6, 2)),
                    downDir: R.create(-1, 0)
                }],
                mask: [B.createAabbExtents(R.create(3.5, -7.2), R.create(10.7, 20)), B.createAabbExtents(R.create(37.25, -32), R.create(5, 5))]
            },
            container_wall_top: P({
                material: "metal",
                extents: R.create(2.75, .4)
            }),
            container_wall_side: P({
                material: "metal",
                extents: R.create(.4, 5.5)
            }),
            container_wall_side_open: P({
                material: "metal",
                extents: R.create(.4, 6)
            }),
            container_01: f({
                open: !1,
                tint: 2703694,
                ceilingSprite: "map-building-container-ceiling-01.img"
            }),
            container_02: f({
                open: !1,
                tint: 2703694,
                ceilingSprite: "map-building-container-ceiling-02.img"
            }),
            container_03: f({
                open: !1,
                tint: 2703694,
                ceilingSprite: "map-building-container-ceiling-03.img"
            }),
            container_04: f({
                open: !0,
                tint: 3560807,
                ceilingSprite: "map-building-container-open-ceiling-01.img"
            }),
            container_06: f({
                open: !1,
                tint: 12227840,
                ceilingSprite: "map-building-container-ceiling-01.img",
                loot_spawner_01: "loot_tier_sv98",
                loot_spawner_02: "loot_tier_scopes_sniper"
            }),
            loot_tier_1: {
                type: "loot_spawner",
                collision: B.createCircle(R.create(0, 0), 3),
                tier: "tier_world",
                terrain: {
                    grass: !0,
                    beach: !0
                }
            },
            loot_tier_2: {
                type: "loot_spawner",
                collision: B.createCircle(R.create(0, 0), 3),
                tier: "tier_container",
                terrain: {
                    grass: !0,
                    beach: !0
                }
            },
            loot_tier_beach: {
                type: "loot_spawner",
                collision: B.createCircle(R.create(0, 0), 3),
                tier: "tier_world",
                terrain: {
                    grass: !1,
                    beach: !0
                }
            },
            loot_tier_vault_floor: {
                type: "loot_spawner",
                collision: B.createCircle(R.create(0, 0), 3),
                tier: "tier_vault_floor",
                terrain: {
                    grass: !0,
                    beach: !0
                }
            },
            loot_tier_police_floor: {
                type: "loot_spawner",
                collision: B.createCircle(R.create(0, 0), 3),
                tier: "tier_police_floor",
                terrain: {
                    grass: !0,
                    beach: !0
                }
            },
            loot_tier_mansion_floor: {
                type: "loot_spawner",
                collision: B.createCircle(R.create(0, 0), 3),
                tier: "tier_mansion_floor",
                terrain: {
                    grass: !0,
                    beach: !0
                }
            },
            loot_tier_sv98: {
                type: "loot_spawner",
                collision: B.createCircle(R.create(0, 0), 3),
                tier: "tier_sv98",
                terrain: {
                    grass: !0,
                    beach: !0
                }
            },
            loot_tier_scopes_sniper: {
                type: "loot_spawner",
                collision: B.createCircle(R.create(0, 0), 3),
                tier: "tier_scopes_sniper",
                terrain: {
                    grass: !0,
                    beach: !0
                }
            },
            decal_barrel_explosion: {
                type: "decal",
                collision: B.createCircle(R.create(0, 0), 1),
                height: 0,
                img: {
                    sprite: "map-barrel-res-01.img",
                    scale: .24,
                    alpha: 1,
                    tint: 16777215,
                    zIdx: 11
                }
            },
            decal_frag_explosion: {
                type: "decal",
                collision: B.createCircle(R.create(0, 0), 1),
                height: 0,
                img: {
                    sprite: "map-barrel-res-01.img",
                    scale: .2,
                    alpha: .8,
                    tint: 16777215,
                    zIdx: 11
                }
            },
            decal_smoke_explosion: {
                type: "decal",
                collision: B.createCircle(R.create(0, 0), 1),
                height: 0,
                img: {
                    sprite: "map-smoke-res.img",
                    scale: .2,
                    alpha: .5,
                    tint: 16777215,
                    zIdx: 11
                }
            },
            decal_vent_01: {
                type: "decal",
                collision: B.createCircle(R.create(0, 0), 2),
                height: 0,
                img: {
                    sprite: "map-bunker-vent-01.img",
                    scale: .5,
                    alpha: 1,
                    tint: 16777215,
                    zIdx: 1
                }
            },
            decal_vent_02: {
                type: "decal",
                collision: B.createCircle(R.create(0, 0), 2),
                height: 0,
                img: {
                    sprite: "map-bunker-vent-02.img",
                    scale: .5,
                    alpha: 1,
                    tint: 16777215,
                    zIdx: 1
                }
            },
            decal_hydra_01: {
                type: "decal",
                collision: B.createCircle(R.create(0, 0), 3),
                height: 0,
                img: {
                    sprite: "map-bunker-hydra-floor-04.img",
                    scale: .5,
                    alpha: 1,
                    tint: 16777215,
                    zIdx: 1
                }
            },
            decal_pipes_01: {
                type: "decal",
                collision: B.createAabbExtents(R.create(0, 0), R.create(1, 4.5)),
                height: 1,
                img: {
                    sprite: "map-pipes-01.img",
                    scale: .5,
                    alpha: .96,
                    tint: 16777215,
                    zIdx: 60
                }
            },
            decal_pipes_02: {
                type: "decal",
                collision: B.createAabbExtents(R.create(0, 0), R.create(4, 3)),
                height: 1,
                img: {
                    sprite: "map-pipes-02.img",
                    scale: .5,
                    alpha: .96,
                    tint: 16777215,
                    zIdx: 60
                }
            },
            decal_pipes_03: {
                type: "decal",
                collision: B.createAabbExtents(R.create(0, 0), R.create(10.5, 4)),
                height: 1,
                img: {
                    sprite: "map-pipes-03.img",
                    scale: .5,
                    alpha: .96,
                    tint: 16777215,
                    zIdx: 60
                }
            },
            decal_pipes_04: {
                type: "decal",
                collision: B.createAabbExtents(R.create(0, 0), R.create(1, 5.5)),
                height: 1,
                img: {
                    sprite: "map-pipes-04.img",
                    scale: .5,
                    alpha: .96,
                    tint: 16777215,
                    zIdx: 60
                }
            },
            decal_initiative_01: {
                type: "decal",
                collision: B.createCircle(R.create(0, 0), 3),
                height: 0,
                img: {
                    sprite: "map-decal-initiative.img",
                    scale: .5,
                    alpha: 1,
                    tint: 16777215,
                    zIdx: 1
                }
            }
        };
        e.exports = {
            Defs: q,
            MinScale: .125,
            MaxScale: 2.5,
            oriToRad: r,
            getBoundingCollider: o,
            t: function(e, t) {
                return e.sprite && e.sprite.visible && e.sprite.alpha < t
            }
        }
    },
    d3da5587: function(e, t, a) {
        "use strict";
        function i(e, t, a) {
            return t in e ? Object.defineProperty(e, t, {
                value: a,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = a,
            e
        }
        function r(e) {
            return document.getElementById(e)
        }
        function o(e) {
            return 0 == e.button
        }
        function n(e) {
            return "which"in e ? 3 == e.which : 2 == e.button
        }
        function s(e) {
            return e && e.length > 4 ? "img/loot/" + e.slice(0, -4) + ".svg" : ""
        }
        function l(e, t, a) {
            if (e instanceof Array)
                for (var i = 0; i < e.length; i++)
                    l(e[i], void 0 !== a ? t[a] : t, i);
            else if (e instanceof Object)
                for (var r = Object.keys(e), o = 0; o < r.length; o++) {
                    var n = r[o];
                    l(e[n], void 0 !== a ? t[a] : t, n)
                }
            else
                t[a] = e
        }
        function m(e, t, a) {
            if (t instanceof Array) {
                for (var i = [], r = 0; r < t.length; r++)
                    i[r] = m(e[r], t[r], a);
                return i
            }
            if (t instanceof Object) {
                for (var o = {}, n = Object.keys(t), s = 0; s < n.length; s++) {
                    var l = n[s];
                    o[l] = m(e[l], t[l], a)
                }
                return o
            }
            return e != t || a
        }
        function c() {
            var e = [];
            for (var t in f.items)
                f.items.hasOwnProperty(t) && "scope" == f.items[t].type && e.push(t);
            return e
        }
        function d() {
            var e = [];
            for (var t in f.items)
                if (f.items.hasOwnProperty(t)) {
                    var a = f.items[t].type;
                    "heal" != a && "boost" != a && "ammo" != a || e.push(t)
                }
            return e
        }
        function p() {
            return ["chest", "helmet", "backpack"]
        }
        function u() {
            this.mobile = !1,
            this.touch = !1,
            this.pickupMessage = {
                message: "",
                ticker: 0,
                duration: 0,
                opacity: 0
            },
            this.killFeed = [];
            for (var e = 0; e < T; e++)
                this.killFeed.push({
                    text: "",
                    color: "#000000",
                    offset: 0,
                    opacity: 0,
                    ticker: Number.MAX_VALUE
                });
            this.weapons = [];
            for (var t = 0; t < f.WeaponSlot.Count; t++)
                this.weapons[t] = {
                    slot: t,
                    name: "",
                    ammo: 0,
                    equipped: !1,
                    selectable: !1,
                    opacity: 0,
                    width: 0,
                    ticker: 0
                };
            this.ammo = {
                current: 0,
                remaining: 0,
                displayCurrent: !1,
                displayRemaining: !1
            },
            this.interaction = {
                type: C.None,
                text: "",
                key: "",
                usable: !1
            },
            this.scopes = [];
            for (var a = c(), i = 0; i < a.length; i++)
                this.scopes.push({
                    type: a[i],
                    visible: !1,
                    equipped: !1,
                    selectable: !1
                });
            this.loot = [];
            for (var r = d(), o = 0; o < r.length; o++)
                this.loot.push({
                    type: r[o],
                    count: 0,
                    maximum: 0,
                    selectable: !1,
                    width: 0,
                    ticker: 0
                });
            this.gear = [];
            for (var n = p(), s = 0; s < n.length; s++)
                this.gear.push({
                    type: n[s],
                    item: "",
                    selectable: !1,
                    width: 0,
                    ticker: 0
                });
            this.health = 100,
            this.boost = 0,
            this.downed = !1
        }
        function h(e) {
            var t = this;
            this.localization = e,
            this.oldState = new u,
            this.newState = new u,
            this.frameCount = 0,
            this.dom = {
                debugButton: r("ui-debug-button"),
                emoteButton: r("ui-emote-button"),
                menu: {
                    touchStyles: r("btn-touch-styles"),
                    fullScreen: r("btn-game-fullscreen")
                },
                pickupMessage: r("ui-pickup-message"),
                killFeed: {
                    div: r("ui-killfeed-contents"),
                    lines: []
                },
                weapons: [],
                ammo: {
                    current: r("ui-current-clip"),
                    remaining: r("ui-remaining-ammo"),
                    reloadButton: r("ui-reload-button")
                },
                interaction: {
                    div: r("ui-interaction"),
                    key: r("ui-interaction-press"),
                    text: r("ui-interaction-description")
                },
                health: {
                    inner: r("ui-health-actual"),
                    depleted: r("ui-health-depleted")
                },
                boost: {
                    div: r("ui-boost-counter"),
                    bars: [r("ui-boost-counter-0").firstElementChild, r("ui-boost-counter-1").firstElementChild, r("ui-boost-counter-2").firstElementChild, r("ui-boost-counter-3").firstElementChild]
                },
                scopes: [],
                loot: [],
                gear: []
            };
            for (var a = 0; a < T; a++) {
                var i = "ui-killfeed-" + a
                  , s = r(i);
                if (!s) {
                    s = document.createElement("div"),
                    s.id = i,
                    s.classList.add("killfeed-div");
                    var l = document.createElement("div");
                    l.classList.add("killfeed-text"),
                    s.appendChild(l),
                    this.dom.killFeed.div.appendChild(s)
                }
                this.dom.killFeed.lines.push({
                    line: s,
                    text: s.firstElementChild
                })
            }
            for (var m = 0; m < 4; m++) {
                var h = r("ui-weapon-id-" + (m + 1))
                  , g = {
                    div: h,
                    name: h.getElementsByClassName("ui-weapon-name")[0],
                    number: h.getElementsByClassName("ui-weapon-number")[0],
                    image: h.getElementsByClassName("ui-weapon-image")[0],
                    ammo: h.getElementsByClassName("ui-weapon-ammo-counter")[0]
                };
                this.dom.weapons.push(g)
            }
            for (var y = c(), x = 0; x < y.length; x++) {
                var w = y[x]
                  , b = {
                    scopeType: w,
                    div: r("ui-scope-" + w)
                };
                this.dom.scopes.push(b)
            }
            for (var _ = d(), v = 0; v < _.length; v++) {
                var S = _[v]
                  , k = r("ui-loot-" + S);
                if (k) {
                    var z = {
                        lootType: S,
                        div: k,
                        count: k.getElementsByClassName("ui-loot-count")[0],
                        image: k.getElementsByClassName("ui-loot-image")[0],
                        overlay: k.getElementsByClassName("ui-loot-overlay")[0]
                    };
                    this.dom.loot.push(z)
                }
            }
            for (var M = p(), C = 0; C < M.length; C++) {
                var A = M[C]
                  , I = r("ui-armor-" + A)
                  , D = {
                    gearType: A,
                    div: I,
                    level: I.getElementsByClassName("ui-armor-level")[0],
                    image: I.getElementsByClassName("ui-armor-image")[0]
                };
                this.dom.gear.push(D)
            }
            this.uiEvents = [],
            this.eventListeners = [];
            var O = function(e, a, i) {
                t.eventListeners.push({
                    event: e,
                    elem: a,
                    fn: i
                }),
                a.addEventListener(e, i)
            };
            this.itemActions = [];
            for (var E = function(e, a, i, r) {
                t.itemActions.push({
                    action: e,
                    type: a,
                    data: i,
                    div: r,
                    actionQueued: !1,
                    actionTime: 0
                })
            }, L = 0; L < this.dom.weapons.length; L++)
                E("use", "weapon", L, this.dom.weapons[L].div),
                E("drop", "weapon", L, this.dom.weapons[L].div);
            for (var B = 0; B < this.dom.scopes.length; B++) {
                var F = this.dom.scopes[B];
                E("use", "scope", F.scopeType, F.div),
                "1xscope" != F.scopeType && E("drop", "loot", F.scopeType, F.div)
            }
            for (var R = 0; R < this.dom.loot.length; R++) {
                var j = this.dom.loot[R]
                  , q = f.items[j.lootType];
                "heal" != q.type && "boost" != q.type || E("use", "loot", j.lootType, j.div),
                E("drop", "loot", j.lootType, j.div)
            }
            for (var N = 0; N < this.dom.gear.length; N++) {
                var G = this.dom.gear[N];
                "backpack" != G.gearType && E("drop", "loot", G.gearType, G.div)
            }
            for (var U = 0; U < this.itemActions.length; U++)
                !function(e) {
                    var a = t.itemActions[e];
                    O("mousedown", a.div, function(e) {
                        ("use" == a.action && o(e) || "drop" == a.action && n(e)) && (e.stopPropagation(),
                        a.actionQueued = !0)
                    }),
                    O("mouseup", a.div, function(e) {
                        a.actionQueued && ("use" == a.action && o(e) || "drop" == a.action && n(e)) && (e.stopPropagation(),
                        t.pushAction(a),
                        a.actionQueued = !1)
                    }),
                    O("touchstart", a.div, function(e) {
                        e.changedTouches.length > 0 && (e.stopPropagation(),
                        a.actionQueued = !0,
                        a.actionTime = (new Date).getTime(),
                        a.touchOsId = e.changedTouches[0].identifier)
                    }),
                    O("touchend", a.div, function(e) {
                        (new Date).getTime() - a.actionTime < P && a.actionQueued && "use" == a.action && t.pushAction(a),
                        a.actionQueued = !1
                    }),
                    O("touchcancel", a.div, function(e) {
                        a.actionQueued = !1
                    })
                }(U);
            var V = document.getElementById("cvs");
            this.clearQueuedItemActions = function() {
                for (var e = 0; e < t.itemActions.length; e++)
                    t.itemActions[e].actionQueued = !1;
                V.focus()
            }
            ,
            window.addEventListener("mouseup", this.clearQueuedItemActions),
            window.addEventListener("focus", this.clearQueuedItemActions)
        }
        function g() {
            var e = function(e, t) {
                r(e).getElementsByClassName("ui-loot-image")[0].src = t
            };
            e("ui-loot-bandage", "img/loot/loot-medical-bandage.svg"),
            e("ui-loot-healthkit", "img/loot/loot-medical-healthkit.svg"),
            e("ui-loot-soda", "img/loot/loot-medical-soda.svg"),
            e("ui-loot-painkiller", "img/loot/loot-medical-pill.svg"),
            e("ui-loot-9mm", "img/loot/loot-ammo-box.svg"),
            e("ui-loot-12gauge", "img/loot/loot-ammo-box.svg"),
            e("ui-loot-762mm", "img/loot/loot-ammo-box.svg"),
            e("ui-loot-556mm", "img/loot/loot-ammo-box.svg"),
            e("ui-loot-50AE", "img/loot/loot-ammo-box.svg"),
            e("ui-loot-308sub", "img/loot/loot-ammo-box.svg"),
            e("ui-loot-flare", "img/loot/loot-ammo-box.svg"),
            r("mag-glass-white").src = "img/gui/mag-glass.svg",
            r("ui-minimize-img").src = "img/gui/minimize.svg"
        }
        var y = a("6b42806d")
          , f = a("989ad62a")
          , x = f.Action
          , w = a("10899aea")
          , b = a("300e2704")
          , _ = a("1901e2d9")
          , v = a("c2a798c8")
          , S = a("ce29f17f")
          , k = a("26be8056")
          , z = f.DamageType
          , M = b.PickupMsgType
          , T = 6
          , P = 750
          , C = {
            None: 0,
            Cancel: 1,
            Loot: 2,
            Revive: 3,
            Object: 4
        };
        h.prototype = {
            o: function() {
                for (var e = 0; e < this.eventListeners.length; e++) {
                    var t = this.eventListeners[e];
                    t.elem.removeEventListener(t.event, t.fn)
                }
                window.removeEventListener("focus", this.clearQueuedItemActions),
                window.removeEventListener("mouseup", this.clearQueuedItemActions)
            },
            pushAction: function(e) {
                this.uiEvents.push({
                    action: e.action,
                    type: e.type,
                    data: e.data
                })
            },
            flushInput: function() {
                this.uiEvents = []
            },
            l: function(e, t, a, i, r, o) {
                var n = this.newState;
                if (n.mobile = S.mobile,
                n.touch = S.touch,
                n.touch)
                    for (var s = 0; s < this.itemActions.length; s++) {
                        var c = this.itemActions[s];
                        if (c.actionQueued && "drop" == c.action) {
                            var d = (new Date).getTime()
                              , p = d - c.actionTime;
                            p >= P && (this.pushAction(c),
                            c.actionTime = d)
                        }
                    }
                n.pickupMessage.ticker += e;
                var u = n.pickupMessage.ticker
                  , h = n.pickupMessage.duration;
                n.pickupMessage.opacity = w.smoothstep(u, 0, .2) * (1 - w.smoothstep(u, h, h + .2));
                for (var g = 0, b = 0; b < n.killFeed.length; b++) {
                    var k = n.killFeed[b];
                    k.ticker += e;
                    var z = k.ticker;
                    k.offset = g,
                    k.opacity = w.smoothstep(z, 0, .25) * (1 - w.smoothstep(z, 6, 6.5)),
                    g += w.min(z / .25, 1),
                    S.mobile && (k.opacity = z < 6.5 ? 1 : 0)
                }
                n.health = t.N.dead ? 0 : w.max(t.U.health, 1),
                n.boost = t.U.boost,
                n.downed = t.N.downed;
                var M = C.None
                  , T = null
                  , A = !0;
                if (!t.N.dead) {
                    for (var I = null, D = 0, O = o.Y.m(), E = 0; E < O.length; E++) {
                        var L = O[E];
                        if (L.active && !L.dead && _.sameLayer(L.layer, t.layer)) {
                            var B = L.getInteraction();
                            if (B) {
                                var F = y.intersectCircle(L.collider, t.N.pos, B.rad);
                                F && F.pen >= D && (I = L,
                                D = F.pen)
                            }
                        }
                    }
                    I && !t.N.downed && (M = C.Object,
                    T = I,
                    A = !0);
                    var R = r.vt();
                    if (R && !t.N.downed) {
                        var j = f.items[R.name]
                          , q = t.Mt(f.WeaponSlot.Primary)
                          , N = t.Mt(f.WeaponSlot.Secondary)
                          , G = q && N
                          , U = "gun" != j.type || !G || "gun" == t.zt();
                        (U || S.layout == S.Layout.Sm) && (M = C.Loot,
                        T = R),
                        A = U && (!n.touch || "gun" == j.type || "skin" == j.type)
                    }
                    if (t.N.actionType == x.None && !t.N.downed)
                        for (var V = i.H(t.__id).teamId, H = i.tt.m(), W = 0; W < H.length; W++) {
                            var K = H[W]
                              , X = i.H(K.__id).teamId;
                            if (K.__id != t.__id && V == X && K.N.downed && !K.N.dead && K.N.actionType != x.Revive) {
                                var Y = v.length(v.sub(K.N.pos, t.N.pos));
                                Y < f.player.reviveMaxRange && _.sameLayer(K.layer, t.layer) && (M = C.Revive,
                                T = t,
                                A = !0)
                            }
                        }
                    t.N.actionType == x.Revive && t.N.downed && (M = C.None,
                    T = null,
                    A = !1),
                    (t.N.actionType == x.UseItem || t.N.actionType == x.Revive && !t.N.downed) && (M = C.Cancel,
                    T = null,
                    A = !0)
                }
                n.interaction.type = M,
                n.interaction.text = this.getInteractionText(M, T),
                n.interaction.key = this.getInteractionKey(M),
                n.interaction.usable = A && !a;
                for (var Z = 0; Z < t.U.weapons.length; Z++) {
                    var Q = t.U.weapons[Z]
                      , J = n.weapons[Z];
                    J.name = Q.name,
                    J.ammo = Q.ammo,
                    "" != Q.name && "throwable" == f.items[Q.name].type && (J.ammo = t.U.inventory[Q.name]);
                    var $ = J.equipped;
                    J.equipped = Z == t.U.curWeapIdx,
                    J.selectable = ("" != Q.name || 0 == Z || 1 == Z) && !a;
                    var ee = J.equipped ? 1 : .6
                      , te = ee - J.opacity
                      , ae = w.min(te, w.sign(te) * e / .15);
                    J.opacity = w.clamp(J.opacity + ae, 0, 1),
                    S.mobile && (J.opacity = ee),
                    J.ticker += e,
                    J.equipped && $ || (J.ticker = 0),
                    this.frameCount < 2 && (J.ticker = 1);
                    var ie = w.min(J.ticker / .09, Math.PI)
                      , re = Math.sin(ie);
                    J.width = re < .001 ? 0 : re,
                    S.mobile && (J.width = 0)
                }
                var oe = n.weapons[t.U.curWeapIdx]
                  , ne = f.items[oe.name]
                  , se = oe.ammo
                  , le = "throwable" == ne.type ? 0 : t.U.inventory[ne.ammo];
                n.ammo.current = se,
                n.ammo.remaining = le,
                n.ammo.displayCurrent = "melee" != ne.type,
                n.ammo.displayRemaining = le > 0;
                for (var me = 0; me < n.scopes.length; me++) {
                    var ce = n.scopes[me];
                    ce.visible = t.U.inventory[ce.type] > 0,
                    ce.equipped = ce.visible && t.U.curScope == ce.type,
                    ce.selectable = ce.visible && !a
                }
                for (var de = t.kt(), pe = 0; pe < n.loot.length; pe++) {
                    var ue = n.loot[pe]
                      , he = ue.count;
                    ue.count = t.U.inventory[ue.type] || 0,
                    ue.maximum = f.bagSizes[ue.type][de],
                    ue.selectable = ue.count > 0 && !a,
                    ue.count > he && (ue.ticker = 0),
                    this.frameCount < 2 && (ue.ticker = 1),
                    ue.ticker += e;
                    var ge = w.min(ue.ticker / .05, Math.PI)
                      , ye = Math.sin(ge);
                    ue.width = ye < .001 ? 0 : ye,
                    S.mobile && (ue.width = 0)
                }
                for (var fe = 0; fe < n.gear.length; fe++) {
                    var xe = n.gear[fe]
                      , we = "";
                    "chest" == xe.type ? we = t.N.chest : "helmet" == xe.type ? we = t.N.helmet : "backpack" == xe.type && "backpack00" == (we = t.N.backpack) && (we = "");
                    var be = xe.item;
                    xe.item = we,
                    xe.selectable = "" != we && !a,
                    be != xe.item && (xe.ticker = 0),
                    this.frameCount < 2 && (xe.ticker = 1),
                    xe.ticker += e;
                    var _e = w.min(xe.ticker / .05, Math.PI)
                      , ve = Math.sin(_e);
                    xe.width = ve < .001 ? 0 : ve,
                    S.mobile && (xe.width = 0)
                }
                var Se = m(this.oldState, this.newState, 0 == this.frameCount++);
                this.render(Se, this.newState),
                l(this.newState, this.oldState)
            },
            render: function(e, t) {
                var a = this.dom;
                if (e.mobile) {
                    var i = k.detectiOS();
                    a.menu.fullScreen.style.display = i ? "none" : "block"
                }
                e.touch && (a.interaction.key.style.backgroundImage = t.touch ? "url('img/gui/tap.svg')" : "none",
                t.touch && (a.interaction.key.innerHTML = ""),
                a.menu.touchStyles.style.display = t.touch ? "flex" : "none",
                a.ammo.reloadButton.style.display = t.touch ? "block" : "none",
                a.emoteButton.style.display = t.touch ? "block" : "none",
                a.debugButton && (a.debugButton.style.display = t.touch ? "block" : "none")),
                e.pickupMessage.message && (a.pickupMessage.innerHTML = t.pickupMessage.message),
                e.pickupMessage.opacity && (a.pickupMessage.style.opacity = t.pickupMessage.opacity);
                for (var r = 0; r < e.killFeed.length; r++) {
                    var o = e.killFeed[r]
                      , n = a.killFeed.lines[r]
                      , l = t.killFeed[r];
                    if (o.text && (n.text.innerHTML = l.text),
                    o.offset) {
                        var m = S.layout != S.Layout.Sm || S.tablet ? 35 : 15;
                        n.line.style.top = Math.floor(l.offset * m) + "px"
                    }
                    o.color && (n.text.style.color = l.color),
                    o.opacity && (n.line.style.opacity = l.opacity)
                }
                if (e.health || e.downed) {
                    for (var c = [{
                        health: 100,
                        color: [179, 179, 179]
                    }, {
                        health: 100,
                        color: [255, 255, 255]
                    }, {
                        health: 75,
                        color: [255, 255, 255]
                    }, {
                        health: 75,
                        color: [255, 158, 158]
                    }, {
                        health: 25,
                        color: [255, 82, 82]
                    }, {
                        health: 25,
                        color: [255, 0, 0]
                    }, {
                        health: 0,
                        color: [255, 0, 0]
                    }], d = 0, p = Math.ceil(t.health); c[d].health > p && d < c.length - 1; )
                        d++;
                    var u = c[w.max(d - 1, 0)]
                      , h = c[d]
                      , g = w.delerp(t.health, u.health, h.health)
                      , y = [Math.floor(w.lerp(g, u.color[0], h.color[0])), Math.floor(w.lerp(g, u.color[1], h.color[1])), Math.floor(w.lerp(g, u.color[2], h.color[2]))];
                    t.downed && (y = [255, 0, 0]),
                    a.health.inner.style.backgroundColor = "rgba(" + y[0] + ", " + y[1] + ", " + y[2] + ", 1.0)",
                    a.health.inner.style.width = t.health + "%",
                    a.health.depleted.style.width = t.health + "%",
                    a.health.depleted.style.display = t.health > 0 ? "block" : "none",
                    t.health > 25 ? a.health.inner.classList.remove("ui-bar-danger") : a.health.inner.classList.add("ui-bar-danger")
                }
                if (e.boost) {
                    for (var x = f.player.boostBreakpoints, b = 0, _ = 0; _ < x.length; _++)
                        b += x[_];
                    for (var v = t.boost / 100, z = 0; z < a.boost.bars.length; z++) {
                        var M = x[z] / b
                          , T = w.clamp(v / M, 0, 1);
                        v = w.max(v - M, 0),
                        a.boost.bars[z].style.width = 100 * T + "%"
                    }
                    a.boost.div.style.opacity = 0 == t.boost ? 0 : 1
                }
                e.interaction.type && (a.interaction.div.style.display = t.interaction.type == C.None ? "none" : "flex"),
                e.interaction.text && (a.interaction.text.innerHTML = t.interaction.text),
                e.interaction.key && (a.interaction.key.innerHTML = t.touch ? "" : t.interaction.key),
                e.interaction.usable && (a.interaction.key.style.display = t.interaction.usable ? "block" : "none");
                for (var P = 0; P < e.weapons.length; P++) {
                    var A = e.weapons[P]
                      , I = a.weapons[P]
                      , D = t.weapons[P];
                    if (A.name) {
                        var O = "" != D.name
                          , E = ""
                          , L = ""
                          , B = !1
                          , F = 0
                          , R = 1;
                        if (O) {
                            var j = f.items[D.name];
                            E = this.localization.translate("game-hud-" + D.name) || this.localization.translate("game-" + D.name),
                            L = j.lootImg.sprite,
                            B = j.isDual && S.layout == S.Layout.Sm || j.lootImg.rot,
                            j.lootImg.rot && (F = 180 * j.lootImg.rot / Math.PI),
                            j.lootImg.mirror && (R = -1)
                        }
                        I.name.innerHTML = E,
                        I.image.src = s(L),
                        I.image.style.display = O ? "inline" : "none",
                        I.image.style.transform = B ? "rotate(" + F + "deg) scaleX(" + R + ")" : ""
                    }
                    if (A.equipped && (I.div.style.backgroundColor = D.equipped ? "rgba(0, 0, 0, 0.4)" : "rgba(0, 0, 0, 0)"),
                    A.selectable && (I.div.style.pointerEvents = "" != D.name || D.selectable ? "auto" : "none"),
                    A.width) {
                        var q = w.lerp(D.width, 83.33, 100);
                        I.div.style.width = q + "%"
                    }
                    A.opacity && (I.div.style.opacity = D.opacity),
                    A.ammo && I.ammo && (I.ammo.innerHTML = D.ammo,
                    I.ammo.style.display = D.ammo > 0 ? "block" : "none")
                }
                if (e.ammo.current) {
                    var N = t.ammo.current;
                    a.ammo.current.innerHTML = N,
                    a.ammo.current.style.color = N > 0 ? "white" : "red"
                }
                if (e.ammo.remaining) {
                    var G = t.ammo.remaining;
                    a.ammo.remaining.innerHTML = G,
                    a.ammo.remaining.style.color = G > 0 ? "white" : "red"
                }
                e.ammo.displayCurrent && (a.ammo.current.style.opacity = t.ammo.displayCurrent ? 1 : 0),
                e.ammo.displayRemaining && (a.ammo.remaining.style.opacity = t.ammo.displayRemaining ? 1 : 0,
                a.ammo.reloadButton.style.opacity = t.ammo.displayRemaining ? 1 : 0);
                for (var U = 0; U < e.scopes.length; U++) {
                    var V = e.scopes[U]
                      , H = a.scopes[U]
                      , W = t.scopes[U];
                    V.visible && (H.div.style.display = W.visible ? "inline-block" : "none"),
                    V.equipped && (W.equipped ? (H.div.classList.add("ui-zoom-active"),
                    H.div.classList.remove("ui-zoom-inactive")) : (H.div.classList.remove("ui-zoom-active"),
                    H.div.classList.add("ui-zoom-inactive"))),
                    V.selectable && (H.div.style.pointerEvents = W.selectable ? "auto" : "none")
                }
                for (var K = 0; K < e.loot.length; K++) {
                    var X = e.loot[K]
                      , Y = a.loot[K]
                      , Z = t.loot[K];
                    if (X && Y && Z) {
                        if ((X.count || X.maximum) && (Y.count.innerHTML = Z.count,
                        Y.div.style.opacity = f.items[Y.lootType].special && 0 == Z.count ? 0 : Z.count > 0 ? 1 : .25,
                        Y.div.style.color = Z.count == Z.maximum ? "#ff9900" : "#ffffff"),
                        X.width) {
                            var Q = 1 + .33 * Z.width
                              , J = "scale(" + Q + ", " + Q + ")";
                            Y.image.style.transform = J,
                            Y.overlay && (Y.overlay.style.transform = J)
                        }
                        X.selectable && (Y.div.style.pointerEvents = Z.selectable ? "auto" : "none")
                    }
                }
                for (var $ = 0; $ < e.gear.length; $++) {
                    var ee = e.gear[$]
                      , te = a.gear[$]
                      , ae = t.gear[$];
                    if (ee.item) {
                        var ie = "" != ae.item ? f.items[ae.item] : null
                          , re = ie ? ie.level : 0;
                        te.div.style.display = ie ? "block" : "none",
                        te.level.innerHTML = this.localization.translate("game-level-" + re),
                        te.level.style.color = 3 == re ? "#ff9900" : "#ffffff",
                        te.image.src = ie ? s(ie.lootImg.sprite) : ""
                    }
                    if (ee.selectable && (te.div.style.pointerEvents = ae.selectable ? "auto" : "none"),
                    ee.width) {
                        var oe = 1 + .33 * ae.width;
                        te.image.style.transform = "scale(" + oe + ", " + oe + ")"
                    }
                }
            },
            displayPickupMessage: function(e) {
                var t = this.newState.pickupMessage;
                t.message = this.getPickupMessageText(e),
                t.ticker = 0,
                t.duration = 3
            },
            addKillFeed: function(e, t) {
                var a = this.newState.killFeed
                  , i = a[a.length - 1];
                i.text = e,
                i.color = t,
                i.ticker = 0,
                a.sort(function(e, t) {
                    return e.ticker - t.ticker
                })
            },
            getKillFeedText: function(e, t, a, i, r) {
                var o = function(e) {
                    return k.truncateString(e || "", "bold 16px arial", 180)
                };
                switch (e = o(e),
                t = o(t),
                i) {
                case z.Player:
                    return t + " " + this.localization.translate(r ? "game-knocked-out" : "game-killed") + " " + e + " " + this.localization.translate("game-with") + " " + a;
                case z.Bleeding:
                    var n = this.localization.translate(t ? "game-finally-killed" : "game-finally-bled-out");
                    return t ? t + " " + n + " " + e : e + " " + n;
                case z.Gas:
                    var s = void 0;
                    return r ? (t = this.localization.translate("game-the-red-zone"),
                    s = this.localization.translate("game-knocked-out")) : s = this.localization.translate(t ? "game-finally-killed" : "game-died-outside"),
                    t ? t + " " + s + " " + e : e + " " + s;
                case z.Airdrop:
                    var l = void 0;
                    return r ? (t = this.localization.translate("game-the-air-drop"),
                    l = this.localization.translate("game-knocked-out")) : (t = this.localization.translate("game-the-air-drop"),
                    l = this.localization.translate("game-crushed")),
                    t ? t + " " + l + " " + e : e + " " + l;
                default:
                    return ""
                }
            },
            getKillFeedColor: function(e, t, a) {
                return e == t ? "#d1777c" : e == a ? "#00bfff" : "#efeeee"
            },
            getPickupMessageText: function(e) {
                var t, a = (t = {},
                i(t, M.Full, "game-not-enough-space"),
                i(t, M.AlreadyOwned, "game-item-already-owned"),
                i(t, M.AlreadyEquipped, "game-item-already-equipped"),
                i(t, M.BetterItemEquipped, "game-better-item-equipped"),
                i(t, M.GunCannotFire, "game-gun-cannot-fire"),
                t), r = a[e] || a[M.Full];
                return this.localization.translate(r)
            },
            getInteractionText: function(e, t) {
                switch (e) {
                case C.None:
                    return "";
                case C.Cancel:
                    return this.localization.translate("game-cancel");
                case C.Revive:
                    return this.localization.translate("game-revive-teammate");
                case C.Object:
                    var a = t.getInteraction();
                    return this.localization.translate(a.action) + " " + this.localization.translate(a.object);
                case C.Loot:
                    var i = this.localization.translate("game-" + t.name) || t.name;
                    return t.count > 1 && (i += " (" + t.count + ")"),
                    i;
                default:
                    return ""
                }
            },
            getInteractionKey: function(e) {
                return e == C.Cancel ? "X" : "F"
            }
        },
        e.exports = {
            Qe: h,
            loadStaticDomImages: g
        }
    },
    d49cd95c: function(e, t, a) {
        "use strict";
        function i(e, t, a) {
            e.moveTo(t.x, t.y),
            e.lineTo(a.x, a.y)
        }
        function r(e, t) {
            var a = t[0];
            e.moveTo(a.x, a.y);
            for (var i = 1; i < t.length; ++i)
                a = t[i],
                e.lineTo(a.x, a.y);
            e.closePath()
        }
        function o() {}
        function n() {
            this.display = {
                background: new s.Graphics,
                water: new s.Graphics
            },
            this.mapData = {
                places: [],
                objects: []
            },
            this.dataLoaded = !1,
            this.mapTexture = null,
            this.Y = new u.Pool(b),
            this.it = new u.Pool(o),
            this.rt = new u.Pool(w),
            this.ot = new u.Pool(_),
            this.deadObstacleIds = [],
            this.deadCeilingIds = [],
            this.terrain = null,
            this.ripples = []
        }
        var s = a("80ac57a6")
          , l = (a("34e32c48"),
        a("6b42806d"))
          , m = a("ceee80d9")
          , c = a("e100c355")
          , d = a("1901e2d9")
          , p = a("c2a798c8")
          , u = a("753d6e4b")
          , h = (a("119e8c4c"),
        a("2bb110d0"))
          , g = a("ce29f17f")
          , y = a("26be8056")
          , f = (a("300e2704"),
        a("10899aea"))
          , x = a("989ad62a")
          , w = a("33375c30")
          , b = (a("af8ba00f"),
        a("0c8ffd27"))
          , _ = a("ce089fd5");
        o.prototype = {
            a: function() {},
            o: function() {},
            n: function(e, t) {
                this.type = e.type,
                this.pos = p.copy(e.pos),
                this.layer = e.layer
            }
        },
        n.prototype = {
            o: function() {
                for (var e = 0; e < this.ripples.length; e++) {
                    var t = this.ripples[e].sprite;
                    t.parent && t.parent.removeChild(t),
                    t.destroy({
                        children: !0
                    })
                }
                this.mapTexture && this.mapTexture.destroy(!0),
                this.display.background.destroy({
                    children: !0
                }),
                this.display.water.destroy({
                    children: !0
                })
            },
            resize: function(e) {
                this.renderMap(e)
            },
            setData: function(e, t, a, i, r, o) {
                this.width = e,
                this.height = t,
                this.terrain = c.generateTerrain(e, t, a),
                this.mapData = {
                    places: i,
                    objects: r
                },
                this.dataLoaded = !0;
                var n = this.display
                  , s = n.background
                  , l = n.water;
                s.clear(),
                l.clear(),
                this.renderTerrain(s, l, 2 / o.ppu)
            },
            getMapTexture: function() {
                return this.mapTexture
            },
            l: function(e, t, a, i, r, o) {
                for (var n = this.Y.m(), s = 0; s < n.length; s++) {
                    var l = n[s];
                    l.active && (l.l(e, this, a, i, t, r),
                    l.render(o))
                }
                for (var m = this.rt.m(), c = 0; c < m.length; c++) {
                    var d = m[c];
                    d.active && (d.l(e, this, a, i, t, r, o),
                    d.render(o))
                }
                for (var u = this.ot.m(), h = 0; h < u.length; h++) {
                    var g = u[h];
                    g.active && g.l(o)
                }
                for (var y = 0; y < this.ripples.length; y++) {
                    var f = this.ripples[y];
                    if (!(f.life <= 0))
                        if (f.delay -= e,
                        f.delay <= 0 && (f.life -= e,
                        f.scale += .5 * e,
                        f.alpha -= e),
                        f.life < 0)
                            f.sprite.visible = !1;
                        else {
                            var x = f.pos
                              , w = f.scale / o.ppu;
                            if (f.relPos) {
                                var b = f.sprite.parent
                                  , _ = p.create(b.position.x, b.position.y)
                                  , v = b.scale.x
                                  , S = b.rotation;
                                x = o.pointToScreen(x),
                                x = p.rotate(p.mul(p.sub(x, _), 1 / v), -S),
                                w = w * this.display.water.scale.x / v
                            }
                            f.sprite.scale.set(w, w),
                            f.sprite.position.set(x.x, x.y),
                            f.sprite.alpha = f.alpha,
                            f.sprite.visible = f.delay <= 0
                        }
                }
            },
            renderTerrain: function(e, t, a) {
                var o = this.width
                  , n = this.height
                  , s = this.terrain
                  , l = {
                    x: 0,
                    y: 0
                }
                  , m = {
                    x: o,
                    y: 0
                }
                  , c = {
                    x: 0,
                    y: n
                }
                  , d = {
                    x: o,
                    y: n
                };
                t.beginFill(h.water),
                t.moveTo(c.x, c.y),
                t.lineTo(d.x, d.y),
                t.lineTo(m.x, m.y),
                t.lineTo(l.x, l.y),
                r(t, s.shore),
                t.addHole(),
                t.closePath(),
                e.beginFill(h.beach),
                r(e, s.shore),
                r(e, s.grass),
                e.addHole(),
                e.endFill(),
                e.beginFill(h.grass),
                r(e, s.grass),
                e.endFill(),
                e.lineStyle(a, 0, .15);
                for (var p = 0; p <= o; p += x.map.gridSize)
                    i(e, {
                        x: p,
                        y: 0
                    }, {
                        x: p,
                        y: n
                    });
                for (var u = 0; u <= n; u += x.map.gridSize)
                    i(e, {
                        x: 0,
                        y: u
                    }, {
                        x: o,
                        y: u
                    })
            },
            render: function(e) {
                var t = e.pointToScreen(p.create(0, 0))
                  , a = e.pointToScreen(p.create(1, 1))
                  , i = p.sub(a, t);
                this.display.background.position.set(t.x, t.y),
                this.display.background.scale.set(i.x, i.y),
                this.display.water.position.set(t.x, t.y),
                this.display.water.scale.set(i.x, i.y)
            },
            getMinimapRender: function(e) {
                var t = m.Defs[e.type]
                  , a = "building" == t.type ? 1e3 * ((t.zIdx || 0) + 1) : t.img.zIdx || 0
                  , i = [];
                if (void 0 !== t.map.shapes)
                    i = t.map.shapes;
                else {
                    var r = "obstacle" == t.type ? t.collision : t.ceiling.scopeIn[0];
                    i.push({
                        collider: l.copy(r),
                        scale: t.map.scale || 1,
                        color: t.map.color
                    })
                }
                return {
                    obj: e,
                    zIdx: a,
                    shapes: i
                }
            },
            renderMap: function(e) {
                if (this.dataLoaded) {
                    var t = new s.Container
                      , a = new s.Container
                      , r = this.mapData.places
                      , o = this.mapData.objects
                      , n = (this.display,
                    this.width)
                      , c = this.height
                      , d = (this.terrain,
                    y.getScreenDimensions().height);
                    g.pixelRatio > 1 && (d *= 2);
                    var u = c / d
                      , h = new s.Graphics;
                    this.renderTerrain(h, h, u);
                    var f = {
                        x: 0,
                        y: 0
                    }
                      , x = {
                        x: n,
                        y: 0
                    }
                      , w = {
                        x: 0,
                        y: c
                    }
                      , b = {
                        x: n,
                        y: c
                    };
                    h.lineStyle(2 * u, 0, 1),
                    i(h, f, w),
                    i(h, w, b),
                    i(h, b, x),
                    i(h, x, f),
                    h.position.y = c,
                    h.scale.y = -1,
                    t.addChild(h);
                    for (var _ = [], v = 0; v < o.length; v++) {
                        var S = o[v];
                        _.push(this.getMinimapRender(S))
                    }
                    _.sort(function(e, t) {
                        return e.zIdx - t.zIdx
                    });
                    for (var k = new s.Graphics, z = 0; z < _.length; z++)
                        for (var M = _[z], T = M.obj, P = 0; P < M.shapes.length; P++) {
                            var C = M.shapes[P]
                              , A = l.transform(C.collider, T.pos, m.oriToRad(T.ori), T.scale)
                              , I = void 0 !== C.scale ? C.scale : 1;
                            switch (k.beginFill(C.color, 1),
                            A.type) {
                            case l.Type.Circle:
                                k.drawCircle(A.pos.x, c - A.pos.y, A.rad * I);
                                break;
                            case l.Type.Aabb:
                                var D = p.mul(p.sub(A.max, A.min), .5)
                                  , O = p.add(A.min, D);
                                D = p.mul(D, I),
                                k.drawRect(O.x - D.x, c - O.y - D.y, 2 * D.x, 2 * D.y)
                            }
                            k.endFill()
                        }
                    t.addChild(k);
                    for (var E = new s.Container, L = 0; L < r.length; L++) {
                        var B = r[L]
                          , F = new s.TextStyle({
                            fontFamily: "Arial",
                            fontSize: g.pixelRatio > 1 ? 20 : 22,
                            fontWeight: "bold",
                            fill: ["#ffffff"],
                            stroke: "#000000",
                            strokeThickness: 1,
                            dropShadow: !0,
                            dropShadowColor: "#000000",
                            dropShadowBlur: 1,
                            dropShadowAngle: Math.PI / 3,
                            dropShadowDistance: 1,
                            wordWrap: !1,
                            align: "center"
                        })
                          , R = new s.Text(B.name,F);
                        R.anchor.set(.5, .5),
                        R.x = B.pos.x * this.height / u,
                        R.y = B.pos.y * this.height / u,
                        R.alpha = .75,
                        E.addChild(R)
                    }
                    a.addChild(E),
                    this.mapTexture ? this.mapTexture.resize(d, d) : this.mapTexture = s.RenderTexture.create(d, d, s.SCALE_MODES.LINEAR, e.resolution),
                    t.scale = new s.Point(d / c,d / c),
                    e.render(t, this.mapTexture, !0),
                    e.render(a, this.mapTexture, !1),
                    t.destroy({
                        children: !0,
                        texture: !0,
                        baseTexture: !0
                    }),
                    a.destroy({
                        children: !0,
                        texture: !0,
                        baseTexture: !0
                    })
                }
            },
            getGroundSurface: function(e, t) {
                var a = this.rt
                  , i = this.terrain
                  , r = void 0;
                r = f.inside(e, i.shore) ? f.inside(e, i.grass) ? "grass" : "sand" : "water";
                for (var o = a.m(), n = 0, s = 2 & t, m = 0; m < o.length; m++) {
                    var c = o[m];
                    if (!(c.zIdx < n || c.layer != t && !s || 1 == c.layer && s))
                        for (var d = 0; d < c.surfaces.length; d++)
                            for (var p = c.surfaces[d], u = 0; u < p.colliders.length; u++) {
                                var h = l.intersectCircle(p.colliders[u], e, 1e-4);
                                if (h) {
                                    n = c.zIdx,
                                    r = p.surface;
                                    break
                                }
                            }
                }
                return r
            },
            distanceToShore: function(e) {
                return f.distToPoly(e, this.terrain.shore)
            },
            insideStructureStairs: function(e) {
                for (var t = this.ot.m(), a = 0; a < t.length; a++) {
                    var i = t[a];
                    if (i.active && i.insideStairs(e))
                        return !0
                }
                return !1
            },
            insideStructureMask: function(e) {
                for (var t = this.ot.m(), a = 0; a < t.length; a++) {
                    var i = t[a];
                    if (i.active && i.insideMask(e))
                        return !0
                }
                return !1
            },
            addRipple: function(e, t, a) {
                for (var i = null, r = 0; r < this.ripples.length; r++)
                    if (this.ripples[r].life <= 0) {
                        i = this.ripples[r];
                        break
                    }
                if (!i) {
                    var o = s.Sprite.fromImage("player-ripple-01.img");
                    o.anchor.set(.5, .5),
                    o.tint = 11792639,
                    o.visible = !1,
                    i = {},
                    i.sprite = o,
                    this.ripples.push(i)
                }
                for (var n = this.display.water, m = this.rt.m(), c = 0; c < m.length; c++) {
                    var u = m[c];
                    if (d.sameLayer(u.layer, t)) {
                        for (var h = !1, g = 0; g < u.surfaces.length; g++) {
                            var y = u.surfaces[g];
                            if ("water" == y.surface) {
                                for (var f = 0; f < y.colliders.length; f++)
                                    if (l.intersectCircle(y.colliders[f], e, 1e-4)) {
                                        h = !0;
                                        break
                                    }
                                if (h)
                                    break
                            }
                        }
                        if (h)
                            for (var x = 0; x < u.imgs.length; x++) {
                                var w = u.imgs[x];
                                if (w.waterRipples) {
                                    n = w.sprite;
                                    break
                                }
                            }
                    }
                }
                i.relPos = n != this.display.water,
                i.pos = p.copy(e),
                i.life = 3,
                i.delay = a,
                i.scale = .15,
                i.alpha = 1,
                i.sprite.parent != n && n.addChild(i.sprite)
            }
        },
        e.exports = {
            Te: n
        }
    },
    e100c355: function(e, t, a) {
        "use strict";
        function i(e, t, a) {
            for (var i = r.map, s = i.shoreDivisions, l = i.shoreInset, m = i.shoreVariation, c = i.grassInset, d = i.grassVariation, p = a, u = function(e, t) {
                p = 16807 * p % 2147483647;
                var a = p / 2147483647;
                return o.lerp(a, e, t)
            }, h = {
                x: l,
                y: l
            }, g = {
                x: e - l,
                y: l
            }, y = {
                x: l,
                y: t - l
            }, f = {
                x: e - l,
                y: t - l
            }, x = g.x - h.x, w = x / (s + 1), b = [h], _ = 1; _ <= s; ++_)
                b.push({
                    x: h.x + w * _,
                    y: h.y + u(-m, m)
                });
            b.push(g);
            for (var v = 1; v <= s; ++v)
                b.push({
                    x: g.x + u(-m, m),
                    y: g.y + w * v
                });
            b.push(f);
            for (var S = 1; S <= s; ++S)
                b.push({
                    x: f.x - w * S,
                    y: f.y + u(-m, m)
                });
            b.push(y);
            for (var k = 1; k <= s; ++k)
                b.push({
                    x: y.x + u(-m, m),
                    y: y.y - w * k
                });
            var z = n.create(e / 2, t / 2);
            return {
                shore: b,
                grass: b.map(function(e) {
                    var t = n.normalize(n.sub(z, e))
                      , a = u(-d, d)
                      , i = c + a;
                    return n.add(e, n.mul(t, i))
                })
            }
        }
        var r = a("989ad62a")
          , o = a("10899aea")
          , n = (a("1901e2d9"),
        a("c2a798c8"));
        e.exports = {
            generateTerrain: i
        }
    },
    e2094860: function(e, t, a) {
        "use strict";
        function i(e, t) {
            if (!(e instanceof t))
                throw new TypeError("Cannot call a class as a function")
        }
        var r = function() {
            function e(e, t) {
                for (var a = 0; a < t.length; a++) {
                    var i = t[a];
                    i.enumerable = i.enumerable || !1,
                    i.configurable = !0,
                    "value"in i && (i.writable = !0),
                    Object.defineProperty(e, i.key, i)
                }
            }
            return function(t, a, i) {
                return a && e(t.prototype, a),
                i && e(t, i),
                t
            }
        }()
          , o = a("8ee62bea")
          , n = a("80ac57a6")
          , s = (a("10899aea"),
        a("1901e2d9"),
        a("c2a798c8"))
          , l = a("26be8056")
          , m = a("ce29f17f")
          , c = function() {
            function e(t, a) {
                var r = this;
                i(this, e),
                this.input = t,
                this.config = a,
                this.container = new n.Container,
                this.padScaleBase = 1,
                this.padScaleDown = .5,
                this.padScalePos = .25,
                this.moveDetected = !1,
                this.shotDetected = !1,
                this.shotDetectedOld = !1,
                this.display = !0,
                this.orientation = "landscape",
                this.moveStyle = "locked",
                this.aimStyle = "locked";
                var o = function(e) {
                    var t = n.Sprite.fromImage("pad.img");
                    return t.anchor = new n.Point(.5,.5),
                    t.scale = new n.Point(1,1),
                    t.alpha = .5,
                    t.visible = !1,
                    e.addChild(t),
                    t
                }
                  , l = function() {
                    return {
                        touched: !1,
                        centerPos: s.create(0, 0),
                        touchPos: s.create(0, 0),
                        centerSprite: o(r.container),
                        touchSprite: o(r.container)
                    }
                };
                this.touchPads = [l(), l()],
                this.playerMovement = {
                    left: !1,
                    right: !1,
                    up: !1,
                    down: !1,
                    moveLen: 0
                },
                this.aimMovement = {
                    toAimDir: s.create(0, 0),
                    toAimLen: 0
                },
                this.leftLockedPadCenter = s.create(0, 0),
                this.rightLockedPadCenter = s.create(0, 0),
                this.padPosRange = 0,
                this.mobileOffsetLandscape = 25,
                this.mobileOffsetPortrait = 100,
                this.lockedPadOffsetLandscape = s.create(96, 96),
                this.lockedPadOffsetPortrait = s.create(96, 160),
                this.lockedPadOffsetYLandscapeSafari = 120,
                this.lockedPadOffsetYPortraitSafari = 240,
                this.setMoveStyle(a.get("touchMoveStyle") || "locked"),
                this.setAimStyle(a.get("touchAimStyle") || "locked"),
                this.init()
            }
            return r(e, [{
                key: "getTouchMovement",
                value: function(e) {
                    switch (this.moveStyle) {
                    case "locked":
                        return this.getMovementLocked(e);
                    case "anywhere":
                        return this.getMovementAnywhere(e);
                    default:
                        return this.getMovementLocked(e)
                    }
                }
            }, {
                key: "getAimMovement",
                value: function(e, t) {
                    switch (this.aimStyle) {
                    case "anywhere":
                        return this.getAimAnywhere(e, t);
                    case "locked":
                        return this.getAimLocked(e, t);
                    default:
                        return this.getAimAnywhere(e, t)
                    }
                }
            }, {
                key: "getMovementLocked",
                value: function(e) {
                    var t = null
                      , a = null
                      , i = !1;
                    this.moveDetected = !1;
                    for (var r = 0; r < this.input.touches.length; r++) {
                        var o = this.input.touches[r];
                        if (!o.isDead && this.isLeftSideTouch(o.posDown.x, e)) {
                            var n = s.sub(o.pos, this.leftLockedPadCenter)
                              , l = s.length(n);
                            if (l > 2) {
                                var m = Math.atan2(-n.y, n.x)
                                  , c = 180 * m / Math.PI;
                                c < 0 && (c += 360),
                                this.playerMovement = {
                                    right: c < 67.5 || c > 292.5,
                                    up: c > 22.5 && c < 157.5,
                                    left: c > 112.5 && c < 247.5,
                                    down: c > 202.5 && c < 337.5,
                                    moveLen: (l - 2) / (this.padPosRange - 2)
                                },
                                t = this.leftLockedPadCenter,
                                a = this.getConstrainedPos(t, o.pos, l),
                                i = !0,
                                this.moveDetected = !0;
                                break
                            }
                        }
                    }
                    var d = this.touchPads[0];
                    return d.touched = i,
                    d.centerPos.x = this.leftLockedPadCenter.x,
                    d.centerPos.y = this.leftLockedPadCenter.y,
                    d.touchPos.x = i ? a.x : 0,
                    d.touchPos.y = i ? a.y : 0,
                    this.playerMovement
                }
            }, {
                key: "getMovementAnywhere",
                value: function(e) {
                    var t = null
                      , a = null
                      , i = !1;
                    this.moveDetected = !1;
                    for (var r = 0; r < this.input.touches.length; r++) {
                        var o = this.input.touches[r];
                        if (!o.isDead && this.isLeftSideTouch(o.posDown.x, e)) {
                            var n = o.posDown
                              , l = s.sub(o.pos, n)
                              , m = s.length(l);
                            if (m > 2) {
                                var c = Math.atan2(-l.y, l.x)
                                  , d = 180 * c / Math.PI;
                                d < 0 && (d += 360),
                                this.playerMovement = {
                                    right: d < 67.5 || d > 292.5,
                                    up: d > 22.5 && d < 157.5,
                                    left: d > 112.5 && d < 247.5,
                                    down: d > 202.5 && d < 337.5,
                                    moveLen: (m - 2) / (this.padPosRange - 2)
                                }
                            } else
                                this.playerMovement = {
                                    right: !1,
                                    up: !1,
                                    left: !1,
                                    down: !1
                                };
                            t = o.posDown,
                            a = this.getConstrainedPos(t, o.pos, m),
                            i = !0,
                            this.moveDetected = !0;
                            break
                        }
                    }
                    var p = this.touchPads[0];
                    return p.touched = i,
                    p.centerPos.x = i ? t.x : 0,
                    p.centerPos.y = i ? t.y : 0,
                    p.touchPos.x = i ? a.x : 0,
                    p.touchPos.y = i ? a.y : 0,
                    this.playerMovement
                }
            }, {
                key: "getAimLocked",
                value: function(e, t) {
                    for (var a = !1, i = null, r = null, o = 0; o < this.input.touches.length; o++) {
                        var n = this.input.touches[o];
                        if (!n.isDead && !this.isLeftSideTouch(n.posDown.x, t)) {
                            var l = s.sub(n.pos, this.rightLockedPadCenter)
                              , m = s.length(l);
                            if (m > 2) {
                                var c = s.sub(n.pos, this.rightLockedPadCenter)
                                  , d = s.length(c)
                                  , p = d > 1e-5 ? s.div(c, d) : this.aimMovement.toAimDir;
                                this.aimMovement = {
                                    toAimDir: s.create(p.x, -1 * p.y),
                                    toAimLen: d
                                }
                            } else
                                this.aimMovement.toAimLen = 0;
                            i = this.rightLockedPadCenter,
                            r = this.getConstrainedPos(i, n.pos, m),
                            a = !0;
                            break
                        }
                    }
                    this.shotDetectedOld = this.shotDetected,
                    this.shotDetected = this.aimMovement.toAimLen > this.padPosRange && a,
                    e && this.shotDetectedOld && a && (this.shotDetected = !0);
                    var u = this.touchPads[1];
                    return u.touched = a,
                    u.centerPos.x = this.rightLockedPadCenter.x,
                    u.centerPos.y = this.rightLockedPadCenter.y,
                    u.touchPos.x = a ? r.x : 0,
                    u.touchPos.y = a ? r.y : 0,
                    this.aimMovement
                }
            }, {
                key: "getAimAnywhere",
                value: function(e, t) {
                    for (var a = !1, i = null, r = null, o = 0; o < this.input.touches.length; o++) {
                        var n = this.input.touches[o];
                        if (!n.isDead && !this.isLeftSideTouch(n.posDown.x, t)) {
                            var l = n.posDown
                              , m = s.sub(n.pos, l)
                              , c = s.length(m);
                            if (c > 2) {
                                var d = s.sub(n.pos, n.posDown)
                                  , p = s.length(d)
                                  , u = p > 1e-5 ? s.div(d, p) : this.aimMovement.toAimDir;
                                this.aimMovement = {
                                    toAimDir: s.create(u.x, -1 * u.y),
                                    toAimLen: p
                                }
                            } else
                                this.aimMovement.toAimLen = 0;
                            i = n.posDown,
                            r = this.getConstrainedPos(i, n.pos, c),
                            a = !0;
                            break
                        }
                    }
                    this.shotDetectedOld = this.shotDetected,
                    this.shotDetected = this.aimMovement.toAimLen > this.padPosRange && a,
                    e && this.shotDetectedOld && a && (this.shotDetected = !0);
                    var h = this.touchPads[1];
                    return h.touched = a,
                    h.centerPos.x = a ? i.x : 0,
                    h.centerPos.y = a ? i.y : 0,
                    h.touchPos.x = a ? r.x : 0,
                    h.touchPos.y = a ? r.y : 0,
                    this.aimMovement
                }
            }, {
                key: "updateDisplay",
                value: function() {
                    if (m.touch)
                        for (var e = 0; e < this.touchPads.length; e++) {
                            var t = this.touchPads[e]
                              , a = 0 == e
                              , i = 1 == e
                              , r = a && "locked" == this.moveStyle || i && "locked" == this.aimStyle;
                            t.centerSprite.position.x = t.centerPos.x,
                            t.centerSprite.position.y = t.centerPos.y,
                            t.centerSprite.scale.x = this.padScaleBase * this.padScaleDown,
                            t.centerSprite.scale.y = this.padScaleBase * this.padScaleDown,
                            t.centerSprite.visible = this.display && (r || t.touched),
                            t.touchSprite.position.x = t.touchPos.x,
                            t.touchSprite.position.y = t.touchPos.y,
                            t.touchSprite.scale.x = this.padScaleBase * this.padScalePos,
                            t.touchSprite.scale.y = this.padScaleBase * this.padScalePos,
                            t.touchSprite.visible = this.display && t.touched
                        }
                }
            }, {
                key: "isLeftSideTouch",
                value: function(e, t) {
                    return e < .5 * t.screenWidth
                }
            }, {
                key: "getConstrainedPos",
                value: function(e, t, a) {
                    if (a <= this.padPosRange)
                        return t;
                    var i = t.x - e.x
                      , r = t.y - e.y
                      , o = Math.atan2(r, i);
                    return s.create(Math.cos(o) * this.padPosRange + e.x, Math.sin(o) * this.padPosRange + e.y)
                }
            }, {
                key: "toggleMoveStyle",
                value: function() {
                    this.setMoveStyle("locked" == this.moveStyle ? "anywhere" : "locked")
                }
            }, {
                key: "setMoveStyle",
                value: function(e) {
                    this.moveStyle = e,
                    this.config.set("touchMoveStyle", e);
                    var t = document.getElementById("btn-game-move-style");
                    t && ("locked" == this.moveStyle ? (t.classList.remove("unlocked-on-icon"),
                    t.classList.add("locked-on-icon")) : (t.classList.remove("locked-on-icon"),
                    t.classList.add("unlocked-on-icon")))
                }
            }, {
                key: "toggleAimStyle",
                value: function() {
                    this.setAimStyle("locked" == this.aimStyle ? "anywhere" : "locked")
                }
            }, {
                key: "setAimStyle",
                value: function(e) {
                    this.aimStyle = e,
                    this.config.set("touchAimStyle", e);
                    var t = document.getElementById("btn-game-aim-style");
                    "locked" == this.aimStyle ? (t.classList.remove("unlocked-on-icon"),
                    t.classList.add("locked-on-icon")) : (t.classList.remove("locked-on-icon"),
                    t.classList.add("unlocked-on-icon"))
                }
            }, {
                key: "init",
                value: function() {
                    this.resize()
                }
            }, {
                key: "resize",
                value: function() {
                    var e = l.getOrientation()
                      , t = l.getScreenDimensions()
                      , a = this.lockedPadOffsetLandscape
                      , i = this.lockedPadOffsetPortrait;
                    m.tablet && (a = s.mul(a, 1.25),
                    i = s.mul(i, 1.25));
                    var r = s.create(a.x, a.y)
                      , o = s.create(i.x, i.y)
                      , n = s.create(t.width - a.x, a.y)
                      , c = s.create(t.width - i.x, i.y);
                    if (l.detectMobileSafari() && !window.navigator.standalone) {
                        var d = this.lockedPadOffsetYLandscapeSafari
                          , p = this.lockedPadOffsetYPortraitSafari;
                        m.tablet && (d *= 1.4,
                        p *= 1.4),
                        r.y = d,
                        o.y = p,
                        n.y = d,
                        c.y = p
                    }
                    this.padScaleBase = "landscape" == e ? 1 : .8,
                    this.padPosRange = 56 * this.padScaleBase;
                    var u = "landscape" == e ? r : o;
                    this.leftLockedPadCenter = s.create(u.x, t.height - u.y);
                    var h = "landscape" == e ? n : c;
                    this.rightLockedPadCenter = s.create(h.x, t.height - h.y),
                    this.setMobileStyling(e)
                }
            }, {
                key: "setMobileStyling",
                value: function(e) {
                    var t = l.getScreenDimensions().width <= 850;
                    m.mobile && (o("#btn-touch-styles").find(".btn-game-container").css("display", "inline-block"),
                    o("#ui-emote-button").css("display", "block")),
                    m.mobile || t ? (o("#ui-map-wrapper").addClass("ui-map-wrapper-mobile").removeClass("ui-map-wrapper-desktop"),
                    o("#ui-settings-container-mobile").css("display", "block"),
                    o("#ui-settings-container-desktop").css("display", "none"),
                    o("#ui-right-center").addClass("ui-right-center-mobile").removeClass("ui-right-center-desktop"),
                    o("#ui-leaderboard-wrapper").css("display", "none"),
                    o("#big-map-close").css("display", "block")) : (o("#ui-map-wrapper").removeClass("ui-map-wrapper-mobile").addClass("ui-map-wrapper-desktop"),
                    o("#ui-settings-container-mobile").css("display", "none"),
                    o("#ui-settings-container-desktop").css("display", "block"),
                    o("#ui-right-center").removeClass("ui-right-center-mobile").addClass("ui-right-center-desktop")),
                    m.tablet && ("landscape" == e ? (o("#ui-bottom-right").addClass("ui-bottom-right-tablet"),
                    o("#ui-right-center").addClass("ui-right-center-tablet"),
                    o("#ui-bottom-center-right").addClass("ui-bottom-center-right-tablet"),
                    o("#ui-top-left").addClass("ui-top-left-tablet"),
                    o("#ui-spectate-options-wrapper").addClass("ui-spectate-options-wrapper-tablet"),
                    o("#ui-killfeed-wrapper").addClass("ui-killfeed-wrapper-tablet")) : (o("#ui-bottom-right").removeClass("ui-bottom-right-tablet"),
                    o("#ui-right-center").removeClass("ui-right-center-tablet"),
                    o("#ui-bottom-center-right").removeClass("ui-bottom-center-right-tablet"),
                    o("#ui-top-left").removeClass("ui-top-left-tablet"),
                    o("#ui-spectate-options-wrapper").removeClass("ui-spectate-options-wrapper-tablet"),
                    o("#ui-killfeed-wrapper-wrapper").removeClass("ui-killfeed-wrapper-tablet"))),
                    this.reorderAmmo(m.mobile && !(m.tablet && "landscape" == e))
                }
            }, {
                key: "reorderAmmo",
                value: function(e) {
                    e ? (o("#ui-loot-9mm").insertBefore("#ui-loot-ph1"),
                    o("#ui-loot-12gauge").insertBefore("#ui-loot-ph1"),
                    o("#ui-loot-762mm").insertBefore("#ui-loot-ph1"),
                    o("#ui-loot-556mm").insertBefore("#ui-loot-ph1"),
                    o("#ui-loot-50AE").insertBefore("#ui-loot-ph1"),
                    o("#ui-loot-308sub").insertBefore("#ui-loot-ph1"),
                    o("#ui-loot-flare").insertBefore("#ui-loot-ph1")) : (o("#ui-loot-50AE").insertBefore("#ui-loot-556mm"),
                    o("#ui-loot-9mm").insertBefore("#ui-loot-556mm"),
                    o("#ui-loot-308sub").insertBefore("#ui-loot-556mm"),
                    o("#ui-loot-12gauge").insertBefore("#ui-loot-556mm"),
                    o("#ui-loot-flare").insertBefore("#ui-loot-556mm"),
                    o("#ui-loot-762mm").insertBefore("#ui-loot-556mm"),
                    o("#ui-loot-ph1").insertBefore("#ui-loot-556mm"))
                }
            }, {
                key: "hideAll",
                value: function() {
                    this.display = !1
                }
            }]),
            e
        }();
        e.exports = {
            ve: c
        }
    },
    e5d16b4d: function(e, t, a) {
        "use strict";
        function i(e) {
            return "close.img" == e ? "img/gui/close.svg" : e && e.length > 4 ? "img/emotes/" + e.slice(0, -4) + ".svg" : ""
        }
        function r(e) {
            var t = 180 * Math.atan2(e.y, e.x) / Math.PI;
            return t < 0 && (t += 360),
            t
        }
        function o(e, t, a, i, o, l) {
            var p = this;
            this.game = e,
            this.audioManager = t,
            this.uiManager = a,
            this.gameElem = n("#ui-game"),
            this.disable = !1,
            this.mt = null,
            this.playerBarn = i,
            this.camera = o,
            this.map = l,
            this.worldPos = f.create(0, 0),
            this.zIdxNext = 0,
            this.emoteSelector = {
                ping: u.None,
                emote: c.None
            },
            this.emoteSoftTicker = 0,
            this.emoteHardTicker = 0,
            this.emoteCounter = 0,
            this.emoteWheelsGreyed = !1,
            this.teamEmotesGreyed = !1,
            this.wheelKeyTriggered = !1,
            this.emoteTimeoutTicker = 0,
            this.pingKeyTriggered = !1,
            this.pingKeyDown = !1,
            this.pingMouseTriggered = !1,
            this.wheelDisplayed = !1,
            this.emoteKeyTriggered = !1,
            this.emoteKeyDown = !1,
            this.emoteMouseTriggered = !1,
            this.emoteScreenPos = f.create(0, 0),
            n(document).on("keydown", function(e) {
                67 != e.which || p.pingKeyDown || p.game.gameOver || (p.pingKeyDown = !0,
                p.pingKeyTriggered = !0)
            }),
            n(document).on("keyup", function(e) {
                67 == e.which && p.pingKeyDown && !p.game.gameOver && (p.pingKeyDown = !1,
                p.pingKeyTriggered = p.wheelDisplayed)
            }),
            n(document).on("mousedown", function(e) {
                var t = "which"in e ? 3 == e.which : 2 == e.button;
                t && !p.pingMouseTriggered && !p.emoteMouseTriggered && p.pingKeyDown && (e.stopPropagation(),
                e.preventDefault(),
                p.emoteScreenPos = f.create(e.clientX, e.clientY),
                p.pingMouseTriggered = !0),
                t && !p.pingMouseTriggered && (e.stopPropagation(),
                e.preventDefault(),
                p.emoteScreenPos = f.create(e.clientX, e.clientY),
                p.emoteMouseTriggered = !0)
            }),
            n(document).on("mouseup", function(e) {
                3 == e.which && p.pingKeyTriggered && p.pingMouseTriggered && p.triggerPing(),
                3 == e.which && p.emoteMouseTriggered && p.triggerEmote()
            }),
            this.triggerPing = function() {
                if (this.mt) {
                    var e = void 0;
                    this.emoteSelector.ping == u.None || this.emoteWheelsGreyed ? this.emoteSelector.emote == c.None || this.emoteWheelsGreyed || (e = this.mt.pos,
                    this.sendEmote({
                        type: this.emoteSelector.emote,
                        useLoadout: this.emoteSelector.useLoadout,
                        emoteSlot: this.emoteSelector.emoteSlot,
                        pos: e
                    }),
                    this.uiManager.displayMapLarge(!0)) : h[this.emoteSelector.ping].pingMap && (e = this.uiManager.getWorldPosFromMapPos(this.bigmapPingPos || this.emoteScreenPos, this.map, this.camera),
                    e || (e = this.camera.screenToPoint(this.emoteScreenPos)),
                    e.x = x.clamp(e.x, 0, this.uiManager.mapWidth),
                    e.y = x.clamp(e.y, 0, this.uiManager.mapHeight),
                    this.sendPing({
                        type: this.emoteSelector.ping,
                        pos: e
                    })),
                    this.inputReset(),
                    this.pingKeyTriggered = this.pingKeyDown
                }
            }
            ,
            this.triggerEmote = function() {
                if (this.mt) {
                    var e = void 0;
                    this.emoteSelector.emote == c.None || this.emoteWheelsGreyed || (e = this.mt.pos,
                    this.sendEmote({
                        type: this.emoteSelector.emote,
                        useLoadout: this.emoteSelector.useLoadout,
                        emoteSlot: this.emoteSelector.emoteSlot,
                        pos: e
                    })),
                    this.inputReset()
                }
            }
            ,
            this.emoteTouchedPos = null,
            this.bigmapPingPos = null,
            b.touch && (this.emoteElems = n(".ui-emote"),
            this.emoteElems.css("pointer-events", "auto"),
            this.bigmapCollision = n("#big-map-collision"),
            this.bigmapCollision.on("touchend", function(e) {
                e.stopPropagation(),
                p.bigmapPingPos = {
                    x: e.originalEvent.changedTouches[0].pageX,
                    y: e.originalEvent.changedTouches[0].pageY
                },
                p.emoteScreenPos = f.create(p.camera.screenWidth / 2, p.camera.screenHeight / 2),
                p.pingMouseTriggered = !0
            }),
            this.emoteButtonElem = n("#ui-emote-button"),
            this.emoteButtonElem.css("pointer-events", "auto"),
            this.emoteButtonElem.on("touchstart", function(e) {
                e.stopPropagation(),
                p.emoteScreenPos = f.create(p.camera.screenWidth / 2, p.camera.screenHeight / 2),
                p.emoteMouseTriggered = !0
            }),
            this.emoteElems.on("touchstart", function(e) {
                e.stopPropagation(),
                p.emoteTouchedPos = {
                    x: e.originalEvent.changedTouches[0].pageX,
                    y: e.originalEvent.changedTouches[0].pageY
                }
            }),
            n(document).on("touchstart", function(e) {
                p.wheelDisplayed && (e.stopPropagation(),
                p.inputReset())
            })),
            n(window).on("blur", function(e) {
                p.inputReset()
            }),
            n(document).on("keydown", function(e) {
                9 == e.which && e.preventDefault()
            }),
            this.emoteWheels = n("#ui-emotes, #ui-team-pings"),
            this.teamEmotes = n(".ui-emote-bottom-left, .ui-emote-top-left"),
            this.emoteWheel = n("#ui-emotes"),
            this.emoteWheelData = {
                middle: {
                    parent: n("#ui-emote-middle"),
                    vA: f.create(-1, 1),
                    vC: f.create(1, 1),
                    ping: u.None,
                    emote: c.None,
                    modular: !1,
                    displayCloseIcon: !0
                },
                top: {
                    parent: n("#ui-emote-top"),
                    vA: f.create(-1, 1),
                    vC: f.create(1, 1),
                    ping: u.None,
                    emote: c.HappyFace,
                    modular: !1,
                    useLoadout: !0,
                    emoteSlot: m.Top
                },
                right: {
                    parent: n("#ui-emote-right"),
                    vA: f.create(1, 1),
                    vC: f.create(1, -1),
                    ping: u.None,
                    emote: c.ThumbsUp,
                    modular: !1,
                    useLoadout: !0,
                    emoteSlot: m.Right
                },
                bottom: {
                    parent: n("#ui-emote-bottom"),
                    vA: f.create(1, -1),
                    vC: f.create(-1, -1),
                    ping: u.None,
                    emote: c.Surviv,
                    modular: !1,
                    useLoadout: !0,
                    emoteSlot: m.Bottom
                },
                left: {
                    parent: n("#ui-emote-left"),
                    vA: f.create(-1, -1),
                    vC: f.create(-1, 1),
                    ping: u.None,
                    emote: c.SadFace,
                    modular: !1,
                    useLoadout: !0,
                    emoteSlot: m.Left
                }
            },
            this.teamPingWheel = n("#ui-team-pings");
            var y = {
                middle: {
                    parent: n("#ui-team-ping-middle"),
                    vA: f.create(-1, 1),
                    vC: f.create(1, 1),
                    ping: u.None,
                    emote: c.None,
                    modular: !1,
                    displayCloseIcon: !0
                },
                top: {
                    parent: n("#ui-team-ping-top"),
                    vA: f.create(-1, 1),
                    vC: f.create(1, 1),
                    ping: u.Danger,
                    emote: c.None,
                    modular: !1
                },
                right: {
                    parent: n("#ui-team-ping-right"),
                    vA: f.create(1, 1),
                    vC: f.create(1, -1),
                    ping: u.Coming,
                    emote: c.None,
                    modular: !1
                },
                bottom: {
                    parent: n("#ui-team-ping-bottom"),
                    vA: f.create(1, -1),
                    vC: f.create(-1, -1),
                    ping: u.Help,
                    emote: c.None,
                    modular: !1
                },
                "bottom-left": {
                    parent: n("#ui-team-ping-bottom-left"),
                    vA: f.create(-1, -1),
                    vC: f.create(-1, 0),
                    ping: u.None,
                    emote: c.Medical,
                    modular: !1
                },
                "top-left": {
                    parent: n("#ui-team-ping-top-left"),
                    vA: f.create(-1, 0),
                    vC: f.create(-1, 1),
                    ping: u.None,
                    emote: c.Ammo,
                    modular: !0
                }
            };
            this.teamPingSelectors = [];
            for (var w in y)
                if (y.hasOwnProperty(w)) {
                    var _ = y[w]
                      , v = _.ping != u.None ? h[_.ping] : d[_.emote]
                      , S = r(_.vA)
                      , k = r(_.vC)
                      , z = v.texture;
                    v.displayCloseIcon && (z = "close.img"),
                    this.teamPingSelectors.push({
                        parent: _.parent,
                        angleA: S,
                        angleC: k,
                        highlight: _.parent.find(".ui-emote-hl"),
                        highlightDisplayed: !1,
                        texture: z,
                        ping: _.ping,
                        emote: _.emote,
                        modular: _.modular
                    })
                }
            this.displayedSelectors = this.teamPingSelectors,
            this.baseScale = 1,
            this.container = new g.Container,
            this.container.scale = new g.Point(this.baseScale,this.baseScale),
            this.pingContainer = new g.Container,
            this.container.addChild(this.pingContainer),
            this.indContainer = new g.Container,
            this.teamIndicators = [];
            for (var M = 0; M < 4; M++) {
                var T = M
                  , P = new g.Container
                  , C = new g.Container
                  , A = g.Sprite.fromImage("ping-border.img");
                A.scale = new g.Point(.4,.4),
                A.anchor = new g.Point(.5,.5),
                A.tint = s.teamColors[M],
                A.alpha = 0,
                A.visible = !0,
                P.addChild(A);
                var I = g.Sprite.fromImage("ping-team-danger.img");
                I.scale = new g.Point(.4,.4),
                I.anchor = new g.Point(.5,.5),
                I.tint = s.teamColors[M],
                I.alpha = 0,
                I.visible = !0,
                P.addChild(I);
                var D = g.Sprite.fromImage("ping-team-danger.img");
                D.scale = new g.Point(.5,.5),
                D.anchor = new g.Point(.5,.5),
                D.tint = s.teamColors[M],
                D.alpha = 0,
                D.visible = !0,
                C.addChild(D);
                var O = g.Sprite.fromImage("ping-indicator.img");
                O.scale = new g.Point(.5,.5),
                O.anchor = new g.Point(.5,0),
                O.alpha = 0,
                O.visible = !0,
                C.addChild(O),
                this.pingContainer.addChild(P),
                this.indContainer.addChild(C),
                this.teamIndicators.push({
                    ping: {
                        elem: n("#ui-team-indicators").find(".ui-indicator-ping[data-id=" + T + "]"),
                        borderElem: n("#ui-team-indicators").find(".ui-indicator-ping-border[data-id=" + T + "]"),
                        pingContainer: P,
                        indContainer: C,
                        borderSprite: {
                            sprite: A,
                            baseScale: .4
                        },
                        pingSprite: {
                            sprite: I,
                            baseScale: .4
                        },
                        indSpriteOuter: {
                            sprite: O,
                            baseScale: .5,
                            baseTint: O.tint
                        },
                        indSpriteInner: {
                            sprite: D,
                            baseScale: .5,
                            baseTint: D.tint
                        },
                        displayed: !1,
                        fadeIn: 0,
                        life: 0,
                        fadeOut: 0,
                        pos: f.create(0, 0)
                    }
                })
            }
            this.emoteLifeIn = .75,
            this.emoteLife = 1,
            this.emoteLifeOut = .1,
            this.pingFadeIn = .5,
            this.pingLife = 4.25,
            this.pingFadeOut = .1,
            this.wedgeOpacityReset = b.touch ? 1 : .75,
            this.teamEmoteOpacityReset = .2,
            this.emotes = [],
            this.newPings = [],
            this.newEmotes = []
        }
        var n = a("8ee62bea")
          , s = a("989ad62a")
          , l = a("b78cf179")
          , m = l.EmoteSlot
          , c = l.EmoteType
          , d = l.EmoteData
          , p = a("b198b546")
          , u = p.PingType
          , h = p.PingData
          , g = a("80ac57a6")
          , y = a("34e32c48")
          , f = a("c2a798c8")
          , x = a("10899aea")
          , w = a("1901e2d9")
          , b = a("ce29f17f");
        a("119e8c4c"),
        a("4b8d140f"),
        o.prototype = {
            o: function() {
                n(document).off("keydown"),
                n(document).off("keyup"),
                n(document).off("mousedown"),
                n(document).off("mouseup"),
                n(window).off("blur"),
                b.touch && (n(document).off("touchstart"),
                this.emoteButtonElem.off("touchstart"),
                this.emoteElems.off("touchstart"),
                this.bigmapCollision.off("touchend")),
                this.a()
            },
            a: function() {
                this.emoteWheelsGreyed = !1,
                this.emoteWheels.css("opacity", 1),
                this.teamEmotesGreyed = !1,
                this.teamEmotes.css("opacity", 1),
                this.disable = !1,
                this.inputReset()
            },
            inputReset: function() {
                this.pingMouseTriggered = !1,
                this.pingKeyTriggered = !1,
                this.emoteMouseTriggered = !1,
                this.emoteKeyTriggered = !1,
                this.wheelDisplayed = !1,
                this.displayWheel(this.teamPingWheel, !1),
                this.displayWheel(this.emoteWheel, !1),
                this.emoteTouchedPos = null,
                this.bigmapPingPos = null,
                this.emoteTimeoutTicker = 0;
                for (var e = 0; e < this.displayedSelectors.length; e++) {
                    var t = this.displayedSelectors[e]
                      , a = d[t.emote];
                    this.teamEmotesGreyed && a.teamOnly ? t.parent.css("opacity", this.teamEmoteOpacityReset) : t.parent.css("opacity", this.wedgeOpacityReset),
                    t.highlight.css("display", "none"),
                    t.highlightDisplayed = !1
                }
            },
            sendPing: function(e) {
                var t = {};
                t.type = e.type,
                t.pos = e.pos,
                this.newPings.push(t),
                this.incrementEmote()
            },
            addPing: function(e) {
                if (this.mt) {
                    var t = h[e.type];
                    if (t) {
                        this.teamId = this.playerBarn.H(this.mt.__id).teamId;
                        for (var a = this.playerBarn.getTeamInfo(this.teamId), i = a.playerIds.length, r = 0; r < i; r++) {
                            var o = a.playerIds[r];
                            if (o == e.playerId) {
                                var n = this.teamIndicators[r];
                                this.playerBarn.H(o),
                                this.mt.__id,
                                this.uiManager.setPlayerPing(e.type, r, e.pos, t.mapLife);
                                for (var s in n)
                                    if (n.hasOwnProperty(s) && "ping" == s) {
                                        var l = n[s];
                                        l.pos = e.pos,
                                        l.pingSprite.sprite.texture = g.Texture.fromImage(t.texture),
                                        l.indSpriteInner.sprite.texture = g.Texture.fromImage(t.texture),
                                        l.indSpriteInner.sprite.tint = t.mapEvent ? t.tint : l.indSpriteInner.baseTint,
                                        l.indSpriteOuter.sprite.tint = t.mapEvent ? t.tint : l.indSpriteOuter.baseTint,
                                        l.fadeIn = this.pingFadeIn,
                                        l.life = this.pingLife,
                                        l.fadeOut = this.pingFadeOut,
                                        l.mapEvent = t.mapEvent,
                                        this.audioManager.playSound(t.sound, {
                                            channel: "ui"
                                        })
                                    }
                            }
                        }
                    }
                }
            },
            sendEmote: function(e) {
                var t = {};
                t.useLoadout = e.useLoadout,
                t.type = e.useLoadout ? e.emoteSlot : e.type,
                t.pos = e.pos,
                this.newEmotes.push(t),
                this.incrementEmote()
            },
            addEmote: function(e) {
                var t = d[e.type];
                if (t) {
                    for (var a = null, i = 0; i < this.emotes.length; i++)
                        this.emotes[i].alive || a ? this.emotes[i].alive && this.emotes[i].playerId == e.playerId && (this.emotes[i].alive = !1) : a = this.emotes[i];
                    a || (a = {},
                    a.alive = !1,
                    a.pos = f.create(0, 0),
                    a.container = new g.Container,
                    a.circleOuter = new g.Sprite.fromImage("emote-circle-outer.img"),
                    a.circleOuter.anchor = new g.Point(.5,.5),
                    a.baseScale = .55,
                    a.circleOuter.scale = new g.Point(.8 * a.baseScale,.8 * a.baseScale),
                    a.circleOuter.tint = 0,
                    a.circleOuter.visible = !0,
                    a.container.addChild(a.circleOuter),
                    a.sprite = new g.Sprite,
                    a.sprite.anchor = new g.Point(.5,.5),
                    a.container.addChild(a.sprite),
                    a.sprite.scale = new g.Point(a.baseScale,a.baseScale),
                    a.posOffset = new g.Point(0,4),
                    a.container.scale = new g.Point(1,1),
                    a.container.visible = !1,
                    this.emotes.push(a)),
                    a.alive = !0,
                    a.isNew = !0,
                    a.type = e.type,
                    a.playerId = e.playerId,
                    a.pos = f.create(0, 0),
                    a.lifeIn = this.emoteLifeIn,
                    a.life = this.emoteLife,
                    a.lifeOut = this.emoteLifeOut,
                    a.zIdx = this.zIdxNext++,
                    a.sprite.texture = g.Texture.fromImage(t.texture),
                    a.container.visible = !1
                }
            },
            incrementEmote: function() {
                ++this.emoteCounter >= s.player.emoteThreshold && (this.emoteHardTicker = this.emoteHardTicker > 0 ? this.emoteHardTicker : 1.5 * s.player.emoteHardCooldown)
            },
            l: function(e, t, a, o, n, l, m) {
                var p = this.playerBarn
                  , h = this.camera;
                if (this.mt = a,
                t == a.__id && !a.N.dead || this.disable || (this.o(),
                this.disable = !0),
                !this.disable) {
                    var g = a.U.weapons[a.U.curWeapIdx]
                      , _ = s.items[g.name]
                      , v = "";
                    if (_ && (v = _.ammo ? _.ammo : v),
                    this.wheelKeyTriggered = this.pingKeyTriggered || this.emoteMouseTriggered,
                    this.emoteSoftTicker -= e,
                    this.emoteCounter >= s.player.emoteThreshold && this.emoteHardTicker > 0 ? (this.emoteHardTicker -= e,
                    this.emoteHardTicker < 0 && (this.emoteCounter = 0)) : this.emoteSoftTicker < 0 && this.emoteCounter > 0 && (this.emoteCounter--,
                    this.emoteSoftTicker = 1.5 * s.player.emoteSoftCooldown),
                    !this.pingMouseTriggered && !this.emoteMouseTriggered || this.wheelDisplayed || (this.parentDisplayed = this.pingMouseTriggered ? this.teamPingWheel : this.emoteWheel,
                    this.parentDisplayed.css({
                        display: "block",
                        left: this.emoteScreenPos.x,
                        top: this.emoteScreenPos.y
                    }),
                    this.displayWheel(this.parentDisplayed, !0),
                    this.wheelDisplayed = !0,
                    this.displayedSelectors = this.pingMouseTriggered ? this.teamPingSelectors : this.emoteWheelSelectors,
                    this.worldPos = h.screenToPoint(this.emoteScreenPos)),
                    this.wheelDisplayed)
                        if (this.emoteTimeoutTicker += e,
                        this.emoteTimeoutTicker > 10)
                            this.inputReset();
                        else {
                            this.emoteHardTicker > 0 && !this.emoteWheelsGreyed ? (this.emoteWheels.css("opacity", .5),
                            this.emoteWheelsGreyed = !0) : this.emoteHardTicker <= 0 && this.emoteWheelsGreyed && (this.emoteWheels.css("opacity", 1),
                            this.emoteWheelsGreyed = !1),
                            this.teamEmotesGreyed || 1 != n || (this.teamEmotes.css("opacity", this.teamEmoteOpacityReset),
                            this.teamEmotesGreyed = !0);
                            var S = null;
                            if (u.None,
                            b.touch && (o = this.emoteTouchedPos),
                            o) {
                                var k = f.sub(o, this.emoteScreenPos);
                                k.y *= -1;
                                for (var z = f.length(k), M = r(k), T = 0; T < this.displayedSelectors.length; T++) {
                                    var P = this.displayedSelectors[T];
                                    if (P.modular) {
                                        var C = P.emote;
                                        switch (v) {
                                        case "9mm":
                                            P.emote = c.Ammo9mm,
                                            P.texture = d[c.Ammo9mm].texture;
                                            break;
                                        case "12gauge":
                                            P.emote = c.Ammo12Gauge,
                                            P.texture = d[c.Ammo12Gauge].texture;
                                            break;
                                        case "762mm":
                                            P.emote = c.Ammo762mm,
                                            P.texture = d[c.Ammo762mm].texture;
                                            break;
                                        case "556mm":
                                            P.emote = c.Ammo556mm,
                                            P.texture = d[c.Ammo556mm].texture;
                                            break;
                                        case "50AE":
                                            P.emote = c.Ammo50AE,
                                            P.texture = d[c.Ammo50AE].texture;
                                            break;
                                        case "308sub":
                                            P.emote = c.Ammo308sub,
                                            P.texture = d[c.Ammo308sub].texture;
                                            break;
                                        case "flare":
                                            P.emote = c.AmmoFlare,
                                            P.texture = d[c.AmmoFlare].texture;
                                            break;
                                        default:
                                            P.emote = c.Ammo,
                                            P.texture = d[c.Ammo].texture
                                        }
                                        if (C != P.emote) {
                                            var A = P.parent.find(".ui-emote-image")
                                              , I = i(P.texture);
                                            A.css("background-image", "url(" + I + ")")
                                        }
                                    }
                                    var D = P.ping != u.None || P.emote != c.None
                                      , O = d[P.emote]
                                      , E = O.teamOnly && 1 == n;
                                    z <= 35 && !D && this.emoteHardTicker <= 0 && !E ? S = P : x.isAngleBetween(M, P.angleC, P.angleA) && z > 35 && D && this.emoteHardTicker <= 0 && !E ? S = P : P.highlightDisplayed && (P.parent.css("opacity", this.wedgeOpacityReset),
                                    P.highlight.css("display", "none"),
                                    P.highlightDisplayed = !1)
                                }
                            }
                            S && (this.emoteSelector = S,
                            S.highlightDisplayed || (S.parent.css("opacity", 1),
                            S.highlight.css("display", "block"),
                            S.highlightDisplayed = !0),
                            b.touch && this.emoteTouchedPos && (this.pingMouseTriggered ? this.triggerPing() : this.triggerEmote()))
                        }
                }
                for (var L = 0; L < this.emotes.length; L++) {
                    var B = this.emotes[L];
                    if (B.alive) {
                        var F = !1
                          , R = f.create(0, 0)
                          , j = 0
                          , q = p.se(B.playerId);
                        if (q && !q.N.dead && (R = f.copy(q.pos),
                        j = q.layer,
                        F = !0),
                        !F) {
                            var N = l.getDeadBodyById(B.playerId);
                            N && (R = f.copy(N.pos),
                            j = N.layer,
                            F = !0)
                        }
                        if (F) {
                            if (B.isNew) {
                                var G = d[B.type];
                                this.audioManager.playSound(G.sound, {
                                    channel: "ui",
                                    soundPos: R,
                                    layer: j
                                })
                            }
                            B.isNew = !1,
                            B.pos = R,
                            B.lifeIn > 0 ? B.lifeIn -= e : B.life > 0 ? B.life -= e : B.lifeOut > 0 && (B.lifeOut -= e);
                            var U = w.sameLayer(j, this.mt.layer) ? 3 : j;
                            m.addPIXIObj(B.container, U, 1e3, B.zIdx),
                            B.alive = B.alive && B.lifeOut > 0
                        } else
                            B.alive = !1
                    }
                }
                var V = f.create(.5 * h.screenWidth / h.z(), .5 * h.screenHeight / h.z())
                  , H = {
                    min: f.sub(h.pos, V),
                    max: f.add(h.pos, V)
                };
                this.teamId = p.H(a.__id).teamId;
                for (var W = p.getTeamInfo(this.teamId), K = W.playerIds.length, X = 0; X < K; X++) {
                    var Y = this.teamIndicators[X]
                      , Z = W.playerIds[X]
                      , Q = (p.H(Z),
                    Z == this.mt.__id)
                      , J = p.getTeammateData(Z);
                    if (J)
                        for (var $ in Y)
                            if (Y.hasOwnProperty($)) {
                                var ee = Y[$]
                                  , te = ee.pingContainer
                                  , ae = ee.indContainer
                                  , ie = ee.borderSprite.sprite
                                  , re = ee.pingSprite.sprite
                                  , oe = ee.indSpriteOuter.sprite
                                  , ne = ee.indSpriteInner.sprite
                                  , se = !0;
                                if (ee.fadeIn -= e,
                                ee.life -= e,
                                ee.fadeOut -= ee.life > 0 ? 0 : e,
                                ee.fadeOut > 0) {
                                    var le = ee.pos
                                      , me = f.normalizeSafe(f.sub(le, h.pos), f.create(1, 0))
                                      , ce = y.intersectRayAabb(h.pos, me, H.min, H.max)
                                      , de = Math.atan2(me.y, -me.x) + .5 * Math.PI
                                      , pe = h.pointToScreen(ce)
                                      , ue = y.testCircleAabb(le, s.player.radius, H.min, H.max)
                                      , he = h.pixels(ee.borderSprite.baseScale)
                                      , ge = h.pixels(ee.pingSprite.baseScale);
                                    if (ie.scale.set(he, he),
                                    re.scale.set(ge, ge),
                                    !J.dead) {
                                        se = ee.fadeOut < 0;
                                        var ye = ue ? h.pointToScreen(le).x : x.clamp(pe.x, 64, h.screenWidth - 64)
                                          , fe = ue ? h.pointToScreen(le).y : x.clamp(pe.y, 64, h.screenHeight - 64)
                                          , xe = h.pointToScreen(le).x
                                          , we = h.pointToScreen(le).y;
                                        re.position.x = xe,
                                        re.position.y = we,
                                        ie.position.x = xe,
                                        ie.position.y = we,
                                        oe.position.x = ye,
                                        oe.position.y = fe,
                                        oe.rotation = de,
                                        ne.position.x = ye,
                                        ne.position.y = fe;
                                        var be = ie.alpha <= 0 ? 1 : ie.alpha - e;
                                        ie.alpha = be;
                                        var _e = h.pixels(ee.borderSprite.baseScale * (2 - be));
                                        if (ie.scale.set(_e, _e),
                                        ne.alpha = ue ? 0 : be,
                                        ee.fadeIn > 0) {
                                            var ve = 1 - ee.fadeIn / this.pingFadeIn;
                                            te.alpha = 1,
                                            ae.alpha = 1,
                                            re.alpha = 1,
                                            oe.alpha = ue ? 0 : ve
                                        } else
                                            oe.alpha = ue ? 0 : 1;
                                        if (ee.life < 0) {
                                            var Se = ee.fadeOut / this.pingFadeOut;
                                            te.alpha = Se,
                                            ae.alpha = Se
                                        }
                                        ee.displayed || (te.visible = !ee.mapEvent,
                                        ae.visible = !Q || ee.mapEvent,
                                        ee.displayed = !0)
                                    }
                                }
                                se && ee.displayed && (te.visible = !1,
                                ae.visible = !1,
                                ee.displayed = !1)
                            }
                }
            },
            displayWheel: function(e, t) {
                e.css("display", t ? "block" : "none")
            },
            updateEmoteWheel: function(e) {
                var t = {
                    top: e[m.Top],
                    right: e[m.Right],
                    bottom: e[m.Bottom],
                    left: e[m.Left]
                };
                for (var a in t)
                    if (t.hasOwnProperty(a)) {
                        var o = d[t[a]];
                        if (this.emoteWheelData[a] && void 0 != o) {
                            var n = d[t[a]];
                            n.teamOnly || (this.emoteWheelData[a].emote = t[a])
                        }
                    }
                this.emoteWheelSelectors = [];
                for (var s in this.emoteWheelData)
                    if (this.emoteWheelData.hasOwnProperty(s)) {
                        var l = this.emoteWheelData[s]
                          , c = d[l.emote]
                          , p = r(l.vA)
                          , u = r(l.vC)
                          , h = c.texture;
                        l.displayCloseIcon && (h = "close.img"),
                        this.emoteWheelSelectors.push(Object.assign({}, {
                            angleA: p,
                            angleC: u,
                            highlight: l.parent.find(".ui-emote-hl"),
                            highlightDisplayed: !1,
                            texture: h
                        }, l));
                        var g = l.parent.find(".ui-emote-image")
                          , y = i(h);
                        g.css("background-image", "url(" + y + ")")
                    }
            },
            render: function(e, t) {
                for (var a = 0; a < this.emotes.length; a++) {
                    var i = this.emotes[a];
                    if (i.container.visible = i.alive,
                    i.alive) {
                        var r = 0;
                        if (i.lifeIn > 0) {
                            var o = 1 - i.lifeIn / this.emoteLifeIn;
                            r = x.easeOutElastic(o)
                        } else if (i.life > 0)
                            r = 1;
                        else if (i.lifeOut > 0) {
                            var n = i.lifeOut / this.emoteLifeOut;
                            r = n
                        }
                        var s = f.add(i.pos, f.mul(i.posOffset, 1 / x.clamp(e.zoom, .75, 1)))
                          , l = e.pointToScreen(s)
                          , m = r * i.baseScale * x.clamp(e.zoom, .9, 1.75);
                        i.container.position.set(l.x, l.y),
                        i.container.scale.set(m, m)
                    }
                }
            }
        },
        e.exports = {
            $e: o
        }
    },
    e9735f40: function(e, t, a) {
        "use strict";
        var i = {
            "@metadata": {
                "last-updated": "2018-04-07",
                locale: "jp"
            },
            "word-order": "svo",
            "index-slogan": "2Dバトルロワイヤル",
            "index-region": "地域",
            "index-north-america": "北アメリカ",
            "index-europe": "ヨーロッパ",
            "index-asia": "アジア",
            "index-players": "プレイヤー",
            "index-play-solo": "1人で遊ぶ",
            "index-play-duo": "2人で遊ぶ",
            "index-play-squad": "4人で遊ぶ",
            "index-join-team": "チームに参加",
            "index-create-team": "チームを作成",
            "index-leave-team": "キャンセル",
            "index-joining-team": "チームに参加中",
            "index-creating-team": "チームを作成中",
            "index-invite-link": "招待リンク",
            "index-solo": "ソロ",
            "index-duo": "デュオ",
            "index-squad": "スクワッド",
            "index-auto-fill": "自動編成あり",
            "index-no-fill": "自動編成なし",
            "index-waiting-for-leader": "リーダーがゲームを開始するのを待っています",
            "index-play": "出発する",
            "index-featured-youtuber": "おすすめYoutuber",
            "index-settings": "設定",
            "index-high-resolution": "高画質モード",
            "index-screen-shake": "振動エフェクト",
            "index-master-volume": "Master Volume",
            "index-sfx-volume": "SFX Volume",
            "index-music-volume": "Music Volume",
            "index-mobile-announce": "スマートフォンでもプレイできるようになりました！",
            "index-mobile-tooltip": "スマートフォンで <span>surviv.io</span> を開いていつでもどこでもプレイしましょう！",
            "index-team-is-full": "チームは満員です！",
            "index-failed-joining-team": "チームへの参加に失敗しました",
            "index-failed-creating-team": "チームの作成に失敗しました",
            "index-failed-finding-game": "ゲームの検索に失敗しました",
            "index-failed-joining-game": "ゲームへの参加に失敗しました",
            "index-lost-connection": "チームとの接続が切断されました",
            "index-host-closed": "ホストが接続を終了しました",
            "index-invalid-protocol": "Old client version.",
            "index-view-more": "詳細",
            "index-back-to-main": "メインメニューに戻る",
            "index-most-kills": "キル数",
            "index-total-kills": "総キル数",
            "index-total-wins": "ドン勝数",
            "index-top-5-percent": "上位5%",
            "index-kill-death-ratio": "キル / デス",
            "index-mode": "Mode",
            "index-for": "For",
            "index-today": "今日",
            "index-this-week": "今週",
            "index-all-time": "全期間",
            "index-top-100": "上位100名",
            "index-rank": "順位",
            "index-player": "プレイヤー名",
            "index-total-games": "Total Games",
            "index-controls": "操作方法",
            "index-movement": "移動",
            "index-movement-ctrl": "[W] , [A] , [S] , [D]",
            "index-aim": "照準",
            "index-aim-ctrl": "マウスカーソル",
            "index-punch": "殴る",
            "index-shoot": "射撃",
            "index-shoot-ctrl": "左クリック",
            "index-change-weapons": "武器変更",
            "index-change-weapons-ctrl": "[1] 〜 [2] , スクロールホイール",
            "index-stow-weapons": "武器をしまう（拳で抵抗）",
            "index-stow-weapons-ctrl": "[3] , [E]",
            "index-swap-weapons": "直前の武器を装備",
            "index-swap-weapons-ctrl": "[Q]",
            "index-reload": "リロード",
            "index-reload-ctrl": "[R]",
            "index-scope-zoom": "スコープ倍率変更",
            "index-scope-zoom-ctrl": "倍率を左クリック",
            "index-pickup": "拾う",
            "index-loot": "奪う",
            "index-revive": "蘇生",
            "index-pickup-ctrl": "[F]",
            "index-use-medical": "医薬品の使用",
            "index-use-medical-ctrl": "アイテムを左クリック , [7]～[0]",
            "index-drop-item": "アイテムを捨てる",
            "index-drop-item-ctrl": "アイテムを右クリック",
            "index-cancel-action": "行動キャンセル",
            "index-cancel-action-ctrl": "[X]",
            "index-view-map": "マップを表示",
            "index-view-map-ctrl": "[M] , [G]",
            "index-toggle-minimap": "ミニマップ表示切替",
            "index-toggle-minimap-ctrl": "[V]",
            "index-use-ping": "チームエモートの使用",
            "index-use-ping-ctrl": "[C]を押しながら右クリックをドラッグして表示. 該当のエモート上で右クリックを離す.",
            "index-use-emote": "エモートの使用",
            "index-use-emote-ctrl": "右クリックをドラッグして表示. 該当のエモート上で右クリックを離す.",
            "index-how-to-play": "遊び方",
            "index-tips-1-desc": "Surviv.ioの勝利条件は最後の一人になるまで生き残ることです. 同じ試合では一度死亡した時点でゲームオーバーとなります.",
            "index-tips-2": "2D PUBG",
            "index-tips-2-desc": "既にPUBGやFortnite、H1Z1といった他のバトルロワイヤルゲームをプレイしたことがあるのであれば、勝利への道は目前です！Surviv.ioは2D版PUBGのようなものです.",
            "index-tips-3": "アイテムを略奪せよ",
            "index-tips-3-desc": "ゲーム開始時点では簡潔なバックパックしかありません. マップ中を駆け巡り、武器や銃弾、スコープ、医薬品など様々なアイテムを手に入れましょう. 他のプレイヤーを討ち取り戦利品をゲットしましょう！",
            "index-tips-4": "赤色 = ガスから逃げろ！",
            "index-tips-4-desc": "敵はプレイヤーだけではありません. マップの端から迫ってくるレッドゾーン内に入れば、断続的なダメージを受けて死に至る危険があります. マップに目を光らせて安全地帯で生き残りましょう.",
            "index-movement-ctrl-touch": "Left stick",
            "index-aim-ctrl-touch": "Right stick",
            "index-shoot-ctrl-touch": "Drag right stick outside stick border",
            "index-change-weapons-ctrl-touch": "Tap weapon slot",
            "index-reload-ctrl-touch": "Tap equipped ammo counter",
            "index-scope-zoom-ctrl-touch": "Tap zoom item",
            "index-pickup-ctrl-touch": "Tap interaction button or loot name",
            "index-use-medical-ctrl-touch": "Tap medical item",
            "index-drop-item-ctrl-touch": "Touch and hold item",
            "index-cancel-action-ctrl-touch": "Tap interaction button",
            "index-view-map-ctrl-touch": "Tap minimap",
            "index-use-ping-ctrl-touch": "View map and tap anywhere on map",
            "index-use-emote-ctrl-touch": "Tap surviv icon",
            "game-alive": "生存",
            "game-reloading": "リロード中",
            "game-using": "使用中",
            "game-reviving": "蘇生中",
            "game-revive-teammate": "チームメイトを蘇生",
            "game-equip": "装備",
            "game-cancel": "キャンセル",
            "game-open-door": "ドアを開く",
            "game-close-door": "ドアを閉める",
            "game-You": "あなた",
            "game-you": "あなた",
            "game-themselves": "自分自身",
            "game-yourself": "あなた自身",
            "game-you-died": "が死亡しました",
            "game-player-died": "が死亡しました",
            "game-with": "使用して",
            "game-knocked-out": "が気絶させました",
            "game-killed": "が殺しました",
            "game-finally-killed": "ついに殺しました",
            "game-finally-bled-out": "ついに息絶えました",
            "game-died-outside": "がセーフゾーンの外で死亡しました",
            "game-the-red-zone": "レッドゾーン",
            "game-waiting-for-players": "プレイヤーを待っています",
            "game-spectating": "観戦中",
            "game-red-zone-advances": "ガス汚染エリア拡大まで",
            "game-red-zone-advancing": "ガス汚染エリアが拡大中、安全地帯に逃げてください！",
            "game-seconds": "秒",
            "game-minutes": "分",
            "game-minute": "分",
            "game-m": "分",
            "game-s": "秒",
            "game-not-enough-space": "インベントリに空きがありません！",
            "game-item-already-owned": "既に所持しているアイテムです！",
            "game-item-already-equipped": "既に装備しているアイテムです！",
            "game-better-item-equipped": "より優れたアイテムを装備しています！",
            "game-play-new-game": "次の試合に参加する",
            "game-spectate": "観戦する",
            "game-full-screen": "全画面表示",
            "game-sound": "ミュート",
            "game-quit-game": "撤退する",
            "game-return-to-game": "試合に戻る",
            "game-hide-match-stats": "戦績を非表示",
            "game-view-match-stats": "戦績を表示",
            "game-previous-teammate": "前のチームメイト",
            "game-next-teammate": "次のチームメイト",
            "game-leave-game": "試合から離脱する",
            "game-your-results": "あなたの戦績",
            "game-chicken": "勝った！勝った！夕飯はドン勝だ！！",
            "game-won-the-game": "がゲームに勝利しました",
            "game-team-eliminated": "まあ、こんな日もあるのさ！次はもう少しツイてますように！",
            "game-solo-rank": "Solo 順位",
            "game-duo-rank": "Duo 順位",
            "game-squad-rank": "Squad 順位",
            "game-rank": "順位",
            "game-team-rank": "チーム順位",
            "game-team-kills": "チームキル数",
            "game-kill": "キル数",
            "game-kills": "キル数",
            "game-damage-dealt": "与ダメージ",
            "game-damage-taken": "被ダメージ",
            "game-survived": "生存時間",
            "game-backpack00": "ポーチ",
            "game-backpack01": "スモールバックパック",
            "game-backpack02": "レギュラーバックパック",
            "game-backpack03": "ミリタリーバックパック",
            "game-bandage": "包帯",
            "game-bandage-tooltip": "左クリックでHPを15回復します",
            "game-healing-tooltip": "75HP以上の場合は回復できません",
            "game-healthkit": "救急箱",
            "game-healthkit-tooltip": "左クリックでHPを100回復します",
            "game-soda": "ソーダ",
            "game-soda-tooltip": "左クリックでアドレナリンを25増加させます",
            "game-adrenaline-tooltip": "アドレナリンはHPを時間とともに自動回復させます",
            "game-painkiller": "鎮痛剤",
            "game-painkiller-tooltip": "左クリックでアドレナリンを50増加させます",
            "game-9mm": "9mm",
            "game-9mm-tooltip": "MP5, MAC-10, UMP9, Vector, M9, G18C用の弾薬",
            "game-12gauge": "12 gauge",
            "game-12gauge-tooltip": "M870, SPAS-12, MP220, Saiga-12用の弾薬",
            "game-762mm": "7.62mm",
            "game-762mm-tooltip": "AK-47, SCAR-H, DP-28, Mosin-Nagant, SV-98, M1, M39, OT-38用の弾薬",
            "game-556mm": "5.56mm",
            "game-556mm-tooltip": "FAMAS, M416, QBB-97, Mk 12 SPR, M249用の弾薬",
            "game-50AE": ".50 AE",
            "game-50AE-tooltip": "Desert Eagle用の弾薬",
            "game-308sub": ".308 Subsonic",
            "game-308sub-tooltip": "AWM-S用の弾薬",
            "game-flare": "Flare",
            "game-flare-tooltip": "Flare Gun用の弾薬",
            "game-chest01": "レベル1 ベスト",
            "game-chest02": "レベル2 ベスト",
            "game-chest03": "レベル3 ベスト",
            "game-helmet01": "レベル1 ヘルメット",
            "game-helmet02": "レベル2 ヘルメット",
            "game-helmet03": "レベル3 ヘルメット",
            "game-1xscope": "1x スコープ",
            "game-2xscope": "2x スコープ",
            "game-4xscope": "4x スコープ",
            "game-8xscope": "8x スコープ",
            "game-15xscope": "15x スコープ",
            "game-level-1": "レベル1",
            "game-level-2": "レベル2",
            "game-level-3": "レベル3",
            "game-outfitBase": "Basic Outfit",
            "game-outfitRoyalFortune": "Royal Fortune",
            "game-outfitKeyLime": "Key Lime",
            "game-outfitCobaltShell": "Cobalt Shell",
            "game-outfitCarbonFiber": "Carbon Fiber",
            "game-outfitDarkGloves": "The Professional",
            "game-outfitGhillie": "Ghillie Suit",
            "game-outfitCamo": "Forest Camo",
            "game-outfitRed": "Target Practice",
            "game-outfitWhite": "Arctic Avenger",
            "game-outfitWoodland": "Woodland Combat",
            "game-outfitJester": "Jester's Folly",
            "game-fists": "拳",
            "game-ak47": "AK-47",
            "game-dp28": "DP-28",
            "game-mosin": "Mosin-Nagant",
            "game-m39": "M39 EMR",
            "game-mp5": "MP5",
            "game-mac10": "MAC-10",
            "game-ump9": "UMP9",
            "game-m870": "M870",
            "game-mp220": "MP220",
            "game-saiga": "Saiga-12",
            "game-m9": "M9",
            "game-m9_dual": "Dual M9",
            "game-hud-m9_dual": "M9",
            "game-glock": "G18C",
            "game-glock_dual": "Dual G18C",
            "game-hud-glock_dual": "G18C",
            "game-ot38": "OT-38",
            "game-ot38_dual": "Dual OT-38",
            "game-hud-ot38_dual": "OT-38",
            "game-famas": "FAMAS",
            "game-hk416": "M416",
            "game-mk12": "Mk 12 SPR",
            "game-m249": "M249",
            "game-frag": "手榴弾",
            "game-hud-frag": "手榴弾",
            "game-smoke": "スモークグレネード",
            "game-hud-smoke": "スモーク",
            "game-barrel_01": "バレル",
            "game-silo_01": "サイロ",
            "game-oven_01": "オーブン"
        };
        e.exports = i
    },
    e98400ad: function(e, t, a) {
        "use strict";
        function i() {
            return JSON.parse(localStorage.getItem(d)) || {}
        }
        function r(e, t) {
            var a = i();
            return void 0 !== a[e] ? a[e] : t
        }
        function o(e, t) {
            var a = i();
            a[e] = t,
            localStorage.setItem(d, JSON.stringify(a))
        }
        function n() {
            this.enabled = !1,
            this.zoom = l.scopeZoomRadius["1xscope"],
            this.cull = r("cull", !1),
            this.debug = r("debug", !0),
            this.setEnabled(!1)
        }
        var s = a("8ee62bea")
          , l = (a("80ac57a6"),
        a("989ad62a"))
          , m = a("10899aea")
          , c = (a("c2a798c8"),
        a("af8ba00f"),
        a("4b8d140f"))
          , d = "surviv_editor";
        n.prototype = {
            o: function() {},
            setEnabled: function(e) {
                var t = this;
                this.enabled = e,
                s("#ui-editor").css("display", e ? "block" : "none"),
                s("#ui-game").css("display", e ? "none" : "block"),
                s("#gameAreaWrapper").css("cursor", e ? "default" : "crosshair");
                var a = function(e) {
                    var a = s("<input/>", {
                        type: "checkbox",
                        value: "value",
                        checked: t[e]
                    });
                    return a.on("click", function(i) {
                        i.stopPropagation(),
                        t[e] = a.prop("checked"),
                        o(e, t[e])
                    }),
                    a
                };
                this.uiPos = s("<div/>"),
                this.uiZoom = s("<div/>"),
                this.uiCull = a("cull"),
                this.uiDebug = a("debug");
                var i = s("#ui-editor-info-list");
                i.empty(),
                i.append(s("<li/>").append(this.uiPos)),
                i.append(s("<li/>").append(this.uiZoom));
                var r = s("<div/>", {
                    html: "Cull: "
                });
                i.append(s("<li/>").append(r.append(this.uiCull)));
                var n = s("<div/>", {
                    html: "Debug: "
                });
                i.append(s("<li/>").append(n.append(this.uiDebug)))
            },
            l: function(e, t, a, i) {
                t.J(c.Key.Plus) && (this.zoom -= 8),
                t.J(c.Key.Minus) && (this.zoom += 8),
                t.J(c.Key.Zero) && (this.zoom = a.ut()),
                this.zoom = m.clamp(this.zoom, .5, 400);
                var r = a.N.pos.x.toFixed(2)
                  , o = a.N.pos.y.toFixed(2);
                this.uiPos.html("Pos:  " + r + ", " + o),
                this.uiZoom.html("Zoom: " + this.zoom)
            },
            renderCamera: function(e) {}
        },
        e.exports = n
    },
    ea7568c5: function(e, t) {
        e.exports = {
            spritesheets: [{
                meta: {
                    image: "imgs-da5e6071.png",
                    size: {
                        w: 4096,
                        h: 4096
                    },
                    scale: 1
                },
                frames: {
                    "map-complex-warehouse-floor.img": {
                        frame: {
                            x: 2,
                            y: 1574,
                            w: 2400,
                            h: 1888
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 2400,
                            h: 1888
                        },
                        sourceSize: {
                            w: 2400,
                            h: 1888
                        }
                    },
                    "map-building-police-floor.img": {
                        frame: {
                            x: 2,
                            y: 2,
                            w: 2720,
                            h: 1568
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 2720,
                            h: 1568
                        },
                        sourceSize: {
                            w: 2720,
                            h: 1568
                        }
                    },
                    "map-bunker-conch-chamber-floor-01.img": {
                        frame: {
                            x: 2,
                            y: 3466,
                            w: 1520,
                            h: 432
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 1520,
                            h: 432
                        },
                        sourceSize: {
                            w: 1520,
                            h: 432
                        }
                    },
                    "map-building-police-ceiling-01.img": {
                        frame: {
                            x: 2726,
                            y: 2,
                            w: 1344,
                            h: 640
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 1344,
                            h: 640
                        },
                        sourceSize: {
                            w: 1344,
                            h: 640
                        }
                    },
                    "map-bunker-conch-chamber-floor-02.img": {
                        frame: {
                            x: 2726,
                            y: 646,
                            w: 1304,
                            h: 464
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 1304,
                            h: 464
                        },
                        sourceSize: {
                            w: 1304,
                            h: 464
                        }
                    },
                    "map-bunker-storm-chamber-floor-01.img": {
                        frame: {
                            x: 2726,
                            y: 1114,
                            w: 1280,
                            h: 928
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 1280,
                            h: 928
                        },
                        sourceSize: {
                            w: 1280,
                            h: 928
                        }
                    },
                    "map-bunker-conch-compartment-floor-01.img": {
                        frame: {
                            x: 2726,
                            y: 2046,
                            w: 1104,
                            h: 1232
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 1104,
                            h: 1232
                        },
                        sourceSize: {
                            w: 1104,
                            h: 1232
                        }
                    },
                    "map-bunker-conch-chamber-ceiling-01.img": {
                        frame: {
                            x: 2726,
                            y: 3282,
                            w: 992,
                            h: 384
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 992,
                            h: 384
                        },
                        sourceSize: {
                            w: 992,
                            h: 384
                        }
                    },
                    "map-bunker-conch-chamber-ceiling-02.img": {
                        frame: {
                            x: 1526,
                            y: 3466,
                            w: 976,
                            h: 352
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 976,
                            h: 352
                        },
                        sourceSize: {
                            w: 976,
                            h: 352
                        }
                    },
                    "map-building-hut-floor-02.img": {
                        frame: {
                            x: 3834,
                            y: 2046,
                            w: 136,
                            h: 768
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 136,
                            h: 768
                        },
                        sourceSize: {
                            w: 136,
                            h: 768
                        }
                    },
                    "map-building-container-open-floor.img": {
                        frame: {
                            x: 2406,
                            y: 1574,
                            w: 180,
                            h: 692
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 180,
                            h: 692
                        },
                        sourceSize: {
                            w: 180,
                            h: 692
                        }
                    },
                    "map-building-container-open-ceiling-01.img": {
                        frame: {
                            x: 2406,
                            y: 2270,
                            w: 180,
                            h: 692
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 180,
                            h: 692
                        },
                        sourceSize: {
                            w: 180,
                            h: 692
                        }
                    },
                    "map-wall-14-rounded.img": {
                        frame: {
                            x: 4034,
                            y: 646,
                            w: 32,
                            h: 448
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 32,
                            h: 448
                        },
                        sourceSize: {
                            w: 32,
                            h: 448
                        }
                    },
                    "map-wall-14.img": {
                        frame: {
                            x: 4010,
                            y: 1114,
                            w: 32,
                            h: 448
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 32,
                            h: 448
                        },
                        sourceSize: {
                            w: 32,
                            h: 448
                        }
                    },
                    "map-wall-13-rounded.img": {
                        frame: {
                            x: 4010,
                            y: 1566,
                            w: 32,
                            h: 416
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 32,
                            h: 416
                        },
                        sourceSize: {
                            w: 32,
                            h: 416
                        }
                    },
                    "map-bunker-storm-floor-02.img": {
                        frame: {
                            x: 3722,
                            y: 3282,
                            w: 320,
                            h: 384
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 320,
                            h: 384
                        },
                        sourceSize: {
                            w: 320,
                            h: 384
                        }
                    },
                    "map-building-panicroom-floor.img": {
                        frame: {
                            x: 2406,
                            y: 2966,
                            w: 288,
                            h: 384
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 288,
                            h: 384
                        },
                        sourceSize: {
                            w: 288,
                            h: 384
                        }
                    },
                    "map-wall-glass-12.img": {
                        frame: {
                            x: 3974,
                            y: 2046,
                            w: 32,
                            h: 384
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 32,
                            h: 384
                        },
                        sourceSize: {
                            w: 32,
                            h: 384
                        }
                    },
                    "map-wall-12-rounded.img": {
                        frame: {
                            x: 4010,
                            y: 2046,
                            w: 32,
                            h: 384
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 32,
                            h: 384
                        },
                        sourceSize: {
                            w: 32,
                            h: 384
                        }
                    },
                    "map-wall-12.img": {
                        frame: {
                            x: 3834,
                            y: 2818,
                            w: 32,
                            h: 384
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 32,
                            h: 384
                        },
                        sourceSize: {
                            w: 32,
                            h: 384
                        }
                    },
                    "map-bunker-conch-ceiling-01.img": {
                        frame: {
                            x: 2726,
                            y: 3670,
                            w: 380,
                            h: 180
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 380,
                            h: 180
                        },
                        sourceSize: {
                            w: 380,
                            h: 180
                        }
                    },
                    "map-wall-shack-top.img": {
                        frame: {
                            x: 3110,
                            y: 3670,
                            w: 360,
                            h: 24
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 360,
                            h: 24
                        },
                        sourceSize: {
                            w: 360,
                            h: 24
                        }
                    },
                    "map-pipes-04.img": {
                        frame: {
                            x: 3974,
                            y: 2434,
                            w: 88,
                            h: 352
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 88,
                            h: 352
                        },
                        sourceSize: {
                            w: 88,
                            h: 352
                        }
                    },
                    "map-building-house-wall-05.img": {
                        frame: {
                            x: 3870,
                            y: 2818,
                            w: 32,
                            h: 352
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 32,
                            h: 352
                        },
                        sourceSize: {
                            w: 32,
                            h: 352
                        }
                    },
                    "map-wall-11-rounded.img": {
                        frame: {
                            x: 3906,
                            y: 2818,
                            w: 32,
                            h: 352
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 32,
                            h: 352
                        },
                        sourceSize: {
                            w: 32,
                            h: 352
                        }
                    },
                    "map-wall-glass-10.img": {
                        frame: {
                            x: 3942,
                            y: 2818,
                            w: 32,
                            h: 320
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 32,
                            h: 320
                        },
                        sourceSize: {
                            w: 32,
                            h: 320
                        }
                    },
                    "map-wall-10-rounded.img": {
                        frame: {
                            x: 3978,
                            y: 2818,
                            w: 32,
                            h: 320
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 32,
                            h: 320
                        },
                        sourceSize: {
                            w: 32,
                            h: 320
                        }
                    },
                    "map-table-02.img": {
                        frame: {
                            x: 2,
                            y: 3902,
                            w: 288,
                            h: 160
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 288,
                            h: 160
                        },
                        sourceSize: {
                            w: 288,
                            h: 160
                        }
                    },
                    "map-pipes-01.img": {
                        frame: {
                            x: 2590,
                            y: 1574,
                            w: 90,
                            h: 288
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 90,
                            h: 288
                        },
                        sourceSize: {
                            w: 90,
                            h: 288
                        }
                    },
                    "map-wall-09-rounded.img": {
                        frame: {
                            x: 4014,
                            y: 2818,
                            w: 32,
                            h: 288
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 32,
                            h: 288
                        },
                        sourceSize: {
                            w: 32,
                            h: 288
                        }
                    },
                    "map-building-house-wall-04.img": {
                        frame: {
                            x: 2684,
                            y: 1574,
                            w: 32,
                            h: 288
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 32,
                            h: 288
                        },
                        sourceSize: {
                            w: 32,
                            h: 288
                        }
                    },
                    "part-shell-05.img": {
                        frame: {
                            x: 2590,
                            y: 1866,
                            w: 63,
                            h: 260
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 63,
                            h: 260
                        },
                        sourceSize: {
                            w: 63,
                            h: 260
                        }
                    },
                    "map-sandbags-01.img": {
                        frame: {
                            x: 3110,
                            y: 3698,
                            w: 256,
                            h: 148
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 256,
                            h: 148
                        },
                        sourceSize: {
                            w: 256,
                            h: 148
                        }
                    },
                    "ping-map-coming.img": {
                        frame: {
                            x: 2590,
                            y: 2270,
                            w: 128,
                            h: 256
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 256
                        },
                        sourceSize: {
                            w: 128,
                            h: 256
                        }
                    },
                    "map-wall-08-rounded.img": {
                        frame: {
                            x: 2657,
                            y: 1866,
                            w: 32,
                            h: 256
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 32,
                            h: 256
                        },
                        sourceSize: {
                            w: 32,
                            h: 256
                        }
                    },
                    "map-building-house-wall-03.img": {
                        frame: {
                            x: 2590,
                            y: 2530,
                            w: 32,
                            h: 256
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 32,
                            h: 256
                        },
                        sourceSize: {
                            w: 32,
                            h: 256
                        }
                    },
                    "map-wall-shack-right.img": {
                        frame: {
                            x: 4046,
                            y: 1114,
                            w: 24,
                            h: 242
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 24,
                            h: 242
                        },
                        sourceSize: {
                            w: 24,
                            h: 242
                        }
                    },
                    "map-wall-shack-bot.img": {
                        frame: {
                            x: 3474,
                            y: 3670,
                            w: 242,
                            h: 24
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 242,
                            h: 24
                        },
                        sourceSize: {
                            w: 242,
                            h: 24
                        }
                    },
                    "map-door-02.img": {
                        frame: {
                            x: 2626,
                            y: 2530,
                            w: 80,
                            h: 224
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 80,
                            h: 224
                        },
                        sourceSize: {
                            w: 80,
                            h: 224
                        }
                    },
                    "map-bookshelf-02.img": {
                        frame: {
                            x: 3834,
                            y: 3206,
                            w: 224,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 224,
                            h: 64
                        },
                        sourceSize: {
                            w: 224,
                            h: 64
                        }
                    },
                    "map-bookshelf-01.img": {
                        frame: {
                            x: 3370,
                            y: 3698,
                            w: 224,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 224,
                            h: 64
                        },
                        sourceSize: {
                            w: 224,
                            h: 64
                        }
                    },
                    "map-wall-07-rounded.img": {
                        frame: {
                            x: 2506,
                            y: 3466,
                            w: 32,
                            h: 224
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 32,
                            h: 224
                        },
                        sourceSize: {
                            w: 32,
                            h: 224
                        }
                    },
                    "map-wall-shack-left.img": {
                        frame: {
                            x: 4046,
                            y: 1566,
                            w: 24,
                            h: 222
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 24,
                            h: 222
                        },
                        sourceSize: {
                            w: 24,
                            h: 222
                        }
                    },
                    "map-crate-res-03.img": {
                        frame: {
                            x: 294,
                            y: 3902,
                            w: 216,
                            h: 156
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 216,
                            h: 156
                        },
                        sourceSize: {
                            w: 216,
                            h: 156
                        }
                    },
                    "map-wall-outhouse-top.img": {
                        frame: {
                            x: 3720,
                            y: 3670,
                            w: 204,
                            h: 24
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 204,
                            h: 24
                        },
                        sourceSize: {
                            w: 204,
                            h: 24
                        }
                    },
                    "map-wall-outhouse-side.img": {
                        frame: {
                            x: 4046,
                            y: 1360,
                            w: 24,
                            h: 198
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 24,
                            h: 198
                        },
                        sourceSize: {
                            w: 24,
                            h: 198
                        }
                    },
                    "map-wall-06-rounded.img": {
                        frame: {
                            x: 2542,
                            y: 3466,
                            w: 32,
                            h: 192
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 32,
                            h: 192
                        },
                        sourceSize: {
                            w: 32,
                            h: 192
                        }
                    },
                    "map-wall-06.img": {
                        frame: {
                            x: 2578,
                            y: 3466,
                            w: 32,
                            h: 192
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 32,
                            h: 192
                        },
                        sourceSize: {
                            w: 32,
                            h: 192
                        }
                    },
                    "part-shell-02.img": {
                        frame: {
                            x: 2614,
                            y: 3466,
                            w: 63,
                            h: 190
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 63,
                            h: 190
                        },
                        sourceSize: {
                            w: 63,
                            h: 190
                        }
                    },
                    "gun-long-01.img": {
                        frame: {
                            x: 2681,
                            y: 3466,
                            w: 32,
                            h: 188
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 32,
                            h: 188
                        },
                        sourceSize: {
                            w: 32,
                            h: 188
                        }
                    },
                    "map-crate-14.img": {
                        frame: {
                            x: 2406,
                            y: 3354,
                            w: 172,
                            h: 89
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 172,
                            h: 89
                        },
                        sourceSize: {
                            w: 172,
                            h: 89
                        }
                    },
                    "map-crate-06.img": {
                        frame: {
                            x: 2506,
                            y: 3694,
                            w: 164,
                            h: 100
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 164,
                            h: 100
                        },
                        sourceSize: {
                            w: 164,
                            h: 100
                        }
                    },
                    "part-shell-04.img": {
                        frame: {
                            x: 2590,
                            y: 2790,
                            w: 55,
                            h: 164
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 55,
                            h: 164
                        },
                        sourceSize: {
                            w: 55,
                            h: 164
                        }
                    },
                    "ping-part-circle-auto.img": {
                        frame: {
                            x: 3942,
                            y: 3142,
                            w: 28,
                            h: 28
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 28,
                            h: 28
                        },
                        sourceSize: {
                            w: 28,
                            h: 28
                        }
                    },
                    "map-table-01.img": {
                        frame: {
                            x: 678,
                            y: 3902,
                            w: 160,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 160,
                            h: 128
                        },
                        sourceSize: {
                            w: 160,
                            h: 128
                        }
                    },
                    "map-drawers-01.img": {
                        frame: {
                            x: 842,
                            y: 3902,
                            w: 160,
                            h: 90
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 160,
                            h: 90
                        },
                        sourceSize: {
                            w: 160,
                            h: 90
                        }
                    },
                    "map-drawers-02.img": {
                        frame: {
                            x: 1006,
                            y: 3902,
                            w: 160,
                            h: 90
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 160,
                            h: 90
                        },
                        sourceSize: {
                            w: 160,
                            h: 90
                        }
                    },
                    "map-deposit-box-02.img": {
                        frame: {
                            x: 3370,
                            y: 3766,
                            w: 160,
                            h: 74
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 160,
                            h: 74
                        },
                        sourceSize: {
                            w: 160,
                            h: 74
                        }
                    },
                    "map-deposit-box-01.img": {
                        frame: {
                            x: 3534,
                            y: 3766,
                            w: 160,
                            h: 74
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 160,
                            h: 74
                        },
                        sourceSize: {
                            w: 160,
                            h: 74
                        }
                    },
                    "part-airdrop-02.img": {
                        frame: {
                            x: 2649,
                            y: 2790,
                            w: 38,
                            h: 160
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 38,
                            h: 160
                        },
                        sourceSize: {
                            w: 38,
                            h: 160
                        }
                    },
                    "map-door-slot-01.img": {
                        frame: {
                            x: 2590,
                            y: 2130,
                            w: 38,
                            h: 134
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 38,
                            h: 134
                        },
                        sourceSize: {
                            w: 38,
                            h: 134
                        }
                    },
                    "part-shell-01.img": {
                        frame: {
                            x: 2632,
                            y: 2130,
                            w: 56,
                            h: 133
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 56,
                            h: 133
                        },
                        sourceSize: {
                            w: 56,
                            h: 133
                        }
                    },
                    "map-door-01.img": {
                        frame: {
                            x: 4046,
                            y: 1792,
                            w: 24,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 24,
                            h: 128
                        },
                        sourceSize: {
                            w: 24,
                            h: 128
                        }
                    },
                    "melee-battleaxe.img": {
                        frame: {
                            x: 3698,
                            y: 3766,
                            w: 108,
                            h: 72
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 108,
                            h: 72
                        },
                        sourceSize: {
                            w: 108,
                            h: 72
                        }
                    },
                    "gun-short-01.img": {
                        frame: {
                            x: 2674,
                            y: 3694,
                            w: 32,
                            h: 100
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 32,
                            h: 100
                        },
                        sourceSize: {
                            w: 32,
                            h: 100
                        }
                    },
                    "map-drawers-res.img": {
                        frame: {
                            x: 3598,
                            y: 3698,
                            w: 96,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 96,
                            h: 64
                        },
                        sourceSize: {
                            w: 96,
                            h: 64
                        }
                    },
                    "map-locker-02.img": {
                        frame: {
                            x: 3698,
                            y: 3698,
                            w: 96,
                            h: 50
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 96,
                            h: 50
                        },
                        sourceSize: {
                            w: 96,
                            h: 50
                        }
                    },
                    "map-locker-01.img": {
                        frame: {
                            x: 3798,
                            y: 3698,
                            w: 96,
                            h: 50
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 96,
                            h: 50
                        },
                        sourceSize: {
                            w: 96,
                            h: 50
                        }
                    },
                    "map-stand-01.img": {
                        frame: {
                            x: 1170,
                            y: 3902,
                            w: 80,
                            h: 90
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 80,
                            h: 90
                        },
                        sourceSize: {
                            w: 80,
                            h: 90
                        }
                    },
                    "map-barrel-04.img": {
                        frame: {
                            x: 3898,
                            y: 3698,
                            w: 89,
                            h: 35
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 89,
                            h: 35
                        },
                        sourceSize: {
                            w: 89,
                            h: 35
                        }
                    },
                    "map-barrel-03.img": {
                        frame: {
                            x: 3810,
                            y: 3766,
                            w: 89,
                            h: 35
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 89,
                            h: 35
                        },
                        sourceSize: {
                            w: 89,
                            h: 35
                        }
                    },
                    "map-bunker-vent-01.img": {
                        frame: {
                            x: 2582,
                            y: 3354,
                            w: 84,
                            h: 84
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 84,
                            h: 84
                        },
                        sourceSize: {
                            w: 84,
                            h: 84
                        }
                    },
                    "map-fire-ext-01.img": {
                        frame: {
                            x: 1526,
                            y: 3822,
                            w: 84,
                            h: 70
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 84,
                            h: 70
                        },
                        sourceSize: {
                            w: 84,
                            h: 70
                        }
                    },
                    "map-fire-ext-res.img": {
                        frame: {
                            x: 1614,
                            y: 3822,
                            w: 84,
                            h: 70
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 84,
                            h: 70
                        },
                        sourceSize: {
                            w: 84,
                            h: 70
                        }
                    },
                    "gun-dp28-top-01.img": {
                        frame: {
                            x: 1254,
                            y: 3902,
                            w: 80,
                            h: 80
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 80,
                            h: 80
                        },
                        sourceSize: {
                            w: 80,
                            h: 80
                        }
                    },
                    "gun-m249-bot-01.img": {
                        frame: {
                            x: 2726,
                            y: 3854,
                            w: 76,
                            h: 44
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 76,
                            h: 44
                        },
                        sourceSize: {
                            w: 76,
                            h: 44
                        }
                    },
                    "player-map-inner.img": {
                        frame: {
                            x: 1338,
                            y: 3902,
                            w: 72,
                            h: 72
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 72,
                            h: 72
                        },
                        sourceSize: {
                            w: 72,
                            h: 72
                        }
                    },
                    "cursor-03.img": {
                        frame: {
                            x: 1414,
                            y: 3902,
                            w: 72,
                            h: 72
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 72,
                            h: 72
                        },
                        sourceSize: {
                            w: 72,
                            h: 72
                        }
                    },
                    "checked.img": {
                        frame: {
                            x: 1490,
                            y: 3902,
                            w: 72,
                            h: 72
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 72,
                            h: 72
                        },
                        sourceSize: {
                            w: 72,
                            h: 72
                        }
                    },
                    "part-smoke-01.img": {
                        frame: {
                            x: 1566,
                            y: 3902,
                            w: 72,
                            h: 72
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 72,
                            h: 72
                        },
                        sourceSize: {
                            w: 72,
                            h: 72
                        }
                    },
                    "part-snow-01.img": {
                        frame: {
                            x: 1642,
                            y: 3902,
                            w: 72,
                            h: 72
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 72,
                            h: 72
                        },
                        sourceSize: {
                            w: 72,
                            h: 72
                        }
                    },
                    "map-power-box-01.img": {
                        frame: {
                            x: 1718,
                            y: 3902,
                            w: 72,
                            h: 72
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 72,
                            h: 72
                        },
                        sourceSize: {
                            w: 72,
                            h: 72
                        }
                    },
                    "cursor-01.img": {
                        frame: {
                            x: 1794,
                            y: 3902,
                            w: 72,
                            h: 72
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 72,
                            h: 72
                        },
                        sourceSize: {
                            w: 72,
                            h: 72
                        }
                    },
                    "close.img": {
                        frame: {
                            x: 1870,
                            y: 3902,
                            w: 72,
                            h: 72
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 72,
                            h: 72
                        },
                        sourceSize: {
                            w: 72,
                            h: 72
                        }
                    },
                    "player-map-outer.img": {
                        frame: {
                            x: 1946,
                            y: 3902,
                            w: 72,
                            h: 72
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 72,
                            h: 72
                        },
                        sourceSize: {
                            w: 72,
                            h: 72
                        }
                    },
                    "timer-background.img": {
                        frame: {
                            x: 2022,
                            y: 3902,
                            w: 72,
                            h: 72
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 72,
                            h: 72
                        },
                        sourceSize: {
                            w: 72,
                            h: 72
                        }
                    },
                    "map-wall-outhouse-bot.img": {
                        frame: {
                            x: 3974,
                            y: 2790,
                            w: 72,
                            h: 24
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 72,
                            h: 24
                        },
                        sourceSize: {
                            w: 72,
                            h: 24
                        }
                    },
                    "skull-team.img": {
                        frame: {
                            x: 1702,
                            y: 3822,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "map-column-01.img": {
                        frame: {
                            x: 1770,
                            y: 3822,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "unlock.img": {
                        frame: {
                            x: 1838,
                            y: 3822,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "crown.img": {
                        frame: {
                            x: 1906,
                            y: 3822,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "dc.img": {
                        frame: {
                            x: 1974,
                            y: 3822,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "down.img": {
                        frame: {
                            x: 2042,
                            y: 3822,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "skull-team-outlined.img": {
                        frame: {
                            x: 2110,
                            y: 3822,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "lock.img": {
                        frame: {
                            x: 2178,
                            y: 3822,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "globe.img": {
                        frame: {
                            x: 2246,
                            y: 3822,
                            w: 64,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 64
                        },
                        sourceSize: {
                            w: 64,
                            h: 64
                        }
                    },
                    "map-wall-02-rounded.img": {
                        frame: {
                            x: 2670,
                            y: 3354,
                            w: 32,
                            h: 64
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 32,
                            h: 64
                        },
                        sourceSize: {
                            w: 32,
                            h: 64
                        }
                    },
                    "gun-qbb97-bot-01.img": {
                        frame: {
                            x: 3991,
                            y: 3698,
                            w: 64,
                            h: 32
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 64,
                            h: 32
                        },
                        sourceSize: {
                            w: 64,
                            h: 32
                        }
                    },
                    "map-tree-res.img": {
                        frame: {
                            x: 4010,
                            y: 1986,
                            w: 48,
                            h: 48
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 48,
                            h: 48
                        },
                        sourceSize: {
                            w: 48,
                            h: 48
                        }
                    },
                    "player-feet-01.img": {
                        frame: {
                            x: 2806,
                            y: 3854,
                            w: 38,
                            h: 38
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 38,
                            h: 38
                        },
                        sourceSize: {
                            w: 38,
                            h: 38
                        }
                    },
                    "player-hands-01.img": {
                        frame: {
                            x: 2848,
                            y: 3854,
                            w: 38,
                            h: 38
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 38,
                            h: 38
                        },
                        sourceSize: {
                            w: 38,
                            h: 38
                        }
                    },
                    "player-feet-02.img": {
                        frame: {
                            x: 2890,
                            y: 3854,
                            w: 38,
                            h: 38
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 38,
                            h: 38
                        },
                        sourceSize: {
                            w: 38,
                            h: 38
                        }
                    },
                    "map-wall-01-rounded.img": {
                        frame: {
                            x: 3903,
                            y: 3766,
                            w: 32,
                            h: 32
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 32,
                            h: 32
                        },
                        sourceSize: {
                            w: 32,
                            h: 32
                        }
                    },
                    "ping-part-circle-auto-highlight.img": {
                        frame: {
                            x: 3939,
                            y: 3766,
                            w: 29,
                            h: 29
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 29,
                            h: 29
                        },
                        sourceSize: {
                            w: 29,
                            h: 29
                        }
                    },
                    "ping-part-circle-auto-outer.img": {
                        frame: {
                            x: 4014,
                            y: 3110,
                            w: 28,
                            h: 28
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 28,
                            h: 28
                        },
                        sourceSize: {
                            w: 28,
                            h: 28
                        }
                    },
                    "map-stairs-broken-01.img": {
                        frame: {
                            x: 514,
                            y: 3902,
                            w: 160,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 160,
                            h: 128
                        },
                        sourceSize: {
                            w: 160,
                            h: 128
                        }
                    }
                }
            }, {
                meta: {
                    image: "imgs-bc53aaf1.png",
                    size: {
                        w: 4096,
                        h: 4096
                    },
                    scale: 1
                },
                frames: {
                    "map-building-warehouse-floor-01.img": {
                        frame: {
                            x: 2054,
                            y: 2,
                            w: 2e3,
                            h: 800
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 2e3,
                            h: 800
                        },
                        sourceSize: {
                            w: 2e3,
                            h: 800
                        }
                    },
                    "map-building-mansion-floor.img": {
                        frame: {
                            x: 2,
                            y: 2,
                            w: 2048,
                            h: 1728
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 2048,
                            h: 1728
                        },
                        sourceSize: {
                            w: 2048,
                            h: 1728
                        }
                    },
                    "map-building-warehouse-floor-02.img": {
                        frame: {
                            x: 2054,
                            y: 806,
                            w: 1760,
                            h: 800
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 1760,
                            h: 800
                        },
                        sourceSize: {
                            w: 1760,
                            h: 800
                        }
                    },
                    "map-bunker-hydra-compartment-floor-02.img": {
                        frame: {
                            x: 2,
                            y: 1734,
                            w: 1704,
                            h: 1448
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 1704,
                            h: 1448
                        },
                        sourceSize: {
                            w: 1704,
                            h: 1448
                        }
                    },
                    "map-building-bank-ceiling.img": {
                        frame: {
                            x: 1710,
                            y: 1734,
                            w: 1696,
                            h: 1248
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 1696,
                            h: 1248
                        },
                        sourceSize: {
                            w: 1696,
                            h: 1248
                        }
                    },
                    "map-bunker-storm-chamber-ceiling-01.img": {
                        frame: {
                            x: 2,
                            y: 3186,
                            w: 1184,
                            h: 832
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 1184,
                            h: 832
                        },
                        sourceSize: {
                            w: 1184,
                            h: 832
                        }
                    },
                    "map-bunker-hydra-ceiling-01.img": {
                        frame: {
                            x: 1190,
                            y: 3186,
                            w: 960,
                            h: 672
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 960,
                            h: 672
                        },
                        sourceSize: {
                            w: 960,
                            h: 672
                        }
                    },
                    "map-bunker-egg-chamber-ceiling-01.img": {
                        frame: {
                            x: 3410,
                            y: 1734,
                            w: 640,
                            h: 896
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 640,
                            h: 896
                        },
                        sourceSize: {
                            w: 640,
                            h: 896
                        }
                    },
                    "map-bunker-hydra-floor-01.img": {
                        frame: {
                            x: 2154,
                            y: 3186,
                            w: 864,
                            h: 608
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 864,
                            h: 608
                        },
                        sourceSize: {
                            w: 864,
                            h: 608
                        }
                    },
                    "map-building-warehouse-ceiling-01.img": {
                        frame: {
                            x: 3022,
                            y: 3186,
                            w: 832,
                            h: 432
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 832,
                            h: 432
                        },
                        sourceSize: {
                            w: 832,
                            h: 432
                        }
                    },
                    "map-bunker-conch-floor-01.img": {
                        frame: {
                            x: 3410,
                            y: 2634,
                            w: 600,
                            h: 256
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 600,
                            h: 256
                        },
                        sourceSize: {
                            w: 600,
                            h: 256
                        }
                    },
                    "map-building-container-ceiling-01.img": {
                        frame: {
                            x: 3818,
                            y: 806,
                            w: 180,
                            h: 536
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 180,
                            h: 536
                        },
                        sourceSize: {
                            w: 180,
                            h: 536
                        }
                    },
                    "map-pipes-02.img": {
                        frame: {
                            x: 1710,
                            y: 2986,
                            w: 238,
                            h: 172
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 238,
                            h: 172
                        },
                        sourceSize: {
                            w: 238,
                            h: 172
                        }
                    },
                    "pad.img": {
                        frame: {
                            x: 3818,
                            y: 1346,
                            w: 208,
                            h: 208
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 208,
                            h: 208
                        },
                        sourceSize: {
                            w: 208,
                            h: 208
                        }
                    },
                    "map-hedgehog-01.img": {
                        frame: {
                            x: 3858,
                            y: 3186,
                            w: 192,
                            h: 192
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 192,
                            h: 192
                        },
                        sourceSize: {
                            w: 192,
                            h: 192
                        }
                    },
                    "part-shell-03.img": {
                        frame: {
                            x: 3858,
                            y: 3382,
                            w: 63,
                            h: 180
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 63,
                            h: 180
                        },
                        sourceSize: {
                            w: 63,
                            h: 180
                        }
                    },
                    "player-wading-01.img": {
                        frame: {
                            x: 1952,
                            y: 2986,
                            w: 172,
                            h: 172
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 172,
                            h: 172
                        },
                        sourceSize: {
                            w: 172,
                            h: 172
                        }
                    },
                    "map-crate-04.img": {
                        frame: {
                            x: 2128,
                            y: 2986,
                            w: 164,
                            h: 164
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 164,
                            h: 164
                        },
                        sourceSize: {
                            w: 164,
                            h: 164
                        }
                    },
                    "proj-smoke-pin.img": {
                        frame: {
                            x: 2296,
                            y: 2986,
                            w: 160,
                            h: 160
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 160,
                            h: 160
                        },
                        sourceSize: {
                            w: 160,
                            h: 160
                        }
                    },
                    "proj-smoke-nopin.img": {
                        frame: {
                            x: 2460,
                            y: 2986,
                            w: 160,
                            h: 160
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 160,
                            h: 160
                        },
                        sourceSize: {
                            w: 160,
                            h: 160
                        }
                    },
                    "proj-smoke-nopin-nolever.img": {
                        frame: {
                            x: 2624,
                            y: 2986,
                            w: 160,
                            h: 160
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 160,
                            h: 160
                        },
                        sourceSize: {
                            w: 160,
                            h: 160
                        }
                    },
                    "map-crate-13.img": {
                        frame: {
                            x: 2788,
                            y: 2986,
                            w: 160,
                            h: 160
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 160,
                            h: 160
                        },
                        sourceSize: {
                            w: 160,
                            h: 160
                        }
                    },
                    "map-crate-12.img": {
                        frame: {
                            x: 2952,
                            y: 2986,
                            w: 160,
                            h: 160
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 160,
                            h: 160
                        },
                        sourceSize: {
                            w: 160,
                            h: 160
                        }
                    },
                    "map-wall-05-rounded.img": {
                        frame: {
                            x: 4002,
                            y: 806,
                            w: 32,
                            h: 160
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 32,
                            h: 160
                        },
                        sourceSize: {
                            w: 32,
                            h: 160
                        }
                    },
                    "map-wall-05.img": {
                        frame: {
                            x: 4002,
                            y: 970,
                            w: 32,
                            h: 160
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 32,
                            h: 160
                        },
                        sourceSize: {
                            w: 32,
                            h: 160
                        }
                    },
                    "map-bush-03.img": {
                        frame: {
                            x: 3116,
                            y: 2986,
                            w: 152,
                            h: 152
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 152,
                            h: 152
                        },
                        sourceSize: {
                            w: 152,
                            h: 152
                        }
                    },
                    "map-crate-10.img": {
                        frame: {
                            x: 3272,
                            y: 2986,
                            w: 148,
                            h: 148
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 148,
                            h: 148
                        },
                        sourceSize: {
                            w: 148,
                            h: 148
                        }
                    },
                    "player-armor-base-01.img": {
                        frame: {
                            x: 3424,
                            y: 2986,
                            w: 148,
                            h: 148
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 148,
                            h: 148
                        },
                        sourceSize: {
                            w: 148,
                            h: 148
                        }
                    },
                    "player-circle-base-01.img": {
                        frame: {
                            x: 3576,
                            y: 2986,
                            w: 148,
                            h: 148
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 148,
                            h: 148
                        },
                        sourceSize: {
                            w: 148,
                            h: 148
                        }
                    },
                    "map-crate-11.img": {
                        frame: {
                            x: 3728,
                            y: 2986,
                            w: 148,
                            h: 148
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 148,
                            h: 148
                        },
                        sourceSize: {
                            w: 148,
                            h: 148
                        }
                    },
                    "loot-circle-outer-01.img": {
                        frame: {
                            x: 3880,
                            y: 2986,
                            w: 146,
                            h: 146
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 146,
                            h: 146
                        },
                        sourceSize: {
                            w: 146,
                            h: 146
                        }
                    },
                    "map-stone-01.img": {
                        frame: {
                            x: 3022,
                            y: 3622,
                            w: 144,
                            h: 144
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 144,
                            h: 144
                        },
                        sourceSize: {
                            w: 144,
                            h: 144
                        }
                    },
                    "part-woodchip-01.img": {
                        frame: {
                            x: 3170,
                            y: 3622,
                            w: 144,
                            h: 144
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 144,
                            h: 144
                        },
                        sourceSize: {
                            w: 144,
                            h: 144
                        }
                    },
                    "part-splat-03.img": {
                        frame: {
                            x: 3318,
                            y: 3622,
                            w: 144,
                            h: 144
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 144,
                            h: 144
                        },
                        sourceSize: {
                            w: 144,
                            h: 144
                        }
                    },
                    "part-splat-02.img": {
                        frame: {
                            x: 3466,
                            y: 3622,
                            w: 144,
                            h: 144
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 144,
                            h: 144
                        },
                        sourceSize: {
                            w: 144,
                            h: 144
                        }
                    },
                    "part-splat-01.img": {
                        frame: {
                            x: 3614,
                            y: 3622,
                            w: 144,
                            h: 144
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 144,
                            h: 144
                        },
                        sourceSize: {
                            w: 144,
                            h: 144
                        }
                    },
                    "map-vat-res.img": {
                        frame: {
                            x: 3762,
                            y: 3622,
                            w: 144,
                            h: 144
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 144,
                            h: 144
                        },
                        sourceSize: {
                            w: 144,
                            h: 144
                        }
                    },
                    "map-barrel-res-03.img": {
                        frame: {
                            x: 3910,
                            y: 3622,
                            w: 144,
                            h: 144
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 144,
                            h: 144
                        },
                        sourceSize: {
                            w: 144,
                            h: 144
                        }
                    },
                    "map-vat-01.img": {
                        frame: {
                            x: 1190,
                            y: 3862,
                            w: 144,
                            h: 144
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 144,
                            h: 144
                        },
                        sourceSize: {
                            w: 144,
                            h: 144
                        }
                    },
                    "map-building-house-wall-01.img": {
                        frame: {
                            x: 4058,
                            y: 566,
                            w: 32,
                            h: 96
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 32,
                            h: 96
                        },
                        sourceSize: {
                            w: 32,
                            h: 96
                        }
                    },
                    "part-plate-01.img": {
                        frame: {
                            x: 1486,
                            y: 3862,
                            w: 144,
                            h: 144
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 144,
                            h: 144
                        },
                        sourceSize: {
                            w: 144,
                            h: 144
                        }
                    },
                    "map-bush-res-02.img": {
                        frame: {
                            x: 1634,
                            y: 3862,
                            w: 144,
                            h: 144
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 144,
                            h: 144
                        },
                        sourceSize: {
                            w: 144,
                            h: 144
                        }
                    },
                    "map-bush-res-01.img": {
                        frame: {
                            x: 1782,
                            y: 3862,
                            w: 144,
                            h: 144
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 144,
                            h: 144
                        },
                        sourceSize: {
                            w: 144,
                            h: 144
                        }
                    },
                    "map-pot-res-01.img": {
                        frame: {
                            x: 1930,
                            y: 3862,
                            w: 144,
                            h: 144
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 144,
                            h: 144
                        },
                        sourceSize: {
                            w: 144,
                            h: 144
                        }
                    },
                    "map-bush-01.img": {
                        frame: {
                            x: 2078,
                            y: 3862,
                            w: 144,
                            h: 144
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 144,
                            h: 144
                        },
                        sourceSize: {
                            w: 144,
                            h: 144
                        }
                    },
                    "part-plank-01.img": {
                        frame: {
                            x: 2226,
                            y: 3862,
                            w: 144,
                            h: 144
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 144,
                            h: 144
                        },
                        sourceSize: {
                            w: 144,
                            h: 144
                        }
                    },
                    "part-panel-01.img": {
                        frame: {
                            x: 2374,
                            y: 3862,
                            w: 144,
                            h: 144
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 144,
                            h: 144
                        },
                        sourceSize: {
                            w: 144,
                            h: 144
                        }
                    },
                    "map-barrel-01.img": {
                        frame: {
                            x: 2522,
                            y: 3862,
                            w: 144,
                            h: 144
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 144,
                            h: 144
                        },
                        sourceSize: {
                            w: 144,
                            h: 144
                        }
                    },
                    "map-crate-res-02.img": {
                        frame: {
                            x: 2670,
                            y: 3862,
                            w: 144,
                            h: 144
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 144,
                            h: 144
                        },
                        sourceSize: {
                            w: 144,
                            h: 144
                        }
                    },
                    "map-crate-res-01.img": {
                        frame: {
                            x: 2818,
                            y: 3862,
                            w: 144,
                            h: 144
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 144,
                            h: 144
                        },
                        sourceSize: {
                            w: 144,
                            h: 144
                        }
                    },
                    "map-barrel-02.img": {
                        frame: {
                            x: 2966,
                            y: 3862,
                            w: 144,
                            h: 144
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 144,
                            h: 144
                        },
                        sourceSize: {
                            w: 144,
                            h: 144
                        }
                    },
                    "ping-border.img": {
                        frame: {
                            x: 3114,
                            y: 3862,
                            w: 144,
                            h: 144
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 144,
                            h: 144
                        },
                        sourceSize: {
                            w: 144,
                            h: 144
                        }
                    },
                    "map-bollard-01.img": {
                        frame: {
                            x: 3262,
                            y: 3862,
                            w: 144,
                            h: 144
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 144,
                            h: 144
                        },
                        sourceSize: {
                            w: 144,
                            h: 144
                        }
                    },
                    "part-book-01.img": {
                        frame: {
                            x: 3410,
                            y: 3862,
                            w: 144,
                            h: 144
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 144,
                            h: 144
                        },
                        sourceSize: {
                            w: 144,
                            h: 144
                        }
                    },
                    "map-table-res.img": {
                        frame: {
                            x: 3558,
                            y: 3862,
                            w: 144,
                            h: 144
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 144,
                            h: 144
                        },
                        sourceSize: {
                            w: 144,
                            h: 144
                        }
                    },
                    "map-crate-09.img": {
                        frame: {
                            x: 3706,
                            y: 3862,
                            w: 144,
                            h: 144
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 144,
                            h: 144
                        },
                        sourceSize: {
                            w: 144,
                            h: 144
                        }
                    },
                    "map-crate-08.img": {
                        frame: {
                            x: 3854,
                            y: 3862,
                            w: 144,
                            h: 144
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 144,
                            h: 144
                        },
                        sourceSize: {
                            w: 144,
                            h: 144
                        }
                    },
                    "map-control-panel-01.img": {
                        frame: {
                            x: 2054,
                            y: 1610,
                            w: 144,
                            h: 110
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 144,
                            h: 110
                        },
                        sourceSize: {
                            w: 144,
                            h: 110
                        }
                    },
                    "map-control-panel-02.img": {
                        frame: {
                            x: 2202,
                            y: 1610,
                            w: 144,
                            h: 110
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 144,
                            h: 110
                        },
                        sourceSize: {
                            w: 144,
                            h: 110
                        }
                    },
                    "map-case-deagle-02.img": {
                        frame: {
                            x: 2350,
                            y: 1610,
                            w: 144,
                            h: 108
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 144,
                            h: 108
                        },
                        sourceSize: {
                            w: 144,
                            h: 108
                        }
                    },
                    "map-case-deagle-01.img": {
                        frame: {
                            x: 2498,
                            y: 1610,
                            w: 144,
                            h: 108
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 144,
                            h: 108
                        },
                        sourceSize: {
                            w: 144,
                            h: 108
                        }
                    },
                    "map-chest-02.img": {
                        frame: {
                            x: 2646,
                            y: 1610,
                            w: 140,
                            h: 102
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 140,
                            h: 102
                        },
                        sourceSize: {
                            w: 140,
                            h: 102
                        }
                    },
                    "map-chest-01.img": {
                        frame: {
                            x: 2790,
                            y: 1610,
                            w: 140,
                            h: 102
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 140,
                            h: 102
                        },
                        sourceSize: {
                            w: 140,
                            h: 102
                        }
                    },
                    "map-case-hatchet-01.img": {
                        frame: {
                            x: 2934,
                            y: 1610,
                            w: 140,
                            h: 102
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 140,
                            h: 102
                        },
                        sourceSize: {
                            w: 140,
                            h: 102
                        }
                    },
                    "ping-part-eighth-highlight.img": {
                        frame: {
                            x: 3925,
                            y: 3382,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "map-wall-04.img": {
                        frame: {
                            x: 4002,
                            y: 1134,
                            w: 32,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 32,
                            h: 128
                        },
                        sourceSize: {
                            w: 32,
                            h: 128
                        }
                    },
                    "map-wall-04-rounded.img": {
                        frame: {
                            x: 4014,
                            y: 2634,
                            w: 32,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 32,
                            h: 128
                        },
                        sourceSize: {
                            w: 32,
                            h: 128
                        }
                    },
                    "map-building-house-wall-02.img": {
                        frame: {
                            x: 4002,
                            y: 3862,
                            w: 32,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 32,
                            h: 128
                        },
                        sourceSize: {
                            w: 32,
                            h: 128
                        }
                    },
                    "gun-med-01.img": {
                        frame: {
                            x: 4058,
                            y: 2,
                            w: 32,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 32,
                            h: 128
                        },
                        sourceSize: {
                            w: 32,
                            h: 128
                        }
                    },
                    "map-door-03.img": {
                        frame: {
                            x: 4058,
                            y: 134,
                            w: 32,
                            h: 112
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 32,
                            h: 112
                        },
                        sourceSize: {
                            w: 32,
                            h: 112
                        }
                    },
                    "map-refrigerator-01.img": {
                        frame: {
                            x: 3078,
                            y: 1610,
                            w: 108,
                            h: 94
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 108,
                            h: 94
                        },
                        sourceSize: {
                            w: 108,
                            h: 94
                        }
                    },
                    "map-vending-soda-01.img": {
                        frame: {
                            x: 3190,
                            y: 1610,
                            w: 108,
                            h: 94
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 108,
                            h: 94
                        },
                        sourceSize: {
                            w: 108,
                            h: 94
                        }
                    },
                    "map-vending-res.img": {
                        frame: {
                            x: 3302,
                            y: 1610,
                            w: 108,
                            h: 94
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 108,
                            h: 94
                        },
                        sourceSize: {
                            w: 108,
                            h: 94
                        }
                    },
                    "map-oven-01.img": {
                        frame: {
                            x: 3414,
                            y: 1610,
                            w: 108,
                            h: 94
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 108,
                            h: 94
                        },
                        sourceSize: {
                            w: 108,
                            h: 94
                        }
                    },
                    "map-building-house-window-res-01.img": {
                        frame: {
                            x: 4058,
                            y: 250,
                            w: 32,
                            h: 104
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 32,
                            h: 104
                        },
                        sourceSize: {
                            w: 32,
                            h: 104
                        }
                    },
                    "map-building-house-window-01.img": {
                        frame: {
                            x: 4058,
                            y: 358,
                            w: 32,
                            h: 104
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 32,
                            h: 104
                        },
                        sourceSize: {
                            w: 32,
                            h: 104
                        }
                    },
                    "map-control-panel-03.img": {
                        frame: {
                            x: 3526,
                            y: 1610,
                            w: 96,
                            h: 94
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 96,
                            h: 94
                        },
                        sourceSize: {
                            w: 96,
                            h: 94
                        }
                    },
                    "map-wall-03-rounded.img": {
                        frame: {
                            x: 4058,
                            y: 466,
                            w: 32,
                            h: 96
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 32,
                            h: 96
                        },
                        sourceSize: {
                            w: 32,
                            h: 96
                        }
                    },
                    "part-pot-01.img": {
                        frame: {
                            x: 1338,
                            y: 3862,
                            w: 144,
                            h: 144
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 144,
                            h: 144
                        },
                        sourceSize: {
                            w: 144,
                            h: 144
                        }
                    }
                }
            }, {
                meta: {
                    image: "imgs-1031af99.png",
                    size: {
                        w: 4096,
                        h: 4096
                    },
                    scale: 1
                },
                frames: {
                    "map-bunker-hydra-compartment-ceiling-02.img": {
                        frame: {
                            x: 2,
                            y: 1254,
                            w: 1632,
                            h: 1440
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 1632,
                            h: 1440
                        },
                        sourceSize: {
                            w: 1632,
                            h: 1440
                        }
                    },
                    "map-building-bank-floor.img": {
                        frame: {
                            x: 2,
                            y: 2,
                            w: 1696,
                            h: 1248
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 1696,
                            h: 1248
                        },
                        sourceSize: {
                            w: 1696,
                            h: 1248
                        }
                    },
                    "map-building-barn-ceiling.img": {
                        frame: {
                            x: 1702,
                            y: 2,
                            w: 1600,
                            h: 1152
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 1600,
                            h: 1152
                        },
                        sourceSize: {
                            w: 1600,
                            h: 1152
                        }
                    },
                    "map-building-barn-floor-01.img": {
                        frame: {
                            x: 1702,
                            y: 1158,
                            w: 1600,
                            h: 1088
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 1600,
                            h: 1088
                        },
                        sourceSize: {
                            w: 1600,
                            h: 1088
                        }
                    },
                    "map-bunker-conch-compartment-ceiling-01.img": {
                        frame: {
                            x: 2,
                            y: 2698,
                            w: 976,
                            h: 1120
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 976,
                            h: 1120
                        },
                        sourceSize: {
                            w: 976,
                            h: 1120
                        }
                    },
                    "map-bunker-egg-chamber-floor-01.img": {
                        frame: {
                            x: 982,
                            y: 2698,
                            w: 840,
                            h: 1092
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 840,
                            h: 1092
                        },
                        sourceSize: {
                            w: 840,
                            h: 1092
                        }
                    },
                    "map-building-mansion-cellar-01.img": {
                        frame: {
                            x: 1826,
                            y: 2698,
                            w: 1088,
                            h: 928
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 1088,
                            h: 928
                        },
                        sourceSize: {
                            w: 1088,
                            h: 928
                        }
                    },
                    "map-bunker-hydra-chamber-floor-03.img": {
                        frame: {
                            x: 3306,
                            y: 2,
                            w: 704,
                            h: 832
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 704,
                            h: 832
                        },
                        sourceSize: {
                            w: 704,
                            h: 832
                        }
                    },
                    "map-bunker-hydra-chamber-floor-02.img": {
                        frame: {
                            x: 3306,
                            y: 838,
                            w: 392,
                            h: 744
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 392,
                            h: 744
                        },
                        sourceSize: {
                            w: 392,
                            h: 744
                        }
                    },
                    "map-bunker-hydra-compartment-ceiling-01.img": {
                        frame: {
                            x: 3306,
                            y: 1586,
                            w: 640,
                            h: 720
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 640,
                            h: 720
                        },
                        sourceSize: {
                            w: 640,
                            h: 720
                        }
                    },
                    "map-building-warehouse-ceiling-02.img": {
                        frame: {
                            x: 1702,
                            y: 2250,
                            w: 720,
                            h: 432
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 720,
                            h: 432
                        },
                        sourceSize: {
                            w: 720,
                            h: 432
                        }
                    },
                    "map-bunker-hydra-compartment-floor-01.img": {
                        frame: {
                            x: 3306,
                            y: 2310,
                            w: 704,
                            h: 640
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 704,
                            h: 640
                        },
                        sourceSize: {
                            w: 704,
                            h: 640
                        }
                    },
                    "map-bunker-hydra-compartment-floor-03.img": {
                        frame: {
                            x: 3306,
                            y: 2954,
                            w: 704,
                            h: 512
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 704,
                            h: 512
                        },
                        sourceSize: {
                            w: 704,
                            h: 512
                        }
                    },
                    "map-bunker-hydra-chamber-ceiling-02.img": {
                        frame: {
                            x: 2918,
                            y: 2698,
                            w: 384,
                            h: 700
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 384,
                            h: 700
                        },
                        sourceSize: {
                            w: 384,
                            h: 700
                        }
                    },
                    "map-pipes-03.img": {
                        frame: {
                            x: 3306,
                            y: 3470,
                            w: 684,
                            h: 236
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 684,
                            h: 236
                        },
                        sourceSize: {
                            w: 684,
                            h: 236
                        }
                    },
                    "map-building-container-ceiling-03.img": {
                        frame: {
                            x: 3702,
                            y: 838,
                            w: 180,
                            h: 536
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 180,
                            h: 536
                        },
                        sourceSize: {
                            w: 180,
                            h: 536
                        }
                    },
                    "map-shack-res-02.img": {
                        frame: {
                            x: 2426,
                            y: 2250,
                            w: 420,
                            h: 340
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 420,
                            h: 340
                        },
                        sourceSize: {
                            w: 420,
                            h: 340
                        }
                    },
                    "map-building-shack-floor-01.img": {
                        frame: {
                            x: 2850,
                            y: 2250,
                            w: 420,
                            h: 340
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 420,
                            h: 340
                        },
                        sourceSize: {
                            w: 420,
                            h: 340
                        }
                    },
                    "map-building-saferoom-floor.img": {
                        frame: {
                            x: 2918,
                            y: 3402,
                            w: 352,
                            h: 224
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 352,
                            h: 224
                        },
                        sourceSize: {
                            w: 352,
                            h: 224
                        }
                    },
                    "map-building-saferoom-ceiling.img": {
                        frame: {
                            x: 2,
                            y: 3822,
                            w: 352,
                            h: 224
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 352,
                            h: 224
                        },
                        sourceSize: {
                            w: 352,
                            h: 224
                        }
                    },
                    "map-vat-02.img": {
                        frame: {
                            x: 3702,
                            y: 1378,
                            w: 200,
                            h: 200
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 200,
                            h: 200
                        },
                        sourceSize: {
                            w: 200,
                            h: 200
                        }
                    },
                    "map-bunker-hydra-floor-04.img": {
                        frame: {
                            x: 358,
                            y: 3822,
                            w: 200,
                            h: 200
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 200,
                            h: 200
                        },
                        sourceSize: {
                            w: 200,
                            h: 200
                        }
                    },
                    "map-crate-07.img": {
                        frame: {
                            x: 1826,
                            y: 3630,
                            w: 144,
                            h: 144
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 144,
                            h: 144
                        },
                        sourceSize: {
                            w: 144,
                            h: 144
                        }
                    },
                    "dab-face.img": {
                        frame: {
                            x: 1974,
                            y: 3630,
                            w: 144,
                            h: 144
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 144,
                            h: 144
                        },
                        sourceSize: {
                            w: 144,
                            h: 144
                        }
                    },
                    "map-barrel-res-02.img": {
                        frame: {
                            x: 2122,
                            y: 3630,
                            w: 144,
                            h: 144
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 144,
                            h: 144
                        },
                        sourceSize: {
                            w: 144,
                            h: 144
                        }
                    },
                    "map-building-bank-window-res-01.img": {
                        frame: {
                            x: 2270,
                            y: 3630,
                            w: 144,
                            h: 144
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 144,
                            h: 144
                        },
                        sourceSize: {
                            w: 144,
                            h: 144
                        }
                    },
                    "map-crate-03.img": {
                        frame: {
                            x: 2418,
                            y: 3630,
                            w: 144,
                            h: 144
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 144,
                            h: 144
                        },
                        sourceSize: {
                            w: 144,
                            h: 144
                        }
                    },
                    "map-crate-02.img": {
                        frame: {
                            x: 2566,
                            y: 3630,
                            w: 144,
                            h: 144
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 144,
                            h: 144
                        },
                        sourceSize: {
                            w: 144,
                            h: 144
                        }
                    },
                    "map-crate-01.img": {
                        frame: {
                            x: 2714,
                            y: 3630,
                            w: 144,
                            h: 144
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 144,
                            h: 144
                        },
                        sourceSize: {
                            w: 144,
                            h: 144
                        }
                    },
                    "player-ripple-01.img": {
                        frame: {
                            x: 2862,
                            y: 3630,
                            w: 142,
                            h: 142
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 142,
                            h: 142
                        },
                        sourceSize: {
                            w: 142,
                            h: 142
                        }
                    },
                    "player-base-01.img": {
                        frame: {
                            x: 3008,
                            y: 3630,
                            w: 140,
                            h: 140
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 140,
                            h: 140
                        },
                        sourceSize: {
                            w: 140,
                            h: 140
                        }
                    },
                    "map-bunker-vent-02.img": {
                        frame: {
                            x: 3152,
                            y: 3630,
                            w: 136,
                            h: 136
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 136,
                            h: 136
                        },
                        sourceSize: {
                            w: 136,
                            h: 136
                        }
                    },
                    "ammo-556mm.img": {
                        frame: {
                            x: 562,
                            y: 3822,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "ammo-762mm.img": {
                        frame: {
                            x: 694,
                            y: 3822,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "part-airdrop-01.img": {
                        frame: {
                            x: 3714,
                            y: 3710,
                            w: 96,
                            h: 96
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 96,
                            h: 96
                        },
                        sourceSize: {
                            w: 96,
                            h: 96
                        }
                    },
                    "ammo-9mm.img": {
                        frame: {
                            x: 958,
                            y: 3822,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "ammo-box.img": {
                        frame: {
                            x: 1090,
                            y: 3822,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "ammo-flare.img": {
                        frame: {
                            x: 1222,
                            y: 3822,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "angry-face.img": {
                        frame: {
                            x: 1354,
                            y: 3822,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "argentina.img": {
                        frame: {
                            x: 1486,
                            y: 3822,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "australia.img": {
                        frame: {
                            x: 1618,
                            y: 3822,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "austria.img": {
                        frame: {
                            x: 1750,
                            y: 3822,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "baguette.img": {
                        frame: {
                            x: 1882,
                            y: 3822,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "belarus.img": {
                        frame: {
                            x: 2014,
                            y: 3822,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "belgium.img": {
                        frame: {
                            x: 2146,
                            y: 3822,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "bolivia.img": {
                        frame: {
                            x: 2278,
                            y: 3822,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "bosnia-and-herzegovina.img": {
                        frame: {
                            x: 2410,
                            y: 3822,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "map-toilet-01.img": {
                        frame: {
                            x: 2542,
                            y: 3822,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "map-toilet-02.img": {
                        frame: {
                            x: 2674,
                            y: 3822,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "brazil.img": {
                        frame: {
                            x: 2806,
                            y: 3822,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "canada.img": {
                        frame: {
                            x: 2938,
                            y: 3822,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "map-toilet-res-01.img": {
                        frame: {
                            x: 3070,
                            y: 3822,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "map-toilet-res-02.img": {
                        frame: {
                            x: 3202,
                            y: 3822,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "chick.img": {
                        frame: {
                            x: 3334,
                            y: 3822,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "chile.img": {
                        frame: {
                            x: 3466,
                            y: 3822,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "china.img": {
                        frame: {
                            x: 3598,
                            y: 3822,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "coconut.img": {
                        frame: {
                            x: 3730,
                            y: 3822,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "colombia.img": {
                        frame: {
                            x: 3862,
                            y: 3822,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "map-crate-05.img": {
                        frame: {
                            x: 3886,
                            y: 838,
                            w: 124,
                            h: 124
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 124,
                            h: 124
                        },
                        sourceSize: {
                            w: 124,
                            h: 124
                        }
                    },
                    "part-spark-02.img": {
                        frame: {
                            x: 3886,
                            y: 966,
                            w: 120,
                            h: 120
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 120,
                            h: 120
                        },
                        sourceSize: {
                            w: 120,
                            h: 120
                        }
                    },
                    "part-spark-01.img": {
                        frame: {
                            x: 3886,
                            y: 1090,
                            w: 120,
                            h: 120
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 120,
                            h: 120
                        },
                        sourceSize: {
                            w: 120,
                            h: 120
                        }
                    },
                    "map-stone-res.img": {
                        frame: {
                            x: 3886,
                            y: 1214,
                            w: 120,
                            h: 120
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 120,
                            h: 120
                        },
                        sourceSize: {
                            w: 120,
                            h: 120
                        }
                    },
                    "map-building-bank-window-01.img": {
                        frame: {
                            x: 3906,
                            y: 1378,
                            w: 56,
                            h: 104
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 56,
                            h: 104
                        },
                        sourceSize: {
                            w: 56,
                            h: 104
                        }
                    },
                    "map-toilet-04.img": {
                        frame: {
                            x: 3306,
                            y: 3710,
                            w: 100,
                            h: 100
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 100,
                            h: 100
                        },
                        sourceSize: {
                            w: 100,
                            h: 100
                        }
                    },
                    "map-toilet-03.img": {
                        frame: {
                            x: 3410,
                            y: 3710,
                            w: 100,
                            h: 100
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 100,
                            h: 100
                        },
                        sourceSize: {
                            w: 100,
                            h: 100
                        }
                    },
                    "map-pot-02.img": {
                        frame: {
                            x: 3514,
                            y: 3710,
                            w: 96,
                            h: 96
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 96,
                            h: 96
                        },
                        sourceSize: {
                            w: 96,
                            h: 96
                        }
                    },
                    "map-pot-01.img": {
                        frame: {
                            x: 3614,
                            y: 3710,
                            w: 96,
                            h: 96
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 96,
                            h: 96
                        },
                        sourceSize: {
                            w: 96,
                            h: 96
                        }
                    },
                    "alien-face.img": {
                        frame: {
                            x: 826,
                            y: 3822,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    }
                }
            }, {
                meta: {
                    image: "imgs-3a85f4f1.png",
                    size: {
                        w: 4096,
                        h: 4096
                    },
                    scale: 1
                },
                frames: {
                    "map-building-mansion-ceiling.img": {
                        frame: {
                            x: 1382,
                            y: 2,
                            w: 1024,
                            h: 864
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 1024,
                            h: 864
                        },
                        sourceSize: {
                            w: 1024,
                            h: 864
                        }
                    },
                    "map-building-police-ceiling-02.img": {
                        frame: {
                            x: 2,
                            y: 2,
                            w: 1376,
                            h: 1440
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 1376,
                            h: 1440
                        },
                        sourceSize: {
                            w: 1376,
                            h: 1440
                        }
                    },
                    "map-building-house-floor.img": {
                        frame: {
                            x: 2410,
                            y: 2,
                            w: 960,
                            h: 992
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 960,
                            h: 992
                        },
                        sourceSize: {
                            w: 960,
                            h: 992
                        }
                    },
                    "map-building-house-ceiling.img": {
                        frame: {
                            x: 2,
                            y: 1446,
                            w: 960,
                            h: 864
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 960,
                            h: 864
                        },
                        sourceSize: {
                            w: 960,
                            h: 864
                        }
                    },
                    "map-bunker-hydra-chamber-floor-01.img": {
                        frame: {
                            x: 966,
                            y: 1446,
                            w: 928,
                            h: 736
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 928,
                            h: 736
                        },
                        sourceSize: {
                            w: 928,
                            h: 736
                        }
                    },
                    "map-building-vault-ceiling.img": {
                        frame: {
                            x: 1898,
                            y: 1446,
                            w: 865,
                            h: 674
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 865,
                            h: 674
                        },
                        sourceSize: {
                            w: 865,
                            h: 674
                        }
                    },
                    "map-building-vault-floor.img": {
                        frame: {
                            x: 2,
                            y: 2314,
                            w: 865,
                            h: 674
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 865,
                            h: 674
                        },
                        sourceSize: {
                            w: 865,
                            h: 674
                        }
                    },
                    "map-bunker-hydra-chamber-ceiling-01.img": {
                        frame: {
                            x: 2,
                            y: 2992,
                            w: 864,
                            h: 704
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 864,
                            h: 704
                        },
                        sourceSize: {
                            w: 864,
                            h: 704
                        }
                    },
                    "map-bunker-hydra-chamber-ceiling-03.img": {
                        frame: {
                            x: 1382,
                            y: 870,
                            w: 800,
                            h: 544
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 800,
                            h: 544
                        },
                        sourceSize: {
                            w: 800,
                            h: 544
                        }
                    },
                    "map-bunker-hydra-compartment-ceiling-03.img": {
                        frame: {
                            x: 871,
                            y: 2314,
                            w: 640,
                            h: 540
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 640,
                            h: 540
                        },
                        sourceSize: {
                            w: 640,
                            h: 540
                        }
                    },
                    "map-building-hut-ceiling-02.img": {
                        frame: {
                            x: 2767,
                            y: 1446,
                            w: 544,
                            h: 544
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 544,
                            h: 544
                        },
                        sourceSize: {
                            w: 544,
                            h: 544
                        }
                    },
                    "map-building-hut-ceiling-01.img": {
                        frame: {
                            x: 870,
                            y: 2992,
                            w: 544,
                            h: 544
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 544,
                            h: 544
                        },
                        sourceSize: {
                            w: 544,
                            h: 544
                        }
                    },
                    "map-building-container-floor-01.img": {
                        frame: {
                            x: 2186,
                            y: 870,
                            w: 180,
                            h: 536
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 180,
                            h: 536
                        },
                        sourceSize: {
                            w: 180,
                            h: 536
                        }
                    },
                    "map-building-container-ceiling-05.img": {
                        frame: {
                            x: 1515,
                            y: 2314,
                            w: 180,
                            h: 536
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 180,
                            h: 536
                        },
                        sourceSize: {
                            w: 180,
                            h: 536
                        }
                    },
                    "map-building-container-ceiling-02.img": {
                        frame: {
                            x: 1699,
                            y: 2314,
                            w: 180,
                            h: 536
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 180,
                            h: 536
                        },
                        sourceSize: {
                            w: 180,
                            h: 536
                        }
                    },
                    "map-building-hut-floor-01.img": {
                        frame: {
                            x: 1883,
                            y: 2314,
                            w: 512,
                            h: 512
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 512,
                            h: 512
                        },
                        sourceSize: {
                            w: 512,
                            h: 512
                        }
                    },
                    "ping-map-pulse.img": {
                        frame: {
                            x: 2399,
                            y: 2314,
                            w: 512,
                            h: 512
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 512,
                            h: 512
                        },
                        sourceSize: {
                            w: 512,
                            h: 512
                        }
                    },
                    "map-silo-01.img": {
                        frame: {
                            x: 1418,
                            y: 2992,
                            w: 512,
                            h: 512
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 512,
                            h: 512
                        },
                        sourceSize: {
                            w: 512,
                            h: 512
                        }
                    },
                    "map-hut-res-01.img": {
                        frame: {
                            x: 1934,
                            y: 2992,
                            w: 512,
                            h: 512
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 512,
                            h: 512
                        },
                        sourceSize: {
                            w: 512,
                            h: 512
                        }
                    },
                    "map-shack-res-01.img": {
                        frame: {
                            x: 2410,
                            y: 998,
                            w: 420,
                            h: 340
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 420,
                            h: 340
                        },
                        sourceSize: {
                            w: 420,
                            h: 340
                        }
                    },
                    "map-building-shack-ceiling-01.img": {
                        frame: {
                            x: 2834,
                            y: 998,
                            w: 420,
                            h: 340
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 420,
                            h: 340
                        },
                        sourceSize: {
                            w: 420,
                            h: 340
                        }
                    },
                    "map-building-outhouse-ceiling.img": {
                        frame: {
                            x: 2915,
                            y: 2314,
                            w: 400,
                            h: 316
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 400,
                            h: 316
                        },
                        sourceSize: {
                            w: 400,
                            h: 316
                        }
                    },
                    "map-building-outhouse-floor.img": {
                        frame: {
                            x: 2450,
                            y: 2992,
                            w: 400,
                            h: 316
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 400,
                            h: 316
                        },
                        sourceSize: {
                            w: 400,
                            h: 316
                        }
                    },
                    "map-outhouse-res.img": {
                        frame: {
                            x: 2854,
                            y: 2992,
                            w: 400,
                            h: 312
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 400,
                            h: 312
                        },
                        sourceSize: {
                            w: 400,
                            h: 312
                        }
                    },
                    "map-building-panicroom-ceiling.img": {
                        frame: {
                            x: 3374,
                            y: 2,
                            w: 288,
                            h: 384
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 288,
                            h: 384
                        },
                        sourceSize: {
                            w: 288,
                            h: 384
                        }
                    },
                    "map-building-shack-ceiling-02.img": {
                        frame: {
                            x: 3666,
                            y: 2,
                            w: 320,
                            h: 320
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 320,
                            h: 320
                        },
                        sourceSize: {
                            w: 320,
                            h: 320
                        }
                    },
                    "map-building-shack-floor-02.img": {
                        frame: {
                            x: 3666,
                            y: 326,
                            w: 320,
                            h: 320
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 320,
                            h: 320
                        },
                        sourceSize: {
                            w: 320,
                            h: 320
                        }
                    },
                    "map-bunker-generic-floor-01.img": {
                        frame: {
                            x: 3666,
                            y: 650,
                            w: 320,
                            h: 288
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 320,
                            h: 288
                        },
                        sourceSize: {
                            w: 320,
                            h: 288
                        }
                    },
                    "map-airdrop-01.img": {
                        frame: {
                            x: 3666,
                            y: 942,
                            w: 256,
                            h: 256
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 256,
                            h: 256
                        },
                        sourceSize: {
                            w: 256,
                            h: 256
                        }
                    },
                    "part-smoke-02.img": {
                        frame: {
                            x: 3666,
                            y: 1202,
                            w: 256,
                            h: 256
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 256,
                            h: 256
                        },
                        sourceSize: {
                            w: 256,
                            h: 256
                        }
                    },
                    "map-barrel-res-01.img": {
                        frame: {
                            x: 3666,
                            y: 1462,
                            w: 256,
                            h: 256
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 256,
                            h: 256
                        },
                        sourceSize: {
                            w: 256,
                            h: 256
                        }
                    },
                    "emote-circle-outer.img": {
                        frame: {
                            x: 3666,
                            y: 1722,
                            w: 256,
                            h: 256
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 256,
                            h: 256
                        },
                        sourceSize: {
                            w: 256,
                            h: 256
                        }
                    },
                    "map-smoke-res.img": {
                        frame: {
                            x: 3666,
                            y: 1982,
                            w: 256,
                            h: 256
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 256,
                            h: 256
                        },
                        sourceSize: {
                            w: 256,
                            h: 256
                        }
                    },
                    "map-tree-03.img": {
                        frame: {
                            x: 3666,
                            y: 2242,
                            w: 256,
                            h: 256
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 256,
                            h: 256
                        },
                        sourceSize: {
                            w: 256,
                            h: 256
                        }
                    },
                    "part-smoke-03.img": {
                        frame: {
                            x: 3666,
                            y: 2502,
                            w: 256,
                            h: 256
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 256,
                            h: 256
                        },
                        sourceSize: {
                            w: 256,
                            h: 256
                        }
                    },
                    "crab.img": {
                        frame: {
                            x: 3666,
                            y: 2762,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "croatia.img": {
                        frame: {
                            x: 3798,
                            y: 2762,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "czech-republic.img": {
                        frame: {
                            x: 3666,
                            y: 2894,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "proj-frag-pin.img": {
                        frame: {
                            x: 3798,
                            y: 2894,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "denmark.img": {
                        frame: {
                            x: 3666,
                            y: 3026,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "disappoint-face.img": {
                        frame: {
                            x: 3798,
                            y: 3026,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "ecuador.img": {
                        frame: {
                            x: 3666,
                            y: 3158,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "egg.img": {
                        frame: {
                            x: 3798,
                            y: 3158,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "eggplant.img": {
                        frame: {
                            x: 3666,
                            y: 3290,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "emote-medical-healthkit.img": {
                        frame: {
                            x: 3798,
                            y: 3290,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "melee-bayonet-rugged.img": {
                        frame: {
                            x: 3666,
                            y: 3422,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "melee-hook-silver.img": {
                        frame: {
                            x: 3798,
                            y: 3422,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "melee-huntsman-blackwater.img": {
                        frame: {
                            x: 3666,
                            y: 3554,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "melee-huntsman-burnished.img": {
                        frame: {
                            x: 3798,
                            y: 3554,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "melee-karambit-prismatic.img": {
                        frame: {
                            x: 3374,
                            y: 390,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "melee-karambit-rust.img": {
                        frame: {
                            x: 3506,
                            y: 390,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "melee-karambit-woodland.img": {
                        frame: {
                            x: 3374,
                            y: 522,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "melee-pickaxe.img": {
                        frame: {
                            x: 3506,
                            y: 522,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "finland.img": {
                        frame: {
                            x: 3374,
                            y: 654,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "flex.img": {
                        frame: {
                            x: 3506,
                            y: 654,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "part-frag-lever-01.img": {
                        frame: {
                            x: 3374,
                            y: 786,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "part-frag-pin-01.img": {
                        frame: {
                            x: 3506,
                            y: 786,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "part-leaf-01.img": {
                        frame: {
                            x: 3374,
                            y: 918,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "part-log-01.img": {
                        frame: {
                            x: 3506,
                            y: 918,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "ammo-12gauge.img": {
                        frame: {
                            x: 3374,
                            y: 1050,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "france.img": {
                        frame: {
                            x: 3506,
                            y: 1050,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "georgia.img": {
                        frame: {
                            x: 3374,
                            y: 1182,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "germany.img": {
                        frame: {
                            x: 3506,
                            y: 1182,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "gg.img": {
                        frame: {
                            x: 3374,
                            y: 1314,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "greece.img": {
                        frame: {
                            x: 3506,
                            y: 1314,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "guatemala.img": {
                        frame: {
                            x: 3374,
                            y: 1446,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "ammo-308sub.img": {
                        frame: {
                            x: 3506,
                            y: 1446,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "loot-weapon-vector.img": {
                        frame: {
                            x: 3374,
                            y: 1578,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "loot-weapon-ump9.img": {
                        frame: {
                            x: 3506,
                            y: 1578,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "loot-weapon-sv98.img": {
                        frame: {
                            x: 3374,
                            y: 1710,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "loot-weapon-spas12.img": {
                        frame: {
                            x: 3506,
                            y: 1710,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "loot-weapon-soshotgun.img": {
                        frame: {
                            x: 3374,
                            y: 1842,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "loot-weapon-scar.img": {
                        frame: {
                            x: 3506,
                            y: 1842,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "loot-weapon-qbb97.img": {
                        frame: {
                            x: 3374,
                            y: 1974,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "loot-weapon-pumpshotgun.img": {
                        frame: {
                            x: 3506,
                            y: 1974,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "loot-weapon-ot38.img": {
                        frame: {
                            x: 3374,
                            y: 2106,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "loot-weapon-ot38-dual.img": {
                        frame: {
                            x: 3506,
                            y: 2106,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "loot-weapon-mp5.img": {
                        frame: {
                            x: 3374,
                            y: 2238,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "loot-weapon-mosin.img": {
                        frame: {
                            x: 3506,
                            y: 2238,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "loot-weapon-mk12.img": {
                        frame: {
                            x: 3374,
                            y: 2370,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "loot-weapon-mac10.img": {
                        frame: {
                            x: 3506,
                            y: 2370,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "loot-weapon-m9.img": {
                        frame: {
                            x: 3374,
                            y: 2502,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "loot-weapon-m9-dual.img": {
                        frame: {
                            x: 3506,
                            y: 2502,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "loot-weapon-m39.img": {
                        frame: {
                            x: 3374,
                            y: 2634,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "loot-weapon-m249.img": {
                        frame: {
                            x: 3506,
                            y: 2634,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "loot-weapon-hk416.img": {
                        frame: {
                            x: 3374,
                            y: 2766,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "loot-weapon-glock.img": {
                        frame: {
                            x: 3506,
                            y: 2766,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "loot-weapon-glock-dual.img": {
                        frame: {
                            x: 3374,
                            y: 2898,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "loot-weapon-garand.img": {
                        frame: {
                            x: 3506,
                            y: 2898,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "loot-weapon-flare-gun.img": {
                        frame: {
                            x: 3374,
                            y: 3030,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "loot-weapon-fists.img": {
                        frame: {
                            x: 3506,
                            y: 3030,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "loot-weapon-famas.img": {
                        frame: {
                            x: 3374,
                            y: 3162,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "loot-weapon-dp28.img": {
                        frame: {
                            x: 3506,
                            y: 3162,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "loot-weapon-deagle.img": {
                        frame: {
                            x: 3374,
                            y: 3294,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "loot-weapon-deagle-dual.img": {
                        frame: {
                            x: 3506,
                            y: 3294,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "loot-weapon-awc.img": {
                        frame: {
                            x: 3374,
                            y: 3426,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "loot-weapon-autoshotgun.img": {
                        frame: {
                            x: 3506,
                            y: 3426,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "loot-weapon-ak.img": {
                        frame: {
                            x: 3374,
                            y: 3558,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "loot-throwable-smoke.img": {
                        frame: {
                            x: 3506,
                            y: 3558,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "loot-throwable-frag.img": {
                        frame: {
                            x: 2915,
                            y: 2634,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "loot-shirt-01.img": {
                        frame: {
                            x: 3047,
                            y: 2634,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "loot-scope-04.img": {
                        frame: {
                            x: 3179,
                            y: 2634,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "loot-scope-03.img": {
                        frame: {
                            x: 871,
                            y: 2858,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "loot-scope-02.img": {
                        frame: {
                            x: 1003,
                            y: 2858,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "loot-scope-01.img": {
                        frame: {
                            x: 1135,
                            y: 2858,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "loot-scope-00.img": {
                        frame: {
                            x: 1267,
                            y: 2858,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "loot-pack-03.img": {
                        frame: {
                            x: 1399,
                            y: 2858,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "loot-pack-02.img": {
                        frame: {
                            x: 1531,
                            y: 2858,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "loot-pack-01.img": {
                        frame: {
                            x: 1663,
                            y: 2858,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "loot-pack-00.img": {
                        frame: {
                            x: 1795,
                            y: 2858,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "loot-medical-soda.img": {
                        frame: {
                            x: 1927,
                            y: 2858,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "loot-medical-pill.img": {
                        frame: {
                            x: 2059,
                            y: 2858,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "loot-medical-healthkit.img": {
                        frame: {
                            x: 2191,
                            y: 2858,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "loot-medical-bandage.img": {
                        frame: {
                            x: 2323,
                            y: 2858,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "loot-helmet-03.img": {
                        frame: {
                            x: 2455,
                            y: 2858,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "loot-helmet-02.img": {
                        frame: {
                            x: 2587,
                            y: 2858,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "loot-helmet-01.img": {
                        frame: {
                            x: 2719,
                            y: 2858,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "map-tree-04.img": {
                        frame: {
                            x: 3258,
                            y: 998,
                            w: 112,
                            h: 112
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 112,
                            h: 112
                        },
                        sourceSize: {
                            w: 112,
                            h: 112
                        }
                    },
                    "loot-chest-03.img": {
                        frame: {
                            x: 2983,
                            y: 2858,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "loot-chest-02.img": {
                        frame: {
                            x: 3115,
                            y: 2858,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "loot-chest-01.img": {
                        frame: {
                            x: 2450,
                            y: 3312,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "loot-ammo-box.img": {
                        frame: {
                            x: 2582,
                            y: 3312,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "headshot-face.img": {
                        frame: {
                            x: 2714,
                            y: 3312,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "heart.img": {
                        frame: {
                            x: 2846,
                            y: 3312,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "honduras.img": {
                        frame: {
                            x: 2978,
                            y: 3312,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "hong-kong.img": {
                        frame: {
                            x: 3110,
                            y: 3312,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "hungary.img": {
                        frame: {
                            x: 3242,
                            y: 3312,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "imp-face.img": {
                        frame: {
                            x: 870,
                            y: 3540,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "india.img": {
                        frame: {
                            x: 1002,
                            y: 3540,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "trash.img": {
                        frame: {
                            x: 1134,
                            y: 3540,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "indonesia.img": {
                        frame: {
                            x: 1266,
                            y: 3540,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "target.img": {
                        frame: {
                            x: 1398,
                            y: 3540,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "tap.img": {
                        frame: {
                            x: 1530,
                            y: 3540,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "skull.img": {
                        frame: {
                            x: 1662,
                            y: 3540,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "israel.img": {
                        frame: {
                            x: 1794,
                            y: 3540,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "italy.img": {
                        frame: {
                            x: 1926,
                            y: 3540,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "return-arrow.img": {
                        frame: {
                            x: 2058,
                            y: 3540,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "resume.img": {
                        frame: {
                            x: 2190,
                            y: 3540,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "quit.img": {
                        frame: {
                            x: 2322,
                            y: 3540,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "japan.img": {
                        frame: {
                            x: 2454,
                            y: 3540,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "joy-face.img": {
                        frame: {
                            x: 2586,
                            y: 3540,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "player-gui.img": {
                        frame: {
                            x: 2718,
                            y: 3540,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "ping-team-help.img": {
                        frame: {
                            x: 2850,
                            y: 3540,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "ping-team-danger.img": {
                        frame: {
                            x: 2982,
                            y: 3540,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "ping-team-coming.img": {
                        frame: {
                            x: 3114,
                            y: 3540,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "ping-team-airdrop.img": {
                        frame: {
                            x: 2,
                            y: 3700,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "ping-part-quarter.img": {
                        frame: {
                            x: 134,
                            y: 3700,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "ping-part-quarter-highlight.img": {
                        frame: {
                            x: 266,
                            y: 3700,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "ping-part-eighth.img": {
                        frame: {
                            x: 398,
                            y: 3700,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "ammo-50AE.img": {
                        frame: {
                            x: 530,
                            y: 3700,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "ping-part-circle.img": {
                        frame: {
                            x: 662,
                            y: 3700,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "ping-part-circle-highlight.img": {
                        frame: {
                            x: 794,
                            y: 3700,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "kazakhstan.img": {
                        frame: {
                            x: 926,
                            y: 3700,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "leek.img": {
                        frame: {
                            x: 1058,
                            y: 3700,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "logo-caduceus.img": {
                        frame: {
                            x: 1190,
                            y: 3700,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "logo-conch.img": {
                        frame: {
                            x: 1322,
                            y: 3700,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "ping-map-help.img": {
                        frame: {
                            x: 1454,
                            y: 3700,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "ping-map-danger.img": {
                        frame: {
                            x: 1586,
                            y: 3700,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "map-decal-initiative.img": {
                        frame: {
                            x: 1718,
                            y: 3700,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "ping-map-airdrop.img": {
                        frame: {
                            x: 1850,
                            y: 3700,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "ping-indicator.img": {
                        frame: {
                            x: 1982,
                            y: 3700,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "proj-frag-nopin-nolever.img": {
                        frame: {
                            x: 2114,
                            y: 3700,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "proj-frag-nopin.img": {
                        frame: {
                            x: 2246,
                            y: 3700,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "movement.img": {
                        frame: {
                            x: 2378,
                            y: 3700,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "minimize.img": {
                        frame: {
                            x: 2510,
                            y: 3700,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "mag-glass.img": {
                        frame: {
                            x: 2642,
                            y: 3700,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "logo-egg.img": {
                        frame: {
                            x: 2774,
                            y: 3700,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "link.img": {
                        frame: {
                            x: 2906,
                            y: 3700,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "keyboard.img": {
                        frame: {
                            x: 3038,
                            y: 3700,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "indicator.img": {
                        frame: {
                            x: 3170,
                            y: 3700,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "hamburger.img": {
                        frame: {
                            x: 3302,
                            y: 3700,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "logo-hydra.img": {
                        frame: {
                            x: 3434,
                            y: 3700,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "gas.img": {
                        frame: {
                            x: 3566,
                            y: 3700,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "eye.img": {
                        frame: {
                            x: 3698,
                            y: 3700,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "emote.img": {
                        frame: {
                            x: 3830,
                            y: 3700,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "proj-frag-pin-part.img": {
                        frame: {
                            x: 2,
                            y: 3832,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "logo-meteor.img": {
                        frame: {
                            x: 134,
                            y: 3832,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "logo-storm.img": {
                        frame: {
                            x: 266,
                            y: 3832,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "danger.img": {
                        frame: {
                            x: 398,
                            y: 3832,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "logo-surviv.img": {
                        frame: {
                            x: 530,
                            y: 3832,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "logo-swine.img": {
                        frame: {
                            x: 662,
                            y: 3832,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "malaysia.img": {
                        frame: {
                            x: 794,
                            y: 3832,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "copy.img": {
                        frame: {
                            x: 926,
                            y: 3832,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "cog.img": {
                        frame: {
                            x: 1058,
                            y: 3832,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "mexico.img": {
                        frame: {
                            x: 1190,
                            y: 3832,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "chicken.img": {
                        frame: {
                            x: 1322,
                            y: 3832,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "monocle-face.img": {
                        frame: {
                            x: 1454,
                            y: 3832,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "bullets.img": {
                        frame: {
                            x: 1586,
                            y: 3832,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "audio-on.img": {
                        frame: {
                            x: 1718,
                            y: 3832,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "audio-off.img": {
                        frame: {
                            x: 1850,
                            y: 3832,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "whale.img": {
                        frame: {
                            x: 1982,
                            y: 3832,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "vietnam.img": {
                        frame: {
                            x: 2114,
                            y: 3832,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "venezuela.img": {
                        frame: {
                            x: 2246,
                            y: 3832,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "uruguay.img": {
                        frame: {
                            x: 2378,
                            y: 3832,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "upsidedown-face.img": {
                        frame: {
                            x: 2510,
                            y: 3832,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "united-states-of-america.img": {
                        frame: {
                            x: 2642,
                            y: 3832,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "united-kingdom.img": {
                        frame: {
                            x: 2774,
                            y: 3832,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "ukraine.img": {
                        frame: {
                            x: 2906,
                            y: 3832,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "turkey.img": {
                        frame: {
                            x: 3038,
                            y: 3832,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "trinidad-and-tobago.img": {
                        frame: {
                            x: 3170,
                            y: 3832,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "tombstone.img": {
                        frame: {
                            x: 3302,
                            y: 3832,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "thumbs-up.img": {
                        frame: {
                            x: 3434,
                            y: 3832,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "thinking-face.img": {
                        frame: {
                            x: 3566,
                            y: 3832,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "thailand.img": {
                        frame: {
                            x: 3698,
                            y: 3832,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "teabag.img": {
                        frame: {
                            x: 3830,
                            y: 3832,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "taiwan.img": {
                        frame: {
                            x: 2,
                            y: 3964,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "switzerland.img": {
                        frame: {
                            x: 134,
                            y: 3964,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "sweden.img": {
                        frame: {
                            x: 266,
                            y: 3964,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "surviv.img": {
                        frame: {
                            x: 398,
                            y: 3964,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "sunglass-face.img": {
                        frame: {
                            x: 530,
                            y: 3964,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "spain.img": {
                        frame: {
                            x: 662,
                            y: 3964,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "south-korea.img": {
                        frame: {
                            x: 794,
                            y: 3964,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "sob-face.img": {
                        frame: {
                            x: 926,
                            y: 3964,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "slovakia.img": {
                        frame: {
                            x: 1058,
                            y: 3964,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "sleepy.img": {
                        frame: {
                            x: 1190,
                            y: 3964,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "singapore.img": {
                        frame: {
                            x: 1322,
                            y: 3964,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "serbia.img": {
                        frame: {
                            x: 1454,
                            y: 3964,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "salt.img": {
                        frame: {
                            x: 1586,
                            y: 3964,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "sad-face.img": {
                        frame: {
                            x: 1718,
                            y: 3964,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "russia.img": {
                        frame: {
                            x: 1850,
                            y: 3964,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "romania.img": {
                        frame: {
                            x: 1982,
                            y: 3964,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "republic-of-poland.img": {
                        frame: {
                            x: 2114,
                            y: 3964,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "question.img": {
                        frame: {
                            x: 2246,
                            y: 3964,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "potato.img": {
                        frame: {
                            x: 2378,
                            y: 3964,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "portugal.img": {
                        frame: {
                            x: 2510,
                            y: 3964,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "police.img": {
                        frame: {
                            x: 2642,
                            y: 3964,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "player-emote.img": {
                        frame: {
                            x: 2774,
                            y: 3964,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "pineapple.img": {
                        frame: {
                            x: 2906,
                            y: 3964,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "philippines.img": {
                        frame: {
                            x: 3038,
                            y: 3964,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "peru.img": {
                        frame: {
                            x: 3170,
                            y: 3964,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "norway.img": {
                        frame: {
                            x: 3302,
                            y: 3964,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "new-zealand.img": {
                        frame: {
                            x: 3434,
                            y: 3964,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "netherlands.img": {
                        frame: {
                            x: 3566,
                            y: 3964,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "happy-face.img": {
                        frame: {
                            x: 2851,
                            y: 2858,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    }
                }
            }, {
                meta: {
                    image: "imgs-2d67a325.png",
                    size: {
                        w: 1024,
                        h: 1024
                    },
                    scale: 1
                },
                frames: {
                    "map-plane-01.img": {
                        frame: {
                            x: 502,
                            y: 2,
                            w: 256,
                            h: 256
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 256,
                            h: 256
                        },
                        sourceSize: {
                            w: 256,
                            h: 256
                        }
                    },
                    "map-building-mansion-cellar-02.img": {
                        frame: {
                            x: 2,
                            y: 2,
                            w: 496,
                            h: 440
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 496,
                            h: 440
                        },
                        sourceSize: {
                            w: 496,
                            h: 440
                        }
                    },
                    "loot-circle-inner-01.img": {
                        frame: {
                            x: 502,
                            y: 262,
                            w: 148,
                            h: 148
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 148,
                            h: 148
                        },
                        sourceSize: {
                            w: 148,
                            h: 148
                        }
                    },
                    "player-circle-base-02.img": {
                        frame: {
                            x: 2,
                            y: 446,
                            w: 148,
                            h: 148
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 148,
                            h: 148
                        },
                        sourceSize: {
                            w: 148,
                            h: 148
                        }
                    },
                    "loot-melee-woodaxe.img": {
                        frame: {
                            x: 154,
                            y: 446,
                            w: 148,
                            h: 54
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 148,
                            h: 54
                        },
                        sourceSize: {
                            w: 148,
                            h: 54
                        }
                    },
                    "player-base-03.img": {
                        frame: {
                            x: 2,
                            y: 598,
                            w: 140,
                            h: 140
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 140,
                            h: 140
                        },
                        sourceSize: {
                            w: 140,
                            h: 140
                        }
                    },
                    "player-base-02.img": {
                        frame: {
                            x: 146,
                            y: 598,
                            w: 140,
                            h: 140
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 140,
                            h: 140
                        },
                        sourceSize: {
                            w: 140,
                            h: 140
                        }
                    },
                    "loot-melee-pan-black-side.img": {
                        frame: {
                            x: 290,
                            y: 598,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "loot-shirt-02.img": {
                        frame: {
                            x: 422,
                            y: 598,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "loot-melee-bayonet-rugged.img": {
                        frame: {
                            x: 554,
                            y: 598,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "player-bullet-trail-02.img": {
                        frame: {
                            x: 654,
                            y: 366,
                            w: 36,
                            h: 36
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 36,
                            h: 36
                        },
                        sourceSize: {
                            w: 36,
                            h: 36
                        }
                    },
                    "loot-melee-karambit-rugged.img": {
                        frame: {
                            x: 762,
                            y: 134,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "loot-melee-hook-silver.img": {
                        frame: {
                            x: 762,
                            y: 266,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "loot-melee-karambit-prismatic.img": {
                        frame: {
                            x: 762,
                            y: 398,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "loot-melee-huntsman-rugged.img": {
                        frame: {
                            x: 762,
                            y: 530,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "loot-melee-huntsman-burnished.img": {
                        frame: {
                            x: 2,
                            y: 742,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "loot-melee-bayonet-woodland.img": {
                        frame: {
                            x: 134,
                            y: 742,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    },
                    "part-flare-01.img": {
                        frame: {
                            x: 654,
                            y: 262,
                            w: 100,
                            h: 100
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 100,
                            h: 100
                        },
                        sourceSize: {
                            w: 100,
                            h: 100
                        }
                    },
                    "part-frag-burst-01.img": {
                        frame: {
                            x: 762,
                            y: 662,
                            w: 72,
                            h: 72
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 72,
                            h: 72
                        },
                        sourceSize: {
                            w: 72,
                            h: 72
                        }
                    },
                    "player-hands-02.img": {
                        frame: {
                            x: 838,
                            y: 662,
                            w: 38,
                            h: 38
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 38,
                            h: 38
                        },
                        sourceSize: {
                            w: 38,
                            h: 38
                        }
                    },
                    "loot-melee-pan-black.img": {
                        frame: {
                            x: 762,
                            y: 2,
                            w: 128,
                            h: 128
                        },
                        rotated: !1,
                        trimmed: !1,
                        spriteSourceSize: {
                            x: 0,
                            y: 0,
                            w: 128,
                            h: 128
                        },
                        sourceSize: {
                            w: 128,
                            h: 128
                        }
                    }
                }
            }]
        }
    },
    f034d167: function(e, t, a) {
        "use strict";
        function i() {
            this.bullets = []
        }
        var r = a("80ac57a6")
          , o = a("989ad62a")
          , n = (a("8649e148"),
        a("34e32c48"),
        a("6b42806d"))
          , s = a("10899aea")
          , l = a("1901e2d9")
          , m = a("c2a798c8");
        a("ce29f17f"),
        a("af8ba00f"),
        i.prototype = {
            addFlare: function(e, t, a) {
                for (var i = null, n = 0; n < this.bullets.length; n++)
                    if (!this.bullets[n].alive && !this.bullets[n].collided) {
                        i = this.bullets[n];
                        break
                    }
                i || (i = {},
                i.alive = !1,
                i.flareContainer = new r.Container,
                i.flareContainer.visible = !1,
                i.flare = r.Sprite.fromImage("part-flare-01.img"),
                i.flare.anchor.set(.5, .5),
                i.flareContainer.addChild(i.flare),
                i.trailContainer = new r.Container,
                i.trailContainer.visible = !1,
                i.trailContainer.pivot.set(14.5, 0),
                i.bulletTrail = r.Sprite.fromImage("player-bullet-trail-02.img"),
                i.bulletTrail.anchor.set(.5, .5),
                i.trailContainer.addChild(i.bulletTrail),
                this.bullets.push(i));
                var l = o.bullets[e.bulletType]
                  , c = 1 + e.varianceT * l.variance
                  , d = s.remap(e.distAdjIdx, 0, 32, -1, 1)
                  , p = l.distance / Math.pow(o.bullet.reflectDistDecay, e.reflectCount);
                i.alive = !0,
                i.isNew = !0,
                i.collided = !1,
                i.flareScale = .01,
                i.trailScale = 1,
                i.timeAlive = 0,
                i.maxTimeAlive = 2.5,
                i.startPos = m.copy(e.pos),
                i.pos = m.copy(e.pos),
                i.dir = m.copy(e.dir),
                i.layer = e.layer,
                i.speed = l.speed * c,
                i.distance = p * c + d;
                var u = Math.atan2(i.dir.x, i.dir.y);
                i.flareContainer.rotation = u - Math.PI / 2,
                i.trailContainer.rotation = u - Math.PI / 2,
                i.layer = e.layer;
                var h = t.se(i.playerId);
                h && 2 & h.layer && (i.layer |= 2);
                var g = o.tracerColors[l.tracerColor]
                  , y = g.regular;
                h && h.isOnBrightSurface && (y = g.saturated),
                i.bulletTrail.scale.set(.8, l.tracerWidth),
                i.tracerLength = l.tracerLength,
                i.bulletTrail.tint = y,
                i.tracerAlphaRate = g.alphaRate,
                i.tracerAlphaMin = g.alphaMin,
                i.bulletTrail.alpha = 1,
                i.flare.scale.set(1, 1),
                i.flare.tint = l.flareColor,
                i.flare.alpha = .8,
                i.maxFlareScale = l.maxFlareScale,
                i.smokeThrottle = 0,
                i.flareContainer.visible = !0,
                i.trailContainer.visible = !0
            },
            l: function(e, t, a, i, r, o, c, d) {
                for (var p = (t.tt.m(),
                0); p < this.bullets.length; p++) {
                    var u = this.bullets[p];
                    if (u.collided && (u.flareScale = Math.max(u.flareScale - .5 * e, 0),
                    u.flare.alpha = Math.max(u.flare.alpha - e, 0),
                    u.trailScale = Math.max(u.trailScale - 6 * e, 0),
                    u.bulletTrail.alpha = Math.max(u.bulletTrail.alpha - e, 0),
                    u.pos = m.add(u.pos, m.mul(u.dir, e * u.speed)),
                    u.flare.alpha <= 0 && (u.collided = !1,
                    u.flareContainer.visible = !1,
                    u.trailContainer.visible = !1)),
                    u.alive) {
                        if (u.tracerAlphaRate) {
                            var h = (r.__id,
                            u.playerId,
                            r.__id == u.playerId ? u.tracerAlphaRate : .9 * u.tracerAlphaRate);
                            u.bulletTrail.alpha = Math.max(u.tracerAlphaMin, u.bulletTrail.alpha * h)
                        }
                        u.timeAlive += e,
                        u.flareScale = s.easeOutExpo(u.timeAlive / u.maxTimeAlive) * u.maxFlareScale,
                        u.smokeThrottle <= 0 ? u.smokeThrottle = .05 : u.smokeThrottle -= e;
                        var g = u.distance - m.length(m.sub(u.startPos, u.pos))
                          , y = Math.min(g, e * u.speed);
                        m.copy(u.pos),
                        u.pos = m.add(u.pos, m.mul(u.dir, y)),
                        s.eqAbs(g, y) && (u.collided = !0,
                        u.alive = !1);
                        var f = 0;
                        !(l.sameLayer(f, r.layer) || 2 & r.layer) || 2 & r.layer && a.insideStructureMask(n.createCircle(u.pos, 1)) || (f |= 2),
                        o.addPIXIObj(u.trailContainer, f, 1e3, 0),
                        o.addPIXIObj(u.flareContainer, f, 1e3, 1),
                        u.isNew = !1
                    }
                }
            },
            render: function(e) {
                for (var t = (e.pixels(1),
                0); t < this.bullets.length; t++) {
                    var a = this.bullets[t];
                    if (a.alive || a.collided) {
                        var i = e.pointToScreen(a.pos);
                        a.flareContainer.position.set(i.x, i.y);
                        var r = e.pixels(1);
                        a.flareContainer.scale.set(r * a.flareScale, r * a.flareScale);
                        var o = m.length(m.sub(a.pos, a.startPos));
                        a.trailContainer.position.set(i.x, i.y);
                        var n = Math.min(15 * a.tracerLength, o / 2);
                        a.trailContainer.scale.set(r * n * a.trailScale, r)
                    }
                }
            }
        },
        e.exports = {
            Oe: i
        }
    },
    f2372804: function(e, t, a) {
        "use strict";
        var i = {
            "@metadata": {
                "last-updated": "2018-01-28",
                locale: "ru"
            },
            "word-order": "svo",
            "index-slogan": "Королевская Битва в 2D",
            "index-region": "Регион",
            "index-north-america": "Северная Америка",
            "index-europe": "Европа",
            "index-asia": "Азия",
            "index-players": "игроков",
            "index-play-solo": "Играть Соло",
            "index-play-duo": "Играть в Дуэте",
            "index-play-squad": "Играть в Отряд",
            "index-join-team": "Войти в команду",
            "index-create-team": "Создать Команду",
            "index-how-to-play": "Как играть",
            "index-leave-team": "Покинуть Команду",
            "index-joining-team": "Присоединение к Команде",
            "index-creating-team": "Создание Команды",
            "index-invite-link": "Ссылка-приглашение",
            "index-invite-code": "Код приглашения",
            "index-join-team-help": "Есть ссылка на команду или код? Напиши его сюда:",
            "index-solo": "Соло",
            "index-duo": "Дуэт",
            "index-squad": "Отряд",
            "index-auto-fill": "Автозаполнение",
            "index-no-fill": "Не заполнять",
            "index-waiting-for-leader": "Ожидание лидера, чтобы начать игру",
            "index-play": "Играть",
            "index-customize-loadout": "Настраиваемые эмоции",
            "index-twitter-follow": "Следовать в Twitter",
            "index-youtube-subscribe": "Подписаться на YouTube",
            "index-facebook-like": "Лайкнуть в Facebook",
            "index-featured-youtuber": "Рекомендуемые Ютуберы",
            "index-streaming-live": "Сейчас стримят!",
            "index-settings": "Настройки",
            "index-high-resolution": "Высокое разрешение (проверьте, чтобы увеличить качество изображения)",
            "index-screen-shake": "Дрожание экрана",
            "index-master-volume": "Уровень Громкости",
            "index-sfx-volume": " Громкость Эффектов",
            "index-music-volume": "Громкость Музыки",
            "index-mobile-announce": "Теперь доступно на ваших телефонах!",
            "index-mobile-tooltip": "Вы можете зайти в surviv.io на своём телефоне, играйте в <span>surviv.io</span> в любом месте!",
            "index-version": "версия",
            "index-privacy": "Конфиденциальность",
            "index-attributions": "атрибуции",
            "index-proxy-sites": "прокси сайты",
            "index-team-is-full": "Команда заполнена!",
            "index-failed-joining-team": "Не удалось присоединиться к команде.",
            "index-failed-creating-team": "Не удалось создать команду.",
            "index-failed-finding-game": "Не удалось найти игру.",
            "index-failed-joining-game": "Не удалось присоединиться к игре.",
            "index-lost-connection": "Соединение с командой прервалось.",
            "index-host-closed": "Соединение с сервером закрыто.",
            "index-view-more": "Посмотреть ещё",
            "index-back-to-main": "Вернуться в главное меню",
            "index-most-kills": "Наибольшее кол-во убийств",
            "index-total-kills": "Всего убийств",
            "index-total-wins": "Всего побед",
            "index-top-5-percent": "Процент Топ 5",
            "index-kill-death-ratio": "Соотношение убийство-смерть",
            "index-for": "За",
            "index-today": "Сегодня",
            "index-this-week": "Эту неделю",
            "index-all-time": "Всё время",
            "index-top-100": "TOP 100",
            "index-rank": "Ранг",
            "index-player": "Игрок",
            "index-total-games": "Всего игр",
            "index-controls": "Управление",
            "index-movement": "Перемещение",
            "index-movement-ctrl": "W, A, S, D",
            "index-aim": "Целиться",
            "index-aim-ctrl": "Мышь",
            "index-punch": "Ударить",
            "index-shoot": "Выстрелить",
            "index-shoot-ctrl": "Левый Щелчок",
            "index-change-weapons": "Сменить Оружие",
            "index-change-weapons-ctrl": "1-4 или Колесо Прокрутки",
            "index-stow-weapons": "Убрать оружие из рук",
            "index-stow-weapons-ctrl": "3 или Е",
            "index-swap-weapons": "Смена на Предыдущее Оружие",
            "index-swap-weapons-ctrl": "Q",
            "index-reload": "Перезарядка",
            "index-reload-ctrl": "R",
            "index-scope-zoom": "Смена прицела",
            "index-scope-zoom-ctrl": "Левый щелчок на Прицел",
            "index-pickup": "Подобрать добычу",
            "index-loot": "Добычу",
            "index-revive": "оживление",
            "index-pickup-ctrl": "F",
            "index-use-medical": "Медицинский Предмет change on Медикамент",
            "index-use-medical-ctrl": "Левый Щелчок на Предмет или цифры от 0-7",
            "index-drop-item": "Выкинуть предмет",
            "index-drop-item-ctrl": "Правый Щелчок на Предмет",
            "index-cancel-action": "Отменить действие",
            "index-cancel-action-ctrl": "X",
            "index-view-map": "Посмотреть Карту",
            "index-view-map-ctrl": "M или G",
            "index-toggle-minimap": "Переключить режим просмотра",
            "index-toggle-minimap-ctrl": "V",
            "index-use-ping": "Использование команд",
            "index-use-ping-ctrl": "Удерживая C зажать Правую кнопку мыши и водить мышкой, затем выбрав команду отпустить",
            "index-use-emote": "Использование Эмодзи",
            "index-use-emote-ctrl": "Зажать Правую кнопку мыши и водить мышкой, затем отпустить Правую кнопку мыши",
            "index-tips-1-desc": "Цель surviv.io - остаться последним выжившим. В одном раунде у вас только одна жизнь и нет возможности возродиться.",
            "index-tips-2": "PUBG в 2D",
            "index-tips-2-desc": "Если вы играли в другие игры жанра Королевской Битвы (такие как PUBG, Fortnite или H1Z1), то вы уже знаете правила. По сути, surviv.io - это двумерный PUBG (только меньше лагает).",
            "index-tips-3": "Убивай и добывай",
            "index-tips-3-desc": "Вы начнете игру без каких-либо предметов или оружия, у вас есть только простой рюкзак. Передвигайтесь по карте, чтобы найти полезные вещи: оружие, боеприпасы, прицелы и медикаменты. Убивайте других игроков и забирайте себе их вещи!",
            "index-tips-4": "Красный - опасный!",
            "index-tips-4-desc": "Другие игроки - это не единственное, что может вас ранить. По ходу игры Красная Зона будет надвигаться с краёв карты и наносить всё больше урона, если вы окажетесь в ней. Так что посматривайте на карту и будьте осторожны!",
            "game-alive": "В живых",
            "game-reloading": "Перезарядка",
            "game-using": "Использование",
            "game-reviving": "Возрождение",
            "game-revive-teammate": "Возродить Союзника",
            "game-equip": "Взять",
            "game-cancel": "Отмена",
            "game-open-door": "Открыть дверь",
            "game-close-door": "Закрыть дверь",
            "game-You": "Вы",
            "game-you": "вы",
            "game-themselves": "себя",
            "game-yourself": "себя",
            "game-you-died": "умерли",
            "game-player-died": "Умер",
            "game-with": "с помощью",
            "game-knocked-out": "Нокаутировал",
            "game-killed": "убили",
            "game-finally-killed": "наконец убили",
            "game-finally-bled-out": "наконец умер",
            "game-died-outside": "умер за пределами безопасной зоны",
            "game-the-red-zone": "Красная зона",
            "game-waiting-for-players": "Ожидание игроков",
            "game-spectating": "Наблюдение за",
            "game-red-zone-advances": "Красная зона наступит через",
            "game-red-zone-advancing": "Красная зона наступает, доберитесь до безопасной зоны!",
            "game-seconds": "секунды",
            "game-minutes": "минуты",
            "game-minute": "минута",
            "game-m": "м",
            "game-s": "с",
            "game-not-enough-space": "Недостаточно места!",
            "game-item-already-owned": "Этот предмет уже есть!",
            "game-item-already-equipped": "Этот предмет уже экипирован!",
            "game-better-item-equipped": "Предмет получше уже есть!",
            "game-play-new-game": "Начать Новую Игру",
            "game-spectate": "Наблюдать",
            "game-full-screen": "Полный экран",
            "game-sound": "Звук",
            "game-quit-game": "Выйти из Игры",
            "game-return-to-game": "Вернуться в Игру",
            "game-hide-match-stats": "Скрыть Статистику Матча",
            "game-view-match-stats": "Посмотреть Статистику Матча",
            "game-previous-teammate": "Предыдущий Напарник",
            "game-next-teammate": "Следующий Напарник",
            "game-spectate-previous": "",
            "game-spectate-next": "",
            "game-leave-game": "Покинуть Игру",
            "game-your-results": "Твои Результаты",
            "game-chicken": "Победа, победа после обеда!",
            "game-won-the-game": "выиграл игру.",
            "game-team-eliminated": "Ваша команда потерпела поражение.",
            "game-rank": "Ранг",
            "game-team-rank": "Ранг команды",
            "game-team-kills": "Командных убийств",
            "game-kill": "Убийство",
            "game-kills": "Убийства",
            "game-damage-dealt": "Нанесённый Урон",
            "game-damage-taken": "Полученный Урон",
            "game-survived": "Выжил",
            "game-backpack00": "Патронташ",
            "game-backpack01": "Маленький Рюкзак",
            "game-backpack02": "Обычный Рюкзак",
            "game-backpack03": "Военный Рюкзак",
            "game-bandage": "Бинт",
            "game-bandage-tooltip": "Левый Щелчок, чтобы восстановить 15 здоровья.",
            "game-healing-tooltip": "Не востанавливает больше 75 здоровья.",
            "game-healthkit": "Аптечка",
            "game-healthkit-tooltip": "Левый Щелчок, чтобы восстановить 100 здоровья.",
            "game-soda": "Сода",
            "game-soda-tooltip": "Левый Щелчок, чтобы увеличить адреналин на 25.",
            "game-adrenaline-tooltip": "Адреналин со временем восстанавливает здоровье.",
            "game-painkiller": "Таблетки",
            "game-painkiller-tooltip": "Левый Щелчок, чтобы увеличить адреналин на 50.",
            "game-9mm": "9мм",
            "game-9mm-tooltip": "Патроны для M9, G18C, MP5, MAC-10, UMP9 и Vector.",
            "game-12gauge": "12 калибр",
            "game-12gauge-tooltip": "Патроны для M870, SPAS-12, Сайга-12 и MP220.",
            "game-762mm": "7.62мм",
            "game-762mm-tooltip": "Патроны для AK-47, SCAR-H, M39, Винтовка Мосина, SV-98, M1, OT-38 и DP-28.",
            "game-556mm": "5.56мм",
            "game-556mm-tooltip": "Патроны для FAMAS, M416, QBB-97, Mk 12 и M249.",
            "game-50AE": ".50 AE",
            "game-50AE-tooltip": "Патроны для Desert Eagle.",
            "game-308sub": ".308 Subsonic",
            "game-308sub-tooltip": "Патроны для AWM-S.",
            "game-flare": "Flare",
            "game-flare-tooltip": "Патроны для Flare Gun.",
            "game-chest01": "Жилет 1-ого уровня",
            "game-chest02": "Жилет 2-ого уровня",
            "game-chest03": "Жилет 3-ого уровня",
            "game-helmet01": "Шлем 1-ого уровня",
            "game-helmet02": "Шлем 2-ого уровня",
            "game-helmet03": "Шлем 3-ого уровня",
            "game-1xscope": "1x Прицел",
            "game-2xscope": "2x Прицел",
            "game-4xscope": "4x Прицел",
            "game-8xscope": "8x Прицел",
            "game-15xscope": "15x Прицел",
            "game-level-1": "1-й Ур.",
            "game-level-2": "2-й Ур.",
            "game-level-3": "3-й Ур.",
            "game-outfitBase": "Базовая Экипировка",
            "game-outfitRoyalFortune": "Королевская удача",
            "game-outfitKeyLime": "Лаймовый оттенок",
            "game-outfitCobaltShell": "Кобальтовая Оболочка",
            "game-outfitCarbonFiber": "Углеродное волокно",
            "game-outfitDarkGloves": "Профессионал",
            "game-outfitGhillie": "Маскировочный костюм",
            "game-outfitCamo": "Лесной камуфляж",
            "game-outfitRed": "Мишень",
            "game-outfitWhite": "Арктический Мститель",
            "game-outfitWoodland": "Боевой камуфляж",
            "game-outfitJester": "Шутовской Наряд",
            "game-outfitPrisoner": "Новый Чёрный",
            "game-outfitCasanova": "Сатиновая куртка",
            "game-outfitKhaki": "Положивший Начало",
            "game-fists": "удар",
            "game-ak47": "AK-47",
            "game-dp28": "ДП-28",
            "game-mosin": "Винтовка Мосина",
            "game-m39": "M39 EMR",
            "game-mp5": "MP5",
            "game-mac10": "MAC-10",
            "game-ump9": "UMP9",
            "game-m870": "M870",
            "game-mp220": "MP220",
            "game-saiga": "Сайга-12",
            "game-m9": "M9",
            "game-glock": "G18C",
            "game-ot38": "ОЦ-38",
            "game-frag": "Осколочная Граната",
            "game-hud-frag": "Осколочная",
            "game-smoke": "Дымовая Граната",
            "game-hud-smoke": "Дымовая",
            "game-barrel_01": "взрывом бочки",
            "game-silo_01": "a silo"
        };
        e.exports = i
    },
    f398b7c7: function(e, t, a) {
        "use strict";
        function i(e, t) {
            if (!(e instanceof t))
                throw new TypeError("Cannot call a class as a function")
        }
        function r() {
            function e() {
                return Math.floor(Math.random() * Math.pow(2, 32)).toString(16)
            }
            return e() + e()
        }
        var o = function() {
            function e(e, t) {
                for (var a = 0; a < t.length; a++) {
                    var i = t[a];
                    i.enumerable = i.enumerable || !1,
                    i.configurable = !0,
                    "value"in i && (i.writable = !0),
                    Object.defineProperty(e, i.key, i)
                }
            }
            return function(t, a, i) {
                return a && e(t.prototype, a),
                i && e(t, i),
                t
            }
        }()
          , n = a("8ee62bea")
          , s = function() {
            function e() {
                i(this, e),
                this.instanceId = r(),
                this.requests = 0,
                this.enabled = !0,
                this.throttle = !1,
                this.throttleTimeout = 0
            }
            return o(e, [{
                key: "update",
                value: function() {
                    var e = (new Date).getTime();
                    this.throttle ? e > this.throttleTimeout && (this.throttle = !1,
                    this.requests = 0) : this.requests = Math.max(this.requests - 1, 0)
                }
            }, {
                key: "sample",
                value: function() {
                    return Math.random() <= .01
                }
            }, {
                key: "store",
                value: function(e, t) {
                    if (this.enabled) {
                        if (++this.requests > 5)
                            return this.throttleTimeout = (new Date).getTime() + 18e4,
                            void (this.throttle = !0);
                        var a = "https://us-central1-surviv-fa40f.cloudfunctions.net/" + e;
                        t.key = "AIzaSyCrPuZeAQ2-aXZdTwZNwQJdv4rvsTE-2i8",
                        n.ajax({
                            type: "POST",
                            dataType: "html",
                            url: a,
                            data: t,
                            timeout: 3e3
                        })
                    }
                }
            }, {
                key: "storeGeneric",
                value: function(e, t) {
                    this.sample() && this.store("storeGeneric", {
                        parent: e,
                        child: t
                    })
                }
            }, {
                key: "logWindowOnError",
                value: function(e) {
                    this.store("windowOnError", {
                        error: e
                    })
                }
            }, {
                key: "logWindowOnAppError",
                value: function(e) {
                    this.store("windowOnAppError", {
                        error: e
                    })
                }
            }, {
                key: "logError",
                value: function(e) {
                    this.store("errorLog", {
                        error: e
                    })
                }
            }, {
                key: "logTest",
                value: function(e) {
                    this.store("testLog", {
                        error: e
                    })
                }
            }, {
                key: "logProxy",
                value: function(e) {
                    this.store("onProxy", {
                        data: e
                    })
                }
            }]),
            e
        }()
          , l = new s;
        setInterval(function() {
            l.update()
        }, 1e3),
        e.exports = l
    },
    f4ccd911: function(e, t, a) {
        "use strict";
        function i(e, t) {
            if (!(e instanceof t))
                throw new TypeError("Cannot call a class as a function")
        }
        function r(e) {
            try {
                return e.createGain().disconnect(e.destination),
                !1
            } catch (e) {
                return !0
            }
        }
        var o = function() {
            function e(e, t) {
                for (var a = 0; a < t.length; a++) {
                    var i = t[a];
                    i.enumerable = i.enumerable || !1,
                    i.configurable = !0,
                    "value"in i && (i.writable = !0),
                    Object.defineProperty(e, i.key, i)
                }
            }
            return function(t, a, i) {
                return a && e(t.prototype, a),
                i && e(t, i),
                t
            }
        }()
          , n = window.navigator.userAgent.indexOf("iPod") > -1 || window.navigator.userAgent.indexOf("iPhone") > -1 || window.navigator.userAgent.indexOf("iPad") > -1
          , s = null
          , l = !1
          , m = 128
          , c = function() {
            function e(t) {
                i(this, e),
                this.ctx = t,
                this.sound = null,
                this.id = 0,
                this.volume = 1,
                this.volumeOld = this.volume,
                this.pan = 0,
                this.panOld = this.pan,
                this.sourceNode = null,
                this.gainNode = this.ctx.createGain(),
                this.pannerNode = this.ctx.createPanner(),
                this.pannerNode.panningModel = "equalpower",
                this.gainNode.connect(this.pannerNode),
                this.destination = null,
                this.paramEvents = 0,
                this.stopTime = 0,
                this.stopping = !1,
                this.playState = "playFinished"
            }
            return o(e, [{
                key: "setGain",
                value: function(e) {
                    this.stopping || (n ? this.gainNode.gain.value = e : (this.gainNode.gain.setTargetAtTime(e, this.ctx.currentTime, .02),
                    ++this.paramEvents))
                }
            }, {
                key: "setPan",
                value: function(e) {
                    this.stopping || (this.pannerNode.setPosition(e, 0, -.5),
                    this.paramEvents += 3)
                }
            }, {
                key: "start",
                value: function(e, t, a, i, r, o, s) {
                    this.volume = this.volumeOld = a,
                    this.pan = this.panOld = i,
                    this.destination = e,
                    this.sourceNode = this.ctx.createBufferSource(),
                    this.sourceNode.buffer = t,
                    this.sourceNode.connect(this.gainNode),
                    this.pannerNode.connect(this.destination),
                    this.sourceNode.loop = r,
                    n ? this.gainNode.gain.value = a : (this.gainNode.gain.setValueAtTime(a, this.ctx.currentTime),
                    ++this.paramEvents),
                    this.setPan(i),
                    this.sourceNode.start(this.ctx.currentTime + o, s),
                    this.stopTime = r ? 1e100 : this.ctx.currentTime + o + t.duration - s,
                    this.stopping = !1,
                    this.playState = "playSucceeded"
                }
            }, {
                key: "stop",
                value: function() {
                    this.stopping || (this.setGain(0),
                    this.stopTime = this.ctx.currentTime + .1,
                    this.stopping = !0,
                    this.playState = "playInterrupted")
                }
            }, {
                key: "disconnect",
                value: function() {
                    if (this.sound.instances.splice(this.sound.instances.indexOf(this), 1),
                    this.sound = null,
                    this.sourceNode.stop(0),
                    this.sourceNode.disconnect(this.gainNode),
                    this.pannerNode.disconnect(this.destination),
                    n)
                        try {
                            this.sourceNode.buffer = s
                        } catch (e) {}
                    this.destination = null,
                    this.sourceNode = null,
                    this.playState = "playFinished"
                }
            }, {
                key: "reallocNodes",
                value: function() {
                    this.gainNode.disconnect(this.pannerNode),
                    this.gainNode = this.ctx.createGain(),
                    this.pannerNode = this.ctx.createPanner(),
                    this.pannerNode.panningModel = "equalpower",
                    this.gainNode.connect(this.pannerNode),
                    this.paramEvents = 0
                }
            }]),
            e
        }()
          , d = null
          , p = function() {
            function e(t) {
                i(this, e),
                this.instance = t,
                this.id = t.id
            }
            return o(e, [{
                key: "check",
                value: function(e) {
                    this.id != this.instance.id && (this.instance = d,
                    this.id = d.id)
                }
            }, {
                key: "stop",
                value: function() {
                    this.check(),
                    this.instance.stop()
                }
            }, {
                key: "volume",
                get: function() {
                    return this.check(),
                    this.instance.volume
                },
                set: function(e) {
                    this.check(!0),
                    this.instance.volume = e
                }
            }, {
                key: "pan",
                get: function() {
                    return this.check(),
                    this.instance.pan
                },
                set: function(e) {
                    this.check(!0),
                    this.instance.pan = e
                }
            }, {
                key: "playState",
                get: function() {
                    return this.check(),
                    this.instance.playState
                }
            }]),
            e
        }()
          , u = null
          , h = function() {
            function e(t, a, r, o, n) {
                if (i(this, e),
                this.ctx = t,
                this.inNode = a,
                this.outNode = r,
                this.name = o,
                this.volume = void 0 != n.volume ? n.volume : 1,
                this.echoVolume = n.echoVolume || 0,
                this.echoDelay = n.echoDelay || 0,
                this.echoLowPass = n.echoLowPass || 3e3,
                this.stereoSpread = n.stereoSpread || 0,
                !l) {
                    var s = this.ctx.createGain();
                    this.inNode.connect(s),
                    this.inNode = s
                }
                this.gainNode = null,
                this.convolverNode = null,
                this.echoGainNode = null,
                this.echoLowPassNode = null,
                this.echoDelayNode = null,
                this.stereoDelayNode = null,
                this.mergerNode = null,
                this.convolverNode = this.ctx.createConvolver(),
                this.echoVolume && (this.echoLowPassNode = this.ctx.createBiquadFilter(),
                this.echoLowPassNode.type = "lowpass",
                this.echoLowPassNode.frequency.setValueAtTime(this.echoLowPass, 0),
                this.echoLowPassNode.Q.setValueAtTime(-3.0102999566398125, 0),
                this.echoDelayNode = this.ctx.createDelay(this.echoDelay || .01),
                this.echoDelayNode.delayTime.setValueAtTime(this.echoDelay, 0)),
                this.stereoSpread && (this.stereoDelayNode = this.ctx.createDelay(this.stereoSpread),
                this.stereoDelayNode.delayTime.setValueAtTime(this.stereoSpread, 0),
                this.mergerNode = this.ctx.createChannelMerger(2)),
                this.targetLevel = 0,
                this.gain = 0,
                this.drainEndTime = 0,
                this.active = !1
            }
            return o(e, [{
                key: "isConnected",
                value: function() {
                    return null != this.gainNode
                }
            }, {
                key: "connect",
                value: function() {
                    if (this.gainNode = this.ctx.createGain(),
                    this.gainNode.channelCount = 1,
                    this.gainNode.channelCountMode = "explicit",
                    this.gainNode.gain.setValueAtTime(0, 0),
                    this.echoVolume && (this.echoGainNode = this.ctx.createGain(),
                    this.echoGainNode.channelCount = 1,
                    this.echoGainNode.channelCountMode = "explicit",
                    this.echoGainNode.gain.setValueAtTime(this.echoVolume, 0)),
                    this.inNode.connect(this.gainNode),
                    this.gainNode.connect(this.convolverNode),
                    this.echoVolume && (this.convolverNode.connect(this.echoGainNode),
                    this.echoGainNode.connect(this.echoLowPassNode),
                    this.echoLowPassNode.connect(this.echoDelayNode),
                    this.echoDelayNode.connect(this.convolverNode)),
                    this.stereoSpread) {
                        var e = this.convolverNode.buffer;
                        e && 1 != e.numberOfChannels && console.error("stereoSpread can only be applied to mono IRs"),
                        this.convolverNode.connect(this.stereoDelayNode),
                        this.convolverNode.connect(this.mergerNode, 0, 0),
                        this.stereoDelayNode.connect(this.mergerNode, 0, 1),
                        this.mergerNode.connect(this.outNode)
                    } else
                        this.convolverNode.connect(this.outNode)
                }
            }, {
                key: "disconnect",
                value: function() {
                    this.inNode.disconnect(this.gainNode),
                    this.gainNode.disconnect(this.convolverNode),
                    this.echoVolume && (this.convolverNode.disconnect(this.echoGainNode),
                    this.echoGainNode.disconnect(this.echoLowPassNode),
                    this.echoLowPassNode.disconnect(this.echoDelayNode),
                    this.echoDelayNode.disconnect(this.convolverNode)),
                    this.stereoSpread ? (this.convolverNode.disconnect(this.stereoDelayNode),
                    this.convolverNode.disconnect(this.mergerNode, 0, 0),
                    this.stereoDelayNode.disconnect(this.mergerNode, 0, 1),
                    this.mergerNode.disconnect(this.outNode)) : this.convolverNode.disconnect(this.outNode),
                    this.gainNode = null,
                    this.echoGainNode = null
                }
            }, {
                key: "setGain",
                value: function(e, t, a) {
                    if (e *= this.volume,
                    this.gain != e) {
                        if (0 == e || this.gainNode || this.connect(),
                        0 == e) {
                            this.echoGainNode && this.echoGainNode.gain.setValueAtTime(0, a);
                            var i = this.convolverNode.buffer
                              , r = i ? i.duration : 0;
                            this.drainEndTime = a + r + this.echoDelay + this.stereoSpread
                        }
                        0 == this.gain && this.echoGainNode && this.echoGainNode.gain.setValueAtTime(this.echoVolume, t),
                        this.gainNode.gain.setValueAtTime(this.gain, t),
                        this.gainNode.gain.linearRampToValueAtTime(e, a),
                        this.gain = e
                    }
                }
            }]),
            e
        }()
          , g = function() {
            function e() {
                var t = this;
                if (i(this, e),
                this.ctx = new (window.AudioContext || window.webkitAudioContext),
                n) {
                    var a = this.ctx.createBuffer(1, 1, 44100)
                      , o = this.ctx.createBufferSource();
                    o.buffer = a,
                    o.connect(this.ctx.destination),
                    o.start(),
                    o.disconnect(this.ctx.destination),
                    this.ctx.close(),
                    this.ctx = new (window.AudioContext || window.webkitAudioContext)
                }
                l = r(this.ctx),
                window.audioEngine = this,
                this.masterGainNode = this.ctx.createGain(),
                this.compressorNode = this.ctx.createDynamicsCompressor(),
                this.masterGainNode.connect(this.compressorNode),
                this.compressorNode.connect(this.ctx.destination),
                this.reverbNode = this.ctx.createGain(),
                this.reverbNode.connect(this.masterGainNode),
                this.muffleNode = this.ctx.createGain(),
                this.muffleNode.gain.setValueAtTime(16, 0);
                for (var h = [[20, 1.4142, -6], [40, 1.4142, -7], [80, 1.4142, -10], [160, 1.4142, -13], [320, 1.4142, -22], [640, 1.4142, -18], [1280, 1.4142, -25], [2560, 1.4142, -10], [5120, 1.4142, -30], [10240, 1.4142, -25]], g = this.muffleNode, y = 0; y < h.length; y++) {
                    var f = this.ctx.createBiquadFilter();
                    g.connect(f),
                    g = f,
                    f.type = "peaking",
                    f.frequency.setValueAtTime(h[y][0], 0),
                    f.Q.setValueAtTime(h[y][1], 0),
                    f.gain.setValueAtTime(h[y][2], 0)
                }
                g.connect(this.reverbNode),
                this.files = {},
                this.sounds = {},
                this.instances = [];
                for (var x = 0; x < m; x++) {
                    var w = new c(this.ctx);
                    this.instances[x] = w
                }
                if (this.instanceId = 0,
                this.playingInstances = [],
                d = new c(this.ctx),
                u = new p(d),
                this.reverbs = {},
                this.activeReverbs = [],
                this.reverbFadeEndTime = 0,
                this.volume = 1,
                this.volumeOld = this.volume,
                this.muted = !1,
                this.mutedOld = this.muted,
                "suspended" == this.ctx.state) {
                    var b = function e() {
                        t.ctx.resume();
                        var a = t.ctx.createBufferSource();
                        a.buffer = t.ctx.createBuffer(1, 1, 22050),
                        a.connect(t.ctx.destination),
                        a.start(),
                        setTimeout(function() {
                            "running" == t.ctx.state && (document.body.removeEventListener("mousedown", e, !1),
                            document.body.removeEventListener("touchend", e, !1))
                        }, 0)
                    };
                    document.body.addEventListener("mousedown", b, !1),
                    document.body.addEventListener("touchend", b, !1)
                }
                n && (s = this.ctx.createBuffer(1, 1, 22050)),
                this.onfileload = function() {}
                ,
                this.PLAY_INITED = "playInited",
                this.PLAY_SUCCEEDED = "playSucceeded",
                this.PLAY_INTERRUPTED = "playInterrupted",
                this.PLAY_FINISHED = "playFinished",
                this.PLAY_FAILED = "playFailed",
                this.INTERRUPT_LATE = "late",
                this.defaultInterruptBehavior = this.INTERRUPT_LATE
            }
            return o(e, [{
                key: "initializeDefaultPlugins",
                value: function() {}
            }, {
                key: "loadFile",
                value: function(e, t) {
                    var a = this;
                    if (void 0 != this.files[e])
                        return t(e),
                        this.files[e];
                    this.files[e] = {
                        buffer: null
                    };
                    var i = new XMLHttpRequest;
                    i.open("GET", e),
                    i.responseType = "arraybuffer";
                    var r = function(t) {
                        console.error("Failed loading sound file: " + e)
                    };
                    return i.addEventListener("load", function(o) {
                        var n = i.response;
                        if (!n)
                            return void r();
                        a.ctx.decodeAudioData(n, function(i) {
                            a.files[e].buffer = i,
                            t(e)
                        }, function() {
                            console.error("Failed decoding sound: " + e)
                        })
                    }),
                    i.addEventListener("abort", r),
                    i.addEventListener("error", r),
                    i.addEventListener("timeout", r),
                    i.send(),
                    this.files[e]
                }
            }, {
                key: "registerSound",
                value: function(e, t, a) {
                    var i = this.loadFile(e, this.onfileload.bind(this))
                      , r = {
                        file: i,
                        canCoalesce: !!a.canCoalesce,
                        maxInstances: a.channels || 16,
                        instances: []
                    };
                    this.sounds[t] = r
                }
            }, {
                key: "play",
                value: function(e, t) {
                    var a = this.sounds[e];
                    if (!a)
                        return console.error("No sound named: " + e),
                        u;
                    var i = t.filter || "none"
                      , r = void 0 != t.volume ? t.volume : 1;
                    r = this.muted ? 0 : r;
                    var o = t.pan || 0
                      , n = !!t.loop
                      , s = t.delay ? .001 * t.delay : 0
                      , l = t.offset ? t.offset : 0;
                    if (!a.file.buffer)
                        return u;
                    if (this.muted && !t.loop)
                        return u;
                    if ("none" !== i && "reverb" !== i && "muffled" !== i)
                        return console.error("Invalid filter: " + i + ". Only valid filters are 'none', 'reverb' and 'muffled'."),
                        u;
                    if (a.canCoalesce)
                        for (var c = this.ctx.currentTime + a.file.buffer.duration, d = 0; d < a.instances.length; d++) {
                            var h = a.instances[d];
                            if (!(Math.abs(c - h.stopTime) > .03)) {
                                var g = h.volume * h.volume + r * r
                                  , y = h.volume * h.pan + r * o
                                  , f = h.volume + r;
                                return h.volume = Math.sqrt(g),
                                h.pan = y / Math.max(.001, f),
                                u
                            }
                        }
                    for (var x = 0; x < m && (++this.instanceId,
                    this.instances[this.instanceId % m].sound); x++)
                        ;
                    var w = this.instances[this.instanceId % m];
                    if (w.sound)
                        return console.error("All " + m + " sound instances in use. You are using way too many sounds!"),
                        u;
                    w.id = this.instanceId;
                    var b = w.paramEvents > 150
                      , _ = w.paramEvents > 20 && !(this.instanceId % 7);
                    for ((b || _) && w.reallocNodes(); a.instances.length >= a.maxInstances; ) {
                        for (var v = a.instances[0], S = 1; S < a.instances.length; S++)
                            v.stopTime > a.instances[S].stopTime && (v = a.instances[S]);
                        v.disconnect()
                    }
                    w.sound = a,
                    a.instances.push(w);
                    var k = "none" === i ? this.masterGainNode : "reverb" === i ? this.reverbNode : this.muffleNode;
                    return w.start(k, a.file.buffer, r, o, n, s, l),
                    -1 == this.playingInstances.indexOf(w) && this.playingInstances.push(w),
                    new p(w)
                }
            }, {
                key: "registerReverb",
                value: function(e, t, a) {
                    var i = this
                      , r = new h(this.ctx,this.reverbNode,this.masterGainNode,t,a);
                    this.loadFile(e, function(e) {
                        r.convolverNode.buffer = i.files[e].buffer,
                        i.onfileload(e)
                    }),
                    this.reverbs[t] = r
                }
            }, {
                key: "setReverbs",
                value: function(e) {
                    for (var t = 0; t < this.activeReverbs.length; t++) {
                        var a = this.activeReverbs[t];
                        e[a.name] || (a.targetLevel = 0)
                    }
                    for (var i in e)
                        if (e[i]) {
                            var r = this.reverbs[i];
                            r ? (this.reverbs[i].active || (this.activeReverbs.push(r),
                            r.active = !0),
                            r.targetLevel = e[i]) : console.error("No reverb named " + i)
                        }
                }
            }, {
                key: "stop",
                value: function() {}
            }, {
                key: "update",
                value: function(e) {
                    "suspended" == this.ctx.state && this.ctx.resume();
                    var t = this.muted ? 0 : this.volume
                      , a = this.mutedOld ? 0 : this.volumeOld;
                    this.volumeOld = this.volume,
                    this.mutedOld = this.muted,
                    t != a && this.masterGainNode.gain.setTargetAtTime(t, this.ctx.currentTime, .02);
                    for (var i = this.playingInstances.length - 1; i >= 0; i--) {
                        var r = this.playingInstances[i];
                        r.volumeOld != r.volume && (r.volumeOld = r.volume,
                        r.setGain(r.volume)),
                        r.panOld != r.pan && (r.panOld = r.pan,
                        r.setPan(r.pan)),
                        r.sound && this.ctx.currentTime > r.stopTime && r.disconnect(),
                        r.sound || this.playingInstances.splice(i, 1)
                    }
                    if (this.ctx.currentTime > this.reverbFadeEndTime) {
                        var o = this.ctx.currentTime + .006;
                        this.reverbFadeEndTime = o + .025;
                        for (var n = 0, s = 0; s < this.activeReverbs.length; s++)
                            n += this.activeReverbs[s].targetLevel;
                        for (var l = n > 1 ? 1 / n : 1, m = 0; m < this.activeReverbs.length; m++) {
                            var c = this.activeReverbs[m]
                              , d = Math.sqrt(l * c.targetLevel);
                            c.setGain(d, o, this.reverbFadeEndTime)
                        }
                        for (var p = this.activeReverbs.length - 1; p >= 0; p--) {
                            var u = this.activeReverbs[p]
                              , h = this.ctx.currentTime > u.drainEndTime;
                            0 == u.gain && h && (u.isConnected() && u.disconnect(),
                            u.active = !1,
                            this.activeReverbs.splice(p, 1))
                        }
                    }
                }
            }, {
                key: "_setMute",
                value: function(e) {
                    this.muted = e
                }
            }, {
                key: "on",
                value: function(e, t, a) {
                    if ("fileload" != e)
                        return void console.error('Only "fileload" event supported');
                    this.onfileload = t.bind(a)
                }
            }, {
                key: "updatePerformanceTest",
                value: function() {
                    var e = this;
                    if (this.runningOfflineTest = void 0 != this.runningOfflineTest && this.runningOfflineTest,
                    !this.runningOfflineTest) {
                        this.runningOfflineTest = !0,
                        this.offlineCtx = new OfflineAudioContext(2,10 * this.ctx.sampleRate,this.ctx.sampleRate);
                        for (var t = this.offlineCtx.createBuffer(2, 10 * this.ctx.sampleRate, this.ctx.sampleRate), a = 0; a < t.numberOfChannels; a++)
                            for (var i = t.getChannelData(a), r = 0; r < i.length; r++)
                                i[r] = Math.sin(r / 2333) * Math.sin(r / 5741) * 2 * Math.random() - 1;
                        var o = this.offlineCtx.createBufferSource();
                        o.buffer = t;
                        for (var n = this.offlineCtx.createConvolver(), s = this.offlineCtx.createBuffer(1, 4 * this.ctx.sampleRate, this.ctx.sampleRate), l = 0; l < s.numberOfChannels; l++)
                            for (var m = s.getChannelData(l), c = 0; c < m.length; c++)
                                m[c] = 2 * Math.random() - 1;
                        n.buffer = s;
                        var d = {
                            volume: .7,
                            echoVolume: .5,
                            echoLowPass: 800,
                            echoDelay: .25,
                            stereoSpread: .004
                        };
                        if (d.convolverNode = n,
                        d.echoLowPassNode = this.offlineCtx.createBiquadFilter(),
                        d.echoLowPassNode.type = "lowpass",
                        d.echoLowPassNode.frequency.setValueAtTime(d.echoLowPass, 0),
                        d.echoLowPassNode.Q.setValueAtTime(-3.0102999566398125, 0),
                        d.echoDelayNode = this.offlineCtx.createDelay(d.echoDelay || .01),
                        d.echoDelayNode.delayTime.setValueAtTime(d.echoDelay, 0),
                        d.stereoSpread && (d.stereoDelayNode = this.offlineCtx.createDelay(d.stereoSpread),
                        d.stereoDelayNode.delayTime.setValueAtTime(d.stereoSpread, 0),
                        d.mergerNode = this.offlineCtx.createChannelMerger(2)),
                        d.gainNode = this.offlineCtx.createGain(),
                        d.gainNode.channelCount = 1,
                        d.gainNode.channelCountMode = "explicit",
                        d.gainNode.gain.setValueAtTime(1, 0),
                        d.echoGainNode = this.offlineCtx.createGain(),
                        d.echoGainNode.channelCount = 1,
                        d.echoGainNode.channelCountMode = "explicit",
                        d.echoGainNode.gain.setValueAtTime(d.echoVolume, 0),
                        d.outNode = this.offlineCtx.createGain(),
                        d.gainNode.connect(d.convolverNode),
                        d.stereoSpread) {
                            var p = d.convolverNode.buffer;
                            p && 1 != p.numberOfChannels && console.error("stereoSpread can only be applied to mono IRs"),
                            d.convolverNode.connect(d.stereoDelayNode),
                            d.convolverNode.connect(d.mergerNode, 0, 0),
                            d.stereoDelayNode.connect(d.mergerNode, 0, 1),
                            d.mergerNode.connect(d.outNode)
                        } else
                            d.convolverNode.connect(d.outNode);
                        this.offlineCtx.createDynamicsCompressor(),
                        console.log("starting convolver"),
                        o.connect(d.gainNode),
                        d.outNode.connect(this.offlineCtx.destination),
                        o.start(),
                        this.startTime = performance.now(),
                        this.offlineCtx.oncomplete = function(t) {
                            var a = performance.now();
                            console.log("Offline render time: ", a - e.startTime),
                            e.runningOfflineTest = !1
                        }
                        ,
                        this.offlineCtx.startRendering()
                    }
                }
            }]),
            e
        }()
          , y = {
            Sound: new g
        };
        e.exports = y
    },
    fac69c0a: function(e, t, a) {
        function i(e) {
            return a(r(e))
        }
        function r(e) {
            var t = o[e];
            if (!(t + 1))
                throw new Error("Cannot find module '" + e + "'.");
            return t
        }
        var o = {
            "./da.js": "8f9fd353",
            "./de.js": "29d4cdc4",
            "./en.js": "5bedf25d",
            "./es.js": "a5bf0544",
            "./fr.js": "15173389",
            "./it.js": "3bff36cf",
            "./jp.js": "e9735f40",
            "./ko.js": "064c0a93",
            "./nl.js": "bdd2570b",
            "./pl.js": "0cc73a5c",
            "./pt.js": "9e5281a7",
            "./ru.js": "f2372804",
            "./sv.js": "4426a45f",
            "./th.js": "4780d986",
            "./tr.js": "7aa4bfa8",
            "./vn.js": "6b9375bf",
            "./zh-cn.js": "51683873",
            "./zh-tw.js": "9085f81b"
        };
        i.keys = function() {
            return Object.keys(o)
        }
        ,
        i.resolve = r,
        e.exports = i,
        i.id = "fac69c0a"
    },
    fc6a992a: function(e, t, a) {
        "use strict";
        function i() {
            this.active = !1,
            this.sprite = o.Sprite.fromImage("map-plane-01.img"),
            this.sprite.anchor.set(.5, .5),
            this.sprite.visible = !1
        }
        function r(e) {
            this.planes = [],
            this.audioManager = e
        }
        var o = a("80ac57a6")
          , n = a("6b42806d")
          , s = a("989ad62a")
          , l = a("10899aea")
          , m = a("1901e2d9")
          , c = a("c2a798c8");
        a("af8ba00f"),
        i.prototype = {
            a: function() {
                this.id = null,
                this.active = !0,
                this.dirty = !1,
                this.sprite.visible = !0,
                this.rad = s.airdrop.planeRad,
                this.alpha = .75,
                this.renderAlpha = 1,
                this.dropDeployed = !1,
                this.soundInstance = null,
                this.soundUpdateThrottle = 0,
                this.soundRangeMult = 2.5,
                this.spriteUpdateTime = 0,
                this.pos = c.create(0, 0)
            },
            o: function(e) {
                e.stopSound(this.soundInstance),
                this.sprite.visible = !1,
                this.active = !1
            }
        },
        r.prototype = {
            o: function() {
                for (var e = 0; e < this.planes.length; e++)
                    this.planes[e].o(this.audioManager)
            },
            ft: function(e) {
                for (var t = 0; t < this.planes.length; t++)
                    this.planes[t].dirty = !0;
                for (var a = 0; a < e.length; a++) {
                    for (var i = e[a], r = null, o = 0; o < this.planes.length; o++) {
                        var n = this.planes[o];
                        if (n.active && n.id == i.id) {
                            r = n;
                            break
                        }
                    }
                    r || (r = this.Ct(i)),
                    r.dirty = !1,
                    r.dropDeployed = i.dropDeployed
                }
                for (var s = 0; s < this.planes.length; s++) {
                    var l = this.planes[s];
                    l.active && l.dirty && l.o(this.audioManager)
                }
            },
            Ct: function(e) {
                for (var t = null, a = 0; a < this.planes.length; a++)
                    if (!this.planes[a].active) {
                        t = this.planes[a];
                        break
                    }
                t || (t = new i,
                this.planes.push(t)),
                t.a(),
                t.id = e.id,
                t.active = !0,
                t.pos = c.copy(e.pos),
                t.planeDir = c.copy(e.planeDir),
                t.dropDeployed = e.dropDeployed;
                var r = Math.atan2(t.planeDir.x, t.planeDir.y);
                return t.sprite.rotation = r,
                t
            },
            l: function(e, t, a, i, r) {
                for (var o = 0; o < this.planes.length; o++) {
                    var d = this.planes[o];
                    if (d.active) {
                        var p = 0;
                        !(m.sameLayer(p, a.layer) || 2 & a.layer) || 2 & a.layer && i.insideStructureMask(n.createCircle(d.pos, 1)) || (p |= 2),
                        d.pos = c.add(d.pos, c.mul(d.planeDir, e * s.airdrop.planeVel)),
                        d.dropDeployed && (d.spriteUpdateTime = Math.min(d.spriteUpdateTime + e, 2),
                        d.spriteUpdateTime,
                        d.rad = l.lerp(d.spriteUpdateTime, s.airdrop.planeRad, 1.25 * s.airdrop.planeRad),
                        d.alpha = l.lerp(d.spriteUpdateTime, .75, .5625),
                        d.soundRangeMult = l.lerp(d.spriteUpdateTime, 2.5, 2.25)),
                        d.soundInstance ? d.soundUpdateThrottle < 0 ? (this.audioManager.updateSound(d.soundInstance, "sfx", d.pos, {
                            layer: p,
                            rangeMult: d.soundRangeMult,
                            muffled: !1,
                            ignoreMinAllowable: !0
                        }),
                        d.soundUpdateThrottle = .1) : d.soundUpdateThrottle -= e : d.soundInstance = this.audioManager.playSound("plane_01", {
                            channel: "sfx",
                            soundPos: d.pos,
                            layer: p,
                            loop: !0,
                            rangeMult: 2.5,
                            muffled: !1,
                            ignoreMinAllowable: !0
                        }),
                        r.addPIXIObj(d.sprite, p, 1501, d.id);
                        var u = t.pointToScreen(d.pos)
                          , h = t.pixels(d.rad / t.ppu)
                          , g = d.alpha;
                        1 == a.layer ? g = 0 : (a.U.scopedIn || 1 & a.layer) && (g = .15),
                        d.renderAlpha = l.lerp(3 * e, d.renderAlpha, g),
                        d.sprite.position.set(u.x, u.y),
                        d.sprite.scale.set(h, h),
                        d.sprite.tint = 16776960,
                        d.sprite.alpha = d.renderAlpha,
                        d.sprite.visible = !0
                    }
                }
            }
        },
        e.exports = {
            Re: r
        }
    },
    feb8fc30: function(e, t, a) {
        "use strict";
        function i() {
            this.active = !1,
            this.dirty = !1,
            this.container = new r.Graphics,
            this.container.alpha = 0,
            this.mobileOffset = 0,
            this.clientData = {
                label: "",
                duration: 0,
                keepAlive: !1,
                elapsed: 0,
                radius: 35,
                lineWidth: 8,
                fontWidth: 24
            },
            this.timerBackground = r.Sprite.fromImage("timer-background.img"),
            this.timerBackground.anchor = new r.Point(.5,.5),
            this.timerBackground.scale = new r.Point(1,1),
            this.container.addChild(this.timerBackground),
            this.innerCircle = new r.Graphics,
            this.outerCircle = new r.Graphics,
            this.container.addChild(this.innerCircle, this.outerCircle),
            this.counterText = new r.Text,
            this.counterText.anchor = new r.Point(.5,.5);
            var e = {
                fontFamily: "Roboto Condensed, Arial, sans-serif",
                fontWeight: "bold",
                fontSize: this.clientData.fontWidth,
                align: "center",
                fill: 16777215,
                stroke: 0,
                strokeThickness: 3
            };
            this.counterText.style = e,
            this.counterText.text = this.clientData.duration.toFixed(1),
            this.container.addChild(this.counterText),
            this.labelText = new r.Text,
            this.labelText.anchor = new r.Point(.5,.5);
            var t = {
                fontFamily: "Roboto Condensed, Arial, sans-serif",
                fontWeight: "100",
                fontSize: this.clientData.fontWidth,
                align: "center",
                fill: 16777215
            };
            this.labelText.style = t,
            this.container.addChild(this.labelText),
            this.screenScaleFactor = 1,
            this.callback = null
        }
        var r = a("80ac57a6")
          , o = (a("989ad62a"),
        a("1901e2d9"),
        a("c2a798c8"),
        a("ce29f17f"))
          , n = a("26be8056");
        i.prototype = {
            a: function(e, t, a, i) {
                this.active = !0,
                this.clientData = {
                    label: a,
                    duration: t,
                    keepAlive: i,
                    elapsed: 0,
                    radius: 35,
                    lineWidth: 8,
                    fontWidth: 24
                },
                this.labelText.text = this.clientData.duration.toFixed(1),
                this.callback = e,
                this.container.visible = !0,
                this.container.alpha = 1
            },
            destroy: function() {
                this.container.removeChild(this.timerBackground),
                this.timerBackground.destroy({
                    children: !0
                }),
                this.container.destroy({
                    children: !0,
                    texture: !0
                })
            },
            resize: function(e, t) {
                this.screenScaleFactor = t,
                o.layout == o.Layout.Sm ? (o.tablet || (this.container.scale = new r.Point(.5,.5)),
                this.mobileOffset = n.isLandscape() ? e.mobileOffsetLandscape : e.mobileOffsetPortrait) : (this.container.scale = new r.Point(1,1),
                this.mobileOffset = 0)
            },
            o: function(e) {
                this.active = !1,
                e && (this.container.visible = !1,
                this.container.clear())
            },
            l: function(e, t, a) {
                if (!this.active)
                    return void (this.container.alpha = this.clientData.keepAlive ? 1 : 0);
                this.clientData.elapsed += e,
                this.clientData.elapsed = Math.min(this.clientData.elapsed, this.clientData.duration),
                (this.clientData.elapsed >= this.clientData.duration || t.dead) && (this.render(a),
                this.o(),
                this.callback && this.callback(t))
            },
            render: function(e) {
                if (this.active) {
                    this.container.clear(),
                    this.outerCircle.clear(),
                    this.counterText.text = "",
                    this.labelText.text = "";
                    var t = Math.min(this.clientData.elapsed / this.clientData.duration, 1)
                      , a = {
                        x: e.screenWidth / 2,
                        y: e.screenHeight / 3 * this.screenScaleFactor + this.mobileOffset
                    }
                      , i = Math.min(t, 1) * Math.PI * 2 - Math.PI / 2;
                    this.container.beginFill(0, .5),
                    this.outerCircle.lineStyle(.75 * this.clientData.lineWidth, 16777215),
                    this.outerCircle.arc(0, 0, this.clientData.radius, -Math.PI / 2, i, !1),
                    this.counterText.text = Math.max(0, this.clientData.duration - this.clientData.elapsed).toFixed(1);
                    var r = 2.5 * this.clientData.radius;
                    this.labelText.position.y = r,
                    this.labelText.text = this.clientData.label;
                    var o = 56 + this.clientData.label.length * this.clientData.fontWidth * .45
                      , n = 1.5 * this.clientData.fontWidth
                      , s = 0 - o / 2
                      , l = r - n / 2;
                    this.container.drawRoundedRect(s, l, o, n, 5),
                    this.container.position = {
                        x: a.x,
                        y: a.y
                    }
                }
            }
        },
        e.exports = {
            Xe: i
        }
    }
}, ["c99e6613"]);
//# sourceMappingURL=app.57953f6c.js.map
